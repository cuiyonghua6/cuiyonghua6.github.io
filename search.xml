<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[编写整洁的python代码（摘录）]]></title>
    <url>%2F2021%2F07%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2F%E7%BC%96%E5%86%99%E6%95%B4%E6%B4%81%E7%9A%84python%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[第 1章 简介、代码格式和工具1．1 代码整洁的意义1．2 代码整洁的重要性1．2．1 代码格式化在代码整洁中的作用 1．2．2 在项目中遵循编码风格准则 1．3 文档字符串和注解1．3．1 文档字符串 1．3．2 注解 9 1．3．3 注解是否会替代文档字符串 11 1．3．4 配置用于实施基本质量控制的工具 12 1．4 小结 16 第 2章 Python风格代码 2．1 索引和切片 18 2．2 上下文管理器 21 2．3 对象的属性、特性和不同类型的方法 26 2．3．1 Python中的下划线 27 2．3．2 属性 29 2．4 可迭代对象 31 2．4．1 创建可迭代对象 32 2．4．2 创建序列 34 2．5 容器对象 36 2．6 对象的动态属性 37 2．7 可调用对象 39 2．8 魔法方法概述 40 2．9 Python中的警告 41 2．9．1 可变的默认参数 41 2．9．2 扩展内置类型 42 2．10 小结 第3章 好代码的一般特征 3．1 契约式设计 3．1．1 前置条件3．1．2 后置条件3．1．3 Python的契约3．1．4 设计契约：结论3．2 防错性程序设计3．2．1 错误处理3．2．2 在Python中使用断言3．3 关注点分离3．4 常用缩略词3．4．1 DRY和OAOO3．4．2 YAGNI 623．4．3 KIS 633．4．4 EAFP和LBYL 643．5 组合和继承 653．5．1 什么时候继承是一个好的决定 663．5．2 反模式的继承 673．5．3 Python中的多重继承 693．6 函数和方法中的参数 723．6．1 Python函数的参数是如何工作的 733．6．2 函数中参数的数量 773．7 关于软件设计良好实践的结束语 803．7．1 软件的正交性 803．7．2 构建代码 823．8 小结 83第4章 SOLID原则 844．1 单一职责原则 844．1．1 一个有太多职责的类 854．1．2 分配责任 864．2 打开/关闭原则 874．2．1 不遵循打开/关闭原则的可维护性风险的示例 884．2．2 重构事件系统以获得可扩展性 904．2．3 扩展事件系统 924．2．4 关于OCP的结束语 944．3 里氏替换原则 944．3．1 使用工具检测LSP问题 954．3．2 更微妙的LSP违规案例 974．3．3 关于LSP需要注意的一些点 1004．4 接口隔离原则 1004．4．1 提供太多信息的接口 1024．4．2 接口越小越好 1024．4．3 接口应该多小 1034．5 依赖倒置原则 1034．5．1 一个严格依赖的案例 1044．5．2 倒置依赖 1044．6 小结 106第5章 用装饰器改进代码 1075．1 Python中的装饰器是什么 1075．1．1 装饰器函数 1085．1．2 装饰类 1095．1．3 其他类型的装饰器 1135．1．4 将参数传递给装饰器 1145．1．5 充分利用装饰器 1175．2 有效的装饰：避免常见的错误 1185．2．1 保存关于原始包装对象的数据 1185．2．2 处理装饰器中的副作用 1215．2．3 创建始终有效的装饰器 1255．3 装饰器的DRY原则 1285．4 装饰器和关注点分离 1295．5 好的装饰器的相关分析 1305．6 小结 132第6章 用描述符从对象中获取更多信息 1336．1 初探描述符 1336．1．1 描述符背后的机制 1336．1．2 研究描述符协议中的每个方法 1366．2 描述符的类型 1426．2．1 非数据描述符 1436．2．2 数据描述符 1456．3 描述符的实际应用 1476．3．1 描述符的一种应用 1476．3．2 实现描述符的不同形式 1516．3．3 关于描述符的更多考虑 1546．4 分析描述符 1586．4．1 Python内部如何使用描述符 1586．4．2 在装饰器中实现描述符 1636．5 小结 164第7章 使用生成器 1657．1 技术要求 1657．2 创建生成器 1657．2．1 初探生成器 1667．2．2 生成器表达式 1687．3 惯用迭代 1697．3．1 迭代的习惯用法 1697．3．2 Python中的迭代器模式 1757．4 协同程序 1797．4．1 使用生成器接口的方法 1797．4．2 更先进的协同程序 1847．5 异步编程 1917．6 小结 192第8章 单元测试和重构 1938．1 设计原则和单元测试 1938．1．1 关于其他形式的自动化测试的说明 1948．1．2 单元测试和敏捷软件开发 1958．1．3 单元测试和软件设计 1968．1．4 定义测试内容的边界 1998．2 测试的框架和工具 2008．2．1 用于单元测试的框架和库 2008．2．2 代码覆盖率 2098．2．3 模拟对象（Mock对象） 2118．3 代码重构 2168．3．1 代码演进 2168．3．2 需要演进的不仅仅是生产代码 2188．4 更多关于单元测试的信息 2208．4．1 基于属性的测试 2208．4．2 突变测试 2218．5 测试驱动开发的简要介绍 2238．6 小结 224第9章 常见的设计模式 2259．1 Python中设计模式的注意事项 2259．2 有效的设计模式 2279．2．1 创建型模式 2279．2．2 结构型模式 2339．2．3 行为模式 2409．3 空对象模式 2509．4 关于设计模式的最后想法 2529．4．1 模式对设计的影响 2529．4．2 模型中的名称 2539．5 小结 254第 10章 整洁架构 25510．1 从整洁代码到整洁架构 25510．1．1 关注点分离 25610．1．2 抽象 25710．2 软件组件 25810．2．1 包 25810．2．2 容器 26110．3 用例 26210．3．1 编码 26310．3．2 服务 26810．3．3 分析 27110．4 小结 273写在最后 274]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python基础</tag>
        <tag>python优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[异步爬虫爬照片]]></title>
    <url>%2F2021%2F07%2Fspider%2Fcases%2F%E5%BC%82%E6%AD%A5%E7%88%AC%E8%99%AB%E7%88%AC%E7%85%A7%E7%89%87%2F</url>
    <content type="text"><![CDATA[爬取网站为：http://www.tulishe.com/all # -*- encoding: utf-8 -*- import os import time import asyncio import aiohttp import aiofiles from lxml import etree from functools import wraps from asyncio.proactor_events import _ProactorBasePipeTransport def silence_event_loop_closed(func): @wraps(func) def wrapper(self, *args, **kwargs): try: return func(self, *args, **kwargs) except RuntimeError as e: if str(e) != &#39;Event loop is closed&#39;: raise return wrapper _ProactorBasePipeTransport.__del__ = silence_event_loop_closed(_ProactorBasePipeTransport.__del__) headers = {&#39;User-Agent&#39;: &#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36&#39;, &#39;Referer&#39;: &#39;http://www.tulishe.com&#39;} class tulishe: def __init__(self): self.write_num = 0 async def get_url(self, url): async with aiohttp.ClientSession() as client: async with client.get(url, headers=headers) as resp: if resp.status == 200: return await resp.text() async def html_parse(self, html): semaphore = asyncio.Semaphore(5) html_parse = etree.HTML(html) url_list = html_parse.xpath(&#39;//div[@class=&quot;img&quot;]//a[@rel=&quot;bookmark&quot;]/@href&#39;) tasks = [asyncio.create_task(self.img_parse(url, semaphore)) for url in url_list] await asyncio.wait(tasks) async def img_parse(self, h_url, sem): async with sem: semaphore = asyncio.Semaphore(5) h_html = await self.get_url(h_url) h_html_parse = etree.HTML(h_html) title = h_html_parse.xpath(&#39;//h1[@class=&quot;article-title&quot;]/text()&#39;)[0] img_demo_url = h_html_parse.xpath( &#39;//*[@id=&quot;gallery-2&quot;]/div[@class=&quot;gallery-item gallery-blur-item&quot;]/img/@src&#39;) img_url_list = [] for d_url in img_demo_url: img_url = d_url.split(&#39;=&#39;)[1].split(&#39;&amp;&#39;)[0] img_url_list.append(img_url) i_u_l = h_html_parse.xpath( &#39;//div[@class=&quot;gallery-item gallery-fancy-item&quot;]/a/@href&#39;) full_list = i_u_l + img_url_list index_list = list(range(1, len(full_list) + 1)) index_dict = dict(zip(full_list, index_list)) tasks = [asyncio.create_task(self.img_con(i_url, i_num, title, semaphore)) for i_url, i_num in index_dict.items()] await asyncio.wait(tasks) async def img_con(self, url, num, title, semaphore): async with semaphore: async with aiohttp.ClientSession() as client: async with client.get(url, headers=headers) as resp: if resp.status == 200: img_con = await resp.read() await self.write_img(img_con, num, title) else: print(&#39;请求出错，请尝试调低并发数重新下载！！&#39;) async def write_img(self, img_con, num, title): title = &#39;tulise_imgs/&#39; + title if not os.path.exists(title): os.makedirs(title) async with aiofiles.open(title + &#39;/&#39; + f&#39;{num}.jpg&#39;, &#39;wb&#39;) as f: print(f&#39;正在下载{title}/{num}.jpg&#39;) await f.write(img_con) self.write_num += 1 else: async with aiofiles.open(title + &#39;/&#39; + f&#39;{num}.jpg&#39;, &#39;wb&#39;) as f: print(f&#39;正在下载{title}/{num}.jpg&#39;) await f.write(img_con) self.write_num += 1 async def main(self, ): q_start_num = input(&#39;输入要从第几页开始下载（按Entry默认为1）:&#39;) or &#39;1&#39; start_num = int(q_start_num) total_num = int(input(&#39;请输入要下载的页数：&#39;)) + start_num print(&#39;*&#39; * 74) start_time = time.time() for num in range(start_num, total_num + 1): url = f&#39;http://www.tulishe.com/all/page/{num}&#39; html = await self.get_url(url) print(&#39;开始解析下载&gt;&gt;&gt;&#39;) await self.html_parse(html) end_time = time.time() print(f&#39;本次共下载写真图片{self.write_num}张，共耗时{end_time - start_time}秒。&#39;) if __name__ == &#39;__main__&#39;: run_data = tulishe() asyncio.run(run_data.main())]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python3代码整洁之道（摘录）]]></title>
    <url>%2F2021%2F07%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2Fpython%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93%2F</url>
    <content type="text"><![CDATA[一. 关于python的思考 为什么range函数在python3中更好？ 有两件事range可以做到，但是python2中的xrange却做不到： # 1. range可以对2个数做比较 print(range(5) == range(5)) # true # 2. range可以做切片 print(range(10)[2:7])]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python基础</tag>
        <tag>python优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Effective Python（摘录）]]></title>
    <url>%2F2021%2F07%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2Feffective_python%2F</url>
    <content type="text"><![CDATA[静下心来去理解，收获颇多。 一. 培养Pythonic思维1. 查询自己使用的python版本import sys print(sys.version_info) print(sys.version) # 代码自动检查：https://pylint.org/ pip install pylint 2. 遵循PEP8风格指南官网：https://pep8.org/中文翻译：https://www.cnblogs.com/bymo/p/9567140.html 3. 了解bytes与str的区别bytes：bytes的实例包含原始的8个字节str：str的实例包含Unicode字符bytes # 接受str或bytes,并总是返回str的方法 def to_str(bytes_or_str): if isinstance(bytes_or_str,bytes): value = bytes_or_str.decode(&#39;utf-8&#39;) else: value = bytes_or_str return value # 接受str或bytes,并总是返回bytes的方法： def to_bytes(bytes_or_str): if isinstance(bytes_or_str,str): value = bytes_or_str.encode(&#39;utf-8&#39;) else: value = bytes_or_str return value 4. 用支持插值的f-string取代C风格的格式字符串和str.format方法pantry = [ (&#39;avocados&#39;, 1.25), (&#39;bananas&#39;, 2.5), (&#39;cherries&#39;, 15), ] for i, (item, count) in enumerate(pantry): print(f&#39;{i+1}: {item.title():&lt;10s} = {round(count)}&#39;) 5. 用辅助函数取代复杂的表达式from urllib.parse import parse_qs my_values = parse_qs(&#39;red=5&amp;blue=0&amp;green=3&#39;, keep_blank_values=True) print(repr(my_values)) green_str = my_values.get(&#39;green&#39;, [&#39;&#39;]) if green_str[0]: green = int(green_str[0]) else: green = 0 print(f&#39;Green: {green!r}&#39;) def get_first_int(values, key, default=0): found = values.get(key, [&#39;&#39;]) if found[0]: return int(found[0]) return default green = get_first_int(my_values, &#39;green&#39;) print(f&#39;Green: {green!r}&#39;) 6. 把数据结构直接拆分到多个变量里，不要专门通过下标访问snacks = [(&#39;bacon&#39;, 350), (&#39;donut&#39;, 240), (&#39;muffin&#39;, 190)] for i in range(len(snacks)): item = snacks[i] name = item[0] calories = item[1] print(f&#39;#{i + 1}: {name} has {calories} calories&#39;) for rank, (name, calories) in enumerate(snacks, 1): print(f&#39;#{rank}: {name} has {calories} calories&#39;) 7. 尽量用enumerate取代rangeflavor_list = [&#39;vanilla&#39;, &#39;chocolate&#39;, &#39;pecan&#39;, &#39;strawberry&#39;] for flavor in flavor_list: print(f&#39;{flavor} is delicious&#39;) for i in range(len(flavor_list)): flavor = flavor_list[i] print(f&#39;{i + 1}: {flavor}&#39;) # Example it = enumerate(flavor_list) print(next(it)) print(next(it)) for i, flavor in enumerate(flavor_list): print(f&#39;{i}: {flavor}&#39;) for i, flavor in enumerate(flavor_list, 2): # 从2开始 print(f&#39;enumerate {i}: {flavor}&#39;) 8. 用zip函数同时遍历两个迭代器# Example 1 names = [&#39;Cecilia&#39;, &#39;Lise&#39;, &#39;Marie&#39;] counts = [len(n) for n in names] print(counts, len(counts), len(names)) # Example 2 longest_name = &#39;None11&#39; max_count = 0 for i in range(len(names)): count = counts[i] if count &gt; max_count: longest_name = names[i] max_count = count print(longest_name) # Example 3 longest_name = None max_count = 0 for i, name in enumerate(names): count = counts[i] if count &gt; max_count: longest_name = name max_count = count print(&#39;--&#39;, longest_name) assert longest_name == &#39;Cecilia&#39; # Example 4 longest_name = None max_count = 0 for name, count in zip(names, counts): if count &gt; max_count: longest_name = name max_count = count assert longest_name == &#39;Cecilia&#39; # Example 5 names.append(&#39;Rosalind&#39;) # counts.append(8) print(f&#39;names: {names}, counts: {counts}&#39;) for name, count in zip(names, counts): print(name, count) # Example 6 import itertools for name, count in itertools.zip_longest(names, counts): print(f&#39;itertools: {name}: {count}&#39;) 9. 不要在for与while循环后面写else块# Example 1 for i in range(3): print(&#39;Loop&#39;, i) else: print(&#39;Else block!&#39;) # Example a = 4 b = 9 for i in range(2, min(a, b) + 1): print(&#39;Testing&#39;, i) if a % i == 0 and b % i == 0: print(&#39;Not coprime&#39;) break else: print(&#39;Coprime&#39;) # 下面是应该的写法：方法一，只要发现某个方法成立，就立刻返回 def coprime(a, b): for i in range(2, min(a, b) + 1): if a % i == 0 and b % i == 0: return False return True assert coprime(4, 9) assert not coprime(3, 6) # 方法二，用变量记录循环过程中与没有碰到成立的情况，返回这个变量的值 def coprime_alternate(a, b): is_coprime = True for i in range(2, min(a, b) + 1): if a % i == 0 and b % i == 0: is_coprime = False break return is_coprime assert coprime_alternate(4, 9) assert not coprime_alternate(3, 6) 10. 用赋值表达式减少重复代码# -*- encoding: utf-8 -*- &quot;&quot;&quot; 赋值表达式通过海象操作符(:=)给变量赋值，并且让这个值成为这个表达式的结构 &quot;&quot;&quot; FRUIT_TO_PICK = [ {&#39;apple&#39;: 1, &#39;banana&#39;: 3}, {&#39;lemon&#39;: 2, &#39;lime&#39;: 5}, {&#39;orange&#39;: 3, &#39;melon&#39;: 2}, ] def pick_fruit(): if FRUIT_TO_PICK: return FRUIT_TO_PICK.pop(0) else: return [] def make_juice(fruit, count): return [(fruit, count)] bottles = [] while fresh_fruit := pick_fruit(): for fruit, count in fresh_fruit.items(): batch = make_juice(fruit, count) bottles.extend(batch) print(bottles) 二. 列表与字典11. 学会对序列做切片a = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;] print(&#39;Middle two: &#39;, a[3:5]) print(&#39;--:&#39;, a[-3:-1]) assert a[:5] == a[0:5] assert a[5:] == a[5:len(a)] print(a[2:-1]) print(a[-3:-1]) 12. 不要在切片里同时 起止下标与步进x = [&#39;red&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;, &#39;purple&#39;] print(f&#39;odds: {x[::2]}&#39;) # odds: [&#39;red&#39;, &#39;yellow&#39;, &#39;blue&#39;] print(f&#39;evens: {x[1::2]}&#39;) # evens: [&#39;orange&#39;, &#39;green&#39;, &#39;purple&#39;] print(b&#39;mongoose&#39;[::-1]) # b&#39;esoognom&#39; 13. 通过带星号的unpacking操作来捕获多个元素，不要用切片car_inventory = { &#39;Downtown&#39;: (&#39;Silver Shadow&#39;, &#39;Pinto&#39;, &#39;DMC&#39;), &#39;Airport&#39;: (&#39;Skyline&#39;, &#39;Viper&#39;, &#39;Gremlin&#39;, &#39;Nova&#39;), } ((loc1, (best1, *rest1)), (loc2, (best2, *rest2))) = car_inventory.items() print(f&#39;Best at {loc1} is {best1}, {len(rest1)} others&#39;) # Best at Downtown is Silver Shadow, 2 others print(f&#39;Best at {loc2} is {best2}, {len(rest2)} others&#39;) # Best at Airport is Skyline, 3 others short_list = [1, 2] first, second, *rest = short_list print(first, second, rest) # 3 1 2 [] def generate_csv(): yield &#39;Date&#39;, &#39;Make&#39;, &#39;Model&#39;, &#39;Year&#39;, &#39;Price&#39; for i in range(3): yield &#39;2019-03-25&#39;, &#39;Honda&#39;, &#39;Fit&#39;, &#39;2010&#39;, &#39;$3400&#39; yield &#39;2019-03-26&#39;, &#39;Ford&#39;, &#39;F150&#39;, &#39;2008&#39;, &#39;$2400&#39; all_csv_rows = list(generate_csv()) print(all_csv_rows) print(&#39;CSV Header:&#39;, all_csv_rows[0]) # CSV Header: (&#39;Date&#39;, &#39;Make&#39;, &#39;Model&#39;, &#39;Year&#39;, &#39;Price&#39;) print(&#39;Row count: &#39;, len(all_csv_rows[1:])) # Row count: 6 # Example 12 it = generate_csv() header, *rows = it print(&#39;CSV Header:&#39;, header) # CSV Header: (&#39;Date&#39;, &#39;Make&#39;, &#39;Model&#39;, &#39;Year&#39;, &#39;Price&#39;) print(&#39;Row count: &#39;, len(rows)) # Row count: 6 14. 用sort方法的key参数来表示复杂的排序逻辑numbers = [93, 86, 11, 68, 70] numbers.sort(reverse=True) # 由大到小排列 print(numbers) # Example 2 class Tool: def __init__(self, name, weight): self.name = name self.weight = weight def __repr__(self): return f&#39;Tool({self.name!r}, {self.weight})&#39; tools = [ Tool(&#39;level&#39;, 3.5), Tool(&#39;hammer&#39;, 1.25), Tool(&#39;screwdriver&#39;, 0.5), Tool(&#39;chisel&#39;, 0.25), ] # Example 4 print(&#39;Unsorted:&#39;, repr(tools)) tools.sort(key=lambda x: x.name) print(&#39;Sorted: &#39;, tools) # [Tool(&#39;chisel&#39;, 0.25), Tool(&#39;hammer&#39;, 1.25), Tool(&#39;level&#39;, 3.5), Tool(&#39;screwdriver&#39;, 0.5)] # Example 5 tools.sort(key=lambda x: x.weight) print(&#39;By weight:&#39;, tools) # [Tool(&#39;chisel&#39;, 0.25), Tool(&#39;screwdriver&#39;, 0.5), Tool(&#39;hammer&#39;, 1.25), Tool(&#39;level&#39;, 3.5)] # Example 6 places = [&#39;home&#39;, &#39;work&#39;, &#39;New York&#39;, &#39;Paris&#39;] places.sort() print(&#39;Case sensitive: &#39;, places) # [&#39;New York&#39;, &#39;Paris&#39;, &#39;home&#39;, &#39;work&#39;] places.sort(key=lambda x: x.lower()) print(&#39;Case insensitive:&#39;, places) # [&#39;home&#39;, &#39;New York&#39;, &#39;Paris&#39;, &#39;work&#39;] 15. 不要过分依赖给字典添加条目时所用的顺序baby_names = { &#39;cat&#39;: &#39;kitten&#39;, &#39;dog&#39;: &#39;puppy&#39;, } print(baby_names) print(list(baby_names.keys())) print(list(baby_names.values())) print(list(baby_names.items())) # [(&#39;cat&#39;, &#39;kitten&#39;), (&#39;dog&#39;, &#39;puppy&#39;)] print(baby_names.popitem()) # Last item inserted : (&#39;dog&#39;, &#39;puppy&#39;) class MyClass: def __init__(self): self.alligator = &#39;hatchling&#39; self.elephant = &#39;calf&#39; a = MyClass() for key, value in a.__dict__.items(): print(f&#39;{key} = {value}&#39;) # Example 9 votes = { &#39;otter&#39;: 1281, &#39;polar bear&#39;: 587, &#39;fox&#39;: 863, } def populate_ranks(votes, ranks): names = list(votes.keys()) names.sort(key=votes.get, reverse=True) for i, name in enumerate(names, 1): ranks[name] = i ranks = {} populate_ranks(votes, ranks) print(ranks) # {&#39;otter&#39;: 1, &#39;fox&#39;: 2, &#39;polar bear&#39;: 3} print(next(iter(ranks))) # otter from collections.abc import MutableMapping class SortedDict(MutableMapping): def __init__(self): self.data = {} def __getitem__(self, key): return self.data[key] def __setitem__(self, key, value): self.data[key] = value def __delitem__(self, key): del self.data[key] def __iter__(self): keys = list(self.data.keys()) keys.sort() for key in keys: yield key def __len__(self): return len(self.data) my_dict = SortedDict() my_dict[&#39;otter&#39;] = 1 my_dict[&#39;cheeta&#39;] = 2 my_dict[&#39;anteater&#39;] = 3 my_dict[&#39;deer&#39;] = 4 assert my_dict[&#39;otter&#39;] == 1 assert &#39;cheeta&#39; in my_dict del my_dict[&#39;cheeta&#39;] assert &#39;cheeta&#39; not in my_dict print(my_dict) expected = [(&#39;anteater&#39;, 3), (&#39;deer&#39;, 4), (&#39;otter&#39;, 1)] assert list(my_dict.items()) == expected assert not isinstance(my_dict, dict) # Example 14 sorted_ranks = SortedDict() populate_ranks(votes, sorted_ranks) print(sorted_ranks.data) # {&#39;otter&#39;: 1, &#39;fox&#39;: 2, &#39;polar bear&#39;: 3} print(next(iter(sorted_ranks))) # fox 16. 用get处理键不在字典中的情况，不要使用in与KeyError有4中方法处理键不在字典中的情况：in表达式，KeyError异常，get方法和setdefault方法。 counters = { &#39;pumpernickel&#39;: 2, &#39;sourdough&#39;: 1, } key = &#39;multigrain&#39; count = counters.get(key, 0) counters[key] = count + 1 print(counters) # {&#39;pumpernickel&#39;: 2, &#39;sourdough&#39;: 1, &#39;multigrain&#39;: 1} votes = { &#39;baguette&#39;: [&#39;Bob&#39;, &#39;Alice&#39;], &#39;ciabatta&#39;: [&#39;Coco&#39;, &#39;Deb&#39;], } key = &#39;brioche&#39; who = &#39;Elmer&#39; print(f&#39;votes pre: {votes}&#39;) # {&#39;baguette&#39;: [&#39;Bob&#39;, &#39;Alice&#39;], &#39;ciabatta&#39;: [&#39;Coco&#39;, &#39;Deb&#39;]} if key in votes: names = votes[key] else: votes[key] = names = [] print(votes) # {&#39;baguette&#39;: [&#39;Bob&#39;, &#39;Alice&#39;], &#39;ciabatta&#39;: [&#39;Coco&#39;, &#39;Deb&#39;], &#39;brioche&#39;: []} names.append(who) print(f&#39;votes: {votes}&#39;) # {&#39;baguette&#39;: [&#39;Bob&#39;, &#39;Alice&#39;], &#39;ciabatta&#39;: [&#39;Coco&#39;, &#39;Deb&#39;], &#39;brioche&#39;: [&#39;Elmer&#39;]} key = &#39;cornbread&#39; who = &#39;Kirk&#39; names = votes.setdefault(key, []) names.append(who) print(votes) # {&#39;baguette&#39;: [&#39;Bob&#39;, &#39;Alice&#39;], &#39;ciabatta&#39;: [&#39;Coco&#39;, &#39;Deb&#39;], &#39;brioche&#39;: [&#39;Elmer&#39;], &#39;cornbread&#39;: [&#39;Kirk&#39;]} data = {} key = &#39;foo&#39; value = [] data.setdefault(key, value) print(&#39;Before:&#39;, data) # Before: {&#39;foo&#39;: []} value.append(&#39;hello&#39;) print(&#39;After: &#39;, data) # After: {&#39;foo&#39;: [&#39;hello&#39;]} 17. 用defaultdict处理内部状态中缺失的元素，而不要用setdefaultclass Visits: def __init__(self): self.data = {} def add(self, country, city): city_set = self.data.setdefault(country, set()) city_set.add(city) visits = Visits() visits.add(&#39;Russia&#39;, &#39;Yekaterinburg&#39;) visits.add(&#39;Tanzania&#39;, &#39;Zanzibar&#39;) print(visits.data) # {&#39;Russia&#39;: {&#39;Yekaterinburg&#39;}, &#39;Tanzania&#39;: {&#39;Zanzibar&#39;}} print(&#39;-----------------------------&#39;) from collections import defaultdict # 推荐 class Visits: def __init__(self): self.data = defaultdict(set) def add(self, country, city): self.data[country].add(city) visits = Visits() visits.add(&#39;England&#39;, &#39;Bath&#39;) visits.add(&#39;England&#39;, &#39;London&#39;) print(visits.data) # defaultdict(&lt;class &#39;set&#39;&gt;, {&#39;England&#39;: {&#39;Bath&#39;}, &#39;England1&#39;: {&#39;London&#39;}}) 18. 学会利用missing构造依赖键的默认值path = &#39;account_9090.csv&#39; with open(path, &#39;wb&#39;) as f: f.write(b&#39;image data here 9090&#39;) def open_picture(profile_path): try: return open(profile_path, &#39;a+b&#39;) except OSError: print(f&#39;Failed to open path {profile_path}&#39;) raise class Pictures(dict): def __missing__(self, key): value = open_picture(key) self[key] = value return value pictures = Pictures() handle = pictures[path] handle.seek(0) image_data = handle.read() print(pictures) print(image_data) 19. 不要把函数返回的多个数值拆分到三个以上的变量中def get_stats(numbers): minimum = min(numbers) maximum = max(numbers) return minimum, maximum lengths = [63, 73, 72, 60, 67, 66, 71, 61, 72, 70] minimum, maximum = get_stats(lengths) # Two return values print(f&#39;Min: {minimum}, Max: {maximum}&#39;) 三. 函数20. 遇到意外状况时应该抛出异常，不要返回Nonedef careful_divide(a, b): try: return a / b except ZeroDivisionError: return None assert careful_divide(4, 2) == 2 assert careful_divide(0, 1) == 0 assert careful_divide(3, 6) == 0.5 assert careful_divide(1, 0) == None def careful_divide(a: float, b: float) -&gt; float: &quot;&quot;&quot;Divides a by b. Raises: ValueError: When the inputs cannot be divided. &quot;&quot;&quot; try: return a / b except ZeroDivisionError as e: print(f&#39;result: {e}&#39;) raise ValueError(f&#39;Invalid inputs: {e}&#39;) try: result = careful_divide(1, 0) assert False except ValueError: print(f&#39;result:&#39;) pass # Expected assert careful_divide(1, 5) == 0.2 21. 了解如何在闭包里面使用外围作用域中的变量 def sort_priority3(numbers, group): found = False def helper(x): # 把闭包里面的数据赋值给闭包外面的变量 nonlocal found # Added if x in group: found = True return (0, x) return (1, x) numbers.sort(key=helper) return found numbers = [8, 3, 1, 2, 5, 4, 7, 6] group = {2, 3, 5, 7} found = sort_priority3(numbers, group) assert found assert numbers == [2, 3, 5, 7, 1, 4, 6, 8] print(&#39;--------------下面是用辅助类来封装状态&#39;) class Sorter: def __init__(self, group): self.group = group self.found = False def __call__(self, x): if x in self.group: self.found = True return (0, x) return (1, x) sorter = Sorter(group) numbers.sort(key=sorter) assert sorter.found is True assert numbers == [2, 3, 5, 7, 1, 4, 6, 8] 22. 用数量可变的位置参数给函数设计清晰的参数列表def log(message, *values): # The only difference if not values: print(message) else: values_str = &#39;, &#39;.join(str(x) for x in values) print(f&#39;{message}: {values_str}&#39;) log(&#39;My numbers are&#39;, 1, 2) log(&#39;Hi there&#39;) # Much better 23. 用关键字参数来表示可选的行为def flow_rate(weight_diff, time_diff, period=1): &quot;&quot;&quot;流速：每秒的千克数&quot;&quot;&quot; return (weight_diff / time_diff) * period weight_diff = 0.5 time_diff = 3 flow = flow_rate(weight_diff, time_diff, period=2) print(f&#39;{flow:.3} kg per second&#39;) 24. 用None和docstring来描述默认值会变的参数import json from time import sleep from datetime import datetime from typing import Optional def log(message, when=None): &quot;&quot;&quot;Log a message with a timestamp. Args: message: Message to print. when: datetime of when the message occurred. Defaults to the present time. &quot;&quot;&quot; if when is None: when = datetime.now() print(f&#39;{when}: {message}&#39;) # Example log(&#39;Hi there!&#39;) sleep(0.1) log(&#39;Hello again!&#39;) def decode(data, default=None): &quot;&quot;&quot;Load JSON data from a string. Args: data: JSON data to decode. default: Value to return if decoding fails. Defaults to an empty dictionary. &quot;&quot;&quot; try: return json.loads(data) except ValueError: if default is None: default = {} return default foo = decode(&#39;bad data&#39;) foo[&#39;stuff&#39;] = 5 bar = decode(&#39;also bad&#39;) bar[&#39;meep&#39;] = 1 print(&#39;Foo:&#39;, foo) print(&#39;Bar:&#39;, bar) assert foo is not bar def log_typed(message: str, when: Optional[datetime] = None) -&gt; None: &quot;&quot;&quot;Log a message with a timestamp. Args: message: Message to print. when: datetime of when the message occurred. Defaults to the present time. &quot;&quot;&quot; if when is None: when = datetime.now() print(f&#39;{when}: {message}&#39;) log_typed(&#39;Hi there!&#39;) sleep(0.1) log_typed(&#39;Hello again!&#39;) 25. 用只能以关键字 和只能按位置传入的参数来设计清晰的参数列表def safe_division_e(numerator, denominator, ndigits=10, *, # Changed ignore_overflow=False, ignore_zero_division=False): try: fraction = numerator / denominator # Changed return round(fraction, ndigits) # Changed except OverflowError: if ignore_overflow: return 0 else: raise except ZeroDivisionError: if ignore_zero_division: return float(&#39;inf&#39;) else: raise result = safe_division_e(22, 7) print(result) # 3.1428571429 result = safe_division_e(22, 7, 5) print(result) # 3.14286 result = safe_division_e(22, 7, ndigits=2) print(result) # 3.14 26. 用functools.wraps定义函数修饰器import pickle from functools import wraps def trace(func): @wraps(func) def wrapper(*args, **kwargs): result = func(*args, **kwargs) print(f&#39;{func.__name__}({args!r}, {kwargs!r}) &#39; f&#39;-&gt; {result!r}&#39;) return result return wrapper @trace def fibonacci(n): &quot;&quot;&quot;Return the n-th Fibonacci number&quot;&quot;&quot; if n in (0, 1): return n return fibonacci(n - 2) + fibonacci(n - 1) help(fibonacci) print(pickle.dumps(fibonacci)) 四. 推导与生成27. 用列表推导取代map与filtera = range(1, 10) even_squares = [x**2 for x in a if x % 2 == 0] print(even_squares) alt = map(lambda x: x**2, filter(lambda x: x % 2 == 0, a)) assert even_squares == list(alt) # 字典推导 even_squares_dict = {x: x**2 for x in a if x % 2 == 0} threes_cubed_set = {x**3 for x in a if x % 3 == 0} print(even_squares_dict) print(threes_cubed_set) 28. 控制推导逻辑的子表达式不要超过两个matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] flat = [x for row in matrix for x in row] print(flat) squared = [[x**2 for x in row] for row in matrix] print(squared) 29. 用赋值表达式消除推导中的重复代码stock = { &#39;nails&#39;: 125, &#39;screws&#39;: 35, &#39;wingnuts&#39;: 8, &#39;washers&#39;: 24, } order = [&#39;screws&#39;, &#39;wingnuts&#39;, &#39;clips&#39;] found = ((name, batches) for name in order if (batches := get_batches(stock.get(name, 0), 8))) print(next(found)) print(next(found)) 30. 不要让函数直接返回列表，应该让它逐个生成列表里的值address_lines = &quot;&quot;&quot;Four score and seven years ago our fathers brought forth on this continent a new nation, conceived in liberty, and dedicated to the proposition that all men are created equal.&quot;&quot;&quot; with open(&#39;address.txt&#39;, &#39;w&#39;) as f: f.write(address_lines) import itertools with open(&#39;address.txt&#39;, &#39;r&#39;) as f: it = index_file(f) results = itertools.islice(it, 0, 10) print(list(results)) 31. 谨慎地迭代函数所收到的参数from collections.abc import Iterator def normalize_defensive(numbers): if isinstance(numbers, Iterator): # Another way to check raise TypeError(&#39;Must supply a container&#39;) total = sum(numbers) result = [] for value in numbers: percent = 100 * value / total result.append(percent) return result visits = [15, 35, 80] result = normalize_defensive(visits) # No error print(result, type(result)) it = iter(visits) try: normalize_defensive(it) except TypeError: pass else: assert False 32. 考虑用生成器表达式改写数据量较大的列表推导import random with open(&#39;my_file.txt&#39;, &#39;w&#39;) as f: for _ in range(10): f.write(&#39;a&#39; * random.randint(0, 100)) f.write(&#39;\n&#39;) value = [len(x) for x in open(&#39;my_file.txt&#39;)] print(value) it = (len(x) for x in open(&#39;my_file.txt&#39;)) print(it) print(next(it)) print(next(it)) roots = ((x, x**0.5) for x in it) print(next(roots)) 33. 通过yield from把多个生成器连起来用import timeit def child(): for i in range(1_000_000): yield i def slow(): for i in child(): yield i def fast(): yield from child() baseline = timeit.timeit( stmt=&#39;for _ in slow(): pass&#39;, globals=globals(), number=50) print(f&#39;Manual nesting {baseline:.2f}s&#39;) comparison = timeit.timeit( stmt=&#39;for _ in fast(): pass&#39;, globals=globals(), number=50) print(f&#39;Composed nesting {comparison:.2f}s&#39;) reduction = -(comparison - baseline) / baseline print(f&#39;{reduction:.1%} less time&#39;) 34. 不要用send给生成器注入数据import math def wave_cascading(amplitude_it, steps): step_size = 2 * math.pi / steps for step in range(steps): radians = step * step_size fraction = math.sin(radians) amplitude = next(amplitude_it) # Get next input output = amplitude * fraction yield output def complex_wave_cascading(amplitude_it): yield from wave_cascading(amplitude_it, 3) yield from wave_cascading(amplitude_it, 4) yield from wave_cascading(amplitude_it, 5) def run_cascading(): amplitudes = [7, 7, 7, 2, 2, 2, 2, 10, 10, 10, 10, 10] it = complex_wave_cascading(iter(amplitudes)) for amplitude in amplitudes: output = next(it) if output is None: print(f&#39;Output is None&#39;) else: print(f&#39;Output: {output:&gt;5.1f} {amplitude}&#39;) run_cascading() 35. 不要通过throw变换生成器的状态RESETS = [False, False, True, False, True, False, False, False, False, False, False, False, False] class Timer: def __init__(self, period): self.current = period self.period = period def reset(self): self.current = self.period def __iter__(self): while self.current: self.current -= 1 yield self.current def run(): timer = Timer(4) for current in timer: if RESETS.pop(0): timer.reset() print(f&#39;{current} ticks remaining&#39;) run() 36. 考虑用itertools拼装迭代器与生成器import itertools print(&#39;------- 一. 连接多个迭代器&#39;) # chain: 把多个迭代器从头到尾连成一个迭代器 it = itertools.chain([1, 2, 3], [4, 5, 6]) print(list(it)) # [1, 2, 3, 4, 5, 6] # repeat: 不停的输出某个值 it = itertools.repeat(&#39;hello&#39;, 3) print(list(it)) # [&#39;hello&#39;, &#39;hello&#39;, &#39;hello&#39;] # cycle: 循环的输出某段内容之间的元素 it = itertools.cycle([1, 2]) result = [next(it) for _ in range (10)] print(result) # [1, 2, 1, 2, 1, 2, 1, 2, 1, 2] # tee: 让一个迭代器分裂成多个平行的迭代器 it1, it2, it3 = itertools.tee([&#39;first&#39;, &#39;second&#39;], 3) print(list(it1)) # [&#39;first&#39;, &#39;second&#39;] print(list(it2)) # [&#39;first&#39;, &#39;second&#39;] print(list(it3)) # [&#39;first&#39;, &#39;second&#39;] # zip_longest： 和zip函数类似，但会用默认值填充 keys = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;] values = [1, 2] normal = list(zip(keys, values)) print(&#39;zip: &#39;, normal) # zip: [(&#39;one&#39;, 1), (&#39;two&#39;, 2)] it = itertools.zip_longest(keys, values, fillvalue=&#39;nope&#39;) longest = list(it) print(&#39;zip_longest:&#39;, longest) # zip_longest: [(&#39;one&#39;, 1), (&#39;two&#39;, 2), (&#39;three&#39;, &#39;nope&#39;)] print(&#39;------- 二. 过滤源迭代器中的元素&#39;) # islice： 按照下标切割源迭代器 values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] first_five = itertools.islice(values, 5) print(&#39;First five: &#39;, list(first_five)) # First five: [1, 2, 3, 4, 5] middle_odds = itertools.islice(values, 2, 8, 2) print(&#39;Middle odds:&#39;, list(middle_odds)) # Middle odds: [3, 5, 7] # takewhile: 一直从源迭代器里获取元素，直到返回false values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] less_than_seven = lambda x: x &lt; 7 it = itertools.takewhile(less_than_seven, values) print(list(it)) # [1, 2, 3, 4, 5, 6] # dropwhile: 一直跳过序列中的元素，直到返回true values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] less_than_seven = lambda x: x &lt; 7 it = itertools.dropwhile(less_than_seven, values) print(list(it)) # [7, 8, 9, 10] # filterfalse: 与内置的filter函数相反，输出false的那些元素 values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] evens = lambda x: x % 2 == 0 filter_result = filter(evens, values) print(&#39;Filter: &#39;, list(filter_result)) # Filter: [2, 4, 6, 8, 10] filter_false_result = itertools.filterfalse(evens, values) print(&#39;Filter false:&#39;, list(filter_false_result)) # Filter false: [1, 3, 5, 7, 9] print(&#39;------- 三. 从源迭代器中的元素合成新的元素&#39;) # accumulate： 从源迭代器中取出一个元素进行累加，和functools模块中的reduce函数其实是一样的 values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] sum_reduce = itertools.accumulate(values) print(&#39;Sum: &#39;, list(sum_reduce)) # Sum: [1, 3, 6, 10, 15, 21, 28, 36, 45, 55] def sum_modulo_20(first, second): output = first + second return output % 20 modulo_reduce = itertools.accumulate(values, sum_modulo_20) print(&#39;Modulo:&#39;, list(modulo_reduce)) # Modulo: [1, 3, 6, 10, 15, 1, 8, 16, 5, 15] # product： 从一个或多个源迭代器中获取元素，并计算笛卡尔积 single = itertools.product([1, 2], repeat=2) print(&#39;Single: &#39;, list(single)) # Single: [(1, 1), (1, 2), (2, 1), (2, 2)] multiple = itertools.product([1, 2], [&#39;a&#39;, &#39;b&#39;]) print(&#39;Multiple:&#39;, list(multiple)) # Multiple: [(1, &#39;a&#39;), (1, &#39;b&#39;), (2, &#39;a&#39;), (2, &#39;b&#39;)] # permutations： 输出迭代器中n个元素形成的每种 有序排列 it = itertools.permutations([1, 2, 3], 2) print(f&#39;permutations: {list(it)}&#39;) # permutations: [(1, 2), (1, 3), (2, 1), (2, 3), (3, 1), (3, 2)] # combinations： 输出迭代器中n个元素形成的每种 无序组合 it = itertools.combinations([1, 2, 3, 4], 2) print(list(it)) # [(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)] # combinations_with_replacement：允许同一个元素在组合里多次出现 it = itertools.combinations_with_replacement([1, 2, 3], 2) print(list(it)) # [(1, 1), (1, 2), (1, 3), (2, 2), (2, 3), (3, 3)] 五. 类与接口37. 用组合起来的类来实现多层结构，不要用嵌套的内置类型from collections import defaultdict from collections import namedtuple Grade = namedtuple(&#39;Grade&#39;, (&#39;score&#39;, &#39;weight&#39;)) class Subject: def __init__(self): self._grades = [] def report_grade(self, score, weight): self._grades.append(Grade(score, weight)) def average_grade(self): total, total_weight = 0, 0 for grade in self._grades: total += grade.score * grade.weight total_weight += grade.weight return total / total_weight class Student: def __init__(self): self._subjects = defaultdict(Subject) def get_subject(self, name): return self._subjects[name] def average_grade(self): total, count = 0, 0 for subject in self._subjects.values(): total += subject.average_grade() count += 1 return total / count class Gradebook: def __init__(self): self._students = defaultdict(Student) def get_student(self, name): return self._students[name] book = Gradebook() albert = book.get_student(&#39;Albert Einstein&#39;) math = albert.get_subject(&#39;Math&#39;) math.report_grade(75, 0.05) math.report_grade(65, 0.15) math.report_grade(70, 0.80) gym = albert.get_subject(&#39;Gym&#39;) gym.report_grade(100, 0.40) gym.report_grade(85, 0.60) print(albert.average_grade()) 38. 让简单的接口接受函数，而不是类的实例 # Example 1 names = [&#39;Socrates&#39;, &#39;Archimedes&#39;, &#39;Plato&#39;, &#39;Aristotle&#39;] names.sort(key=len) print(names) # [&#39;Plato&#39;, &#39;Socrates&#39;, &#39;Aristotle&#39;, &#39;Archimedes&#39;] # Example 2 def log_missing(): print(&#39;Key added&#39;) return 0 # Example 3 from collections import defaultdict current = {&#39;green&#39;: 12, &#39;blue&#39;: 3} increments = [ (&#39;red&#39;, 5), (&#39;blue&#39;, 17), (&#39;orange&#39;, 9), ] result = defaultdict(log_missing, current) print(&#39;Before:&#39;, dict(result)) # Before: {&#39;green&#39;: 12, &#39;blue&#39;: 3} for key, amount in increments: result[key] += amount print(&#39;After: &#39;, dict(result)) # After: {&#39;green&#39;: 12, &#39;blue&#39;: 20, &#39;red&#39;: 5, &#39;orange&#39;: 9} # Example 4 def increment_with_report(current, increments): added_count = 0 def missing(): nonlocal added_count # Stateful closure added_count += 1 return 0 result = defaultdict(missing, current) for key, amount in increments: result[key] += amount return result, added_count # Example 5 result, count = increment_with_report(current, increments) assert count == 2 print(result) # defaultdict(&lt;function increment_with_report.&lt;locals&gt;.missing at 0x7faa53a46ef0&gt;, {&#39;green&#39;: 12, &#39;blue&#39;: 20, &#39;red&#39;: 5, &#39;orange&#39;: 9}) # Example 6 class CountMissing: def __init__(self): self.added = 0 def missing(self): self.added += 1 return 0 # Example 7 counter = CountMissing() result = defaultdict(counter.missing, current) # Method ref for key, amount in increments: result[key] += amount assert counter.added == 2 print(result) # defaultdict(&lt;bound method CountMissing.missing of &lt;__main__.CountMissing object at 0x7faa53ac7810&gt;&gt;, {&#39;green&#39;: 12, &#39;blue&#39;: 20, &#39;red&#39;: 5, &#39;orange&#39;: 9}) # Example 8 class BetterCountMissing: def __init__(self): self.added = 0 def __call__(self): self.added += 1 return 0 counter = BetterCountMissing() assert counter() == 0 assert callable(counter) # Example 9 counter = BetterCountMissing() result = defaultdict(counter, current) # Relies on __call__ for key, amount in increments: result[key] += amount assert counter.added == 2 print(result) # defaultdict(&lt;__main__.BetterCountMissing object at 0x7faa53ac7990&gt;, {&#39;green&#39;: 12, &#39;blue&#39;: 20, &#39;red&#39;: 5, &#39;orange&#39;: 9}) 39. 通过@classmethod多态来构造同一体系中的各类对象# Example 1 class InputData: def read(self): raise NotImplementedError # Example 2 class PathInputData(InputData): def __init__(self, path): super().__init__() self.path = path def read(self): with open(self.path) as f: return f.read() # Example 3 class Worker: def __init__(self, input_data): self.input_data = input_data self.result = None def map(self): raise NotImplementedError def reduce(self, other): raise NotImplementedError # Example 4 class LineCountWorker(Worker): def map(self): data = self.input_data.read() self.result = data.count(&#39;\n&#39;) def reduce(self, other): self.result += other.result # Example 5 import os def generate_inputs(data_dir): for name in os.listdir(data_dir): yield PathInputData(os.path.join(data_dir, name)) # Example 6 def create_workers(input_list): workers = [] for input_data in input_list: workers.append(LineCountWorker(input_data)) return workers # Example 7 from threading import Thread def execute(workers): threads = [Thread(target=w.map) for w in workers] for thread in threads: thread.start() for thread in threads: thread.join() first, *rest = workers for worker in rest: first.reduce(worker) return first.result # Example 8 def mapreduce(data_dir): inputs = generate_inputs(data_dir) workers = create_workers(inputs) return execute(workers) # Example 9 import os import random def write_test_files(tmpdir): os.makedirs(tmpdir) for i in range(100): with open(os.path.join(tmpdir, str(i)), &#39;w&#39;) as f: f.write(&#39;\n&#39; * random.randint(0, 100)) tmpdir = &#39;test_inputs&#39; write_test_files(tmpdir) result = mapreduce(tmpdir) print(f&#39;There are {result} lines&#39;) # There are 4762 lines # Example 10 class GenericInputData: def read(self): raise NotImplementedError @classmethod def generate_inputs(cls, config): raise NotImplementedError # Example 11 class PathInputData(GenericInputData): def __init__(self, path): super().__init__() self.path = path def read(self): with open(self.path) as f: return f.read() @classmethod def generate_inputs(cls, config): data_dir = config[&#39;data_dir&#39;] for name in os.listdir(data_dir): yield cls(os.path.join(data_dir, name)) # Example 12 class GenericWorker: def __init__(self, input_data): self.input_data = input_data self.result = None def map(self): raise NotImplementedError def reduce(self, other): raise NotImplementedError @classmethod def create_workers(cls, input_class, config): workers = [] for input_data in input_class.generate_inputs(config): workers.append(cls(input_data)) return workers # Example 13 class LineCountWorker(GenericWorker): def map(self): data = self.input_data.read() self.result = data.count(&#39;\n&#39;) def reduce(self, other): self.result += other.result # Example 14 def mapreduce(worker_class, input_class, config): workers = worker_class.create_workers(input_class, config) return execute(workers) # Example 15 config = {&#39;data_dir&#39;: tmpdir} result = mapreduce(LineCountWorker, PathInputData, config) print(f&#39;There are {result} lines&#39;) # There are 4762 lines 40. 通过super初始化超类 # Example 1 class MyBaseClass: def __init__(self, value): self.value = value class MyChildClass(MyBaseClass): def __init__(self): MyBaseClass.__init__(self, 5) def times_two(self): return self.value * 2 foo = MyChildClass() assert foo.times_two() == 10 # Example 2 class TimesTwo: def __init__(self): self.value *= 2 class PlusFive: def __init__(self): self.value += 5 # Example 3 class OneWay(MyBaseClass, TimesTwo, PlusFive): def __init__(self, value): MyBaseClass.__init__(self, value) TimesTwo.__init__(self) PlusFive.__init__(self) # Example 4 foo = OneWay(5) print(&#39;First ordering value is (5 * 2) + 5 =&#39;, foo.value) # First ordering value is (5 * 2) + 5 = 15 # Example 5 class AnotherWay(MyBaseClass, PlusFive, TimesTwo): def __init__(self, value): MyBaseClass.__init__(self, value) TimesTwo.__init__(self) PlusFive.__init__(self) # Example 6 bar = AnotherWay(5) print(&#39;Second ordering value is&#39;, bar.value) # Second ordering value is 15 # Example 7 class TimesSeven(MyBaseClass): def __init__(self, value): MyBaseClass.__init__(self, value) self.value *= 7 class PlusNine(MyBaseClass): def __init__(self, value): MyBaseClass.__init__(self, value) self.value += 9 # Example 8 class ThisWay(TimesSeven, PlusNine): def __init__(self, value): TimesSeven.__init__(self, value) PlusNine.__init__(self, value) foo = ThisWay(5) print(&#39;Should be (5 * 7) + 9 = 44 but is&#39;, foo.value) # Should be (5 * 7) + 9 = 44 but is 14 # Example 9 class MyBaseClass: def __init__(self, value): self.value = value class TimesSevenCorrect(MyBaseClass): def __init__(self, value): super().__init__(value) self.value *= 7 class PlusNineCorrect(MyBaseClass): def __init__(self, value): super().__init__(value) self.value += 9 # Example 10 class GoodWay(TimesSevenCorrect, PlusNineCorrect): def __init__(self, value): super().__init__(value) foo = GoodWay(5) print(&#39;Should be 7 * (5 + 9) = 98 and is&#39;, foo.value) # Should be 7 * (5 + 9) = 98 and is 98 # Example 11 mro_str = &#39;\n&#39;.join(repr(cls) for cls in GoodWay.mro()) print(f&#39;mro_str: {mro_str}&#39;) # &lt;class &#39;__main__.GoodWay&#39;&gt; # Example 12 class ExplicitTrisect(MyBaseClass): def __init__(self, value): super(ExplicitTrisect, self).__init__(value) self.value /= 3 assert ExplicitTrisect(9).value == 3 # Example 13 class AutomaticTrisect(MyBaseClass): def __init__(self, value): super(__class__, self).__init__(value) self.value /= 3 class ImplicitTrisect(MyBaseClass): def __init__(self, value): super().__init__(value) self.value /= 3 assert ExplicitTrisect(9).value == 3 assert AutomaticTrisect(9).value == 3 assert ImplicitTrisect(9).value == 3 41. 考虑用mix-in类来表示可组合的功能# Example 1 class ToDictMixin: def to_dict(self): return self._traverse_dict(self.__dict__) # Example 2 def _traverse_dict(self, instance_dict): output = {} for key, value in instance_dict.items(): output[key] = self._traverse(key, value) return output def _traverse(self, key, value): if isinstance(value, ToDictMixin): return value.to_dict() elif isinstance(value, dict): return self._traverse_dict(value) elif isinstance(value, list): return [self._traverse(key, i) for i in value] elif hasattr(value, &#39;__dict__&#39;): return self._traverse_dict(value.__dict__) else: return value # Example 3 class BinaryTree(ToDictMixin): def __init__(self, value, left=None, right=None): self.value = value self.left = left self.right = right # Example 4 tree = BinaryTree(10, left=BinaryTree(7, right=BinaryTree(9)), right=BinaryTree(13, left=BinaryTree(11))) print(tree.to_dict()) # {&#39;value&#39;: 10, &#39;left&#39;: {&#39;value&#39;: 7, &#39;left&#39;: None, &#39;right&#39;: {&#39;value&#39;: 9, &#39;left&#39;: None, &#39;right&#39;: None}}, &#39;right&#39;: {&#39;value&#39;: 13, &#39;left&#39;: {&#39;value&#39;: 11, &#39;left&#39;: None, &#39;right&#39;: None}, &#39;right&#39;: None}} # Example 5 class BinaryTreeWithParent(BinaryTree): def __init__(self, value, left=None, right=None, parent=None): super().__init__(value, left=left, right=right) self.parent = parent # Example 6 def _traverse(self, key, value): if (isinstance(value, BinaryTreeWithParent) and key == &#39;parent&#39;): return value.value # Prevent cycles else: return super()._traverse(key, value) # Example 7 root = BinaryTreeWithParent(10) root.left = BinaryTreeWithParent(7, parent=root) root.left.right = BinaryTreeWithParent(9, parent=root.left) print(root.to_dict()) # {&#39;value&#39;: 10, &#39;left&#39;: {&#39;value&#39;: 7, &#39;left&#39;: None, &#39;right&#39;: {&#39;value&#39;: 9, &#39;left&#39;: None, &#39;right&#39;: None, &#39;parent&#39;: 7}, &#39;parent&#39;: 10}, &#39;right&#39;: None, &#39;parent&#39;: None} # Example 8 class NamedSubTree(ToDictMixin): def __init__(self, name, tree_with_parent): self.name = name self.tree_with_parent = tree_with_parent my_tree = NamedSubTree(&#39;foobar&#39;, root.left.right) print(f&#39;my_tree.to_dict(): {my_tree.to_dict()}&#39;) # my_tree.to_dict(): {&#39;name&#39;: &#39;foobar&#39;, &#39;tree_with_parent&#39;: {&#39;value&#39;: 9, &#39;left&#39;: None, &#39;right&#39;: None, &#39;parent&#39;: 7}} # Example 9 import json class JsonMixin: @classmethod def from_json(cls, data): kwargs = json.loads(data) return cls(**kwargs) def to_json(self): return json.dumps(self.to_dict()) # Example 10 class DatacenterRack(ToDictMixin, JsonMixin): def __init__(self, switch=None, machines=None): self.switch = Switch(**switch) self.machines = [ Machine(**kwargs) for kwargs in machines] class Switch(ToDictMixin, JsonMixin): def __init__(self, ports=None, speed=None): self.ports = ports self.speed = speed class Machine(ToDictMixin, JsonMixin): def __init__(self, cores=None, ram=None, disk=None): self.cores = cores self.ram = ram self.disk = disk # Example 11 serialized = &quot;&quot;&quot;{ &quot;switch&quot;: {&quot;ports&quot;: 5, &quot;speed&quot;: 1e9}, &quot;machines&quot;: [ {&quot;cores&quot;: 8, &quot;ram&quot;: 32e9, &quot;disk&quot;: 5e12}, {&quot;cores&quot;: 4, &quot;ram&quot;: 16e9, &quot;disk&quot;: 1e12}, {&quot;cores&quot;: 2, &quot;ram&quot;: 4e9, &quot;disk&quot;: 500e9} ] }&quot;&quot;&quot; deserialized = DatacenterRack.from_json(serialized) roundtrip = deserialized.to_json() assert json.loads(serialized) == json.loads(roundtrip) 42. 优先考虑用public属性表示应受保护的数据，不要用private属性表示class ApiClass: def __init__(self): self._value = 5 def get(self): return self._value class Child(ApiClass): def __init__(self): super().__init__() self._value = &#39;hello&#39; # Conflicts a = Child() print(f&#39;{a.get()} and {a._value} should be different&#39;) # hello and hello should be different # Example 15 class ApiClass: def __init__(self): self.__value = 5 # Double underscore def get(self): return self.__value # Double underscore class Child(ApiClass): def __init__(self): super().__init__() self._value = &#39;hello&#39; # OK! a = Child() print(f&#39;{a.get()} and {a._value} are different&#39;) # 5 and hello are different 43. 自定义的容器类型应该从collections.abc继承from collections.abc import Sequence class BinaryNode: def __init__(self, value, left=None, right=None): self.value = value self.left = left self.right = right class IndexableNode(BinaryNode): def _traverse(self): if self.left is not None: yield from self.left._traverse() yield self if self.right is not None: yield from self.right._traverse() def __getitem__(self, index): for i, item in enumerate(self._traverse()): if i == index: return item.value raise IndexError(f&#39;Index {index} is out of range&#39;) class SequenceNode(IndexableNode): def __len__(self): for count, _ in enumerate(self._traverse(), 1): pass return count class BetterNode(SequenceNode, Sequence): pass tree = BetterNode( 10, left=BetterNode( 5, left=BetterNode(2), right=BetterNode( 6, right=BetterNode(7))), right=BetterNode( 15, left=BetterNode(11)) ) print(&#39;Index of 7 is&#39;, tree.index(7)) # Index of 7 is 3 print(&#39;Count of 10 is&#39;, tree.count(10)) # Count of 10 is 1 六. 元类与属性44. 用纯属性与修饰器取代旧式的setter与getter方法class Resistor: def __init__(self, ohms): self.ohms = ohms self.voltage = 0 self.current = 0 class MysteriousResistor(Resistor): @property def ohms(self): self.voltage = self._ohms * self.current return self._ohms @ohms.setter def ohms(self, ohms): self._ohms = ohms # Example r7 = MysteriousResistor(10) r7.current = 0.01 print(f&#39;Before: {r7.voltage:.2f}&#39;) # Before: 0.00 print(r7.ohms) # 10 print(f&#39;After: {r7.voltage:.2f}&#39;) # After: 0.10 45. 考虑用@property实现新的属性访问逻辑，不要急着重构原有的代码# Example 1 from datetime import datetime, timedelta class Bucket: def __init__(self, period): self.period_delta = timedelta(seconds=period) self.reset_time = datetime.now() self.quota = 0 def __repr__(self): return f&#39;Bucket(quota={self.quota})&#39; bucket = Bucket(60) print(bucket) # Bucket(quota=0) # Example 2 def fill(bucket, amount): now = datetime.now() if (now - bucket.reset_time) &gt; bucket.period_delta: bucket.quota = 0 bucket.reset_time = now bucket.quota += amount # Example 3 def deduct(bucket, amount): now = datetime.now() if (now - bucket.reset_time) &gt; bucket.period_delta: return False # Bucket hasn&#39;t been filled this period if bucket.quota - amount &lt; 0: return False # Bucket was filled, but not enough bucket.quota -= amount return True # Bucket had enough, quota consumed # Example 4 bucket = Bucket(60) fill(bucket, 100) print(bucket) # Bucket(quota=100) # Example 5 if deduct(bucket, 99): print(&#39;Had 99 quota&#39;) # Had 99 quota else: print(&#39;Not enough for 99 quota&#39;) print(bucket) # Bucket(quota=1) # Example 6 if deduct(bucket, 3): print(&#39;Had 3 quota&#39;) else: print(&#39;Not enough for 3 quota&#39;) # Not enough for 3 quota print(bucket) # Bucket(quota=1) # Example 7 class NewBucket: def __init__(self, period): self.period_delta = timedelta(seconds=period) self.reset_time = datetime.now() self.max_quota = 0 self.quota_consumed = 0 def __repr__(self): return (f&#39;NewBucket(max_quota={self.max_quota}, &#39; f&#39;quota_consumed={self.quota_consumed})&#39;) # Example 8 @property def quota(self): return self.max_quota - self.quota_consumed # Example 9 @quota.setter def quota(self, amount): delta = self.max_quota - amount if amount == 0: # Quota being reset for a new period self.quota_consumed = 0 self.max_quota = 0 elif delta &lt; 0: # Quota being filled during the period self.max_quota = amount + self.quota_consumed else: # Quota being consumed during the period self.quota_consumed = delta # Example 10 bucket = NewBucket(60) print(&#39;Initial&#39;, bucket) # Initial NewBucket(max_quota=0, quota_consumed=0) fill(bucket, 100) print(&#39;Filled&#39;, bucket) # Filled NewBucket(max_quota=100, quota_consumed=0) if deduct(bucket, 99): print(&#39;Had 99 quota&#39;) # Had 99 quota else: print(&#39;Not enough for 99 quota&#39;) print(&#39;Now&#39;, bucket) # Now NewBucket(max_quota=100, quota_consumed=99) if deduct(bucket, 3): print(&#39;Had 3 quota&#39;) # Not enough for 3 quota else: print(&#39;Not enough for 3 quota&#39;) print(&#39;Still&#39;, bucket) # Still NewBucket(max_quota=100, quota_consumed=99) # Example 11 bucket = NewBucket(6000) assert bucket.max_quota == 0 assert bucket.quota_consumed == 0 assert bucket.quota == 0 fill(bucket, 100) assert bucket.max_quota == 100 assert bucket.quota_consumed == 0 assert bucket.quota == 100 assert deduct(bucket, 10) assert bucket.max_quota == 100 assert bucket.quota_consumed == 10 assert bucket.quota == 90 assert deduct(bucket, 20) assert bucket.max_quota == 100 assert bucket.quota_consumed == 30 assert bucket.quota == 70 fill(bucket, 50) assert bucket.max_quota == 150 assert bucket.quota_consumed == 30 assert bucket.quota == 120 assert deduct(bucket, 40) assert bucket.max_quota == 150 assert bucket.quota_consumed == 70 assert bucket.quota == 80 assert not deduct(bucket, 81) assert bucket.max_quota == 150 assert bucket.quota_consumed == 70 assert bucket.quota == 80 bucket.reset_time += bucket.period_delta - timedelta(1) assert bucket.quota == 80 assert not deduct(bucket, 79) fill(bucket, 1) assert bucket.quota == 1 46. 用描述符来改写需要复用的@property方法 # Example 1 class Homework: def __init__(self): self._grade = 0 @property def grade(self): return self._grade @grade.setter def grade(self, value): if not (0 &lt;= value &lt;= 100): raise ValueError( &#39;Grade must be between 0 and 100&#39;) self._grade = value # Example 2 galileo = Homework() galileo.grade = 95 assert galileo.grade == 95 # Example 3 class Exam: def __init__(self): self._writing_grade = 0 self._math_grade = 0 @staticmethod def _check_grade(value): if not (0 &lt;= value &lt;= 100): raise ValueError( &#39;Grade must be between 0 and 100&#39;) # Example 4 @property def writing_grade(self): return self._writing_grade @writing_grade.setter def writing_grade(self, value): self._check_grade(value) self._writing_grade = value @property def math_grade(self): return self._math_grade @math_grade.setter def math_grade(self, value): self._check_grade(value) self._math_grade = value galileo = Exam() galileo.writing_grade = 85 galileo.math_grade = 99 assert galileo.writing_grade == 85 assert galileo.math_grade == 99 # Example 5 class Grade: def __get__(self, instance, instance_type): pass def __set__(self, instance, value): pass class Exam: # Class attributes math_grade = Grade() writing_grade = Grade() science_grade = Grade() # Example 6 exam = Exam() exam.writing_grade = 40 # Example 7 Exam.__dict__[&#39;writing_grade&#39;].__set__(exam, 40) # Example 8 exam.writing_grade # Example 9 Exam.__dict__[&#39;writing_grade&#39;].__get__(exam, Exam) # Example 10 class Grade: def __init__(self): self._value = 0 def __get__(self, instance, instance_type): return self._value def __set__(self, instance, value): if not (0 &lt;= value &lt;= 100): raise ValueError( &#39;Grade must be between 0 and 100&#39;) self._value = value # Example 11 class Exam: math_grade = Grade() writing_grade = Grade() science_grade = Grade() first_exam = Exam() first_exam.writing_grade = 82 first_exam.science_grade = 99 print(&#39;Writing&#39;, first_exam.writing_grade) # Writing 82 print(&#39;Science&#39;, first_exam.science_grade) # Science 99 # Example 12 second_exam = Exam() second_exam.writing_grade = 75 print(f&#39;Second {second_exam.writing_grade} is right&#39;) # Second 75 is right print(f&#39;First {first_exam.writing_grade} is wrong; should be 82&#39;) # First 75 is wrong; should be 82 # Example 13 class Grade: def __init__(self): self._values = {} def __get__(self, instance, instance_type): if instance is None: return self return self._values.get(instance, 0) def __set__(self, instance, value): if not (0 &lt;= value &lt;= 100): raise ValueError( &#39;Grade must be between 0 and 100&#39;) self._values[instance] = value # Example 14 from weakref import WeakKeyDictionary class Grade: def __init__(self): self._values = WeakKeyDictionary() def __get__(self, instance, instance_type): if instance is None: return self return self._values.get(instance, 0) def __set__(self, instance, value): if not (0 &lt;= value &lt;= 100): raise ValueError(&#39;Grade must be between 0 and 100&#39;) self._values[instance] = value # Example 15 class Exam: math_grade = Grade() writing_grade = Grade() science_grade = Grade() first_exam = Exam() first_exam.writing_grade = 82 second_exam = Exam() second_exam.writing_grade = 75 print(f&#39;First {first_exam.writing_grade} is right&#39;) # First 82 is right print(f&#39;Second {second_exam.writing_grade} is right&#39;) # Second 75 is right 47. 针对惰性属性使用__getattr__、__getattribute__及 __setattr__class DictionaryRecord: def __init__(self, data): self._data = data def __getattribute__(self, name): # Prevent weird interactions with isinstance() used # by example code harness. if name == &#39;__class__&#39;: return DictionaryRecord print(f&#39;* Called __getattribute__({name!r})&#39;) # * Called __getattribute__(&#39;foo&#39;) data_dict = super().__getattribute__(&#39;_data&#39;) return data_dict[name] data = DictionaryRecord({&#39;foo&#39;: 3}) print(&#39;foo: &#39;, data.foo) # foo: 3 48. 用init_subclass验证子类写得是否正确class ValidatePolygon(type): def __new__(meta, name, bases, class_dict): # Only validate non-root classes if not class_dict.get(&#39;is_root&#39;): if class_dict[&#39;sides&#39;] &lt; 3: raise ValueError(&#39;Polygons need 3+ sides&#39;) return type.__new__(meta, name, bases, class_dict) class Polygon(metaclass=ValidatePolygon): is_root = True sides = None # Must be specified by subclasses class ValidateFilledPolygon(ValidatePolygon): def __new__(meta, name, bases, class_dict): # Only validate non-root classes if not class_dict.get(&#39;is_root&#39;): if class_dict[&#39;color&#39;] not in (&#39;red&#39;, &#39;green&#39;): raise ValueError(&#39;Fill color must be supported&#39;) return super().__new__(meta, name, bases, class_dict) class FilledPolygon(Polygon, metaclass=ValidateFilledPolygon): is_root = True color = None # Must be specified by subclasses # Example 9 class GreenPentagon(FilledPolygon): color = &#39;green&#39; sides = 5 greenie = GreenPentagon() print(greenie, type(greenie)) # &lt;__main__.GreenPentagon object at 0x7fac8bccd8d0&gt; &lt;class &#39;__main__.GreenPentagon&#39;&gt; print(Polygon, type(Polygon)) # &lt;class &#39;__main__.Polygon&#39;&gt; &lt;class &#39;__main__.ValidatePolygon&#39;&gt; assert isinstance(greenie, Polygon) # 下面是基本的菱形继承体系 class Top: def __init_subclass__(cls): super().__init_subclass__() print(f&#39;Top for {cls}&#39;) class Left(Top): def __init_subclass__(cls): super().__init_subclass__() # print(f&#39;Left for {cls}&#39;) class Right(Top): def __init_subclass__(cls): super().__init_subclass__() print(f&#39;Right for {cls}&#39;) class Bottom(Left, Right): def __init_subclass__(cls): super().__init_subclass__() print(f&#39;Bottom for {cls}&#39;) &quot;&quot;&quot;打印结果如下： Top for &lt;class &#39;__main__.Left&#39;&gt; Top for &lt;class &#39;__main__.Right&#39;&gt; Top for &lt;class &#39;__main__.Bottom&#39;&gt; Right for &lt;class &#39;__main__.Bottom&#39;&gt; Left for &lt;class &#39;__main__.Bottom&#39;&gt;&quot;&quot;&quot; 49. 用init_subclass记录现有的子类import json registry = {} def register_class(target_class): registry[target_class.__name__] = target_class def deserialize(data): params = json.loads(data) name = params[&#39;class&#39;] target_class = registry[name] return target_class(*params[&#39;args&#39;]) class BetterSerializable: def __init__(self, *args): self.args = args def serialize(self): return json.dumps({ &#39;class&#39;: self.__class__.__name__, &#39;args&#39;: self.args, }) def __repr__(self): name = self.__class__.__name__ args_str = &#39;, &#39;.join(str(x) for x in self.args) return f&#39;{name}({args_str})&#39; class BetterRegisteredSerializable(BetterSerializable): def __init_subclass__(cls): super().__init_subclass__() register_class(cls) class Vector1D(BetterRegisteredSerializable): def __init__(self, magnitude): super().__init__(magnitude) self.magnitude = magnitude before = Vector1D(6) print(&#39;Before:&#39;, before) # Before: Vector1D(6) data = before.serialize() print(&#39;Serialized:&#39;, data) # Serialized: {&quot;class&quot;: &quot;Vector1D&quot;, &quot;args&quot;: [6]} print(&#39;After: &#39;, deserialize(data)) # After: Vector1D(6) 50. 用__set_name__给类属性加注解class Field: def __init__(self): self.name = None self.internal_name = None def __set_name__(self, owner, name): # Called on class creation for each descriptor self.name = name self.internal_name = &#39;_&#39; + name def __get__(self, instance, instance_type): if instance is None: return self return getattr(instance, self.internal_name, &#39;&#39;) def __set__(self, instance, value): setattr(instance, self.internal_name, value) # Example class FixedCustomer: first_name = Field() last_name = Field() prefix = Field() suffix = Field() cust = FixedCustomer() print(f&#39;Before: {cust.first_name!r} {cust.__dict__}&#39;) # Before: &#39;&#39; {} cust.first_name = &#39;Mersenne&#39; print(f&#39;After: {cust.first_name!r} {cust.__dict__}&#39;) # After: &#39;Mersenne&#39; {&#39;_first_name&#39;: &#39;Mersenne&#39;} 51. 优先考虑通过类修饰器来提供可组合的扩充功能，不要使用元类import types from functools import wraps trace_types = ( types.MethodType, types.FunctionType, types.BuiltinFunctionType, types.BuiltinMethodType, types.MethodDescriptorType, types.ClassMethodDescriptorType) def trace_func(func): if hasattr(func, &#39;tracing&#39;): # Only decorate once return func @wraps(func) def wrapper(*args, **kwargs): result = None try: result = func(*args, **kwargs) return result except Exception as e: result = e raise finally: print(f&#39;{func.__name__}({args!r}, {kwargs!r}) -&gt; {result!r}&#39;) wrapper.tracing = True return wrapper # Example def my_class_decorator(klass): klass.extra_param = &#39;hello&#39; return klass @my_class_decorator class MyClass: pass print(MyClass) # &lt;class &#39;__main__.MyClass&#39;&gt; print(MyClass.extra_param) # hello # Example def trace(klass): for key in dir(klass): value = getattr(klass, key) if isinstance(value, trace_types): wrapped = trace_func(value) setattr(klass, key, wrapped) return klass # Example @trace class TraceDict(dict): pass trace_dict = TraceDict([(&#39;hi&#39;, 1)]) trace_dict[&#39;there&#39;] = 2 try: trace_dict[&#39;does not exist&#39;] except KeyError: pass # Expected else: assert False # Example 11 class OtherMeta(type): pass @trace class TraceDict(dict, metaclass=OtherMeta): pass trace_dict = TraceDict([(&#39;hi&#39;, 1)]) trace_dict[&#39;there&#39;] = 2 try: trace_dict[&#39;does not exist&#39;] except KeyError: pass # Expected else: assert False &quot;&quot;&quot; &lt;class &#39;__main__.MyClass&#39;&gt; hello __new__((&lt;class &#39;__main__.TraceDict&#39;&gt;, [(&#39;hi&#39;, 1)]), {}) -&gt; {} __getitem__(({&#39;hi&#39;: 1, &#39;there&#39;: 2}, &#39;does not exist&#39;), {}) -&gt; KeyError(&#39;does not exist&#39;) __new__((&lt;class &#39;__main__.TraceDict&#39;&gt;, [(&#39;hi&#39;, 1)]), {}) -&gt; {} __getitem__(({&#39;hi&#39;: 1, &#39;there&#39;: 2}, &#39;does not exist&#39;), {}) -&gt; KeyError(&#39;does not exist&#39;) &quot;&quot;&quot; 七. 并发与并行52. 用subprocess管理子进程 # Example 1 import subprocess # Enable these lines to make this example work on Windows # import os # os.environ[&#39;COMSPEC&#39;] = &#39;powershell&#39; result = subprocess.run( [&#39;echo&#39;, &#39;Hello from the child!&#39;], capture_output=True, # Enable this line to make this example work on Windows # shell=True, encoding=&#39;utf-8&#39;) result.check_returncode() # No exception means it exited cleanly print(result.stdout) # Example 2 # Use this line instead to make this example work on Windows # proc = subprocess.Popen([&#39;sleep&#39;, &#39;1&#39;], shell=True) proc = subprocess.Popen([&#39;sleep&#39;, &#39;1&#39;]) while proc.poll() is None: print(&#39;Working...&#39;) # Some time-consuming work here import time time.sleep(0.3) print(&#39;Exit status&#39;, proc.poll()) # Example 3 import time start = time.time() sleep_procs = [] for _ in range(10): # Use this line instead to make this example work on Windows # proc = subprocess.Popen([&#39;sleep&#39;, &#39;1&#39;], shell=True) proc = subprocess.Popen([&#39;sleep&#39;, &#39;1&#39;]) sleep_procs.append(proc) # Example 4 for proc in sleep_procs: proc.communicate() end = time.time() delta = end - start print(f&#39;Finished in {delta:.3} seconds&#39;) # Example 5 import os # On Windows, after installing OpenSSL, you may need to # alias it in your PowerShell path with a command like: # $env:path = $env:path + &quot;;C:\Program Files\OpenSSL-Win64\bin&quot; def run_encrypt(data): env = os.environ.copy() env[&#39;password&#39;] = &#39;zf7ShyBhZOraQDdE/FiZpm/m/8f9X+M1&#39; proc = subprocess.Popen( [&#39;openssl&#39;, &#39;enc&#39;, &#39;-des3&#39;, &#39;-pass&#39;, &#39;env:password&#39;], env=env, stdin=subprocess.PIPE, stdout=subprocess.PIPE) proc.stdin.write(data) proc.stdin.flush() # Ensure that the child gets input return proc # Example 6 procs = [] for _ in range(3): data = os.urandom(10) proc = run_encrypt(data) procs.append(proc) # Example 7 for proc in procs: out, _ = proc.communicate() print(f&#39;out[-10:] {out[-10:]}&#39;) # Example 8 def run_hash(input_stdin): return subprocess.Popen( [&#39;openssl&#39;, &#39;dgst&#39;, &#39;-whirlpool&#39;, &#39;-binary&#39;], stdin=input_stdin, stdout=subprocess.PIPE) # Example 9 encrypt_procs = [] hash_procs = [] for _ in range(3): data = os.urandom(100) encrypt_proc = run_encrypt(data) encrypt_procs.append(encrypt_proc) hash_proc = run_hash(encrypt_proc.stdout) hash_procs.append(hash_proc) # Ensure that the child consumes the input stream and # the communicate() method doesn&#39;t inadvertently steal # input from the child. Also lets SIGPIPE propagate to # the upstream process if the downstream process dies. encrypt_proc.stdout.close() encrypt_proc.stdout = None # Example 10 for proc in encrypt_procs: proc.communicate() assert proc.returncode == 0 for proc in hash_procs: out, _ = proc.communicate() print(out[-10:]) assert proc.returncode == 0 # Example 11 # Use this line instead to make this example work on Windows # proc = subprocess.Popen([&#39;sleep&#39;, &#39;10&#39;], shell=True) proc = subprocess.Popen([&#39;sleep&#39;, &#39;10&#39;]) try: proc.communicate(timeout=0.1) except subprocess.TimeoutExpired: proc.terminate() proc.wait() print(&#39;Exit status&#39;, proc.poll()) 53. 可以用线程执行阻塞式I/O，但不要用它做并行计算 # Example 1 def factorize(number): for i in range(1, number + 1): if number % i == 0: yield i # Example 2 import time numbers = [2139079, 1214759, 1516637, 1852285] start = time.time() for number in numbers: list(factorize(number)) end = time.time() delta = end - start print(f&#39;Took {delta:.4f} seconds&#39;) # Took 0.4613 seconds # Example 3 from threading import Thread class FactorizeThread(Thread): def __init__(self, number): super().__init__() self.number = number def run(self): self.factors = list(factorize(self.number)) # Example 4 start = time.time() threads = [] for number in numbers: thread = FactorizeThread(number) thread.start() threads.append(thread) # Example 5 for thread in threads: thread.join() end = time.time() delta = end - start print(f&#39;Took {delta:.3f} seconds&#39;) # Took 0.448 seconds # Example 6 import select import socket def slow_systemcall(): select.select([socket.socket()], [], [], 0.1) # Example 7 start = time.time() for _ in range(5): slow_systemcall() end = time.time() delta = end - start print(f&#39;Took {delta:.3f} seconds...&#39;) # Took 0.517 seconds... # Example 8 start = time.time() threads = [] for _ in range(5): thread = Thread(target=slow_systemcall) thread.start() threads.append(thread) # Example 9 def compute_helicopter_location(index): pass for i in range(5): compute_helicopter_location(i) for thread in threads: thread.join() end = time.time() delta = end - start print(f&#39;Took {delta:.3f} seconds&#39;) # Took 0.102 seconds 54. 利用Lock防止多个线程争用同一份数据 # Example 1 class Counter: def __init__(self): self.count = 0 def increment(self, offset): self.count += offset # Example 2 def worker(sensor_index, how_many, counter): # I have a barrier in here so the workers synchronize # when they start counting, otherwise it&#39;s hard to get a race # because the overhead of starting a thread is high. BARRIER.wait() for _ in range(how_many): # Read from the sensor # Nothing actually happens here, but this is where # the blocking I/O would go. counter.increment(1) # Example 3 from threading import Barrier BARRIER = Barrier(5) from threading import Thread how_many = 10**5 counter = Counter() threads = [] for i in range(5): thread = Thread(target=worker, args=(i, how_many, counter)) threads.append(thread) thread.start() for thread in threads: thread.join() expected = how_many * 5 found = counter.count print(f&#39;Counter should be {expected}, got {found}&#39;) # Counter should be 500000, got 325923 # Example 4 counter.count += 1 # Example 5 value = getattr(counter, &#39;count&#39;) result = value + 1 setattr(counter, &#39;count&#39;, result) # Example 6 # Running in Thread A value_a = getattr(counter, &#39;count&#39;) # Context switch to Thread B value_b = getattr(counter, &#39;count&#39;) result_b = value_b + 1 setattr(counter, &#39;count&#39;, result_b) # Context switch back to Thread A result_a = value_a + 1 setattr(counter, &#39;count&#39;, result_a) # Example 7 from threading import Lock class LockingCounter: def __init__(self): self.lock = Lock() self.count = 0 def increment(self, offset): with self.lock: self.count += offset # Example 8 BARRIER = Barrier(5) counter = LockingCounter() for i in range(5): thread = Thread(target=worker, args=(i, how_many, counter)) threads.append(thread) thread.start() for thread in threads: thread.join() expected = how_many * 5 found = counter.count print(f&#39;Counter should be {expected}, got {found}&#39;) # Counter should be 500000, got 500000 55. 用Queue来协调各线程之间的工作进度 # Example 1 def download(item): return item def resize(item): return item def upload(item): return item # Example 2 from collections import deque from threading import Lock class MyQueue: def __init__(self): self.items = deque() self.lock = Lock() # Example 3 def put(self, item): with self.lock: self.items.append(item) # Example 4 def get(self): with self.lock: return self.items.popleft() # Example 5 from threading import Thread import time class Worker(Thread): def __init__(self, func, in_queue, out_queue): super().__init__() self.func = func self.in_queue = in_queue self.out_queue = out_queue self.polled_count = 0 self.work_done = 0 # Example 6 def run(self): while True: self.polled_count += 1 try: item = self.in_queue.get() except IndexError: time.sleep(0.01) # No work to do except AttributeError: # The magic exit signal return else: result = self.func(item) self.out_queue.put(result) self.work_done += 1 # Example 7 download_queue = MyQueue() resize_queue = MyQueue() upload_queue = MyQueue() done_queue = MyQueue() threads = [ Worker(download, download_queue, resize_queue), Worker(resize, resize_queue, upload_queue), Worker(upload, upload_queue, done_queue), ] # Example 8 for thread in threads: thread.start() for _ in range(1000): download_queue.put(object()) # Example 9 while len(done_queue.items) &lt; 1000: # Do something useful while waiting time.sleep(0.1) # Stop all the threads by causing an exception in their # run methods. for thread in threads: thread.in_queue = None thread.join() # Example 10 processed = len(done_queue.items) polled = sum(t.polled_count for t in threads) print(f&#39;Processed {processed} items after &#39; f&#39;polling {polled} times&#39;) # Example 11 from queue import Queue my_queue = Queue() def consumer(): print(&#39;Consumer waiting&#39;) my_queue.get() # Runs after put() below print(&#39;Consumer done&#39;) thread = Thread(target=consumer) thread.start() # Example 12 print(&#39;Producer putting&#39;) my_queue.put(object()) # Runs before get() above print(&#39;Producer done&#39;) thread.join() # Example 13 my_queue = Queue(1) # Buffer size of 1 def consumer(): time.sleep(0.1) # Wait my_queue.get() # Runs second print(&#39;Consumer got 1&#39;) my_queue.get() # Runs fourth print(&#39;Consumer got 2&#39;) print(&#39;Consumer done&#39;) thread = Thread(target=consumer) thread.start() # Example 14 my_queue.put(object()) # Runs first print(&#39;Producer put 1&#39;) my_queue.put(object()) # Runs third print(&#39;Producer put 2&#39;) print(&#39;Producer done&#39;) thread.join() # Example 15 in_queue = Queue() def consumer(): print(&#39;Consumer waiting&#39;) work = in_queue.get() # Done second print(&#39;Consumer working&#39;) # Doing work print(&#39;Consumer done&#39;) in_queue.task_done() # Done third thread = Thread(target=consumer) thread.start() # Example 16 print(&#39;Producer putting&#39;) in_queue.put(object()) # Done first print(&#39;Producer waiting&#39;) in_queue.join() # Done fourth print(&#39;Producer done&#39;) thread.join() # Example 17 class ClosableQueue(Queue): SENTINEL = object() def close(self): self.put(self.SENTINEL) # Example 18 def __iter__(self): while True: item = self.get() try: if item is self.SENTINEL: return # Cause the thread to exit yield item finally: self.task_done() # Example 19 class StoppableWorker(Thread): def __init__(self, func, in_queue, out_queue): super().__init__() self.func = func self.in_queue = in_queue self.out_queue = out_queue def run(self): for item in self.in_queue: result = self.func(item) self.out_queue.put(result) # Example 20 download_queue = ClosableQueue() resize_queue = ClosableQueue() upload_queue = ClosableQueue() done_queue = ClosableQueue() threads = [ StoppableWorker(download, download_queue, resize_queue), StoppableWorker(resize, resize_queue, upload_queue), StoppableWorker(upload, upload_queue, done_queue), ] # Example 21 for thread in threads: thread.start() for _ in range(1000): download_queue.put(object()) download_queue.close() # Example 22 download_queue.join() resize_queue.close() resize_queue.join() upload_queue.close() upload_queue.join() print(done_queue.qsize(), &#39;items finished&#39;) for thread in threads: thread.join() # Example 23 def start_threads(count, *args): threads = [StoppableWorker(*args) for _ in range(count)] for thread in threads: thread.start() return threads def stop_threads(closable_queue, threads): for _ in threads: closable_queue.close() closable_queue.join() for thread in threads: thread.join() # Example 24 download_queue = ClosableQueue() resize_queue = ClosableQueue() upload_queue = ClosableQueue() done_queue = ClosableQueue() download_threads = start_threads( 3, download, download_queue, resize_queue) resize_threads = start_threads( 4, resize, resize_queue, upload_queue) upload_threads = start_threads( 5, upload, upload_queue, done_queue) for _ in range(1000): download_queue.put(object()) stop_threads(download_queue, download_threads) stop_threads(resize_queue, resize_threads) stop_threads(upload_queue, upload_threads) print(done_queue.qsize(), &#39;items finished&#39;) 56. 学会判断什么场合必须做并发 # Example 1 ALIVE = &#39;*&#39; EMPTY = &#39;-&#39; # Example 2 class Grid: def __init__(self, height, width): self.height = height self.width = width self.rows = [] for _ in range(self.height): self.rows.append([EMPTY] * self.width) def get(self, y, x): return self.rows[y % self.height][x % self.width] def set(self, y, x, state): self.rows[y % self.height][x % self.width] = state def __str__(self): output = &#39;&#39; for row in self.rows: for cell in row: output += cell output += &#39;\n&#39; return output # Example 3 grid = Grid(5, 9) grid.set(0, 3, ALIVE) grid.set(1, 4, ALIVE) grid.set(2, 2, ALIVE) grid.set(2, 3, ALIVE) grid.set(2, 4, ALIVE) print(grid) &quot;&quot;&quot; ---*----- ----*---- --***---- --------- --------- &quot;&quot;&quot; # Example 4 def count_neighbors(y, x, get): n_ = get(y - 1, x + 0) # North ne = get(y - 1, x + 1) # Northeast e_ = get(y + 0, x + 1) # East se = get(y + 1, x + 1) # Southeast s_ = get(y + 1, x + 0) # South sw = get(y + 1, x - 1) # Southwest w_ = get(y + 0, x - 1) # West nw = get(y - 1, x - 1) # Northwest neighbor_states = [n_, ne, e_, se, s_, sw, w_, nw] count = 0 for state in neighbor_states: if state == ALIVE: count += 1 return count alive = {(9, 5), (9, 6)} seen = set() def fake_get(y, x): position = (y, x) seen.add(position) return ALIVE if position in alive else EMPTY count = count_neighbors(10, 5, fake_get) assert count == 2 expected_seen = { (9, 5), (9, 6), (10, 6), (11, 6), (11, 5), (11, 4), (10, 4), (9, 4) } assert seen == expected_seen # Example 5 def game_logic(state, neighbors): if state == ALIVE: if neighbors &lt; 2: return EMPTY # Die: Too few elif neighbors &gt; 3: return EMPTY # Die: Too many else: if neighbors == 3: return ALIVE # Regenerate return state assert game_logic(ALIVE, 0) == EMPTY assert game_logic(ALIVE, 1) == EMPTY assert game_logic(ALIVE, 2) == ALIVE assert game_logic(ALIVE, 3) == ALIVE assert game_logic(ALIVE, 4) == EMPTY assert game_logic(EMPTY, 0) == EMPTY assert game_logic(EMPTY, 1) == EMPTY assert game_logic(EMPTY, 2) == EMPTY assert game_logic(EMPTY, 3) == ALIVE assert game_logic(EMPTY, 4) == EMPTY # Example 6 def step_cell(y, x, get, set): state = get(y, x) neighbors = count_neighbors(y, x, get) next_state = game_logic(state, neighbors) set(y, x, next_state) alive = {(10, 5), (9, 5), (9, 6)} new_state = None def fake_get(y, x): return ALIVE if (y, x) in alive else EMPTY def fake_set(y, x, state): global new_state new_state = state # Stay alive step_cell(10, 5, fake_get, fake_set) assert new_state == ALIVE # Stay dead alive.remove((10, 5)) step_cell(10, 5, fake_get, fake_set) assert new_state == EMPTY # Regenerate alive.add((10, 6)) step_cell(10, 5, fake_get, fake_set) assert new_state == ALIVE # Example 7 def simulate(grid): next_grid = Grid(grid.height, grid.width) for y in range(grid.height): for x in range(grid.width): step_cell(y, x, grid.get, next_grid.set) return next_grid # Example 8 class ColumnPrinter: def __init__(self): self.columns = [] def append(self, data): self.columns.append(data) def __str__(self): row_count = 1 for data in self.columns: row_count = max( row_count, len(data.splitlines()) + 1) rows = [&#39;&#39;] * row_count for j in range(row_count): for i, data in enumerate(self.columns): line = data.splitlines()[max(0, j - 1)] if j == 0: padding = &#39; &#39; * (len(line) // 2) rows[j] += padding + str(i) + padding else: rows[j] += line if (i + 1) &lt; len(self.columns): rows[j] += &#39; | &#39; return &#39;\n&#39;.join(rows) columns = ColumnPrinter() for i in range(5): columns.append(str(grid)) grid = simulate(grid) print(columns) &quot;&quot;&quot; 0 | 1 | 2 | 3 | 4 ---*----- | --------- | --------- | --------- | --------- ----*---- | --*-*---- | ----*---- | ---*----- | ----*---- --***---- | ---**---- | --*-*---- | ----**--- | -----*--- --------- | ---*----- | ---**---- | ---**---- | ---***--- --------- | --------- | --------- | --------- | --------- &quot;&quot;&quot; 57. 不要在每次fan-out时都新建一批Thread实例 # Example 1 from threading import Lock ALIVE = &#39;*&#39; EMPTY = &#39;-&#39; class Grid: def __init__(self, height, width): self.height = height self.width = width self.rows = [] for _ in range(self.height): self.rows.append([EMPTY] * self.width) def get(self, y, x): return self.rows[y % self.height][x % self.width] def set(self, y, x, state): self.rows[y % self.height][x % self.width] = state def __str__(self): output = &#39;&#39; for row in self.rows: for cell in row: output += cell output += &#39;\n&#39; return output class LockingGrid(Grid): def __init__(self, height, width): super().__init__(height, width) self.lock = Lock() def __str__(self): with self.lock: return super().__str__() def get(self, y, x): with self.lock: return super().get(y, x) def set(self, y, x, state): with self.lock: return super().set(y, x, state) # Example 2 from threading import Thread def count_neighbors(y, x, get): n_ = get(y - 1, x + 0) # North ne = get(y - 1, x + 1) # Northeast e_ = get(y + 0, x + 1) # East se = get(y + 1, x + 1) # Southeast s_ = get(y + 1, x + 0) # South sw = get(y + 1, x - 1) # Southwest w_ = get(y + 0, x - 1) # West nw = get(y - 1, x - 1) # Northwest neighbor_states = [n_, ne, e_, se, s_, sw, w_, nw] count = 0 for state in neighbor_states: if state == ALIVE: count += 1 return count # def game_logic(state, neighbors): # # Do some blocking input/output in here: # data = my_socket.recv(100) def game_logic(state, neighbors): if state == ALIVE: if neighbors &lt; 2: return EMPTY # Die: Too few elif neighbors &gt; 3: return EMPTY # Die: Too many else: if neighbors == 3: return ALIVE # Regenerate return state def step_cell(y, x, get, set): state = get(y, x) neighbors = count_neighbors(y, x, get) next_state = game_logic(state, neighbors) set(y, x, next_state) def simulate_threaded(grid): next_grid = LockingGrid(grid.height, grid.width) threads = [] for y in range(grid.height): for x in range(grid.width): args = (y, x, grid.get, next_grid.set) thread = Thread(target=step_cell, args=args) thread.start() # Fan out threads.append(thread) for thread in threads: thread.join() # Fan in return next_grid # Example 3 class ColumnPrinter: def __init__(self): self.columns = [] def append(self, data): self.columns.append(data) def __str__(self): row_count = 1 for data in self.columns: row_count = max( row_count, len(data.splitlines()) + 1) rows = [&#39;&#39;] * row_count for j in range(row_count): for i, data in enumerate(self.columns): line = data.splitlines()[max(0, j - 1)] if j == 0: padding = &#39; &#39; * (len(line) // 2) rows[j] += padding + str(i) + padding else: rows[j] += line if (i + 1) &lt; len(self.columns): rows[j] += &#39; | &#39; return &#39;\n&#39;.join(rows) grid = LockingGrid(5, 9) # Changed grid.set(0, 3, ALIVE) grid.set(1, 4, ALIVE) grid.set(2, 2, ALIVE) grid.set(2, 3, ALIVE) grid.set(2, 4, ALIVE) columns = ColumnPrinter() for i in range(5): columns.append(str(grid)) grid = simulate_threaded(grid) # Changed print(columns) # Example 4 # def game_logic(state, neighbors): # raise OSError(&#39;Problem with I/O&#39;) # Example 5 import contextlib import io fake_stderr = io.StringIO() with contextlib.redirect_stderr(fake_stderr): thread = Thread(target=game_logic, args=(ALIVE, 3)) thread.start() thread.join() print(fake_stderr.getvalue()) 58. 学会正确地重构代码，以便用Queue做并发把队列与一定数量的线程搭配起来，可以高效的实现fan-out（分派）与fan-in（归集）。 59. 如果必须用线程做并发，那就考虑通过ThreadPoolExecutor实现# Example 1 ALIVE = &#39;*&#39; EMPTY = &#39;-&#39; class Grid: def __init__(self, height, width): self.height = height self.width = width self.rows = [] for _ in range(self.height): self.rows.append([EMPTY] * self.width) def get(self, y, x): return self.rows[y % self.height][x % self.width] def set(self, y, x, state): self.rows[y % self.height][x % self.width] = state def __str__(self): output = &#39;&#39; for row in self.rows: for cell in row: output += cell output += &#39;\n&#39; return output from threading import Lock class LockingGrid(Grid): def __init__(self, height, width): super().__init__(height, width) self.lock = Lock() def __str__(self): with self.lock: return super().__str__() def get(self, y, x): with self.lock: return super().get(y, x) def set(self, y, x, state): with self.lock: return super().set(y, x, state) def count_neighbors(y, x, get): n_ = get(y - 1, x + 0) # North ne = get(y - 1, x + 1) # Northeast e_ = get(y + 0, x + 1) # East se = get(y + 1, x + 1) # Southeast s_ = get(y + 1, x + 0) # South sw = get(y + 1, x - 1) # Southwest w_ = get(y + 0, x - 1) # West nw = get(y - 1, x - 1) # Northwest neighbor_states = [n_, ne, e_, se, s_, sw, w_, nw] count = 0 for state in neighbor_states: if state == ALIVE: count += 1 return count # def game_logic(state, neighbors): # # Do some blocking input/output in here: # data = my_socket.recv(100) def game_logic(state, neighbors): if state == ALIVE: if neighbors &lt; 2: return EMPTY # Die: Too few elif neighbors &gt; 3: return EMPTY # Die: Too many else: if neighbors == 3: return ALIVE # Regenerate return state def step_cell(y, x, get, set): state = get(y, x) neighbors = count_neighbors(y, x, get) next_state = game_logic(state, neighbors) set(y, x, next_state) # Example 2 from concurrent.futures import ThreadPoolExecutor def simulate_pool(pool, grid): next_grid = LockingGrid(grid.height, grid.width) futures = [] for y in range(grid.height): for x in range(grid.width): args = (y, x, grid.get, next_grid.set) future = pool.submit(step_cell, *args) # Fan out futures.append(future) for future in futures: future.result() # Fan in return next_grid # Example 3 class ColumnPrinter: def __init__(self): self.columns = [] def append(self, data): self.columns.append(data) def __str__(self): row_count = 1 for data in self.columns: row_count = max( row_count, len(data.splitlines()) + 1) rows = [&#39;&#39;] * row_count for j in range(row_count): for i, data in enumerate(self.columns): line = data.splitlines()[max(0, j - 1)] if j == 0: padding = &#39; &#39; * (len(line) // 2) rows[j] += padding + str(i) + padding else: rows[j] += line if (i + 1) &lt; len(self.columns): rows[j] += &#39; | &#39; return &#39;\n&#39;.join(rows) grid = LockingGrid(5, 9) grid.set(0, 3, ALIVE) grid.set(1, 4, ALIVE) grid.set(2, 2, ALIVE) grid.set(2, 3, ALIVE) grid.set(2, 4, ALIVE) columns = ColumnPrinter() with ThreadPoolExecutor(max_workers=10) as pool: for i in range(5): columns.append(str(grid)) grid = simulate_pool(pool, grid) print(columns) 60. 用协程实现高并发的I/Oimport logging # Example 1 ALIVE = &#39;*&#39; EMPTY = &#39;-&#39; class Grid: def __init__(self, height, width): self.height = height self.width = width self.rows = [] for _ in range(self.height): self.rows.append([EMPTY] * self.width) def get(self, y, x): return self.rows[y % self.height][x % self.width] def set(self, y, x, state): self.rows[y % self.height][x % self.width] = state def __str__(self): output = &#39;&#39; for row in self.rows: for cell in row: output += cell output += &#39;\n&#39; return output def count_neighbors(y, x, get): n_ = get(y - 1, x + 0) # North ne = get(y - 1, x + 1) # Northeast e_ = get(y + 0, x + 1) # East se = get(y + 1, x + 1) # Southeast s_ = get(y + 1, x + 0) # South sw = get(y + 1, x - 1) # Southwest w_ = get(y + 0, x - 1) # West nw = get(y - 1, x - 1) # Northwest neighbor_states = [n_, ne, e_, se, s_, sw, w_, nw] count = 0 for state in neighbor_states: if state == ALIVE: count += 1 return count async def game_logic(state, neighbors): if state == ALIVE: if neighbors &lt; 2: return EMPTY # Die: Too few elif neighbors &gt; 3: return EMPTY # Die: Too many else: if neighbors == 3: return ALIVE # Regenerate return state # Example 2 async def step_cell(y, x, get, set): state = get(y, x) neighbors = count_neighbors(y, x, get) next_state = await game_logic(state, neighbors) set(y, x, next_state) # Example 3 import asyncio async def simulate(grid): next_grid = Grid(grid.height, grid.width) tasks = [] for y in range(grid.height): for x in range(grid.width): task = step_cell( y, x, grid.get, next_grid.set) # Fan out tasks.append(task) await asyncio.gather(*tasks) # Fan in return next_grid # Example 4 class ColumnPrinter: def __init__(self): self.columns = [] def append(self, data): self.columns.append(data) def __str__(self): row_count = 1 for data in self.columns: row_count = max( row_count, len(data.splitlines()) + 1) rows = [&#39;&#39;] * row_count for j in range(row_count): for i, data in enumerate(self.columns): line = data.splitlines()[max(0, j - 1)] if j == 0: padding = &#39; &#39; * (len(line) // 2) rows[j] += padding + str(i) + padding else: rows[j] += line if (i + 1) &lt; len(self.columns): rows[j] += &#39; | &#39; return &#39;\n&#39;.join(rows) grid = Grid(5, 9) grid.set(0, 3, ALIVE) grid.set(1, 4, ALIVE) grid.set(2, 2, ALIVE) grid.set(2, 3, ALIVE) grid.set(2, 4, ALIVE) columns = ColumnPrinter() for i in range(5): columns.append(str(grid)) grid = asyncio.run(simulate(grid)) # Run the event loop print(columns) # Example 6 async def count_neighbors(y, x, get): n_ = get(y - 1, x + 0) # North ne = get(y - 1, x + 1) # Northeast e_ = get(y + 0, x + 1) # East se = get(y + 1, x + 1) # Southeast s_ = get(y + 1, x + 0) # South sw = get(y + 1, x - 1) # Southwest w_ = get(y + 0, x - 1) # West nw = get(y - 1, x - 1) # Northwest neighbor_states = [n_, ne, e_, se, s_, sw, w_, nw] count = 0 for state in neighbor_states: if state == ALIVE: count += 1 return count async def step_cell(y, x, get, set): state = get(y, x) neighbors = await count_neighbors(y, x, get) next_state = await game_logic(state, neighbors) set(y, x, next_state) async def game_logic(state, neighbors): if state == ALIVE: if neighbors &lt; 2: return EMPTY # Die: Too few elif neighbors &gt; 3: return EMPTY # Die: Too many else: if neighbors == 3: return ALIVE # Regenerate return state grid = Grid(5, 9) grid.set(0, 3, ALIVE) grid.set(1, 4, ALIVE) grid.set(2, 2, ALIVE) grid.set(2, 3, ALIVE) grid.set(2, 4, ALIVE) columns = ColumnPrinter() for i in range(5): columns.append(str(grid)) grid = asyncio.run(simulate(grid)) print(columns) 61. 学会用asyncio改写那些通过线程实现的I/Oimport logging # Example 1 class EOFError(Exception): pass class ConnectionBase: def __init__(self, connection): self.connection = connection self.file = connection.makefile(&#39;rb&#39;) def send(self, command): line = command + &#39;\n&#39; data = line.encode() self.connection.send(data) def receive(self): line = self.file.readline() if not line: raise EOFError(&#39;Connection closed&#39;) return line[:-1].decode() # Example 2 import random WARMER = &#39;Warmer&#39; COLDER = &#39;Colder&#39; UNSURE = &#39;Unsure&#39; CORRECT = &#39;Correct&#39; class UnknownCommandError(Exception): pass class Session(ConnectionBase): def __init__(self, *args): super().__init__(*args) self._clear_state(None, None) def _clear_state(self, lower, upper): self.lower = lower self.upper = upper self.secret = None self.guesses = [] # Example 3 def loop(self): while command := self.receive(): parts = command.split(&#39; &#39;) if parts[0] == &#39;PARAMS&#39;: self.set_params(parts) elif parts[0] == &#39;NUMBER&#39;: self.send_number() elif parts[0] == &#39;REPORT&#39;: self.receive_report(parts) else: raise UnknownCommandError(command) # Example 4 def set_params(self, parts): assert len(parts) == 3 lower = int(parts[1]) upper = int(parts[2]) self._clear_state(lower, upper) # Example 5 def next_guess(self): if self.secret is not None: return self.secret while True: guess = random.randint(self.lower, self.upper) if guess not in self.guesses: return guess def send_number(self): guess = self.next_guess() self.guesses.append(guess) self.send(format(guess)) # Example 6 def receive_report(self, parts): assert len(parts) == 2 decision = parts[1] last = self.guesses[-1] if decision == CORRECT: self.secret = last print(f&#39;Server: {last} is {decision}&#39;) # Example 7 import contextlib import math class Client(ConnectionBase): def __init__(self, *args): super().__init__(*args) self._clear_state() def _clear_state(self): self.secret = None self.last_distance = None # Example 8 @contextlib.contextmanager def session(self, lower, upper, secret): print(f&#39;Guess a number between {lower} and {upper}!&#39; f&#39; Shhhhh, it\&#39;s {secret}.&#39;) self.secret = secret self.send(f&#39;PARAMS {lower} {upper}&#39;) try: yield finally: self._clear_state() self.send(&#39;PARAMS 0 -1&#39;) # Example 9 def request_numbers(self, count): for _ in range(count): self.send(&#39;NUMBER&#39;) data = self.receive() yield int(data) if self.last_distance == 0: return # Example 10 def report_outcome(self, number): new_distance = math.fabs(number - self.secret) decision = UNSURE if new_distance == 0: decision = CORRECT elif self.last_distance is None: pass elif new_distance &lt; self.last_distance: decision = WARMER elif new_distance &gt; self.last_distance: decision = COLDER self.last_distance = new_distance self.send(f&#39;REPORT {decision}&#39;) return decision # Example 11 import socket from threading import Thread def handle_connection(connection): with connection: session = Session(connection) try: session.loop() except EOFError: pass def run_server(address): with socket.socket() as listener: # Allow the port to be reused listener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) listener.bind(address) listener.listen() while True: connection, _ = listener.accept() thread = Thread(target=handle_connection, args=(connection,), daemon=True) thread.start() # Example 12 def run_client(address): with socket.create_connection(address) as connection: client = Client(connection) with client.session(1, 5, 3): results = [(x, client.report_outcome(x)) for x in client.request_numbers(5)] with client.session(10, 15, 12): for number in client.request_numbers(5): outcome = client.report_outcome(number) results.append((number, outcome)) return results # Example 13 def main(): address = (&#39;127.0.0.1&#39;, 1234) server_thread = Thread( target=run_server, args=(address,), daemon=True) server_thread.start() results = run_client(address) for number, outcome in results: print(f&#39;Client: {number} is {outcome}&#39;) main() # Example 14 class AsyncConnectionBase: def __init__(self, reader, writer): # Changed self.reader = reader # Changed self.writer = writer # Changed async def send(self, command): line = command + &#39;\n&#39; data = line.encode() self.writer.write(data) # Changed await self.writer.drain() # Changed async def receive(self): line = await self.reader.readline() # Changed if not line: raise EOFError(&#39;Connection closed&#39;) return line[:-1].decode() # Example 15 class AsyncSession(AsyncConnectionBase): # Changed def __init__(self, *args): super().__init__(*args) self._clear_values(None, None) def _clear_values(self, lower, upper): self.lower = lower self.upper = upper self.secret = None self.guesses = [] # Example 16 async def loop(self): # Changed while command := await self.receive(): # Changed parts = command.split(&#39; &#39;) if parts[0] == &#39;PARAMS&#39;: self.set_params(parts) elif parts[0] == &#39;NUMBER&#39;: await self.send_number() # Changed elif parts[0] == &#39;REPORT&#39;: self.receive_report(parts) else: raise UnknownCommandError(command) # Example 17 def set_params(self, parts): assert len(parts) == 3 lower = int(parts[1]) upper = int(parts[2]) self._clear_values(lower, upper) # Example 18 def next_guess(self): if self.secret is not None: return self.secret while True: guess = random.randint(self.lower, self.upper) if guess not in self.guesses: return guess async def send_number(self): # Changed guess = self.next_guess() self.guesses.append(guess) await self.send(format(guess)) # Changed # Example 19 def receive_report(self, parts): assert len(parts) == 2 decision = parts[1] last = self.guesses[-1] if decision == CORRECT: self.secret = last print(f&#39;Server: {last} is {decision}&#39;) # Example 20 class AsyncClient(AsyncConnectionBase): # Changed def __init__(self, *args): super().__init__(*args) self._clear_state() def _clear_state(self): self.secret = None self.last_distance = None # Example 21 @contextlib.asynccontextmanager # Changed async def session(self, lower, upper, secret): # Changed print(f&#39;Guess a number between {lower} and {upper}!&#39; f&#39; Shhhhh, it\&#39;s {secret}.&#39;) self.secret = secret await self.send(f&#39;PARAMS {lower} {upper}&#39;) # Changed try: yield finally: self._clear_state() await self.send(&#39;PARAMS 0 -1&#39;) # Changed # Example 22 async def request_numbers(self, count): # Changed for _ in range(count): await self.send(&#39;NUMBER&#39;) # Changed data = await self.receive() # Changed yield int(data) if self.last_distance == 0: return # Example 23 async def report_outcome(self, number): # Changed new_distance = math.fabs(number - self.secret) decision = UNSURE if new_distance == 0: decision = CORRECT elif self.last_distance is None: pass elif new_distance &lt; self.last_distance: decision = WARMER elif new_distance &gt; self.last_distance: decision = COLDER self.last_distance = new_distance await self.send(f&#39;REPORT {decision}&#39;) # Changed # Make it so the output printing is in # the same order as the threaded version. await asyncio.sleep(0.01) return decision # Example 24 import asyncio async def handle_async_connection(reader, writer): session = AsyncSession(reader, writer) try: await session.loop() except EOFError: pass async def run_async_server(address): server = await asyncio.start_server( handle_async_connection, *address) async with server: await server.serve_forever() # Example 25 async def run_async_client(address): # Wait for the server to listen before trying to connect await asyncio.sleep(0.1) streams = await asyncio.open_connection(*address) # New client = AsyncClient(*streams) # New async with client.session(1, 5, 3): results = [(x, await client.report_outcome(x)) async for x in client.request_numbers(5)] async with client.session(10, 15, 12): async for number in client.request_numbers(5): outcome = await client.report_outcome(number) results.append((number, outcome)) _, writer = streams # New writer.close() # New await writer.wait_closed() # New return results # Example 26 async def main_async(): address = (&#39;127.0.0.1&#39;, 4321) server = run_async_server(address) asyncio.create_task(server) results = await run_async_client(address) for number, outcome in results: print(f&#39;Client: {number} is {outcome}&#39;) logging.getLogger().setLevel(logging.ERROR) asyncio.run(main_async()) logging.getLogger().setLevel(logging.DEBUG) 62. 结合线程与协程，将代码顺利迁移到asyncio # Example 1 class NoNewData(Exception): pass def readline(handle): offset = handle.tell() handle.seek(0, 2) length = handle.tell() if length == offset: raise NoNewData handle.seek(offset, 0) return handle.readline() # Example 2 import time def tail_file(handle, interval, write_func): while not handle.closed: try: line = readline(handle) except NoNewData: time.sleep(interval) else: write_func(line) # Example 3 from threading import Lock, Thread def run_threads(handles, interval, output_path): with open(output_path, &#39;wb&#39;) as output: lock = Lock() def write(data): with lock: output.write(data) threads = [] for handle in handles: args = (handle, interval, write) thread = Thread(target=tail_file, args=args) thread.start() threads.append(thread) for thread in threads: thread.join() # Example 4 # This is all code to simulate the writers to the handles import collections import os import random import string from tempfile import TemporaryDirectory def write_random_data(path, write_count, interval): with open(path, &#39;wb&#39;) as f: for i in range(write_count): time.sleep(random.random() * interval) letters = random.choices( string.ascii_lowercase, k=10) data = f&#39;{path}-{i:02}-{&quot;&quot;.join(letters)}\n&#39; f.write(data.encode()) f.flush() def start_write_threads(directory, file_count): paths = [] for i in range(file_count): path = os.path.join(directory, str(i)) with open(path, &#39;w&#39;): # Make sure the file at this path will exist when # the reading thread tries to poll it. pass paths.append(path) args = (path, 10, 0.1) thread = Thread(target=write_random_data, args=args) thread.start() return paths def close_all(handles): time.sleep(1) for handle in handles: handle.close() def setup(): tmpdir = TemporaryDirectory() input_paths = start_write_threads(tmpdir.name, 5) handles = [] for path in input_paths: handle = open(path, &#39;rb&#39;) handles.append(handle) Thread(target=close_all, args=(handles,)).start() output_path = os.path.join(tmpdir.name, &#39;merged&#39;) return tmpdir, input_paths, handles, output_path # Example 5 def confirm_merge(input_paths, output_path): found = collections.defaultdict(list) with open(output_path, &#39;rb&#39;) as f: for line in f: for path in input_paths: if line.find(path.encode()) == 0: found[path].append(line) expected = collections.defaultdict(list) for path in input_paths: with open(path, &#39;rb&#39;) as f: expected[path].extend(f.readlines()) for key, expected_lines in expected.items(): found_lines = found[key] assert expected_lines == found_lines, \ f&#39;{expected_lines!r} == {found_lines!r}&#39; input_paths = ... handles = ... output_path = ... tmpdir, input_paths, handles, output_path = setup() run_threads(handles, 0.1, output_path) confirm_merge(input_paths, output_path) tmpdir.cleanup() # Example 6 import asyncio # On Windows, a ProactorEventLoop can&#39;t be created within # threads because it tries to register signal handlers. This # is a work-around to always use the SelectorEventLoop policy # instead. See: https://bugs.python.org/issue33792 policy = asyncio.get_event_loop_policy() policy._loop_factory = asyncio.SelectorEventLoop async def run_tasks_mixed(handles, interval, output_path): loop = asyncio.get_event_loop() with open(output_path, &#39;wb&#39;) as output: async def write_async(data): output.write(data) def write(data): coro = write_async(data) future = asyncio.run_coroutine_threadsafe( coro, loop) future.result() tasks = [] for handle in handles: task = loop.run_in_executor( None, tail_file, handle, interval, write) tasks.append(task) await asyncio.gather(*tasks) # Example 7 input_paths = ... handles = ... output_path = ... tmpdir, input_paths, handles, output_path = setup() asyncio.run(run_tasks_mixed(handles, 0.1, output_path)) confirm_merge(input_paths, output_path) tmpdir.cleanup() # Example 8 async def tail_async(handle, interval, write_func): loop = asyncio.get_event_loop() while not handle.closed: try: line = await loop.run_in_executor( None, readline, handle) except NoNewData: await asyncio.sleep(interval) else: await write_func(line) # Example 9 async def run_tasks(handles, interval, output_path): with open(output_path, &#39;wb&#39;) as output: async def write_async(data): output.write(data) tasks = [] for handle in handles: coro = tail_async(handle, interval, write_async) task = asyncio.create_task(coro) tasks.append(task) await asyncio.gather(*tasks) # Example 10 input_paths = ... handles = ... output_path = ... tmpdir, input_paths, handles, output_path = setup() asyncio.run(run_tasks(handles, 0.1, output_path)) confirm_merge(input_paths, output_path) tmpdir.cleanup() # Example 11 def tail_file(handle, interval, write_func): loop = asyncio.new_event_loop() asyncio.set_event_loop(loop) async def write_async(data): write_func(data) coro = tail_async(handle, interval, write_async) loop.run_until_complete(coro) # Example 12 input_paths = ... handles = ... output_path = ... tmpdir, input_paths, handles, output_path = setup() run_threads(handles, 0.1, output_path) confirm_merge(input_paths, output_path) tmpdir.cleanup() 63. 让asyncio的事件循环保持畅通，以便进一步提升程序的响应能力调用asyncio.run时，可以把debug参数设置成为true，这样可以知道哪些协程降低了事件循环的速度。 # Example 1 import asyncio # On Windows, a ProactorEventLoop can&#39;t be created within # threads because it tries to register signal handlers. This # is a work-around to always use the SelectorEventLoop policy # instead. See: https://bugs.python.org/issue33792 policy = asyncio.get_event_loop_policy() policy._loop_factory = asyncio.SelectorEventLoop async def run_tasks(handles, interval, output_path): with open(output_path, &#39;wb&#39;) as output: async def write_async(data): output.write(data) tasks = [] for handle in handles: coro = tail_async(handle, interval, write_async) task = asyncio.create_task(coro) tasks.append(task) await asyncio.gather(*tasks) # Example 2 import time async def slow_coroutine(): time.sleep(0.5) # Simulating slow I/O asyncio.run(slow_coroutine(), debug=True) # Example 3 from threading import Thread class WriteThread(Thread): def __init__(self, output_path): super().__init__() self.output_path = output_path self.output = None self.loop = asyncio.new_event_loop() def run(self): asyncio.set_event_loop(self.loop) with open(self.output_path, &#39;wb&#39;) as self.output: self.loop.run_forever() # Run one final round of callbacks so the await on # stop() in another event loop will be resolved. self.loop.run_until_complete(asyncio.sleep(0)) # Example 4 async def real_write(self, data): self.output.write(data) async def write(self, data): coro = self.real_write(data) future = asyncio.run_coroutine_threadsafe( coro, self.loop) await asyncio.wrap_future(future) # Example 5 async def real_stop(self): self.loop.stop() async def stop(self): coro = self.real_stop() future = asyncio.run_coroutine_threadsafe( coro, self.loop) await asyncio.wrap_future(future) # Example 6 async def __aenter__(self): loop = asyncio.get_event_loop() await loop.run_in_executor(None, self.start) return self async def __aexit__(self, *_): await self.stop() # Example 7 class NoNewData(Exception): pass def readline(handle): offset = handle.tell() handle.seek(0, 2) length = handle.tell() if length == offset: raise NoNewData handle.seek(offset, 0) return handle.readline() async def tail_async(handle, interval, write_func): loop = asyncio.get_event_loop() while not handle.closed: try: line = await loop.run_in_executor( None, readline, handle) except NoNewData: await asyncio.sleep(interval) else: await write_func(line) async def run_fully_async(handles, interval, output_path): async with WriteThread(output_path) as output: tasks = [] for handle in handles: coro = tail_async(handle, interval, output.write) task = asyncio.create_task(coro) tasks.append(task) await asyncio.gather(*tasks) # Example 8 # This is all code to simulate the writers to the handles import collections import os import random import string from tempfile import TemporaryDirectory def write_random_data(path, write_count, interval): with open(path, &#39;wb&#39;) as f: for i in range(write_count): time.sleep(random.random() * interval) letters = random.choices( string.ascii_lowercase, k=10) data = f&#39;{path}-{i:02}-{&quot;&quot;.join(letters)}\n&#39; f.write(data.encode()) f.flush() def start_write_threads(directory, file_count): paths = [] for i in range(file_count): path = os.path.join(directory, str(i)) with open(path, &#39;w&#39;): # Make sure the file at this path will exist when # the reading thread tries to poll it. pass paths.append(path) args = (path, 10, 0.1) thread = Thread(target=write_random_data, args=args) thread.start() return paths def close_all(handles): time.sleep(1) for handle in handles: handle.close() def setup(): tmpdir = TemporaryDirectory() input_paths = start_write_threads(tmpdir.name, 5) handles = [] for path in input_paths: handle = open(path, &#39;rb&#39;) handles.append(handle) Thread(target=close_all, args=(handles,)).start() output_path = os.path.join(tmpdir.name, &#39;merged&#39;) return tmpdir, input_paths, handles, output_path # Example 9 def confirm_merge(input_paths, output_path): found = collections.defaultdict(list) with open(output_path, &#39;rb&#39;) as f: for line in f: for path in input_paths: if line.find(path.encode()) == 0: found[path].append(line) expected = collections.defaultdict(list) for path in input_paths: with open(path, &#39;rb&#39;) as f: expected[path].extend(f.readlines()) for key, expected_lines in expected.items(): found_lines = found[key] assert expected_lines == found_lines input_paths = ... handles = ... output_path = ... tmpdir, input_paths, handles, output_path = setup() asyncio.run(run_fully_async(handles, 0.1, output_path)) confirm_merge(input_paths, output_path) tmpdir.cleanup() 64. 考虑用concurrent.futures实现真正的并行计算 Run_thread.py from concurrent.futures import ThreadPoolExecutor import time NUMBERS = [ (1963309, 2265973), (2030677, 3814172), (1551645, 2229620), (2039045, 2020802), (1823712, 1924928), (2293129, 1020491), (1281238, 2273782), (3823812, 4237281), (3812741, 4729139), (1292391, 2123811), ] def gcd(pair): a, b = pair low = min(a, b) for i in range(low, 0, -1): if a % i == 0 and b % i == 0: return i assert False, &#39;Not reachable&#39; def main(): start = time.time() pool = ThreadPoolExecutor(max_workers=2) results = list(pool.map(gcd, NUMBERS)) end = time.time() delta = end - start print(f&#39;Took {delta:.3f} seconds&#39;) # Took 1.278 seconds if __name__ == &#39;__main__&#39;: main() Run_serial.py import time NUMBERS = [ (1963309, 2265973), (2030677, 3814172), (1551645, 2229620), (2039045, 2020802), (1823712, 1924928), (2293129, 1020491), (1281238, 2273782), (3823812, 4237281), (3812741, 4729139), (1292391, 2123811), ] def gcd(pair): a, b = pair low = min(a, b) for i in range(low, 0, -1): if a % i == 0 and b % i == 0: return i assert False, &#39;Not reachable&#39; def main(): start = time.time() results = list(map(gcd, NUMBERS)) end = time.time() delta = end - start print(f&#39;Took {delta:.3f} seconds&#39;) # Took 1.204 seconds if __name__ == &#39;__main__&#39;: main() run_parallel.py from concurrent.futures import ProcessPoolExecutor import time NUMBERS = [ (1963309, 2265973), (2030677, 3814172), (1551645, 2229620), (2039045, 2020802), (1823712, 1924928), (2293129, 1020491), (1281238, 2273782), (3823812, 4237281), (3812741, 4729139), (1292391, 2123811), ] def gcd(pair): a, b = pair low = min(a, b) for i in range(low, 0, -1): if a % i == 0 and b % i == 0: return i assert False, &#39;Not reachable&#39; def main(): start = time.time() pool = ProcessPoolExecutor(max_workers=2) # The one change results = list(pool.map(gcd, NUMBERS)) end = time.time() delta = end - start print(f&#39;Took {delta:.3f} seconds&#39;) # Took 0.635 seconds if __name__ == &#39;__main__&#39;: main() 八. 稳定与性能65. 合理利用try/except/else/finally结构中的每个代码块import json UNDEFINED = object() DIE_IN_ELSE_BLOCK = False def divide_json(path): print(&#39;* Opening file&#39;) handle = open(path, &#39;r+&#39;) # May raise OSError try: print(&#39;* Reading data&#39;) data = handle.read() # May raise UnicodeDecodeError print(&#39;* Loading JSON data&#39;) op = json.loads(data) # May raise ValueError print(&#39;* Performing calculation&#39;) value = ( op[&#39;numerator&#39;] / op[&#39;denominator&#39;]) # May raise ZeroDivisionError except ZeroDivisionError as e: print(f&#39;* Handling ZeroDivisionError: {e}&#39;) return UNDEFINED else: print(&#39;* Writing calculation&#39;) op[&#39;result&#39;] = value result = json.dumps(op) handle.seek(0) # May raise OSError if DIE_IN_ELSE_BLOCK: import errno import os raise OSError(errno.ENOSPC, os.strerror(errno.ENOSPC)) handle.write(result) # May raise OSError return value finally: print(&#39;* Calling close()&#39;) handle.close() # Always runs temp_path = &#39;random_data.json&#39; with open(temp_path, &#39;w&#39;, encoding=&#39;utf-8&#39;) as f: f.write(&#39;{&quot;numerator&quot;: 1, &quot;denominator&quot;: 10}&#39;) assert divide_json(temp_path) == 0.1 66. 考虑用contextlib和with语句来改写可复用的try/finally代码 # Example 1 from threading import Lock lock = Lock() with lock: # Do something while maintaining an invariant pass # Example 2 lock.acquire() try: # Do something while maintaining an invariant pass finally: lock.release() # Example 3 import logging logging.getLogger().setLevel(logging.WARNING) def my_function(): logging.debug(&#39;Some debug data&#39;) logging.error(&#39;Error log here&#39;) logging.debug(&#39;More debug data&#39;) # Example 4 my_function() # Example 5 from contextlib import contextmanager @contextmanager def debug_logging(level): logger = logging.getLogger() old_level = logger.getEffectiveLevel() logger.setLevel(level) try: yield finally: logger.setLevel(old_level) # Example 6 with debug_logging(logging.DEBUG): print(&#39;* Inside:&#39;) my_function() print(&#39;* After:&#39;) my_function() # Example 7 with open(&#39;my_output.txt&#39;, &#39;w&#39;, encoding=&#39;utf-8&#39;) as handle: handle.write(&#39;This is some data!&#39;) # Example 8 @contextmanager def log_level(level, name): logger = logging.getLogger(name) old_level = logger.getEffectiveLevel() logger.setLevel(level) try: yield logger finally: logger.setLevel(old_level) # Example 9 with log_level(logging.DEBUG, &#39;my-log&#39;) as logger: logger.debug(f&#39;This is a message for {logger.name}!&#39;) logging.debug(&#39;This will not print&#39;) # Example 10 logger = logging.getLogger(&#39;my-log&#39;) logger.debug(&#39;Debug will not print&#39;) logger.error(&#39;Error will print&#39;) # Example 11 with log_level(logging.DEBUG, &#39;other-log&#39;) as logger: logger.debug(f&#39;This is a message for {logger.name}!&#39;) logging.debug(&#39;This will not print&#39;) 67. 用datetime模块处理本地时间，不要用time模块import time from datetime import datetime, timezone now = datetime(2019, 3, 16, 22, 14, 35) now_utc = now.replace(tzinfo=timezone.utc) now_local = now_utc.astimezone() print(now_local) # 2019-03-17 06:14:35+08:00 # Example 6 time_str = &#39;2019-03-16 15:14:35&#39; time_format = &#39;%Y-%m-%d %H:%M:%S&#39; now = datetime.strptime(time_str, time_format) time_tuple = now.timetuple() utc_now = time.mktime(time_tuple) print(utc_now) # 1552720475.0 # Example 7 import pytz arrival_nyc = &#39;2019-03-16 23:33:24&#39; nyc_dt_naive = datetime.strptime(arrival_nyc, time_format) eastern = pytz.timezone(&#39;US/Eastern&#39;) nyc_dt = eastern.localize(nyc_dt_naive) utc_dt = pytz.utc.normalize(nyc_dt.astimezone(pytz.utc)) print(utc_dt) # 2019-03-17 03:33:24+00:00 # Example 8 pacific = pytz.timezone(&#39;US/Pacific&#39;) sf_dt = pacific.normalize(utc_dt.astimezone(pacific)) print(sf_dt) # 2019-03-16 20:33:24-07:00 # Example 9 nepal = pytz.timezone(&#39;Asia/Katmandu&#39;) nepal_dt = nepal.normalize(utc_dt.astimezone(nepal)) print(nepal_dt) # 2019-03-17 09:18:24+05:45 68. 用copyreg实现可靠的pickle操作import logging # Example 1 class GameState: def __init__(self): self.level = 0 self.lives = 4 # Example 2 state = GameState() state.level += 1 # Player beat a level state.lives -= 1 # Player had to try again print(state.__dict__) # Example 3 import pickle state_path = &#39;game_state.bin&#39; with open(state_path, &#39;wb&#39;) as f: pickle.dump(state, f) # Example 4 with open(state_path, &#39;rb&#39;) as f: state_after = pickle.load(f) print(state_after.__dict__) # Example 5 class GameState: def __init__(self): self.level = 0 self.lives = 4 self.points = 0 # New field # Example 6 state = GameState() serialized = pickle.dumps(state) state_after = pickle.loads(serialized) print(state_after.__dict__) # Example 7 with open(state_path, &#39;rb&#39;) as f: state_after = pickle.load(f) print(state_after.__dict__) # Example 8 assert isinstance(state_after, GameState) # Example 9 class GameState: def __init__(self, level=0, lives=4, points=0): self.level = level self.lives = lives self.points = points # Example 10 def pickle_game_state(game_state): kwargs = game_state.__dict__ return unpickle_game_state, (kwargs,) # Example 11 def unpickle_game_state(kwargs): return GameState(**kwargs) # Example 12 import copyreg copyreg.pickle(GameState, pickle_game_state) # Example 13 state = GameState() state.points += 1000 serialized = pickle.dumps(state) state_after = pickle.loads(serialized) print(state_after.__dict__) # Example 14 class GameState: def __init__(self, level=0, lives=4, points=0, magic=5): self.level = level self.lives = lives self.points = points self.magic = magic # New field # Example 15 print(&#39;Before:&#39;, state.__dict__) state_after = pickle.loads(serialized) print(&#39;After: &#39;, state_after.__dict__) # Example 16 class GameState: def __init__(self, level=0, points=0, magic=5): self.level = level self.points = points self.magic = magic # Example 17 # try: # pickle.loads(serialized) # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 18 def pickle_game_state(game_state): kwargs = game_state.__dict__ kwargs[&#39;version&#39;] = 2 return unpickle_game_state, (kwargs,) # Example 19 def unpickle_game_state(kwargs): version = kwargs.pop(&#39;version&#39;, 1) if version == 1: del kwargs[&#39;lives&#39;] return GameState(**kwargs) # Example 20 copyreg.pickle(GameState, pickle_game_state) print(&#39;Before:&#39;, state.__dict__) state_after = pickle.loads(serialized) print(&#39;After: &#39;, state_after.__dict__) # Example 21 copyreg.dispatch_table.clear() state = GameState() serialized = pickle.dumps(state) del GameState class BetterGameState: def __init__(self, level=0, points=0, magic=5): self.level = level self.points = points self.magic = magic # Example 22 # try: # pickle.loads(serialized) # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 23 print(serialized) # Example 24 copyreg.pickle(BetterGameState, pickle_game_state) # Example 25 state = BetterGameState() serialized = pickle.dumps(state) print(serialized) 69. 在需要准确计算的场合，用decimal表示相应的数值 # Example 1 rate = 1.45 seconds = 3*60 + 42 cost = rate * seconds / 60 print(cost) # 5.364999999999999 # Example 2 print(round(cost, 2)) # 5.36 # Example 3 from decimal import Decimal rate = Decimal(&#39;1.45&#39;) seconds = Decimal(3*60 + 42) cost = rate * seconds / Decimal(60) print(cost) # 5.365 # Example 4 print(Decimal(&#39;1.45&#39;)) # 1.45 print(Decimal(1.45)) # 1.4499999999999999555910790149937383830547332763671875 # Example 5 print(&#39;456&#39;) # 456 print(456) # 456 # Example 6 rate = Decimal(&#39;0.05&#39;) seconds = Decimal(&#39;5&#39;) small_cost = rate * seconds / Decimal(60) print(small_cost) # 0.004166666666666666666666666667 # Example 7 print(round(small_cost, 2)) # 0.00 # Example 8 from decimal import ROUND_UP rounded = cost.quantize(Decimal(&#39;0.01&#39;), rounding=ROUND_UP) print(f&#39;Rounded {cost} to {rounded}&#39;) # Rounded 5.365 to 5.37 # Example 9 rounded = small_cost.quantize(Decimal(&#39;0.01&#39;), rounding=ROUND_UP) print(f&#39;Rounded {small_cost} to {rounded}&#39;) # Rounded 0.004166666666666666666666666667 to 0.01 70. 先分析性能，然后再优化 优化python程序之前，一定要先分析它的性能，程序变慢的真正原因未必和我们想的一样； 可以通过Stats对象筛选出我们关心的结果。 # Example 1 def insertion_sort(data): result = [] for value in data: insert_value(result, value) return result # Example 2 def insert_value(array, value): for i, existing in enumerate(array): if existing &gt; value: array.insert(i, value) return array.append(value) # Example 3 from random import randint max_size = 10**4 data = [randint(0, max_size) for _ in range(max_size)] test = lambda: insertion_sort(data) # Example 4 from cProfile import Profile profiler = Profile() profiler.runcall(test) # Example 5 from pstats import Stats stats = Stats(profiler) # stats = Stats(profiler, stream=STDOUT) stats.strip_dirs() stats.sort_stats(&#39;cumulative&#39;) stats.print_stats() # Example 6 from bisect import bisect_left def insert_value(array, value): i = bisect_left(array, value) array.insert(i, value) # Example 7 profiler = Profile() profiler.runcall(test) # stats = Stats(profiler, stream=STDOUT) stats.strip_dirs() stats.sort_stats(&#39;cumulative&#39;) stats.print_stats() # Example 8 def my_utility(a, b): c = 1 for i in range(100): c += a * b def first_func(): for _ in range(1000): my_utility(4, 5) def second_func(): for _ in range(10): my_utility(1, 3) def my_program(): for _ in range(20): first_func() second_func() # Example 9 profiler = Profile() profiler.runcall(my_program) # stats = Stats(profiler, stream=STDOUT) stats.strip_dirs() stats.sort_stats(&#39;cumulative&#39;) stats.print_stats() # Example 10 # stats = Stats(profiler, stream=STDOUT) stats.strip_dirs() stats.sort_stats(&#39;cumulative&#39;) stats.print_callers() 71. 优先考虑用deque实现生产者-消费者队列 # Example 1 class Email: def __init__(self, sender, receiver, message): self.sender = sender self.receiver = receiver self.message = message # Example 2 def get_emails(): yield Email(&#39;foo@example.com&#39;, &#39;bar@example.com&#39;, &#39;hello1&#39;) yield Email(&#39;baz@example.com&#39;, &#39;banana@example.com&#39;, &#39;hello2&#39;) yield None yield Email(&#39;meep@example.com&#39;, &#39;butter@example.com&#39;, &#39;hello3&#39;) yield Email(&#39;stuff@example.com&#39;, &#39;avocado@example.com&#39;, &#39;hello4&#39;) yield None yield Email(&#39;thingy@example.com&#39;, &#39;orange@example.com&#39;, &#39;hello5&#39;) yield Email(&#39;roger@example.com&#39;, &#39;bob@example.com&#39;, &#39;hello6&#39;) yield None yield Email(&#39;peanut@example.com&#39;, &#39;alice@example.com&#39;, &#39;hello7&#39;) yield None EMAIL_IT = get_emails() class NoEmailError(Exception): pass def try_receive_email(): # Returns an Email instance or raises NoEmailError try: email = next(EMAIL_IT) except StopIteration: email = None if not email: raise NoEmailError print(f&#39;Produced email: {email.message}&#39;) return email # Example 3 def produce_emails(queue): while True: try: email = try_receive_email() except NoEmailError: return else: queue.append(email) # Producer # Example 4 def consume_one_email(queue): if not queue: return email = queue.pop(0) # Consumer # Index the message for long-term archival print(f&#39;Consumed email: {email.message}&#39;) # Example 5 def loop(queue, keep_running): while keep_running(): produce_emails(queue) consume_one_email(queue) def make_test_end(): count=list(range(10)) def func(): if count: count.pop() return True return False return func def my_end_func(): pass my_end_func = make_test_end() loop([], my_end_func) # Example 6 import timeit def print_results(count, tests): avg_iteration = sum(tests) / len(tests) print(f&#39;Count {count:&gt;5,} takes {avg_iteration:.6f}s&#39;) return count, avg_iteration def list_append_benchmark(count): def run(queue): for i in range(count): queue.append(i) tests = timeit.repeat( setup=&#39;queue = []&#39;, stmt=&#39;run(queue)&#39;, globals=locals(), repeat=1000, number=1) return print_results(count, tests) # Example 7 def print_delta(before, after): before_count, before_time = before after_count, after_time = after growth = 1 + (after_count - before_count) / before_count slowdown = 1 + (after_time - before_time) / before_time print(f&#39;{growth:&gt;4.1f}x data size, {slowdown:&gt;4.1f}x time&#39;) baseline = list_append_benchmark(500) for count in (1_000, 2_000, 3_000, 4_000, 5_000): print() comparison = list_append_benchmark(count) print_delta(baseline, comparison) # Example 8 def list_pop_benchmark(count): def prepare(): return list(range(count)) def run(queue): while queue: queue.pop(0) tests = timeit.repeat( setup=&#39;queue = prepare()&#39;, stmt=&#39;run(queue)&#39;, globals=locals(), repeat=1000, number=1) return print_results(count, tests) # Example 9 baseline = list_pop_benchmark(500) for count in (1_000, 2_000, 3_000, 4_000, 5_000): print() comparison = list_pop_benchmark(count) print_delta(baseline, comparison) # Example 10 import collections def consume_one_email(queue): if not queue: return email = queue.popleft() # Consumer # Process the email message print(f&#39;Consumed email: {email.message}&#39;) def my_end_func(): pass my_end_func = make_test_end() EMAIL_IT = get_emails() loop(collections.deque(), my_end_func) # Example 11 def deque_append_benchmark(count): def prepare(): return collections.deque() def run(queue): for i in range(count): queue.append(i) tests = timeit.repeat( setup=&#39;queue = prepare()&#39;, stmt=&#39;run(queue)&#39;, globals=locals(), repeat=1000, number=1) return print_results(count, tests) baseline = deque_append_benchmark(500) for count in (1_000, 2_000, 3_000, 4_000, 5_000): print() comparison = deque_append_benchmark(count) print_delta(baseline, comparison) # Example 12 def dequeue_popleft_benchmark(count): def prepare(): return collections.deque(range(count)) def run(queue): while queue: queue.popleft() tests = timeit.repeat( setup=&#39;queue = prepare()&#39;, stmt=&#39;run(queue)&#39;, globals=locals(), repeat=1000, number=1) return print_results(count, tests) baseline = dequeue_popleft_benchmark(500) for count in (1_000, 2_000, 3_000, 4_000, 5_000): print() comparison = dequeue_popleft_benchmark(count) print_delta(baseline, comparison) 72. 考虑用bisect搜索已排序的序列 # Example 1 data = list(range(10**5)) index = data.index(91234) assert index == 91234 # Example 2 def find_closest(sequence, goal): for index, value in enumerate(sequence): if goal &lt; value: return index raise ValueError(f&#39;{goal} is out of bounds&#39;) index = find_closest(data, 91234.56) assert index == 91235 try: find_closest(data, 100000000) except ValueError: pass # Expected else: assert False # Example 3 python内置的bisect模块可以更好的搜索有序列表 from bisect import bisect_left index = bisect_left(data, 91234) # Exact match assert index == 91234 index = bisect_left(data, 91234.56) # Closest match assert index == 91235 # Example 4 import random import timeit size = 10**5 iterations = 1000 data = list(range(size)) to_lookup = [random.randint(0, size) for _ in range(iterations)] def run_linear(data, to_lookup): for index in to_lookup: data.index(index) def run_bisect(data, to_lookup): for index in to_lookup: bisect_left(data, index) baseline = timeit.timeit( stmt=&#39;run_linear(data, to_lookup)&#39;, globals=globals(), number=10) print(f&#39;Linear search takes {baseline:.6f}s&#39;) comparison = timeit.timeit( stmt=&#39;run_bisect(data, to_lookup)&#39;, globals=globals(), number=10) print(f&#39;Bisect search takes {comparison:.6f}s&#39;) slowdown = 1 + ((baseline - comparison) / comparison) print(f&#39;{slowdown:.1f}x time&#39;) 73. 学会使用heapq制作优先级队列有时候，我们想根据元素的优先程度来排序，此时应该使用优先级队列。 import logging # Example 1 class Book: def __init__(self, title, due_date): self.title = title self.due_date = due_date # Example 2 def add_book(queue, book): queue.append(book) queue.sort(key=lambda x: x.due_date, reverse=True) queue = [] add_book(queue, Book(&#39;Don Quixote&#39;, &#39;2019-06-07&#39;)) add_book(queue, Book(&#39;Frankenstein&#39;, &#39;2019-06-05&#39;)) add_book(queue, Book(&#39;Les Misérables&#39;, &#39;2019-06-08&#39;)) add_book(queue, Book(&#39;War and Peace&#39;, &#39;2019-06-03&#39;)) # Example 3 class NoOverdueBooks(Exception): pass def next_overdue_book(queue, now): if queue: book = queue[-1] if book.due_date &lt; now: queue.pop() return book raise NoOverdueBooks # Example 4 now = &#39;2019-06-10&#39; found = next_overdue_book(queue, now) print(found.title) found = next_overdue_book(queue, now) print(found.title) # Example 5 def return_book(queue, book): queue.remove(book) queue = [] book = Book(&#39;Treasure Island&#39;, &#39;2019-06-04&#39;) add_book(queue, book) print(&#39;Before return:&#39;, [x.title for x in queue]) return_book(queue, book) print(&#39;After return: &#39;, [x.title for x in queue]) # Example 6 try: next_overdue_book(queue, now) except NoOverdueBooks: pass # Expected else: assert False # Doesn&#39;t happen # Example 7 import random import timeit def print_results(count, tests): avg_iteration = sum(tests) / len(tests) print(f&#39;Count {count:&gt;5,} takes {avg_iteration:.6f}s&#39;) return count, avg_iteration def print_delta(before, after): before_count, before_time = before after_count, after_time = after growth = 1 + (after_count - before_count) / before_count slowdown = 1 + (after_time - before_time) / before_time print(f&#39;{growth:&gt;4.1f}x data size, {slowdown:&gt;4.1f}x time&#39;) def list_overdue_benchmark(count): def prepare(): to_add = list(range(count)) random.shuffle(to_add) return [], to_add def run(queue, to_add): for i in to_add: queue.append(i) queue.sort(reverse=True) while queue: queue.pop() tests = timeit.repeat( setup=&#39;queue, to_add = prepare()&#39;, stmt=f&#39;run(queue, to_add)&#39;, globals=locals(), repeat=100, number=1) return print_results(count, tests) # Example 8 baseline = list_overdue_benchmark(500) for count in (1_000, 1_500, 2_000): print() comparison = list_overdue_benchmark(count) print_delta(baseline, comparison) # Example 9 def list_return_benchmark(count): def prepare(): queue = list(range(count)) random.shuffle(queue) to_return = list(range(count)) random.shuffle(to_return) return queue, to_return def run(queue, to_return): for i in to_return: queue.remove(i) tests = timeit.repeat( setup=&#39;queue, to_return = prepare()&#39;, stmt=f&#39;run(queue, to_return)&#39;, globals=locals(), repeat=100, number=1) return print_results(count, tests) # Example 10 baseline = list_return_benchmark(500) for count in (1_000, 1_500, 2_000): print() comparison = list_return_benchmark(count) print_delta(baseline, comparison) # Example 11 from heapq import heappush def add_book(queue, book): heappush(queue, book) # Example 12 # try: # queue = [] # add_book(queue, Book(&#39;Little Women&#39;, &#39;2019-06-05&#39;)) # add_book(queue, Book(&#39;The Time Machine&#39;, &#39;2019-05-30&#39;)) # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 13 import functools @functools.total_ordering class Book: def __init__(self, title, due_date): self.title = title self.due_date = due_date def __lt__(self, other): return self.due_date &lt; other.due_date # Example 14 queue = [] add_book(queue, Book(&#39;Pride and Prejudice&#39;, &#39;2019-06-01&#39;)) add_book(queue, Book(&#39;The Time Machine&#39;, &#39;2019-05-30&#39;)) add_book(queue, Book(&#39;Crime and Punishment&#39;, &#39;2019-06-06&#39;)) add_book(queue, Book(&#39;Wuthering Heights&#39;, &#39;2019-06-12&#39;)) print([b.title for b in queue]) # Example 15 queue = [ Book(&#39;Pride and Prejudice&#39;, &#39;2019-06-01&#39;), Book(&#39;The Time Machine&#39;, &#39;2019-05-30&#39;), Book(&#39;Crime and Punishment&#39;, &#39;2019-06-06&#39;), Book(&#39;Wuthering Heights&#39;, &#39;2019-06-12&#39;), ] queue.sort() print([b.title for b in queue]) # Example 16 from heapq import heapify queue = [ Book(&#39;Pride and Prejudice&#39;, &#39;2019-06-01&#39;), Book(&#39;The Time Machine&#39;, &#39;2019-05-30&#39;), Book(&#39;Crime and Punishment&#39;, &#39;2019-06-06&#39;), Book(&#39;Wuthering Heights&#39;, &#39;2019-06-12&#39;), ] heapify(queue) print([b.title for b in queue]) # Example 17 from heapq import heappop def next_overdue_book(queue, now): if queue: book = queue[0] # Most overdue first if book.due_date &lt; now: heappop(queue) # Remove the overdue book return book raise NoOverdueBooks # Example 18 now = &#39;2019-06-02&#39; book = next_overdue_book(queue, now) print(book.title) book = next_overdue_book(queue, now) print(book.title) try: next_overdue_book(queue, now) except NoOverdueBooks: pass # Expected else: assert False # Doesn&#39;t happen # Example 19 def heap_overdue_benchmark(count): def prepare(): to_add = list(range(count)) random.shuffle(to_add) return [], to_add def run(queue, to_add): for i in to_add: heappush(queue, i) while queue: heappop(queue) tests = timeit.repeat( setup=&#39;queue, to_add = prepare()&#39;, stmt=f&#39;run(queue, to_add)&#39;, globals=locals(), repeat=100, number=1) return print_results(count, tests) # Example 20 baseline = heap_overdue_benchmark(500) for count in (1_000, 1_500, 2_000): print() comparison = heap_overdue_benchmark(count) print_delta(baseline, comparison) # Example 21 @functools.total_ordering class Book: def __init__(self, title, due_date): self.title = title self.due_date = due_date self.returned = False # New field def __lt__(self, other): return self.due_date &lt; other.due_date # Example 22 def next_overdue_book(queue, now): while queue: book = queue[0] if book.returned: heappop(queue) continue if book.due_date &lt; now: heappop(queue) return book break raise NoOverdueBooks queue = [] book = Book(&#39;Pride and Prejudice&#39;, &#39;2019-06-01&#39;) add_book(queue, book) book = Book(&#39;The Time Machine&#39;, &#39;2019-05-30&#39;) add_book(queue, book) book.returned = True book = Book(&#39;Crime and Punishment&#39;, &#39;2019-06-06&#39;) add_book(queue, book) book.returned = True book = Book(&#39;Wuthering Heights&#39;, &#39;2019-06-12&#39;) add_book(queue, book) now = &#39;2019-06-11&#39; book = next_overdue_book(queue, now) assert book.title == &#39;Pride and Prejudice&#39; try: next_overdue_book(queue, now) except NoOverdueBooks: pass # Expected else: assert False # Doesn&#39;t happen # Example 23 def return_book(queue, book): book.returned = True assert not book.returned return_book(queue, book) assert book.returned 74. 考虑用memoryview与bytearray来实现无须拷贝的bytes操作# Example 1 def timecode_to_index(video_id, timecode): return 1234 # Returns the byte offset in the video data def request_chunk(video_id, byte_offset, size): pass # Returns size bytes of video_id&#39;s data from the offset video_id = ... timecode = &#39;01:09:14:28&#39; byte_offset = timecode_to_index(video_id, timecode) size = 20 * 1024 * 1024 video_data = request_chunk(video_id, byte_offset, size) # Example 2 class NullSocket: def __init__(self): self.handle = open(os.devnull, &#39;wb&#39;) def send(self, data): self.handle.write(data) socket = ... # socket connection to client video_data = ... # bytes containing data for video_id byte_offset = ... # Requested starting position size = 20 * 1024 * 1024 # Requested chunk size import os socket = NullSocket() video_data = 100 * os.urandom(1024 * 1024) byte_offset = 1234 chunk = video_data[byte_offset:byte_offset + size] socket.send(chunk) # Example 3 import timeit def run_test(): chunk = video_data[byte_offset:byte_offset + size] # Call socket.send(chunk), but ignoring for benchmark result = timeit.timeit( stmt=&#39;run_test()&#39;, globals=globals(), number=100) / 100 print(f&#39;{result:0.9f} seconds&#39;) # Example 4 data = b&#39;shave and a haircut, two bits&#39; view = memoryview(data) chunk = view[12:19] print(chunk) print(&#39;Size: &#39;, chunk.nbytes) print(&#39;Data in view: &#39;, chunk.tobytes()) print(&#39;Underlying data:&#39;, chunk.obj) # Example 5 video_view = memoryview(video_data) def run_test(): chunk = video_view[byte_offset:byte_offset + size] # Call socket.send(chunk), but ignoring for benchmark result = timeit.timeit( stmt=&#39;run_test()&#39;, globals=globals(), number=100) / 100 print(f&#39;{result:0.9f} seconds&#39;) # Example 6 class FakeSocket: def recv(self, size): return video_view[byte_offset:byte_offset+size] def recv_into(self, buffer): source_data = video_view[byte_offset:byte_offset+size] buffer[:] = source_data socket = ... # socket connection to the client video_cache = ... # Cache of incoming video stream byte_offset = ... # Incoming buffer position size = 1024 * 1024 # Incoming chunk size socket = FakeSocket() video_cache = video_data[:] byte_offset = 1234 chunk = socket.recv(size) video_view = memoryview(video_cache) before = video_view[:byte_offset] after = video_view[byte_offset + size:] new_cache = b&#39;&#39;.join([before, chunk, after]) # Example 7 def run_test(): chunk = socket.recv(size) before = video_view[:byte_offset] after = video_view[byte_offset + size:] new_cache = b&#39;&#39;.join([before, chunk, after]) result = timeit.timeit( stmt=&#39;run_test()&#39;, globals=globals(), number=100) / 100 print(f&#39;{result:0.9f} seconds&#39;) # Example 8 # try: # my_bytes = b&#39;hello&#39; # my_bytes[0] = b&#39;\x79&#39; # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 9 my_array = bytearray(b&#39;hello&#39;) my_array[0] = 0x79 print(my_array) # Example 10 my_array = bytearray(b&#39;row, row, row your boat&#39;) my_view = memoryview(my_array) write_view = my_view[3:13] write_view[:] = b&#39;-10 bytes-&#39; print(my_array) # Example 11 video_array = bytearray(video_cache) write_view = memoryview(video_array) chunk = write_view[byte_offset:byte_offset + size] socket.recv_into(chunk) # Example 12 def run_test(): chunk = write_view[byte_offset:byte_offset + size] socket.recv_into(chunk) result = timeit.timeit( stmt=&#39;run_test()&#39;, globals=globals(), number=100) / 100 print(f&#39;{result:0.9f} seconds&#39;) 九. 测试与调试75. 通过repr字符串输出调试信息# Example 1 print(&#39;foo bar&#39;) # Example 2 my_value = &#39;foo bar&#39; print(str(my_value)) print(&#39;%s&#39; % my_value) print(f&#39;{my_value}&#39;) print(format(my_value)) print(my_value.__format__(&#39;s&#39;)) print(my_value.__str__()) # Example 3 print(5) print(&#39;5&#39;) int_value = 5 str_value = &#39;5&#39; print(f&#39;{int_value} == {str_value} ?&#39;) # Example 4 a = &#39;\x07&#39; print(repr(a)) # Example 5 b = eval(repr(a)) assert a == b # Example 6 print(repr(5)) print(repr(&#39;5&#39;)) # Example 7 print(&#39;%r&#39; % 5) print(&#39;%r&#39; % &#39;5&#39;) int_value = 5 str_value = &#39;5&#39; print(f&#39;{int_value!r} != {str_value!r}&#39;) # Example 8 class OpaqueClass: def __init__(self, x, y): self.x = x self.y = y obj = OpaqueClass(1, &#39;foo&#39;) print(obj) # Example 9 class BetterClass: def __init__(self, x, y): self.x = x self.y = y def __repr__(self): return f&#39;BetterClass({self.x!r}, {self.y!r})&#39; # Example 10 obj = BetterClass(2, &#39;bar&#39;) print(obj) # Example 11 obj = OpaqueClass(4, &#39;baz&#39;) print(obj.__dict__) 76. 在TestCase子类里验证相关的行为 Helper_test.py from unittest import TestCase, main def sum_squares(values): cumulative = 0 for value in values: cumulative += value ** 2 yield cumulative class HelperTestCase(TestCase): def verify_complex_case(self, values, expected): expect_it = iter(expected) found_it = iter(sum_squares(values)) test_it = zip(expect_it, found_it) for i, (expect, found) in enumerate(test_it): self.assertEqual( expect, found, f&#39;Index {i} is wrong&#39;) # Verify both generators are exhausted try: next(expect_it) except StopIteration: pass else: self.fail(&#39;Expected longer than found&#39;) try: next(found_it) except StopIteration: pass else: self.fail(&#39;Found longer than expected&#39;) def test_wrong_lengths(self): values = [1.1, 2.2, 3.3] expected = [ 1.1**2, ] self.verify_complex_case(values, expected) def test_wrong_results(self): values = [1.1, 2.2, 3.3] expected = [ 1.1**2, 1.1**2 + 2.2**2, 1.1**2 + 2.2**2 + 3.3**2 + 4.4**2, ] self.verify_complex_case(values, expected) if __name__ == &#39;__main__&#39;: main() Data_driven_test.py from unittest import TestCase, main from utils import to_str class DataDrivenTestCase(TestCase): def test_good(self): good_cases = [ (b&#39;my bytes&#39;, &#39;my bytes&#39;), (&#39;no error&#39;, b&#39;no error&#39;), # This one will fail (&#39;other str&#39;, &#39;other str&#39;), ] for value, expected in good_cases: with self.subTest(value): self.assertEqual(expected, to_str(value)) def test_bad(self): bad_cases = [ (object(), TypeError), (b&#39;\xfa\xfa&#39;, UnicodeDecodeError), ] for value, exception in bad_cases: with self.subTest(value): with self.assertRaises(exception): to_str(value) if __name__ == &#39;__main__&#39;: main() 77. 把测试前、后的准备与清理逻辑写在setUp、tearDown、setUpModule与tearDownModule中，以防用例之间互相干扰from unittest import TestCase, main def setUpModule(): print(&#39;* Module setup&#39;) def tearDownModule(): print(&#39;* Module clean-up&#39;) class IntegrationTest(TestCase): def setUp(self): print(&#39;* Test setup&#39;) def tearDown(self): print(&#39;* Test clean-up&#39;) def test_end_to_end1(self): print(&#39;* Test 1&#39;) def test_end_to_end2(self): print(&#39;* Test 2&#39;) if __name__ == &#39;__main__&#39;: main() 78. 用Mock来模拟受测代码所依赖的复杂函数import logging # Example 1 class DatabaseConnection: def __init__(self, host, port): pass class DatabaseConnectionError(Exception): pass def get_animals(database, species): # Query the Database raise DatabaseConnectionError(&#39;Not connected&#39;) # Return a list of (name, last_mealtime) tuples # Example 2 # try: # database = DatabaseConnection(&#39;localhost&#39;, &#39;4444&#39;) # # get_animals(database, &#39;Meerkat&#39;) # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 3 from datetime import datetime from unittest.mock import Mock mock = Mock(spec=get_animals) expected = [ (&#39;Spot&#39;, datetime(2019, 6, 5, 11, 15)), (&#39;Fluffy&#39;, datetime(2019, 6, 5, 12, 30)), (&#39;Jojo&#39;, datetime(2019, 6, 5, 12, 45)), ] mock.return_value = expected # Example 4 # try: # mock.does_not_exist # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 5 database = object() result = mock(database, &#39;Meerkat&#39;) assert result == expected # Example 6 mock.assert_called_once_with(database, &#39;Meerkat&#39;) # Example 7 # try: # mock.assert_called_once_with(database, &#39;Giraffe&#39;) # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 8 from unittest.mock import ANY mock = Mock(spec=get_animals) mock(&#39;database 1&#39;, &#39;Rabbit&#39;) mock(&#39;database 2&#39;, &#39;Bison&#39;) mock(&#39;database 3&#39;, &#39;Meerkat&#39;) mock.assert_called_with(ANY, &#39;Meerkat&#39;) # Example 9 # try: # class MyError(Exception): # pass # # mock = Mock(spec=get_animals) # mock.side_effect = MyError(&#39;Whoops! Big problem&#39;) # result = mock(database, &#39;Meerkat&#39;) # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 10 def get_food_period(database, species): # Query the Database pass # Return a time delta def feed_animal(database, name, when): # Write to the Database pass def do_rounds(database, species): now = datetime.datetime.utcnow() feeding_timedelta = get_food_period(database, species) animals = get_animals(database, species) fed = 0 for name, last_mealtime in animals: if (now - last_mealtime) &gt; feeding_timedelta: feed_animal(database, name, now) fed += 1 return fed # Example 11 def do_rounds(database, species, *, now_func=datetime.utcnow, food_func=get_food_period, animals_func=get_animals, feed_func=feed_animal): now = now_func() feeding_timedelta = food_func(database, species) animals = animals_func(database, species) fed = 0 for name, last_mealtime in animals: if (now - last_mealtime) &gt; feeding_timedelta: feed_func(database, name, now) fed += 1 return fed # Example 12 from datetime import timedelta now_func = Mock(spec=datetime.utcnow) now_func.return_value = datetime(2019, 6, 5, 15, 45) food_func = Mock(spec=get_food_period) food_func.return_value = timedelta(hours=3) animals_func = Mock(spec=get_animals) animals_func.return_value = [ (&#39;Spot&#39;, datetime(2019, 6, 5, 11, 15)), (&#39;Fluffy&#39;, datetime(2019, 6, 5, 12, 30)), (&#39;Jojo&#39;, datetime(2019, 6, 5, 12, 45)), ] feed_func = Mock(spec=feed_animal) # Example 13 result = do_rounds( database, &#39;Meerkat&#39;, now_func=now_func, food_func=food_func, animals_func=animals_func, feed_func=feed_func) assert result == 2 # Example 14 from unittest.mock import call food_func.assert_called_once_with(database, &#39;Meerkat&#39;) animals_func.assert_called_once_with(database, &#39;Meerkat&#39;) feed_func.assert_has_calls( [ call(database, &#39;Spot&#39;, now_func.return_value), call(database, &#39;Fluffy&#39;, now_func.return_value), ], any_order=True) # Example 15 from unittest.mock import patch print(&#39;Outside patch:&#39;, get_animals) with patch(&#39;__main__.get_animals&#39;): print(&#39;Inside patch: &#39;, get_animals) print(&#39;Outside again:&#39;, get_animals) # Example 16 # try: # fake_now = datetime(2019, 6, 5, 15, 45) # # with patch(&#39;datetime.datetime.utcnow&#39;): # datetime.utcnow.return_value = fake_now # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 17 def get_do_rounds_time(): return datetime.datetime.utcnow() def do_rounds(database, species): now = get_do_rounds_time() with patch(&#39;__main__.get_do_rounds_time&#39;): pass # Example 18 def do_rounds(database, species, *, utcnow=datetime.utcnow): now = utcnow() feeding_timedelta = get_food_period(database, species) animals = get_animals(database, species) fed = 0 for name, last_mealtime in animals: if (now - last_mealtime) &gt; feeding_timedelta: feed_animal(database, name, now) fed += 1 return fed # Example 19 from unittest.mock import DEFAULT with patch.multiple(&#39;__main__&#39;, autospec=True, get_food_period=DEFAULT, get_animals=DEFAULT, feed_animal=DEFAULT): now_func = Mock(spec=datetime.utcnow) now_func.return_value = datetime(2019, 6, 5, 15, 45) get_food_period.return_value = timedelta(hours=3) get_animals.return_value = [ (&#39;Spot&#39;, datetime(2019, 6, 5, 11, 15)), (&#39;Fluffy&#39;, datetime(2019, 6, 5, 12, 30)), (&#39;Jojo&#39;, datetime(2019, 6, 5, 12, 45)) ] # Example 20 result = do_rounds(database, &#39;Meerkat&#39;, utcnow=now_func) assert result == 2 get_food_period.assert_called_once_with(database, &#39;Meerkat&#39;) get_animals.assert_called_once_with(database, &#39;Meerkat&#39;) feed_animal.assert_has_calls( [ call(database, &#39;Spot&#39;, now_func.return_value), call(database, &#39;Fluffy&#39;, now_func.return_value), ], any_order=True) 79. 把受测代码所依赖的系统封装起来，以便于模拟和测试# Example 1 class ZooDatabase: def get_animals(self, species): pass def get_food_period(self, species): pass def feed_animal(self, name, when): pass # Example 2 from datetime import datetime def do_rounds(database, species, *, utcnow=datetime.utcnow): now = utcnow() feeding_timedelta = database.get_food_period(species) animals = database.get_animals(species) fed = 0 for name, last_mealtime in animals: if (now - last_mealtime) &gt;= feeding_timedelta: database.feed_animal(name, now) fed += 1 return fed # Example 3 from unittest.mock import Mock database = Mock(spec=ZooDatabase) print(database.feed_animal) database.feed_animal() database.feed_animal.assert_any_call() # Example 4 from datetime import timedelta from unittest.mock import call now_func = Mock(spec=datetime.utcnow) now_func.return_value = datetime(2019, 6, 5, 15, 45) database = Mock(spec=ZooDatabase) database.get_food_period.return_value = timedelta(hours=3) database.get_animals.return_value = [ (&#39;Spot&#39;, datetime(2019, 6, 5, 11, 15)), (&#39;Fluffy&#39;, datetime(2019, 6, 5, 12, 30)), (&#39;Jojo&#39;, datetime(2019, 6, 5, 12, 55)) ] # Example 5 result = do_rounds(database, &#39;Meerkat&#39;, utcnow=now_func) assert result == 2 database.get_food_period.assert_called_once_with(&#39;Meerkat&#39;) database.get_animals.assert_called_once_with(&#39;Meerkat&#39;) database.feed_animal.assert_has_calls( [ call(&#39;Spot&#39;, now_func.return_value), call(&#39;Fluffy&#39;, now_func.return_value), ], any_order=True) # # Example 6 # try: # database.bad_method_name() # except: # logging.exception(&#39;Expected&#39;) # else: # assert False # Example 7 DATABASE = None def get_database(): global DATABASE if DATABASE is None: DATABASE = ZooDatabase() return DATABASE def main(argv): database = get_database() species = argv[1] count = do_rounds(database, species) print(f&#39;Fed {count} {species}(s)&#39;) return 0 # Example 8 import contextlib import io from unittest.mock import patch with patch(&#39;__main__.DATABASE&#39;, spec=ZooDatabase): now = datetime.utcnow() DATABASE.get_food_period.return_value = timedelta(hours=3) DATABASE.get_animals.return_value = [ (&#39;Spot&#39;, now - timedelta(minutes=4.5)), (&#39;Fluffy&#39;, now - timedelta(hours=3.25)), (&#39;Jojo&#39;, now - timedelta(hours=3)), ] fake_stdout = io.StringIO() with contextlib.redirect_stdout(fake_stdout): main([&#39;program name&#39;, &#39;Meerkat&#39;]) found = fake_stdout.getvalue() expected = &#39;Fed 2 Meerkat(s)\n&#39; assert found == expected 80. 考虑用pdb做交互调试import math def compute_rmse(observed, ideal): total_err_2 = 0 count = 0 for got, wanted in zip(observed, ideal): err_2 = (got - wanted) ** 2 breakpoint() # Start the debugger here total_err_2 += err_2 count += 1 mean_err = total_err_2 / count rmse = math.sqrt(mean_err) return rmse result = compute_rmse( [1.8, 1.7, 3.2, 6], [2, 1.5, 3, 5]) print(result) 81. 用tracemalloc来掌握内存的使用与泄漏情况 gc模块可以帮助我们了解垃圾回收器追踪到了哪些对象，但并不能告诉我们那些对象是如何分配的； import gc found_objects = gc.get_objects() print(&#39;Before:&#39;, len(found_objects)) import waste_memory hold_reference = waste_memory.run() found_objects = gc.get_objects() print(&#39;After: &#39;, len(found_objects)) for obj in found_objects[:3]: print(repr(obj)[:100]) print(&#39;...&#39;) python内置的tracemalloc模块提供了一套强大的工具，可以帮助我们了解内存的使用情况，并且找到这些内存由那一行代码所分配。 import tracemalloc tracemalloc.start(10) # Set stack depth time1 = tracemalloc.take_snapshot() # Before snapshot import os class MyObject: def __init__(self): self.data = os.urandom(100) def get_data(): values = [] for _ in range(100): obj = MyObject() values.append(obj) return values def run(): deep_values = [] for _ in range(100): deep_values.append(get_data()) return deep_values x = run() # Usage to debug time2 = tracemalloc.take_snapshot() # After snapshot stats = time2.compare_to(time1, &#39;lineno&#39;) # Compare snapshots for stat in stats[:3]: print(stat) import tracemalloc tracemalloc.start(10) time1 = tracemalloc.take_snapshot() import os class MyObject: def __init__(self): self.data = os.urandom(100) def get_data(): values = [] for _ in range(100): obj = MyObject() values.append(obj) return values def run(): deep_values = [] for _ in range(100): deep_values.append(get_data()) return deep_values x = run() time2 = tracemalloc.take_snapshot() stats = time2.compare_to(time1, &#39;traceback&#39;) top = stats[0] print(&#39;Biggest offender is:&#39;) print(&#39;\n&#39;.join(top.traceback.format())) 十. 协作并发82. 学会寻找由其他Python开发者所构建的模块python集中存放模块的地方：https://pypi.org 。 83. 用虚拟环境隔离项目，并重建依赖关系通过pip show可以查看它的依赖关系：python3 -m pip show flask, 结果如下： Name: Flask Version: 2.0.1 Summary: A simple framework for building complex web applications. Home-page: https://palletsprojects.com/p/flask Author: Armin Ronacher Author-email: armin.ronacher@active-4.com License: BSD-3-Clause Location: /usr/local/lib/python3.9/site-packages Requires: itsdangerous, click, Jinja2, Werkzeug Required-by: 在命令行界面执行venv命令： python3 -m venv 虚拟环境名 # 创建虚拟环境 source bin/activate 和 deactivate # 启用和禁用该环境 python3 -m pip install -r requirements.txt # 安装包 84. 每一个函数、类与模块都要写docstringimport itertools def find_anagrams(word, dictionary): &quot;&quot;&quot;Find all anagrams for a word. This function only runs as fast as the test for membership in the &#39;dictionary&#39; container. Args: word: String of the target word. dictionary: collections.abc.Container with all strings that are known to be actual words. Returns: List of anagrams that were found. Empty if none were found. &quot;&quot;&quot; permutations = itertools.permutations(word, len(word)) possible = (&#39;&#39;.join(x) for x in permutations) found = {word for word in possible if word in dictionary} return list(found) assert find_anagrams(&#39;pancakes&#39;, [&#39;scanpeak&#39;]) == [&#39;scanpeak&#39;] 85. 用包来安排模块，以提供稳固的API如我们想设计一个包，用来计算抛射物之间的碰撞 # mypackage/models.py __all__ = [&#39;Projectile&#39;] class Projectile: def __init__(self, mass, velocity): self.mass = mass self.velocity = velocity # mypackage/utils.py from . models import Projectile __all__ = [&#39;simulate_collision&#39;] def _dot_product(a, b): pass def simulate_collision(a, b): after_a = Projectile(-a.mass, -a.velocity) after_b = Projectile(-b.mass, -b.velocity) return after_a, after_b # mypackage/__init__.py __all__ = [] from . models import * __all__ += models.__all__ from . utils import * __all__ += utils.__all__ 没有出现在__all___之中的，都不会随着from mypackage import *语句引入，对外部使用者隐藏了这些名字。 # api_consumer.py from mypackage import * a = Projectile(1.5, 3) b = Projectile(4, 1.7) after_a, after_b = simulate_collision(a, b) print(after_a.__dict__, after_b.__dict__) # {&#39;mass&#39;: -1.5, &#39;velocity&#39;: -3} {&#39;mass&#39;: -4, &#39;velocity&#39;: -1.7} 86. 考虑用模块级别的代码配置不同的部署环境class TestingDatabase: pass class RealDatabase: pass TESTING = True if TESTING: Database = TestingDatabase else: Database = RealDatabase 87. 为自编的模块定义根异常，让调用者能够专门处理与此API有关的异常import logging # Example 1 # my_module.py def determine_weight(volume, density): if density &lt;= 0: raise ValueError(&#39;Density must be positive&#39;) try: determine_weight(1, 0) except ValueError: pass else: assert False # Example 2 # my_module.py class Error(Exception): &quot;&quot;&quot;Base-class for all exceptions raised by this module.&quot;&quot;&quot; class InvalidDensityError(Error): &quot;&quot;&quot;There was a problem with a provided density value.&quot;&quot;&quot; class InvalidVolumeError(Error): &quot;&quot;&quot;There was a problem with the provided weight value.&quot;&quot;&quot; def determine_weight(volume, density): if density &lt; 0: raise InvalidDensityError(&#39;Density must be positive&#39;) if volume &lt; 0: raise InvalidVolumeError(&#39;Volume must be positive&#39;) if volume == 0: density / volume # Example 3 class my_module: Error = Error InvalidDensityError = InvalidDensityError @staticmethod def determine_weight(volume, density): if density &lt; 0: raise InvalidDensityError(&#39;Density must be positive&#39;) if volume &lt; 0: raise InvalidVolumeError(&#39;Volume must be positive&#39;) if volume == 0: density / volume try: weight = my_module.determine_weight(1, -1) except my_module.Error: logging.exception(&#39;Unexpected error&#39;) else: assert False # Example 4 SENTINEL = object() weight = SENTINEL try: weight = my_module.determine_weight(-1, 1) except my_module.InvalidDensityError: weight = 0 except my_module.Error: logging.exception(&#39;Bug in the calling code&#39;) else: assert False assert weight is SENTINEL # Example 5 try: weight = SENTINEL try: weight = my_module.determine_weight(0, 1) except my_module.InvalidDensityError: weight = 0 except my_module.Error: logging.exception(&#39;Bug in the calling code&#39;) except Exception: logging.exception(&#39;Bug in the API code!&#39;) raise # Re-raise exception to the caller else: assert False assert weight == 0 except: logging.exception(&#39;Expected&#39;) else: assert False # Example 6 # my_module.py class NegativeDensityError(InvalidDensityError): &quot;&quot;&quot;A provided density value was negative.&quot;&quot;&quot; def determine_weight(volume, density): if density &lt; 0: raise NegativeDensityError(&#39;Density must be positive&#39;) # Example 7 try: my_module.NegativeDensityError = NegativeDensityError my_module.determine_weight = determine_weight try: weight = my_module.determine_weight(1, -1) except my_module.NegativeDensityError: raise ValueError(&#39;Must supply non-negative density&#39;) except my_module.InvalidDensityError: weight = 0 except my_module.Error: logging.exception(&#39;Bug in the calling code&#39;) except Exception: logging.exception(&#39;Bug in the API code!&#39;) raise else: assert False except: logging.exception(&#39;Expected&#39;) else: assert False 88. 用适当的方式打破循环依赖关系 如果两个模块都要在开头引入对方，那就会形成循环依赖关系，可能会导致程序启动时崩溃； 想要打破循环依赖，最好的办法是把这两个模块都用到的代码重构到整个依赖的最底层； 如果不想大幅度重构代码，也不想让代码太复杂，最简单的方法就是通过动态引入来消除循环依赖关系。 # dialog.py class Dialog: def __init__(self): pass # Using this instead will break things # save_dialog = Dialog(app.prefs.get(&#39;save_dir&#39;)) save_dialog = Dialog() def show(): import app # Dynamic import 程序运行时才触发 save_dialog.save_dir = app.prefs.get(&#39;save_dir&#39;) print(&#39;Showing the dialog!&#39;) # app.py import dialog class Prefs: def get(self, name): pass prefs = Prefs() dialog.show() 一般来说，还是应该尽量避免动态引入，因为import语句毕竟是有开销的，如果它出现在频繁执行的循环体里面，这种开销会更大。虽然如此，但是比大幅度修改整个程序要好。 89. 重构时考虑通过warnings提醒开发者API已经发生变化 # Example 1 def print_distance(speed, duration): distance = speed * duration print(f&#39;{distance} miles&#39;) print_distance(5, 2.5) # Example 2 print_distance(1000, 3) # Example 3 CONVERSIONS = { &#39;mph&#39;: 1.60934 / 3600 * 1000, # m/s &#39;hours&#39;: 3600, # seconds &#39;miles&#39;: 1.60934 * 1000, # m &#39;meters&#39;: 1, # m &#39;m/s&#39;: 1, # m &#39;seconds&#39;: 1, # s } def convert(value, units): rate = CONVERSIONS[units] return rate * value def localize(value, units): rate = CONVERSIONS[units] return value / rate def print_distance(speed, duration, *, speed_units=&#39;mph&#39;, time_units=&#39;hours&#39;, distance_units=&#39;miles&#39;): norm_speed = convert(speed, speed_units) norm_duration = convert(duration, time_units) norm_distance = norm_speed * norm_duration distance = localize(norm_distance, distance_units) print(f&#39;{distance} {distance_units}&#39;) # Example 4 print_distance(1000, 3, speed_units=&#39;meters&#39;, time_units=&#39;seconds&#39;) # Example 5 import warnings def print_distance(speed, duration, *, speed_units=None, time_units=None, distance_units=None): if speed_units is None: warnings.warn( &#39;speed_units required&#39;, DeprecationWarning) speed_units = &#39;mph&#39; if time_units is None: warnings.warn( &#39;time_units required&#39;, DeprecationWarning) time_units = &#39;hours&#39; if distance_units is None: warnings.warn( &#39;distance_units required&#39;, DeprecationWarning) distance_units = &#39;miles&#39; norm_speed = convert(speed, speed_units) norm_duration = convert(duration, time_units) norm_distance = norm_speed * norm_duration distance = localize(norm_distance, distance_units) print(f&#39;{distance} {distance_units}&#39;) # Example 6 import contextlib import io fake_stderr = io.StringIO() with contextlib.redirect_stderr(fake_stderr): print_distance(1000, 3, speed_units=&#39;meters&#39;, time_units=&#39;seconds&#39;) print(fake_stderr.getvalue()) # Example 7 def require(name, value, default): if value is not None: return value warnings.warn( f&#39;{name} will be required soon, update your code&#39;, DeprecationWarning, stacklevel=3) return default def print_distance(speed, duration, *, speed_units=None, time_units=None, distance_units=None): speed_units = require(&#39;speed_units&#39;, speed_units, &#39;mph&#39;) time_units = require(&#39;time_units&#39;, time_units, &#39;hours&#39;) distance_units = require( &#39;distance_units&#39;, distance_units, &#39;miles&#39;) norm_speed = convert(speed, speed_units) norm_duration = convert(duration, time_units) norm_distance = norm_speed * norm_duration distance = localize(norm_distance, distance_units) print(f&#39;{distance} {distance_units}&#39;) # Example 8 import contextlib import io fake_stderr = io.StringIO() with contextlib.redirect_stderr(fake_stderr): print_distance(1000, 3, speed_units=&#39;meters&#39;, time_units=&#39;seconds&#39;) print(fake_stderr.getvalue()) # Example 9 warnings.simplefilter(&#39;error&#39;) try: warnings.warn(&#39;This usage is deprecated&#39;, DeprecationWarning) except DeprecationWarning: pass # Expected else: assert False warnings.resetwarnings() # Example 10 warnings.resetwarnings() warnings.simplefilter(&#39;ignore&#39;) warnings.warn(&#39;This will not be printed to stderr&#39;) warnings.resetwarnings() # Example 11 import logging fake_stderr = io.StringIO() handler = logging.StreamHandler(fake_stderr) formatter = logging.Formatter( &#39;%(asctime)-15s WARNING] %(message)s&#39;) handler.setFormatter(formatter) logging.captureWarnings(True) logger = logging.getLogger(&#39;py.warnings&#39;) logger.addHandler(handler) logger.setLevel(logging.DEBUG) warnings.resetwarnings() warnings.simplefilter(&#39;default&#39;) warnings.warn(&#39;This will go to the logs output&#39;) print(fake_stderr.getvalue()) warnings.resetwarnings() # Example 12 with warnings.catch_warnings(record=True) as found_warnings: found = require(&#39;my_arg&#39;, None, &#39;fake units&#39;) expected = &#39;fake units&#39; assert found == expected # Example 13 assert len(found_warnings) == 1 single_warning = found_warnings[0] assert str(single_warning.message) == ( &#39;my_arg will be required soon, update your code&#39;) assert single_warning.category == DeprecationWarning 90. 考虑通过typing做静态分析，以消除bugtyping模块：https://docs.python.org/3.8/library/typing.html。可以给变量，字段，函数与方法标注类型信息。 from typing import Callable, List, TypeVar Value = TypeVar(&#39;Value&#39;) Func = Callable[[Value, Value], Value] def combine(func: Func[Value], values: List[Value]) -&gt; Value: assert len(values) &gt; 0 result = values[0] for next_value in values[1:]: result = func(result, next_value) return result Real = TypeVar(&#39;Real&#39;, int, float) def add(x: Real, y: Real) -&gt; Real: return x + y inputs = [1, 2, 3, 4j] # Oops: included a complex number result = combine(add, inputs) print(result) # (6+4j) assert result == 10 下面的python3.7开始支持，程序执行时，忽略类型注解里提到的值，于是就解决了提前引用的问题，而且程序在启动时的性能也会提升。 from __future__ import annotations class FirstClass: def __init__(self, value: SecondClass) -&gt; None: # OK self.value = value class SecondClass: def __init__(self, value: int) -&gt; None: self.value = value second = SecondClass(5) print(second) # &lt;__main__.SecondClass object at 0x7fafc12cd4d0&gt; first = FirstClass(second) print(first) # &lt;__main__.FirstClass object at 0x7fafc12cd510&gt;]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python基础</tag>
        <tag>python优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分别用多进程，多线程，协程爬取豆瓣top250数据]]></title>
    <url>%2F2021%2F07%2Fspider%2Fcases%2F%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3top250%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[一. 多进程爬取import requests import time import multiprocessing import random from lxml import etree from multiprocessing import Queue class DouBanSpider: &quot;&quot;&quot;爬虫类&quot;&quot;&quot; self.headers = {&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;} self.baseURL = &quot;https://movie.douban.com/top250&quot; # dataQueue：队列存储数据 self.dataQueue = Queue() self.num = 1 def loadPage(self, url): &quot;&quot;&quot;向url发送请求,获取响应内容&quot;&quot;&quot; # 随机休眠0-1秒，避免爬虫过快，会导致爬虫被封禁 time.sleep(random.random()) return requests.get(url, headers=self.headers).content def parsePage(self, url): &quot;&quot;&quot;根据起始url提取所有的url&quot;&quot;&quot; content = self.loadPage(url) html = etree.HTML(content) node_list = html.xpath(&quot;//div[@class=&#39;info&#39;]&quot;) for node in node_list: # 每部电影的标题 title = node.xpath(&quot;.//span[@class=&#39;title&#39;]/text()&quot;)[0] # 每部电影的评分 score = node.xpath(&quot;.//span[@class=&#39;rating_num&#39;]/text()&quot;)[0] # 将数据存储到队列里 self.dataQueue.put(score + &quot;\t&quot; + title) # 只有在第一页的时候才获取所有url组成的列表，其它翻页就不再获取 if url == self.baseURL: return [self.baseURL + link for link in html.xpath(&quot;//div[@class=&#39;paginator&#39;]/a/@href&quot;)] def startWork(self): link_list = self.parsePage(self.baseURL) process_list = [] for link in link_list: process = multiprocessing.Process(target=self.parsePage, args=[link]) process.start() process_list.append(process) # 父进程等待所有子进程结束，自己再结束 for process in process_list: process.join() # 循环get队列的数据，直到队列为空则退出 while not self.dataQueue.empty(): print(self.num) print(self.dataQueue.get()) self.num += 1 if __name__ == &quot;__main__&quot;: spider = DouBanSpider() start = time.time() spider.startWork() stop = time.time() print(f&quot;\n[LOG]: {stop} - {start} seconds...&quot;) 二. 多进程爬取import requests import random import time import threading from lxml import etree from queue import Queue class DouBanSpider: &quot;&quot;&quot;爬虫类&quot;&quot;&quot; self.headers = {&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;} self.baseURL = &quot;https://movie.douban.com/top250&quot; # dataQueue：队列存储数据 self.dataQueue = Queue() self.num = 1 def loadPage(self, url): &quot;&quot;&quot;向url发送请求,获取响应内容&quot;&quot;&quot; time.sleep(random.random()) return requests.get(url, headers=self.headers).content def parsePage(self, url): &quot;&quot;&quot;根据起始url提取所有的url&quot;&quot;&quot; content = self.loadPage(url) html = etree.HTML(content) node_list = html.xpath(&quot;//div[@class=&#39;info&#39;]&quot;) for node in node_list: title = node.xpath(&quot;.//span[@class=&#39;title&#39;]/text()&quot;)[0] score = node.xpath(&quot;.//span[@class=&#39;rating_num&#39;]/text()&quot;)[0] # 将数据存储到队列里 self.dataQueue.put(score + &quot;\t&quot; + title) # 只有在第一页的时候才获取所有url组成的列表，其它翻页就不再获取 if url == self.baseURL: return [self.baseURL + link for link in html.xpath(&quot;//div[@class=&#39;paginator&#39;]/a/@href&quot;)] def startWork(self): &quot;&quot;&quot;开始&quot;&quot;&quot; link_list = self.parsePage(self.baseURL) thread_list = [] for link in link_list: thread = threading.Thread(target=self.parsePage, args=[link]) thread.start() thread_list.append(thread) # 父线程等待所有子线程结束，自己再结束 for thread in thread_list: thread.join() # 循环get队列的数据，直到队列为空则退出 while not self.dataQueue.empty(): print(self.num) print(self.dataQueue.get()) self.num += 1 if __name__ == &quot;__main__&quot;: spider = DouBanSpider() start = time.time() spider.startWork() stop = time.time() print(f&quot;\n[LOG]: {stop - start} seconds...&quot;) 三. 协程爬取&quot;&quot;&quot;协程爬虫&quot;&quot;&quot; import time import gevent import requests import random from lxml import etree from queue import Queue from gevent import monkey # gevent 让我们可以按同步的方式来写异步程序 # monkey.patch_all() 会在Python程序执行时动态的将网络库（socket,select,thread) # 替换掉，变成异步的库，让我们的程序可以异步的方式处理网络相关的任务 monkey.patch_all() class DouBanSpider: &quot;&quot;&quot;爬虫类&quot;&quot;&quot; self.headers = {&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;} self.baseURL = &quot;https://movie.douban.com/top250&quot; # dataQueue：队列存储数据 self.dataQueue = Queue() self.num = 1 def loadPage(self, url): &quot;&quot;&quot;向url发送请求,获取响应内容&quot;&quot;&quot; time.sleep(random.random()) return requests.get(url, headers=self.headers).content def parsePage(self, url): &quot;&quot;&quot;根据起始url提取所有的url&quot;&quot;&quot; content = self.loadPage(url) html = etree.HTML(content) node_list = html.xpath(&quot;//div[@class=&#39;info&#39;]&quot;) for node in node_list: title = node.xpath(&quot;.//span[@class=&#39;title&#39;]/text()&quot;)[0] score = node.xpath(&quot;.//span[@class=&#39;rating_num&#39;]/text()&quot;)[0] self.dataQueue.put(score + &quot;\t&quot; + title) if url == self.baseURL: return [self.baseURL + link for link in html.xpath(&quot;//div[@class=&#39;paginator&#39;]/a/@href&quot;)] def startWork(self): &quot;&quot;&quot;开始&quot;&quot;&quot; link_list = self.parsePage(self.baseURL) print(link_list) jobs = [gevent.spawn(self.parsePage, link) for link in link_list] # 父线程阻塞，等待所有任务结束后继续执行 gevent.joinall(jobs) # 循环get队列的数据，直到队列为空则退出 while not self.dataQueue.empty(): print(self.num) print(self.dataQueue.get()) self.num += 1 if __name__ == &quot;__main__&quot;: spider = DouBanSpider() start = time.time() spider.startWork() stop = time.time() print(f&quot;\n[LOG]: {stop} - {start} seconds...&quot;)]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爬取九酷音乐]]></title>
    <url>%2F2021%2F07%2Fspider%2Fcases%2F%E7%88%AC%E5%8F%96%E4%B9%9D%E9%85%B7%E9%9F%B3%E4%B9%90%2F</url>
    <content type="text"><![CDATA[爬取网站：https://www.9ku.com/ 下载音乐代码： import re import os import time import requests import urllib.parse headers = { &#39;Referer&#39;: &#39;https://www.9ku.com/&#39;, &#39;user-agent&#39;: &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36&#39; } def start_music(): while True: name = input(&#39;请输入你要下载的歌曲名称：&#39;) name1 = urllib.parse.quote(name) url = f&quot;https://baidu.9ku.com/song/?key={name1}&quot; try: rep1 = requests.get(url=url, headers=headers).text dowm_url = &#39;https:&#39; + re.search(r&#39;&lt;a target=&quot;_blank&quot; href=&quot;(?P&lt;d_url&gt;.*?)&quot; class=&quot;down&quot;&gt;下载&lt;/a&gt;&#39;, rep1).group(&#39;d_url&#39;) rep2 = requests.get(url=dowm_url, headers=headers).text return rep2 except: print(&#39;没有找到，请输入正确的歌曲名称&#39;) continue def music_down(resp): tag_music = re.search(r&#39;&lt;a href=&quot;(?P&lt;d2_url&gt;.*?)&quot; style=&quot;display:none&quot;&gt;(?P&lt;mus_name&gt;.*?)Mp3下载&lt;/a&gt;&#39;, resp) music_url = tag_music.group(&#39;d2_url&#39;) music_name = tag_music.group(&#39;mus_name&#39;) print(music_url, music_name) if not os.path.exists(&#39;music&#39;): os.mkdir(&#39;music&#39;) path = &#39;music/&#39; + music_name + &quot;.mp3&quot; resp = requests.get(url=music_url, headers=headers).content with open(path, &quot;wb&quot;) as f: f.write(resp) print(music_name, &quot;下载完成&quot;) def main(): start = time.time() resp = start_music() music_down(resp) print(&quot;一共耗时&quot;, time.time() - start) if __name__ == &#39;__main__&#39;: main() 执行结果如下图：]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用装饰器改进代码]]></title>
    <url>%2F2021%2F06%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2F%E7%94%A8%E8%A3%85%E9%A5%B0%E5%99%A8%E6%94%B9%E8%BF%9B%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[一. python中的装饰器是什么装饰器是一个强大的工具，可以应用于许多方面，如类，方法，函数，生成器等。 装饰器实际上是对包装函数进行更改，拓展或处理。 1.1 装饰器函数可以在函数上使用装饰器来应用各种逻辑—可以验证参数，检查前置条件，完全改变行为，修改签名，缓存结果等。 如：我们将创建一个实现retry机制的基本装饰器，控制一个特定的域级异常 并重试一定的次数 &quot;&quot;&quot; Creating a decorator to be applied over a function. &quot;&quot;&quot; from functools import wraps from unittest import TestCase, main, mock from log import logger class ControlledException(Exception): &quot;&quot;&quot;A generic exception on the program&#39;s domain.&quot;&quot;&quot; def retry(operation): @wraps(operation) def wrapped(*args, **kwargs): last_raised = None RETRIES_LIMIT = 3 for _ in range(RETRIES_LIMIT): try: return operation(*args, **kwargs) except ControlledException as e: logger.info(&quot;retrying %s&quot;, operation.__qualname__) last_raised = e raise last_raised return wrapped class OperationObject: &quot;&quot;&quot;A helper object to test the decorator.&quot;&quot;&quot; def __init__(self): self._times_called: int = 0 def run(self) -&gt; int: &quot;&quot;&quot;Base operation for a particular action&quot;&quot;&quot; self._times_called += 1 return self._times_called def __str__(self): return f&quot;{self.__class__.__name__}()&quot; __repr__ = __str__ class RunWithFailure: def __init__( self, task: &quot;OperationObject&quot;, fail_n_times: int = 0, exception_cls=ControlledException, ): self._task = task self._fail_n_times = fail_n_times self._times_failed = 0 self._exception_cls = exception_cls def run(self): called = self._task.run() if self._times_failed &lt; self._fail_n_times: self._times_failed += 1 raise self._exception_cls(f&quot;{self._task!s} failed!&quot;) return called @retry def run_operation(task): &quot;&quot;&quot;Run a particular task, simulating some failures on its execution.&quot;&quot;&quot; return task.run() class RetryDecoratorTest(TestCase): def setUp(self): self.info = mock.patch(&quot;log.logger.info&quot;).start() def tearDown(self): self.info.stop() def test_fail_less_than_retry_limit(self): &quot;&quot;&quot;Retry = 3, fail = 2, should work&quot;&quot;&quot; task = OperationObject() failing_task = RunWithFailure(task, fail_n_times=2) times_run = run_operation(failing_task) self.assertEqual(times_run, 3) self.assertEqual(task._times_called, 3) def test_fail_equal_retry_limit(self): &quot;&quot;&quot;Retry = fail = 3, will fail&quot;&quot;&quot; task = OperationObject() failing_task = RunWithFailure(task, fail_n_times=3) with self.assertRaises(ControlledException): run_operation(failing_task) def test_no_failures(self): task = OperationObject() failing_task = RunWithFailure(task, fail_n_times=0) times_run = run_operation(failing_task) self.assertEqual(times_run, 1) self.assertEqual(task._times_called, 1) if __name__ == &quot;__main__&quot;: main() 装饰类： &quot;&quot;&quot;Clean Code in Python - Chapter 5 Class decorators. Reimplement the serialization of the events by applying a class decorator. Use the @dataclass decorator. This code only works in Python 3.7+ &quot;&quot;&quot; import sys import unittest from datetime import datetime from decorator_class_2 import ( Serialization, format_time, hide_field, show_original, ) try: from dataclasses import dataclass except ImportError: def dataclass(cls): return cls @Serialization( username=show_original, password=hide_field, ip=show_original, timestamp=format_time, ) @dataclass class LoginEvent: username: str password: str ip: str timestamp: datetime class TestLoginEventSerialized(unittest.TestCase): @unittest.skipIf( sys.version_info[:3] &lt; (3, 7, 0), reason=&quot;Requires Python 3.7+ to run&quot; ) def test_serializetion(self): event = LoginEvent( &quot;username&quot;, &quot;password&quot;, &quot;127.0.0.1&quot;, datetime(2016, 7, 20, 15, 45) ) expected = { &quot;username&quot;: &quot;username&quot;, &quot;password&quot;: &quot;**redacted**&quot;, &quot;ip&quot;: &quot;127.0.0.1&quot;, &quot;timestamp&quot;: &quot;2020-07-20 15:45&quot;, } self.assertEqual(event.serialize(), expected) if __name__ == &quot;__main__&quot;: unittest.main() 二. 好的装饰器的相关分析 封装或关注点分离； 正交性，装饰器所做的工作应该是独立的，并且尽可能与它所装饰的对象解耦； 可重用性，装饰器必须足够通用。]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux上安装selenium环境及测试]]></title>
    <url>%2F2021%2F06%2Fspider%2Fselenium%2Flinux%E4%B8%8A%E5%AE%89%E8%A3%85selenium%E7%8E%AF%E5%A2%83%E5%8F%8A%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[win10安装selenium环境请参考：https://cuiyonghua.blog.csdn.net/article/details/103699493 下面是：linux centos安装selenium+chrome+chromedriver 一. 安装chrome1.1 增加yum源在/etc/yum.repos.d/目录下新建文件google-chrome.repo，向其中添加如下内容: [google-chrome] name=google-chrome baseurl=http://dl.google.com/linux/chrome/rpm/stable/$basearch enabled=1 gpgcheck=1 gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub 1.2 chrome下载安装yum install https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm 二. 安装chromedriverchromedriver的驱动必须与google的版本对应，到：https://chromedriver.storage.googleapis.com/index.html 下载对应的linux版本，解压到bin目录中python.exe所在的目录。（我的conda目录是：/data/.conda/envs/python38/bin/python3） 三. 安装selenium并测试安装selenium： pip3 install selenium 测试：要以无头的方式运行 import selenium print(selenium.__version__) from selenium import webdriver options = webdriver.ChromeOptions() options.add_argument(&#39;--headless&#39;) options.add_argument(&#39;--disable-gpu&#39;) options.add_argument(&#39;--no-sandbox&#39;) driver = webdriver.Chrome(chrome_options=options) driver.get(&#39;http://www.baidu.com&#39;) print(driver.current_url) print(driver.page_source) 无报错则环境搭建成功。 如果找不到chromedriver位置，可以按下面设置（如chromedriver在/root/test/chromedriver）： driver = webdriver.Chrome(executable_path=&quot;/root/test/chromedriver&quot;, chrome_options=options) 至此完！]]></content>
      <categories>
        <category>爬虫</category>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好代码的一般特征]]></title>
    <url>%2F2021%2F06%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2F%E5%A5%BD%E4%BB%A3%E7%A0%81%E7%9A%84%E4%B8%80%E8%88%AC%E7%89%B9%E5%BE%81%2F</url>
    <content type="text"><![CDATA[一. 契约式设计实现契约式编程的最佳方法是为方法，函数，类添加控制机制，若违反约定，则会引发RuntimeError或ValueError异常。 很难为异常的正确类型设计通用的会泽，因为异常的类型很大程度上取决于应用程序，所以此时应该创建自定义异常。 二. 防错性程序设计2.1 错误处理数据出错，通常是输入数据的情况。 值替换：某些场景出现错误，我们可以用另一个更安全的值替换这个结果。理论上来说，当出现错误的场景时，软件程序也不报错，仍然可以正常运行，这意味着程序是具有较强的鲁棒性的。另一个版本，可以对未提供的数据使用默认值。 异常处理: 重要的是知道如何以及何时使用它们，这里最重要的理念是避免用异常作为控制流（go-to）类型的构造。 2.3 在python中使用断言import time import logging import unittest from unittest.mock import Mock, patch logger = logging.getLogger(__name__) class Event: def __init__(self, payload): self._payload = payload def decode(self): return f&quot;decoded {self._payload}&quot; def connect_with_retry(connector, retry_n_times, retry_threshold=5): &quot;&quot;&quot;Tries to establish the connection of &lt;connector&gt; retrying &lt;retry_n_times&gt;. If it can connect, returns the connection object. If it&#39;s not possible after the retries, raises ConnectionError :param connector: An object with a `.connect()` method. :param retry_n_times int: The number of times to try to call ``connector.connect()``. :param retry_threshold int: The time lapse between retry calls. &quot;&quot;&quot; for _ in range(retry_n_times): try: return connector.connect() except ConnectionError as e: logger.info( &quot;%s: attempting new connection in %is&quot;, e, retry_threshold ) time.sleep(retry_threshold) exc = ConnectionError(f&quot;Couldn&#39;t connect after {retry_n_times} times&quot;) logger.exception(exc) raise exc class DataTransport: &quot;&quot;&quot;An example of an object that separates the exception handling by abstraction levels. &quot;&quot;&quot; retry_threshold: int = 5 retry_n_times: int = 3 def __init__(self, connector): self._connector = connector self.connection = None def deliver_event(self, event): self.connection = connect_with_retry( self._connector, self.retry_n_times, self.retry_threshold ) self.send(event) def send(self, event): try: return self.connection.send(event.decode()) except ValueError as e: logger.error(&quot;%r contains incorrect data: %s&quot;, event, e) raise class FailsAfterNTimes: def __init__(self, n_times: int, with_exception) -&gt; None: self._remaining_failures = n_times self._exception = with_exception def connect(self): self._remaining_failures -= 1 if self._remaining_failures &gt;= 0: raise self._exception return self def send(self, data): return data @patch(&quot;time.sleep&quot;, return_value=0) class TestTransport(unittest.TestCase): def setUp(self): self.error_log = patch(&quot;exceptions_2.logger.error&quot;) self.error_log.start() def tearDown(self): self.error_log.stop() def test_connects_after_retries(self, sleep): data_transport = DataTransport( FailsAfterNTimes(2, with_exception=ConnectionError) ) data_transport.send = Mock() event = Event(&quot;test&quot;) data_transport.deliver_event(event) data_transport.send.assert_called_once_with(event) assert ( sleep.call_count == DataTransport.retry_n_times - 1 ), sleep.call_count def test_connects_directly(self, sleep): connector = Mock() data_transport = DataTransport(connector) data_transport.send = Mock() data_transport.deliver_event(Event(&quot;test&quot;)) connector.connect.assert_called_once() assert sleep.call_count == 0 def test_connection_error(self, sleep): data_transport = DataTransport( Mock(connect=Mock(side_effect=ConnectionError)) ) self.assertRaisesRegex( ConnectionError, &quot;Couldn&#39;t connect after \d+ times&quot;, data_transport.deliver_event, Event(&quot;connection error&quot;), ) assert sleep.call_count == DataTransport.retry_n_times def test_error_in_event(self, sleep): data_transport = DataTransport(Mock()) event = Mock(decode=Mock(side_effect=ValueError)) self.assertRaises(ValueError, data_transport.deliver_event, event) assert not sleep.called if __name__ == &quot;__main__&quot;: unittest.main() 三. 关注点分离经验之谈就是，定义良好的软件应该是高内聚和低耦合的。 我们通常认为函数，方法或类之间的契约适用于必须分离的职责，实际上关注点分离的思想还适用于python模块，包和基本上任何软件组件。 四. 常用缩略词OAOO(Once and Only Once): 一次且仅有一次DRY(Don’t Repeat Yourself): 避免自身重复，代码重复直接影响到可维护的问题，是非常不可取的，会导致许多负面的结果 易错 成本很高 不可靠，如果上下文单个更改需要更改多个位置，就需要编写代码的人记住所有必须进行修改的实例 KIS(Keep It Simple): 保持简单 LBYL(Book Before You Leap): 三思而后行 五. 组合和继承面向对象时，经常会讨论用范式的主要思想（多态性，继承和封装）解决一些问题。 创建一个派生类时，必须要小心，因为这是一把双刃剑，它的优点是让我们免费得到父类方法的所有代码，另一方面，把它们带到一个新的类，这意味着我们可能在一个新的定义上过于注重功能性。 多重继承支持创建mixin的应用程序。mixin是一个基类，它封账了一些以重用代码为目标的常见行为。]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用reduce进行累加操作]]></title>
    <url>%2F2021%2F03%2Fdatabase%2F%E5%A4%A7%E6%95%B0%E6%8D%AE%2F%E4%BD%BF%E7%94%A8reduce%E8%BF%9B%E8%A1%8C%E7%B4%AF%E5%8A%A0%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[一. reduce函数的三个部分from functools import reduce xs = [10, 5, 1, 19, 11, 203] # 设定要累加的数据 def my_add(acc, nxt): return acc + nxt # 我们要调用reduce函数时，然后是序列，最后是初始值 num_sum = reduce(my_add, xs, 0) print(num_sum) # 或者用lambda表达式来替代: num_sum = reduce(lambda acc, nxt: acc + nxt, xs, 0) print(num_sum) 如，可以使用lambda函数来公开dict中的get方法，并对几个数值进行求和： from functools import reduce my_products = [ {&quot;price&quot;: 9.99, &quot;sn&quot;: &#39;00231&#39;}, {&quot;price&quot;: 59.99, &quot;sn&quot;: &#39;11010&#39;}, {&quot;price&quot;: 74.99, &quot;sn&quot;: &#39;00013&#39;}, {&quot;price&quot;: 19.99, &quot;sn&quot;: &#39;00831&#39;}, ] # 获取price对象的一个值，将其与另一个值相加 result = reduce(lambda acc, nxt: acc+nxt.get(&quot;price&quot;, 0), my_products, 0) print(result) 二. 归约函数2个归约函数： filter函数会返回一个指定条件为true的列表； frequency函数会返回一个dict对象，其中键是列表中的唯一元素，值是列表中元素的总数。 使用reduce函数来模拟filter函数 from functools import reduce xs = [1, 2, 3, 4, 5, 6, 7, 8, 9] def keep_if_even(acc, nxt): if nxt % 2 == 0: return acc + [nxt] else: return acc result = reduce(keep_if_even, xs, []) print(result) 使用reduce函数来模拟frequncies from functools import reduce xs = [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;A&quot;, &quot;A&quot;, &quot;C&quot;, &quot;A&quot;] ys = [1, 3, 6, 1, 2, 9, 3, 12] def make_counts(acc, nxt): acc[nxt] = acc.get(nxt, 0) + 1 return acc def my_frequencies(xs): return reduce(make_counts, xs, {}) print(my_frequencies(xs)) print(my_frequencies(ys)) print(my_frequencies(&quot;mississippi&quot;)) 三. 同时使用map函数和reduce函数将单词转换成分数，然后计算这些分数的总和 from functools import reduce def score_word(word): points = 0 for char in word: if char == &quot;z&quot;: points += 10 elif char in [&quot;f&quot;, &quot;h&quot;, &quot;v&quot;, &quot;w&quot;]: points += 5 elif char in [&quot;b&quot;, &quot;c&quot;, &quot;m&quot;, &quot;p&quot;]: points += 3 else: points += 1 return points words = [&quot;these&quot;, &quot;are&quot;, &quot;my&quot;, &quot;words&quot;] total_score = reduce(lambda acc, nxt: acc + nxt, map(score_word, words)) print(total_score) # 25 四. 使用reduce来分析汽车销售的趋势from functools import reduce def low_med_hi(d, k, breaks): if float(d[k]) &lt; breaks[0]: return &quot;low&quot; elif float(d[k]) &lt; breaks[1]: return &quot;medium&quot; else: return &quot;high&quot; def clean_entry(d): r = {&#39;profit&#39;: None, &#39;mpg&#39;: None, &#39;odo&#39;: None} r[&#39;profit&#39;] = float(d.get(&quot;price-sell&quot;, 0)) - float(d.get(&quot;price-buy&quot;, 0)) r[&#39;mpg&#39;] = low_med_hi(d, &#39;mpg&#39;, (18, 35)) r[&#39;odo&#39;] = low_med_hi(d, &#39;odo&#39;, (60000, 105000)) return r def acc_average(acc, profit): acc[&#39;total&#39;] = acc.get(&#39;total&#39;, 0) + profit acc[&#39;count&#39;] = acc.get(&#39;count&#39;, 0) + 1 acc[&#39;average&#39;] = acc[&#39;total&#39;] / acc[&#39;count&#39;] return acc def sort_and_add(acc, nxt): p = nxt[&#39;profit&#39;] acc[&#39;mpg&#39;][nxt[&#39;mpg&#39;]] = acc_average(acc[&#39;mpg&#39;].get(nxt[&#39;mpg&#39;], {}), p) acc[&#39;odo&#39;][nxt[&#39;odo&#39;]] = acc_average(acc[&#39;odo&#39;].get(nxt[&#39;odo&#39;], {}), p) return acc if __name__ == &quot;__main__&quot;: import json with open(&quot;cars.json&quot;) as f: xs = json.load(f) results = reduce(sort_and_add, map(clean_entry, xs), {&quot;mpg&quot;: {}, &quot;odo&quot;: {}}) print(json.dumps(results, indent=4)) cars.json [{&quot;id&quot;: &quot;51145&quot;, &quot;trim&quot;: &quot;3&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;84045&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 3&quot;, &quot;price-sell&quot;: &quot;5671&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5595&quot;}, {&quot;id&quot;: &quot;56970&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 23, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;75317&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LX&quot;, &quot;price-sell&quot;: &quot;8830&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING 4C&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7800&quot;}, {&quot;id&quot;: &quot;38444&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;70503&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX&quot;, &quot;price-sell&quot;: &quot;6810&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4730&quot;}, {&quot;id&quot;: &quot;70756&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;97873&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;5061&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS 3.0L V6 EFI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4150&quot;}, {&quot;id&quot;: &quot;9598&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;79734&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT 3.5L&quot;, &quot;price-sell&quot;: &quot;8012&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6900&quot;}, {&quot;id&quot;: &quot;11718&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;69506&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;8896&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8100&quot;}, {&quot;id&quot;: &quot;68261&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;70224&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;9605&quot;, &quot;size&quot;: &quot;SPECIALTY&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;300 3.5L V6 MPI / SM&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9960&quot;}, {&quot;id&quot;: &quot;16875&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77563&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV HARDTOP 2.5L&quot;, &quot;price-sell&quot;: &quot;5592&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;TRACKER 2WD V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5600&quot;}, {&quot;id&quot;: &quot;5707&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;62614&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7040&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;G6 V6&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8440&quot;}, {&quot;id&quot;: &quot;29409&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 35, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;51757&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;7563&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6400&quot;}, {&quot;id&quot;: &quot;33443&quot;, &quot;trim&quot;: &quot;Lar&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;60772&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON LAREDO&quot;, &quot;price-sell&quot;: &quot;11957&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;GRAND CHEROKEE 2WD V&quot;, &quot;make&quot;: &quot;JEEP&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9600&quot;}, {&quot;id&quot;: &quot;62291&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;3&quot;, &quot;odo&quot;: &quot;80816&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 5.3L FFV&quot;, &quot;price-sell&quot;: &quot;10829&quot;, &quot;size&quot;: &quot;LARGE SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;TAHOE 4WD 5.3L V8 SF&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Special&quot;, &quot;price-buy&quot;: &quot;8040&quot;}, {&quot;id&quot;: &quot;44780&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;68650&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;8633&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8000&quot;}, {&quot;id&quot;: &quot;6044&quot;, &quot;trim&quot;: &quot;GL&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;105077&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN GL2&quot;, &quot;price-sell&quot;: &quot;3379&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ALERO 4C&quot;, &quot;make&quot;: &quot;OLDSMOBILE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3640&quot;}, {&quot;id&quot;: &quot;22480&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 42, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;87115&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;5172&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION 2.2L I4 EFI / SF&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3960&quot;}, {&quot;id&quot;: &quot;49964&quot;, &quot;trim&quot;: &quot;Cla&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;21491&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN CLASSIC&quot;, &quot;price-sell&quot;: &quot;3691&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C 2.2L I4 MP&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4300&quot;}, {&quot;id&quot;: &quot;14067&quot;, &quot;trim&quot;: &quot;150&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;88763&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D UTILITY 5.3L LS&quot;, &quot;price-sell&quot;: &quot;6854&quot;, &quot;size&quot;: &quot;LARGE SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;SUBURBAN 1500 4WD 5.&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BROWN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9020&quot;}, {&quot;id&quot;: &quot;44388&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;106913&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;2824&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3405&quot;}, {&quot;id&quot;: &quot;61299&quot;, &quot;trim&quot;: &quot;XLT&quot;, &quot;year&quot;: &quot;2001&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;82967&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.6L XLT&quot;, &quot;price-sell&quot;: &quot;5086&quot;, &quot;size&quot;: &quot;LARGE SUV&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;EXPEDITION 4WD V8 4.&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6230&quot;}, {&quot;id&quot;: &quot;21212&quot;, &quot;trim&quot;: &quot;GT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;105887&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4773&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ELANTRA&quot;, &quot;make&quot;: &quot;HYUNDAI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4230&quot;}, {&quot;id&quot;: &quot;671&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;61239&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7486&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;MILAN 4C&quot;, &quot;make&quot;: &quot;MERCURY&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6980&quot;}, {&quot;id&quot;: &quot;15110&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;71855&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;WAGON 3.5L SXT&quot;, &quot;price-sell&quot;: &quot;9501&quot;, &quot;size&quot;: &quot;SPECIALTY&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;MAGNUM V6 3.5L V6 MP&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8945&quot;}, {&quot;id&quot;: &quot;61172&quot;, &quot;trim&quot;: &quot;SEL&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;59034&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON SEL&quot;, &quot;price-sell&quot;: &quot;4196&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS 3.0L V6 EFI S&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3775&quot;}, {&quot;id&quot;: &quot;20936&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 40, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;70303&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.8L SXT&quot;, &quot;price-sell&quot;: &quot;6346&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CARAVAN GRAND FWD V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7740&quot;}, {&quot;id&quot;: &quot;44581&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 34, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;66697&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D CUV 3.0L SE&quot;, &quot;price-sell&quot;: &quot;8779&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FREESTYLE FWD V6 3.0&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8115&quot;}, {&quot;id&quot;: &quot;14292&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;59125&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;4701&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;AVEO&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5570&quot;}, {&quot;id&quot;: &quot;46289&quot;, &quot;trim&quot;: &quot;SEL&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;66500&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE COMFORT&quot;, &quot;price-sell&quot;: &quot;5433&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS 3.0L V6 EFI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4770&quot;}, {&quot;id&quot;: &quot;31004&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;46720&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6378&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6400&quot;}, {&quot;id&quot;: &quot;7986&quot;, &quot;trim&quot;: &quot;Spo&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;94430&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.7L&quot;, &quot;price-sell&quot;: &quot;4006&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DURANGO 2WD V8&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;4400&quot;}, {&quot;id&quot;: &quot;32078&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;85532&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS 3.5L FFV&quot;, &quot;price-sell&quot;: &quot;8964&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8600&quot;}, {&quot;id&quot;: &quot;22865&quot;, &quot;trim&quot;: &quot;GT&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;109888&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN GT1&quot;, &quot;price-sell&quot;: &quot;4131&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND AM V6&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4510&quot;}, {&quot;id&quot;: &quot;45891&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;64583&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE1&quot;, &quot;price-sell&quot;: &quot;8211&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;G6 4C&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7635&quot;}, {&quot;id&quot;: &quot;60207&quot;, &quot;trim&quot;: &quot;ST&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;58350&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;QUAD CAB 5.9L SLT&quot;, &quot;price-sell&quot;: &quot;6391&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;1500 RAM PICKUP 2WD&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;6455&quot;}, {&quot;id&quot;: &quot;62868&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;80333&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;8712&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;AVENGER 4C&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8160&quot;}, {&quot;id&quot;: &quot;45682&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;77747&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;8212&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8235&quot;}, {&quot;id&quot;: &quot;26685&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;80418&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER 3.8L LX&quot;, &quot;price-sell&quot;: &quot;2524&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;WINDSTAR FWD V6 3.8L&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3310&quot;}, {&quot;id&quot;: &quot;37204&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;74202&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY EX&quot;, &quot;price-sell&quot;: &quot;5414&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;XL-7 2WD&quot;, &quot;make&quot;: &quot;SUZUKI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6370&quot;}, {&quot;id&quot;: &quot;16169&quot;, &quot;trim&quot;: &quot;XLT&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;60977&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 5.4L XLT&quot;, &quot;price-sell&quot;: &quot;8501&quot;, &quot;size&quot;: &quot;LARGE SUV&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;EXPEDITION 2WD V8 5.&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8000&quot;}, {&quot;id&quot;: &quot;24685&quot;, &quot;trim&quot;: &quot;LW3&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 48, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;65506&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON LW300&quot;, &quot;price-sell&quot;: &quot;3916&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;L SERIES&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5300&quot;}, {&quot;id&quot;: &quot;69251&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;34534&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;CREW CAB 5.7L LIMITED&quot;, &quot;price-sell&quot;: &quot;24114&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;TUNDRA PICKUP 2WD V8&quot;, &quot;make&quot;: &quot;TOYOTA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;23272.02&quot;}, {&quot;id&quot;: &quot;68068&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;87532&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5622&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4640&quot;}, {&quot;id&quot;: &quot;4699&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;72488&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5094&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ALTIMA 2.5L I4 EFI&quot;, &quot;make&quot;: &quot;NISSAN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6240&quot;}, {&quot;id&quot;: &quot;31285&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2009&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;51087&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX&quot;, &quot;price-sell&quot;: &quot;8415&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7000&quot;}, {&quot;id&quot;: &quot;65929&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;83032&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV LS&quot;, &quot;price-sell&quot;: &quot;7799&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;EQUINOX FWD V6 3.4L&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6435&quot;}, {&quot;id&quot;: &quot;38102&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;51523&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.3L&quot;, &quot;price-sell&quot;: &quot;5601&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CARAVAN GRAND FWD V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6870&quot;}, {&quot;id&quot;: &quot;7494&quot;, &quot;trim&quot;: &quot;Tou&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 26, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;75811&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LIMITED&quot;, &quot;price-sell&quot;: &quot;4821&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5025&quot;}, {&quot;id&quot;: &quot;35731&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 35, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;83192&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY LE&quot;, &quot;price-sell&quot;: &quot;6349&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;PATHFINDER 4WD V6 MF&quot;, &quot;make&quot;: &quot;NISSAN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7655&quot;}, {&quot;id&quot;: &quot;38937&quot;, &quot;trim&quot;: &quot;SEL&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;74813&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SEL&quot;, &quot;price-sell&quot;: &quot;8665&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FIVE HUNDRED 3.0L V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7885&quot;}, {&quot;id&quot;: &quot;66683&quot;, &quot;trim&quot;: &quot;Tou&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;74403&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT TOURING&quot;, &quot;price-sell&quot;: &quot;14320&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PACIFICA AWD&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9670&quot;}, {&quot;id&quot;: &quot;22780&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;88448&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;5751&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU MAXX V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6125&quot;}, {&quot;id&quot;: &quot;53067&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;50279&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;5271&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;VIBE&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8390&quot;}, {&quot;id&quot;: &quot;64358&quot;, &quot;trim&quot;: &quot;LXi&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;79224&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LX&quot;, &quot;price-sell&quot;: &quot;2426&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING V6&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5630&quot;}, {&quot;id&quot;: &quot;26843&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;76206&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LX&quot;, &quot;price-sell&quot;: &quot;2888&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;OPTIMA 4C&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3510&quot;}, {&quot;id&quot;: &quot;28465&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;89296&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX AUTO&quot;, &quot;price-sell&quot;: &quot;7737&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ACCORD 4C&quot;, &quot;make&quot;: &quot;HONDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9000&quot;}, {&quot;id&quot;: &quot;69924&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;78037&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN S&quot;, &quot;price-sell&quot;: &quot;4880&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ALTIMA&quot;, &quot;make&quot;: &quot;NISSAN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7135&quot;}, {&quot;id&quot;: &quot;8473&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 47, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77028&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY LX&quot;, &quot;price-sell&quot;: &quot;6854&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPORTAGE 2WD 4C&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6700&quot;}, {&quot;id&quot;: &quot;30521&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;87580&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.3L&quot;, &quot;price-sell&quot;: &quot;7094&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;TOWN &amp; COUNTRY 2WD V&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6680&quot;}, {&quot;id&quot;: &quot;31929&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;81675&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;11461&quot;, &quot;size&quot;: &quot;SPECIALTY&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;300 2.7L V6 MPI&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9500&quot;}, {&quot;id&quot;: &quot;22925&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2001&quot;, &quot;mpg&quot;: 42, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;52499&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D PASSENGER 3.8L SE&quot;, &quot;price-sell&quot;: &quot;2537&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;WINDSTAR FWD V6 3.8L&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;NOT AVAIL&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;4490&quot;}, {&quot;id&quot;: &quot;68076&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;107710&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5909&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;RENO&quot;, &quot;make&quot;: &quot;SUZUKI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3015&quot;}, {&quot;id&quot;: &quot;49708&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;88624&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3860&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.4L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5480&quot;}, {&quot;id&quot;: &quot;596&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 40, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;56259&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LX&quot;, &quot;price-sell&quot;: &quot;2825&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4680&quot;}, {&quot;id&quot;: &quot;58096&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;69620&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;7692&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7130&quot;}, {&quot;id&quot;: &quot;29597&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;51258&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LX&quot;, &quot;price-sell&quot;: &quot;8569&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING 4C&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8500&quot;}, {&quot;id&quot;: &quot;43312&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;72939&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER 3.9L LS&quot;, &quot;price-sell&quot;: &quot;7331&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;UPLANDER FWD V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6900&quot;}, {&quot;id&quot;: &quot;61322&quot;, &quot;trim&quot;: &quot;SLE&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;73995&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D UTILITY 4.2L SLE&quot;, &quot;price-sell&quot;: &quot;7535&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ENVOY 2WD 6C 4.2L I6&quot;, &quot;make&quot;: &quot;GMC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8745&quot;}, {&quot;id&quot;: &quot;6306&quot;, &quot;trim&quot;: &quot;SLT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;79997&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;QUAD CAB 5.7L SLT&quot;, &quot;price-sell&quot;: &quot;12477&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;1500 RAM PICKUP 2WD&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;10360&quot;}, {&quot;id&quot;: &quot;60200&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;69962&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;6109&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION 2.2L I4 EFI&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;5380&quot;}, {&quot;id&quot;: &quot;50988&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;71232&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3347&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;NEON 2.0L I4 SFI&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4175&quot;}, {&quot;id&quot;: &quot;40079&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 14, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;64473&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3595&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;NEON 2.0L I4 SFI&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4745&quot;}, {&quot;id&quot;: &quot;23911&quot;, &quot;trim&quot;: &quot;Tou&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;68828&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4946&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;PURPLE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5676&quot;}, {&quot;id&quot;: &quot;27306&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;64895&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE&quot;, &quot;price-sell&quot;: &quot;6111&quot;, &quot;size&quot;: &quot;SPORTS&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;MUSTANG V6 3.9L V6 E&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6670&quot;}, {&quot;id&quot;: &quot;69868&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;82101&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.2L LS&quot;, &quot;price-sell&quot;: &quot;7173&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;TRAILBLAZER EXT 2WD&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8505&quot;}, {&quot;id&quot;: &quot;20557&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 29, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;85542&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5014&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER 2.4L I4 S&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3910&quot;}, {&quot;id&quot;: &quot;48881&quot;, &quot;trim&quot;: &quot;GT&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;53410&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN GT&quot;, &quot;price-sell&quot;: &quot;5978&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX 3.8L V6 S&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6220&quot;}, {&quot;id&quot;: &quot;68053&quot;, &quot;trim&quot;: &quot;XE&quot;, &quot;year&quot;: &quot;2009&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;57634&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN XE&quot;, &quot;price-sell&quot;: &quot;10336&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;AURA 4C&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8365&quot;}, {&quot;id&quot;: &quot;45147&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;71215&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7525&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;AMANTI 3.5L V6 MPI&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6475&quot;}, {&quot;id&quot;: &quot;46349&quot;, &quot;trim&quot;: &quot;XL&quot;, &quot;year&quot;: &quot;2001&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;88651&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;EXT CAB 3.0L EDGE&quot;, &quot;price-sell&quot;: &quot;4820&quot;, &quot;size&quot;: &quot;SMALL TRUCK&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;RANGER PICKUP 2WD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4175&quot;}, {&quot;id&quot;: &quot;6123&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;90267&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;4951&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND AM V6 3.4L V6&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4175&quot;}, {&quot;id&quot;: &quot;52216&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 29, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;98670&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;CREW CAB 4.7L LIMITED&quot;, &quot;price-sell&quot;: &quot;9157&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;TUNDRA PICKUP 2WD V8&quot;, &quot;make&quot;: &quot;TOYOTA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;10750&quot;}, {&quot;id&quot;: &quot;1921&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 35, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;70963&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;3837&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS 3.0L V6 EFI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4900&quot;}, {&quot;id&quot;: &quot;2022&quot;, &quot;trim&quot;: &quot;ZX4&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 42, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;57638&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN ZX4&quot;, &quot;price-sell&quot;: &quot;5214&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4900&quot;}, {&quot;id&quot;: &quot;62365&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;80605&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE SE&quot;, &quot;price-sell&quot;: &quot;4575&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;SUNFIRE 2.2L I4 MPI&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3625&quot;}, {&quot;id&quot;: &quot;60091&quot;, &quot;trim&quot;: &quot;S&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 34, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;102829&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER 3.9L&quot;, &quot;price-sell&quot;: &quot;3536&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FREESTAR FWD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4005&quot;}, {&quot;id&quot;: &quot;62825&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 47, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;92549&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;8785&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7130&quot;}, {&quot;id&quot;: &quot;37224&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;86985&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;8734&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7900&quot;}, {&quot;id&quot;: &quot;17032&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;87868&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT TOURER&quot;, &quot;price-sell&quot;: &quot;7712&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PACIFICA AWD&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8190&quot;}, {&quot;id&quot;: &quot;9738&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;80205&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3430&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C 2.4L I4 M&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4800&quot;}, {&quot;id&quot;: &quot;66515&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;35517&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5609&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;FORENZA&quot;, &quot;make&quot;: &quot;SUZUKI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5430&quot;}, {&quot;id&quot;: &quot;46908&quot;, &quot;trim&quot;: &quot;Lar&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 23, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;87334&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;6853&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;GRAND CHEROKEE 2WD 6&quot;, &quot;make&quot;: &quot;JEEP&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7740&quot;}, {&quot;id&quot;: &quot;52158&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;71581&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;9385&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;G6 4C&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7355&quot;}, {&quot;id&quot;: &quot;43214&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;87952&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7316&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5300&quot;}, {&quot;id&quot;: &quot;45573&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;78713&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7042&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7175&quot;}, {&quot;id&quot;: &quot;4325&quot;, &quot;trim&quot;: &quot;STX&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;95262&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D EXT CAB 3.0L&quot;, &quot;price-sell&quot;: &quot;6925&quot;, &quot;size&quot;: &quot;SMALL TRUCK&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;RANGER PICKUP 2WD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6685&quot;}, {&quot;id&quot;: &quot;18497&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 39, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;65269&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN 2.7L&quot;, &quot;price-sell&quot;: &quot;11272&quot;, &quot;size&quot;: &quot;SPECIALTY&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CHARGER V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;10380&quot;}, {&quot;id&quot;: &quot;313&quot;, &quot;trim&quot;: &quot;s&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 34, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;92865&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN I&quot;, &quot;price-sell&quot;: &quot;5961&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;MAZDA3&quot;, &quot;make&quot;: &quot;MAZDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6600&quot;}, {&quot;id&quot;: &quot;53150&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 47, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;53215&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT&quot;, &quot;price-sell&quot;: &quot;9846&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PACIFICA FWD 3.8L V6&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8850&quot;}, {&quot;id&quot;: &quot;14270&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;78537&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;6527&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5870&quot;}, {&quot;id&quot;: &quot;6195&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 34, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;66048&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;5357&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;AVEO&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5795&quot;}, {&quot;id&quot;: &quot;10492&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;73836&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN 3.5L&quot;, &quot;price-sell&quot;: &quot;9999&quot;, &quot;size&quot;: &quot;SPECIALTY&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CHARGER V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;10215&quot;}, {&quot;id&quot;: &quot;68961&quot;, &quot;trim&quot;: &quot;Spo&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 32, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;81796&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV&quot;, &quot;price-sell&quot;: &quot;7568&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;LIBERTY 4WD V6 3.7L&quot;, &quot;make&quot;: &quot;JEEP&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6900&quot;}, {&quot;id&quot;: &quot;64833&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 32, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;53417&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D PASSENGER 3.8L SE&quot;, &quot;price-sell&quot;: &quot;3058&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;WINDSTAR FWD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4200&quot;}, {&quot;id&quot;: &quot;42025&quot;, &quot;trim&quot;: &quot;Cus&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;84742&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN CUSTOM&quot;, &quot;price-sell&quot;: &quot;2808&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;CENTURY V6 3.1L V6 S&quot;, &quot;make&quot;: &quot;BUICK&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3900&quot;}, {&quot;id&quot;: &quot;6775&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;78661&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER 3.4L&quot;, &quot;price-sell&quot;: &quot;4348&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;VENTURE FWD V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4500&quot;}, {&quot;id&quot;: &quot;52389&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 35, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;107741&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3279&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3835&quot;}, {&quot;id&quot;: &quot;44324&quot;, &quot;trim&quot;: &quot;SEL&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 48, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;73206&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SEL&quot;, &quot;price-sell&quot;: &quot;3803&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5005&quot;}, {&quot;id&quot;: &quot;178&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 39, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;49893&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6431&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6600&quot;}, {&quot;id&quot;: &quot;51437&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;89373&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.3L SE&quot;, &quot;price-sell&quot;: &quot;4729&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CARAVAN GRAND FWD V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5100&quot;}, {&quot;id&quot;: &quot;9457&quot;, &quot;trim&quot;: &quot;ST&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;43840&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;REG CAB 4.7L&quot;, &quot;price-sell&quot;: &quot;4828&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;1500 RAM PICKUP 2WD&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7600&quot;}, {&quot;id&quot;: &quot;1516&quot;, &quot;trim&quot;: &quot;Cla&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;69936&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN CLASSIC&quot;, &quot;price-sell&quot;: &quot;5374&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4315&quot;}, {&quot;id&quot;: &quot;54258&quot;, &quot;trim&quot;: &quot;GLS&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;51343&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3117&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ELANTRA 2.0L I4 MPI&quot;, &quot;make&quot;: &quot;HYUNDAI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4820&quot;}, {&quot;id&quot;: &quot;27447&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;68702&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE FFV&quot;, &quot;price-sell&quot;: &quot;4698&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS 3.0L V6 EFI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4175&quot;}, {&quot;id&quot;: &quot;35177&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;73033&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT&quot;, &quot;price-sell&quot;: &quot;5792&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PACIFICA AWD&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8085&quot;}, {&quot;id&quot;: &quot;5771&quot;, &quot;trim&quot;: &quot;i&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 14, &quot;wheel-type&quot;: &quot;3&quot;, &quot;odo&quot;: &quot;66122&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY I&quot;, &quot;price-sell&quot;: &quot;9403&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;TRIBUTE 2WD 4C&quot;, &quot;make&quot;: &quot;MAZDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Special&quot;, &quot;price-buy&quot;: &quot;9015&quot;}, {&quot;id&quot;: &quot;6115&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;56581&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 2.2L LT&quot;, &quot;price-sell&quot;: &quot;6938&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;HHR 2.2L I4 MPI / SF&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;PURPLE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5230&quot;}, {&quot;id&quot;: &quot;47019&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;71101&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE&quot;, &quot;price-sell&quot;: &quot;4861&quot;, &quot;size&quot;: &quot;SPORTS&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;CAMARO V6 3.8L V6 MF&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5010&quot;}, {&quot;id&quot;: &quot;62762&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;68724&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;8818&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING 4C&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7310&quot;}, {&quot;id&quot;: &quot;10269&quot;, &quot;trim&quot;: &quot;SES&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 48, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;93769&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SES&quot;, &quot;price-sell&quot;: &quot;3703&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3915&quot;}, {&quot;id&quot;: &quot;67624&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 35, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;47336&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6002&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER 2.4L I4 S&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;PURPLE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5700&quot;}, {&quot;id&quot;: &quot;38842&quot;, &quot;trim&quot;: &quot;Tou&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 32, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;50214&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN TOURING&quot;, &quot;price-sell&quot;: &quot;6933&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER 2.4L I4 S&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6260&quot;}, {&quot;id&quot;: &quot;68370&quot;, &quot;trim&quot;: &quot;Nor&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 32, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;76983&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.2L LS&quot;, &quot;price-sell&quot;: &quot;6682&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;TRAILBLAZER 2WD 6C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7660&quot;}, {&quot;id&quot;: &quot;6254&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 26, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;68175&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;6231&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;5495&quot;}, {&quot;id&quot;: &quot;35234&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;51433&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4689&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5235&quot;}, {&quot;id&quot;: &quot;11244&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2001&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;69884&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE SE&quot;, &quot;price-sell&quot;: &quot;2295&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND AM 4C&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4800&quot;}, {&quot;id&quot;: &quot;21507&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;78192&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV LT&quot;, &quot;price-sell&quot;: &quot;6754&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;EQUINOX FWD V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7705&quot;}, {&quot;id&quot;: &quot;53049&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;71714&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5971&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ALTIMA&quot;, &quot;make&quot;: &quot;NISSAN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7450&quot;}, {&quot;id&quot;: &quot;16866&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;80612&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;6395&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5600&quot;}, {&quot;id&quot;: &quot;72024&quot;, &quot;trim&quot;: &quot;SLT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;94379&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.7L SLT&quot;, &quot;price-sell&quot;: &quot;9008&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DURANGO 2WD V8&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7965&quot;}, {&quot;id&quot;: &quot;30097&quot;, &quot;trim&quot;: &quot;i&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;64542&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN I&quot;, &quot;price-sell&quot;: &quot;10674&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;MAZDA3&quot;, &quot;make&quot;: &quot;MAZDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7950&quot;}, {&quot;id&quot;: &quot;70882&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;48691&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3856&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;COBALT 2.2L I4 MPI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6510&quot;}, {&quot;id&quot;: &quot;37406&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;73327&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.7L&quot;, &quot;price-sell&quot;: &quot;9403&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DURANGO 2WD V8 4.7L&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8065&quot;}, {&quot;id&quot;: &quot;39914&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;72522&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4606&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5320&quot;}, {&quot;id&quot;: &quot;36902&quot;, &quot;trim&quot;: &quot;DE&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 14, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;61200&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN DE&quot;, &quot;price-sell&quot;: &quot;6368&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;GALANT 4C&quot;, &quot;make&quot;: &quot;MITSUBISHI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7740&quot;}, {&quot;id&quot;: &quot;4862&quot;, &quot;trim&quot;: &quot;ES&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;72946&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;9142&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;GALANT 4C 2.4L I4 EF&quot;, &quot;make&quot;: &quot;MITSUBISHI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6180&quot;}, {&quot;id&quot;: &quot;70465&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;52137&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;4075&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS 3.0L V6 EFI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5180&quot;}, {&quot;id&quot;: &quot;52686&quot;, &quot;trim&quot;: &quot;GL&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 14, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;70252&quot;, &quot;nation&quot;: &quot;OTHER&quot;, &quot;model-sub&quot;: &quot;2D COUPE GL&quot;, &quot;price-sell&quot;: &quot;6806&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;BEETLE&quot;, &quot;make&quot;: &quot;VOLKSWAGEN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6440&quot;}, {&quot;id&quot;: &quot;18965&quot;, &quot;trim&quot;: &quot;SLT&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;83529&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;QUAD CAB 4.7L FFV&quot;, &quot;price-sell&quot;: &quot;14470&quot;, &quot;size&quot;: &quot;SMALL TRUCK&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DAKOTA PICKUP 2WD V8&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8430&quot;}, {&quot;id&quot;: &quot;51235&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;75739&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 5.7L LIMITED&quot;, &quot;price-sell&quot;: &quot;9429&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DURANGO 4WD V8 5.7L&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;10515&quot;}, {&quot;id&quot;: &quot;72016&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 42, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;73275&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;6843&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6855&quot;}, {&quot;id&quot;: &quot;70920&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;37993&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE&quot;, &quot;price-sell&quot;: &quot;5921&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;COBALT&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;ORANGE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6010&quot;}, {&quot;id&quot;: &quot;1193&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 40, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;75757&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;12547&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FUSION V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8735&quot;}, {&quot;id&quot;: &quot;27823&quot;, &quot;trim&quot;: &quot;LE&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;76732&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LE&quot;, &quot;price-sell&quot;: &quot;5276&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;CAMRY 4C Multiple En&quot;, &quot;make&quot;: &quot;TOYOTA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7000&quot;}, {&quot;id&quot;: &quot;61712&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;72278&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT&quot;, &quot;price-sell&quot;: &quot;7698&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C 2.2L I4 MP&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5950&quot;}, {&quot;id&quot;: &quot;61415&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;81343&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.8L SXT&quot;, &quot;price-sell&quot;: &quot;11280&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CARAVAN GRAND FWD V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7345&quot;}, {&quot;id&quot;: &quot;6626&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 29, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;58267&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT&quot;, &quot;price-sell&quot;: &quot;8036&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6800&quot;}, {&quot;id&quot;: &quot;49519&quot;, &quot;trim&quot;: &quot;Tou&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 32, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;100586&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LXI&quot;, &quot;price-sell&quot;: &quot;6233&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING V6&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4245&quot;}, {&quot;id&quot;: &quot;45397&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;77174&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT&quot;, &quot;price-sell&quot;: &quot;6441&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU MAXX V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7275&quot;}, {&quot;id&quot;: &quot;58439&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;78605&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;5064&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5605&quot;}, {&quot;id&quot;: &quot;49682&quot;, &quot;trim&quot;: &quot;GLS&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;57008&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3567&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ELANTRA 2.0L I4 MPI&quot;, &quot;make&quot;: &quot;HYUNDAI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5370&quot;}, {&quot;id&quot;: &quot;25004&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;76383&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;7831&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7225&quot;}, {&quot;id&quot;: &quot;28469&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;74746&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6018&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7200&quot;}, {&quot;id&quot;: &quot;63086&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;79057&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.3L&quot;, &quot;price-sell&quot;: &quot;7868&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;TOWN &amp; COUNTRY 2WD V&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7130&quot;}, {&quot;id&quot;: &quot;12230&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;58773&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4861&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.4L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;5835&quot;}, {&quot;id&quot;: &quot;41480&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;55843&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;8994&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;AVENGER 4C&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8250&quot;}, {&quot;id&quot;: &quot;45202&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 32, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;85121&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE1&quot;, &quot;price-sell&quot;: &quot;2747&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX 3.1L V6 S&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4395&quot;}, {&quot;id&quot;: &quot;52076&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;86489&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT&quot;, &quot;price-sell&quot;: &quot;6371&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6440&quot;}, {&quot;id&quot;: &quot;4176&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 39, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;67404&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN 1.8&quot;, &quot;price-sell&quot;: &quot;5233&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SENTRA&quot;, &quot;make&quot;: &quot;NISSAN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5455&quot;}, {&quot;id&quot;: &quot;68495&quot;, &quot;trim&quot;: &quot;LW3&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;90250&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON LW300&quot;, &quot;price-sell&quot;: &quot;4153&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;L SERIES&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4405&quot;}, {&quot;id&quot;: &quot;69170&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;89389&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;EXT CAB 4.3L&quot;, &quot;price-sell&quot;: &quot;10572&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;1500 SILVERADO PICKU&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9495&quot;}, {&quot;id&quot;: &quot;24601&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;54014&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SXT FFV&quot;, &quot;price-sell&quot;: &quot;5657&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS V6 2.7L V6 M&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6200&quot;}, {&quot;id&quot;: &quot;41578&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2001&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;69122&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;2762&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5115&quot;}, {&quot;id&quot;: &quot;11747&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;49400&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE&quot;, &quot;price-sell&quot;: &quot;6028&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;COBALT&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5600&quot;}, {&quot;id&quot;: &quot;10419&quot;, &quot;trim&quot;: &quot;ST&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;61524&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;QUAD CAB 4.7L SLT&quot;, &quot;price-sell&quot;: &quot;5157&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;1500 RAM PICKUP 2WD&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;PURPLE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;10910&quot;}, {&quot;id&quot;: &quot;12577&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;35351&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6036&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;G6 V6&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7605&quot;}, {&quot;id&quot;: &quot;60209&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 29, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;54164&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;7776&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER 2.0L I4 SFI&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7140&quot;}, {&quot;id&quot;: &quot;42535&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;88452&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D MINIVAN EXT 3.4L&quot;, &quot;price-sell&quot;: &quot;4229&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MONTANA FWD&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BEIGE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5870&quot;}, {&quot;id&quot;: &quot;30314&quot;, &quot;trim&quot;: &quot;GLS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;87623&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5129&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ELANTRA&quot;, &quot;make&quot;: &quot;HYUNDAI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4650&quot;}, {&quot;id&quot;: &quot;16231&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;89809&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LX&quot;, &quot;price-sell&quot;: &quot;2233&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS 2.0L I4 SPI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3100&quot;}, {&quot;id&quot;: &quot;12765&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 39, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;43590&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON SE&quot;, &quot;price-sell&quot;: &quot;6033&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6105&quot;}, {&quot;id&quot;: &quot;8133&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;94664&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;8934&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7700&quot;}, {&quot;id&quot;: &quot;46269&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2001&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;58704&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON SE&quot;, &quot;price-sell&quot;: &quot;2671&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS 2.0L I-4 SFI S&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;2890&quot;}, {&quot;id&quot;: &quot;63400&quot;, &quot;trim&quot;: &quot;CX&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 29, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;82963&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN CX&quot;, &quot;price-sell&quot;: &quot;9404&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;LACROSSE 3.8L V6 SFI&quot;, &quot;make&quot;: &quot;BUICK&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7270&quot;}, {&quot;id&quot;: &quot;20626&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;51925&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX&quot;, &quot;price-sell&quot;: &quot;4459&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA 2.0L I4 EFI&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5925&quot;}, {&quot;id&quot;: &quot;6289&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;40439&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5264&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6545&quot;}, {&quot;id&quot;: &quot;36304&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;68472&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT TOURER&quot;, &quot;price-sell&quot;: &quot;6653&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PACIFICA FWD 3.5L V6&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6525&quot;}, {&quot;id&quot;: &quot;56483&quot;, &quot;trim&quot;: &quot;Adv&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;75845&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.7L ADVENTURER&quot;, &quot;price-sell&quot;: &quot;10499&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DURANGO 2WD V8&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9750&quot;}, {&quot;id&quot;: &quot;24619&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;63290&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;5421&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION 2.2L I4 EFI&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5200&quot;}, {&quot;id&quot;: &quot;22992&quot;, &quot;trim&quot;: &quot;SV6&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;59206&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D MINIVAN EXT 3.4L&quot;, &quot;price-sell&quot;: &quot;6174&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MONTANA FWD 3.5L V6&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6345&quot;}, {&quot;id&quot;: &quot;54991&quot;, &quot;trim&quot;: &quot;XLT&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77318&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.6L XLT&quot;, &quot;price-sell&quot;: &quot;7506&quot;, &quot;size&quot;: &quot;LARGE SUV&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;EXPEDITION 4WD V8 4.&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7315&quot;}, {&quot;id&quot;: &quot;9959&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;55382&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SXT&quot;, &quot;price-sell&quot;: &quot;10541&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;AVENGER V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8335&quot;}, {&quot;id&quot;: &quot;27960&quot;, &quot;trim&quot;: &quot;Lar&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 15, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;88170&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;REG CAB 4.7L SLT&quot;, &quot;price-sell&quot;: &quot;4295&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;1500 RAM PICKUP 2WD&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6500&quot;}, {&quot;id&quot;: &quot;57513&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 48, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;96039&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;3784&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS V6 2.7L V6 M&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;4030&quot;}, {&quot;id&quot;: &quot;29563&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;50090&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;8132&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;7300&quot;}, {&quot;id&quot;: &quot;56765&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;76213&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER EXT 3.9L LS&quot;, &quot;price-sell&quot;: &quot;7116&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;UPLANDER FWD V6 3.9L&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7005&quot;}, {&quot;id&quot;: &quot;30413&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;71927&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6406&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;OPTIMA 4C&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6950&quot;}, {&quot;id&quot;: &quot;71178&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;86372&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX AUTO&quot;, &quot;price-sell&quot;: &quot;4895&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ACCORD 4C&quot;, &quot;make&quot;: &quot;HONDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7350&quot;}, {&quot;id&quot;: &quot;38381&quot;, &quot;trim&quot;: &quot;Tou&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;33110&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN TOURING&quot;, &quot;price-sell&quot;: &quot;5005&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6970&quot;}, {&quot;id&quot;: &quot;32100&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;69412&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX&quot;, &quot;price-sell&quot;: &quot;3667&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;VERONA&quot;, &quot;make&quot;: &quot;SUZUKI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7000&quot;}, {&quot;id&quot;: &quot;35166&quot;, &quot;trim&quot;: &quot;GLS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;57692&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN GLS&quot;, &quot;price-sell&quot;: &quot;4914&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ACCENT&quot;, &quot;make&quot;: &quot;HYUNDAI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6785&quot;}, {&quot;id&quot;: &quot;32676&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;52597&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5601&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C 2.4L I4 S&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5780&quot;}, {&quot;id&quot;: &quot;72883&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;89765&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6173&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX 3.8L V6 S&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6700&quot;}, {&quot;id&quot;: &quot;30133&quot;, &quot;trim&quot;: &quot;XLS&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;59467&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.0L FFV XLS&quot;, &quot;price-sell&quot;: &quot;5357&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;EXPLORER 2WD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7750&quot;}, {&quot;id&quot;: &quot;30928&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;69499&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER 3.4L&quot;, &quot;price-sell&quot;: &quot;3799&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;VENTURE FWD V6 3.4L&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4100&quot;}, {&quot;id&quot;: &quot;39065&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;52555&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7426&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6170&quot;}, {&quot;id&quot;: &quot;32605&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;55756&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;WAGON 2.7L&quot;, &quot;price-sell&quot;: &quot;6799&quot;, &quot;size&quot;: &quot;SPECIALTY&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;MAGNUM V6 2.7L V6 MP&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7905&quot;}, {&quot;id&quot;: &quot;54456&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;76825&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS 3.5L FFV&quot;, &quot;price-sell&quot;: &quot;8520&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7705&quot;}, {&quot;id&quot;: &quot;17539&quot;, &quot;trim&quot;: &quot;SEL&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;82144&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D CUV 3.0L SEL&quot;, &quot;price-sell&quot;: &quot;7220&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FREESTYLE FWD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7200&quot;}, {&quot;id&quot;: &quot;48912&quot;, &quot;trim&quot;: &quot;ST&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 40, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;71488&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;REG CAB 3.7L&quot;, &quot;price-sell&quot;: &quot;5630&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;1500 RAM PICKUP 2WD&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6720&quot;}, {&quot;id&quot;: &quot;47616&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 47, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;85131&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;8416&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7540&quot;}, {&quot;id&quot;: &quot;46906&quot;, &quot;trim&quot;: &quot;Lar&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;69036&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON LAREDO&quot;, &quot;price-sell&quot;: &quot;11656&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;GRAND CHEROKEE 2WD V&quot;, &quot;make&quot;: &quot;JEEP&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BROWN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8665&quot;}, {&quot;id&quot;: &quot;48164&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;51928&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;8253&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7455&quot;}, {&quot;id&quot;: &quot;25798&quot;, &quot;trim&quot;: &quot;STX&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 40, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;93829&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;REG CAB 4.6L STX&quot;, &quot;price-sell&quot;: &quot;8230&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;F150 PICKUP 2WD V8&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6400&quot;}, {&quot;id&quot;: &quot;45306&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;73430&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;2884&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C 2.4L I4 M&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3655&quot;}, {&quot;id&quot;: &quot;7002&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 23, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;92233&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D CUV 2.2L&quot;, &quot;price-sell&quot;: &quot;3980&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;VUE 2WD 4C&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3140&quot;}, {&quot;id&quot;: &quot;57828&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;83621&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY&quot;, &quot;price-sell&quot;: &quot;9592&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;XTERRA 2WD V6&quot;, &quot;make&quot;: &quot;NISSAN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8715&quot;}, {&quot;id&quot;: &quot;15339&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;49043&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;7180&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7875&quot;}, {&quot;id&quot;: &quot;69395&quot;, &quot;trim&quot;: &quot;ZX4&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;78776&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN ZX4&quot;, &quot;price-sell&quot;: &quot;4096&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5655&quot;}, {&quot;id&quot;: &quot;69712&quot;, &quot;trim&quot;: &quot;GLS&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;79863&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;2575&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ELANTRA 2.0L I4 MPI&quot;, &quot;make&quot;: &quot;HYUNDAI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3745&quot;}, {&quot;id&quot;: &quot;19794&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;50988&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;8501&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7505&quot;}, {&quot;id&quot;: &quot;63348&quot;, &quot;trim&quot;: &quot;GT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;85192&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN GT&quot;, &quot;price-sell&quot;: &quot;8211&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX 3.8L V6 S&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6685&quot;}, {&quot;id&quot;: &quot;60049&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 48, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;87236&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.2L LS&quot;, &quot;price-sell&quot;: &quot;11904&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;TRAILBLAZER 2WD 6C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8240&quot;}, {&quot;id&quot;: &quot;15134&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;55625&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;6772&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BEIGE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8275&quot;}, {&quot;id&quot;: &quot;9779&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;58760&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;6245&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS V6 2.7L V6 M&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4600&quot;}, {&quot;id&quot;: &quot;53399&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;41468&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;9156&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;AVENGER 4C 2.4L I4 S&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8200&quot;}, {&quot;id&quot;: &quot;32944&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 15, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;82881&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;3709&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND AM 4C 2.2L I4&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4140&quot;}, {&quot;id&quot;: &quot;67591&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;83153&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;CREW CAB 5.3L&quot;, &quot;price-sell&quot;: &quot;10779&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;1500 SILVERADO PICKU&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;10630&quot;}, {&quot;id&quot;: &quot;3572&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;55482&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4020&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5730&quot;}, {&quot;id&quot;: &quot;32191&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 35, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;60831&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER 3.4L&quot;, &quot;price-sell&quot;: &quot;4505&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;VENTURE FWD V6 3.4L&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4800&quot;}, {&quot;id&quot;: &quot;66192&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 15, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;73059&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;6062&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION 2.2L I4 EFI&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5225&quot;}, {&quot;id&quot;: &quot;59907&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;64675&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX&quot;, &quot;price-sell&quot;: &quot;6112&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6525&quot;}, {&quot;id&quot;: &quot;3528&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;64429&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE&quot;, &quot;price-sell&quot;: &quot;3851&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;COBALT&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;YELLOW&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6335&quot;}, {&quot;id&quot;: &quot;34946&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 39, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;81058&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE LIMTED&quot;, &quot;price-sell&quot;: &quot;1&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING V6 3.0L V6 M&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6270&quot;}, {&quot;id&quot;: &quot;17582&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;69341&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LIMITED&quot;, &quot;price-sell&quot;: &quot;4035&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;PURPLE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5485&quot;}, {&quot;id&quot;: &quot;57962&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;61690&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6205&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;OPTIMA 4C&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7330&quot;}, {&quot;id&quot;: &quot;30719&quot;, &quot;trim&quot;: &quot;ES&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;77502&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN ES&quot;, &quot;price-sell&quot;: &quot;4858&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;LANCER&quot;, &quot;make&quot;: &quot;MITSUBISHI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5450&quot;}, {&quot;id&quot;: &quot;1113&quot;, &quot;trim&quot;: &quot;ZX4&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;81313&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN ZX4 SE&quot;, &quot;price-sell&quot;: &quot;5709&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5890&quot;}, {&quot;id&quot;: &quot;66503&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;62053&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY EX&quot;, &quot;price-sell&quot;: &quot;5741&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SORENTO 2WD&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;6340&quot;}, {&quot;id&quot;: &quot;14507&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;91505&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3499&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;CAVALIER 4C 2.2L I4&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4000&quot;}, {&quot;id&quot;: &quot;301&quot;, &quot;trim&quot;: &quot;GS&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;41513&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN GS&quot;, &quot;price-sell&quot;: &quot;3340&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;SABLE&quot;, &quot;make&quot;: &quot;MERCURY&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5150&quot;}, {&quot;id&quot;: &quot;4279&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;66591&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;7976&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8245&quot;}, {&quot;id&quot;: &quot;66393&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;78878&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7337&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;OPTIMA 4C&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;6440&quot;}, {&quot;id&quot;: &quot;8674&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 48, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;72160&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS 3.5L FFV&quot;, &quot;price-sell&quot;: &quot;8702&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BROWN&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8160&quot;}, {&quot;id&quot;: &quot;935&quot;, &quot;trim&quot;: &quot;X&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;75447&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY 2.5X&quot;, &quot;price-sell&quot;: &quot;15753&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;FORESTER AWD&quot;, &quot;make&quot;: &quot;SUBARU&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;10345&quot;}, {&quot;id&quot;: &quot;65798&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 40, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;78584&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;3708&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5115&quot;}, {&quot;id&quot;: &quot;34681&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;3&quot;, &quot;odo&quot;: &quot;87243&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4061&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Special&quot;, &quot;price-buy&quot;: &quot;4815&quot;}, {&quot;id&quot;: &quot;48795&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;84466&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS 3.5L FFV&quot;, &quot;price-sell&quot;: &quot;9682&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8015&quot;}, {&quot;id&quot;: &quot;60690&quot;, &quot;trim&quot;: &quot;Tou&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 28, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;76933&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4196&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4455&quot;}, {&quot;id&quot;: &quot;8057&quot;, &quot;trim&quot;: &quot;SLT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;81106&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.7L SLT&quot;, &quot;price-sell&quot;: &quot;7514&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DURANGO 2WD V8&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9600&quot;}, {&quot;id&quot;: &quot;53425&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;40641&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;7095&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER 2.0L I4 SFI&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;ORANGE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7400&quot;}, {&quot;id&quot;: &quot;44706&quot;, &quot;trim&quot;: &quot;SEL&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 34, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;81002&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SEL&quot;, &quot;price-sell&quot;: &quot;7500&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FIVE HUNDRED 3.0L V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7500&quot;}, {&quot;id&quot;: &quot;4985&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;79170&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;4291&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS 3.0L V6 EFI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3560&quot;}, {&quot;id&quot;: &quot;40628&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;76773&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6201&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.4L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6790&quot;}, {&quot;id&quot;: &quot;36613&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;48532&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5684&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING 4C&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5670&quot;}, {&quot;id&quot;: &quot;57007&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2009&quot;, &quot;mpg&quot;: 26, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;89287&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;11768&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9815&quot;}, {&quot;id&quot;: &quot;11331&quot;, &quot;trim&quot;: &quot;Cla&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;98728&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN CLASSIC&quot;, &quot;price-sell&quot;: &quot;4333&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5335&quot;}, {&quot;id&quot;: &quot;2001&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;70983&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV HARDTOP 2.0L&quot;, &quot;price-sell&quot;: &quot;3517&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;TRACKER 2WD 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;YELLOW&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5500&quot;}, {&quot;id&quot;: &quot;35691&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;67653&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT 3.5L&quot;, &quot;price-sell&quot;: &quot;8567&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7255&quot;}, {&quot;id&quot;: &quot;72247&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;90250&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;5838&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4755&quot;}, {&quot;id&quot;: &quot;63236&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;99019&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE&quot;, &quot;price-sell&quot;: &quot;2177&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;CAVALIER 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4275&quot;}, {&quot;id&quot;: &quot;72697&quot;, &quot;trim&quot;: &quot;SLT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77494&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;QUAD CAB 4.7L SLT&quot;, &quot;price-sell&quot;: &quot;10586&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;1500 RAM PICKUP 2WD&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9150&quot;}, {&quot;id&quot;: &quot;47328&quot;, &quot;trim&quot;: &quot;XLT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 34, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;82117&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.0L FFV XLT&quot;, &quot;price-sell&quot;: &quot;8263&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;EXPLORER 2WD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7275&quot;}, {&quot;id&quot;: &quot;69056&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;40820&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5749&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;6170&quot;}, {&quot;id&quot;: &quot;67215&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;58080&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;4054&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER 2.4L I4 S&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5075&quot;}, {&quot;id&quot;: &quot;16644&quot;, &quot;trim&quot;: &quot;150&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;91076&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV-PICKUP 5.3L&quot;, &quot;price-sell&quot;: &quot;10386&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;AVALANCHE 1500 2WD V&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;10800&quot;}, {&quot;id&quot;: &quot;59716&quot;, &quot;trim&quot;: &quot;XLS&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;71732&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D CUV 2.3L XLS&quot;, &quot;price-sell&quot;: &quot;13728&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;ESCAPE 2WD 4C&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7715&quot;}, {&quot;id&quot;: &quot;6776&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 32, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;36840&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;4873&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;COBALT&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5500&quot;}, {&quot;id&quot;: &quot;61798&quot;, &quot;trim&quot;: &quot;Edg&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77733&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D EXT CAB 3.0L EDGE&quot;, &quot;price-sell&quot;: &quot;6292&quot;, &quot;size&quot;: &quot;SMALL TRUCK&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;RANGER PICKUP 2WD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5525&quot;}, {&quot;id&quot;: &quot;13279&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;48854&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3067&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5400&quot;}, {&quot;id&quot;: &quot;24273&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;91258&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 2.4L SE&quot;, &quot;price-sell&quot;: &quot;2604&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CARAVAN FWD 4C 2.4L&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4200&quot;}, {&quot;id&quot;: &quot;17422&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;74770&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV LS&quot;, &quot;price-sell&quot;: &quot;9570&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;EQUINOX FWD V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8800&quot;}, {&quot;id&quot;: &quot;23711&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;106282&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;2779&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREEN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4395&quot;}, {&quot;id&quot;: &quot;692&quot;, &quot;trim&quot;: &quot;ES&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;96902&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY ES&quot;, &quot;price-sell&quot;: &quot;4583&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;TRIBUTE 4WD V6&quot;, &quot;make&quot;: &quot;MAZDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5700&quot;}, {&quot;id&quot;: &quot;1323&quot;, &quot;trim&quot;: &quot;Cus&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;75379&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN CUSTOM&quot;, &quot;price-sell&quot;: &quot;3006&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;CENTURY V6 3.1L V6 S&quot;, &quot;make&quot;: &quot;BUICK&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5085&quot;}, {&quot;id&quot;: &quot;34787&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 15, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77536&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY&quot;, &quot;price-sell&quot;: &quot;6649&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;RELAY 2WD V6&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7430&quot;}, {&quot;id&quot;: &quot;44808&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;74730&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.3L SXT&quot;, &quot;price-sell&quot;: &quot;9322&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CARAVAN FWD V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7500&quot;}, {&quot;id&quot;: &quot;65450&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 23, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;74671&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LX&quot;, &quot;price-sell&quot;: &quot;9429&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING 4C&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8060&quot;}, {&quot;id&quot;: &quot;39820&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 34, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;66740&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;4075&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND AM 4C&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5920&quot;}, {&quot;id&quot;: &quot;64985&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;71438&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER 3.5L LS&quot;, &quot;price-sell&quot;: &quot;11269&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;UPLANDER FWD V6 3.9L&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6240&quot;}, {&quot;id&quot;: &quot;27322&quot;, &quot;trim&quot;: &quot;GLS&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;60379&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3331&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ELANTRA 2.0L I4 MPI&quot;, &quot;make&quot;: &quot;HYUNDAI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4660&quot;}, {&quot;id&quot;: &quot;49763&quot;, &quot;trim&quot;: &quot;SES&quot;, &quot;year&quot;: &quot;2001&quot;, &quot;mpg&quot;: 33, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;91713&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SES DURATEC&quot;, &quot;price-sell&quot;: &quot;2875&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS 3.0L V6 EFI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3775&quot;}, {&quot;id&quot;: &quot;30189&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;70094&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;3155&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5050&quot;}, {&quot;id&quot;: &quot;21618&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;56851&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT&quot;, &quot;price-sell&quot;: &quot;7013&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6900&quot;}, {&quot;id&quot;: &quot;37989&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77968&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;3414&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS 2.0L I4 SFI&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3585&quot;}, {&quot;id&quot;: &quot;63429&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77888&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SXT&quot;, &quot;price-sell&quot;: &quot;5752&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C 2.4L I4 M&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4840&quot;}, {&quot;id&quot;: &quot;35867&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 21, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;65163&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.3L FFV SE&quot;, &quot;price-sell&quot;: &quot;3880&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CARAVAN FWD V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4200&quot;}, {&quot;id&quot;: &quot;51632&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 29, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;73754&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN 3.3L&quot;, &quot;price-sell&quot;: &quot;7005&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CARAVAN GRAND FWD V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5755&quot;}, {&quot;id&quot;: &quot;47943&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;84334&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;MAZDA5 GRAND TOURING&quot;, &quot;price-sell&quot;: &quot;10478&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;MAZDA5&quot;, &quot;make&quot;: &quot;MAZDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8250&quot;}, {&quot;id&quot;: &quot;65905&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;66187&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LIMITED&quot;, &quot;price-sell&quot;: &quot;5931&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER 2.4L I-4&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5215&quot;}, {&quot;id&quot;: &quot;43176&quot;, &quot;trim&quot;: &quot;GT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 39, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;59889&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN GT&quot;, &quot;price-sell&quot;: &quot;7691&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6900&quot;}, {&quot;id&quot;: &quot;50814&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 29, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;72703&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;8302&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING 4C&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7840&quot;}, {&quot;id&quot;: &quot;32927&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;68562&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3205&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;CAVALIER 4C 2.2L I4&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3600&quot;}, {&quot;id&quot;: &quot;2923&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;46241&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3985&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;FORENZA&quot;, &quot;make&quot;: &quot;SUZUKI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4700&quot;}, {&quot;id&quot;: &quot;71383&quot;, &quot;trim&quot;: &quot;GLS&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;67953&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5105&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SONATA V6 2.7L V6 MP&quot;, &quot;make&quot;: &quot;HYUNDAI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;6080&quot;}, {&quot;id&quot;: &quot;68827&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;63812&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT&quot;, &quot;price-sell&quot;: &quot;8198&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C 2.2L I4 MF&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6100&quot;}, {&quot;id&quot;: &quot;63685&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 23, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;49961&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE&quot;, &quot;price-sell&quot;: &quot;3772&quot;, &quot;size&quot;: &quot;SPORTS&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;MUSTANG V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5800&quot;}, {&quot;id&quot;: &quot;65740&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 17, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;81883&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON SXT&quot;, &quot;price-sell&quot;: &quot;7840&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7455&quot;}, {&quot;id&quot;: &quot;36044&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 34, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;57387&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SXT FFV&quot;, &quot;price-sell&quot;: &quot;5994&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS V6 2.7L V6 M&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5900&quot;}, {&quot;id&quot;: &quot;6907&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 14, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;76318&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV LS&quot;, &quot;price-sell&quot;: &quot;11066&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;EQUINOX FWD V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9015&quot;}, {&quot;id&quot;: &quot;6728&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 25, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;64615&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6160&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;OPTIMA 4C&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6800&quot;}, {&quot;id&quot;: &quot;50033&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;67207&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT&quot;, &quot;price-sell&quot;: &quot;7050&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7000&quot;}, {&quot;id&quot;: &quot;70411&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 14, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;82916&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT UTILITY&quot;, &quot;price-sell&quot;: &quot;8264&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;HIGHLANDER 2WD 4C&quot;, &quot;make&quot;: &quot;TOYOTA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8900&quot;}, {&quot;id&quot;: &quot;39498&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;69665&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;7608&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7560&quot;}, {&quot;id&quot;: &quot;25570&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;84048&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SPORT TOURER&quot;, &quot;price-sell&quot;: &quot;7219&quot;, &quot;size&quot;: &quot;CROSSOVER&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PACIFICA FWD&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7800&quot;}, {&quot;id&quot;: &quot;23425&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 48, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;89890&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;7657&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7810&quot;}, {&quot;id&quot;: &quot;22625&quot;, &quot;trim&quot;: &quot;ZX5&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;60973&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D HATCHBACK ZX5 SE&quot;, &quot;price-sell&quot;: &quot;5526&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FOCUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4910&quot;}, {&quot;id&quot;: &quot;18312&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;53031&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5329&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6050&quot;}, {&quot;id&quot;: &quot;1382&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 22, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;90972&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;13119&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FUSION V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8465&quot;}, {&quot;id&quot;: &quot;32393&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;70558&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LIMITED&quot;, &quot;price-sell&quot;: &quot;5905&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER 2.4L I4 S&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5350&quot;}, {&quot;id&quot;: &quot;58351&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 47, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;64920&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3363&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING 4C 2.4L I4 S&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5595&quot;}, {&quot;id&quot;: &quot;48702&quot;, &quot;trim&quot;: &quot;Lim&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 39, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;49920&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LIMITED&quot;, &quot;price-sell&quot;: &quot;4881&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;CENTURY V6&quot;, &quot;make&quot;: &quot;BUICK&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4860&quot;}, {&quot;id&quot;: &quot;57587&quot;, &quot;trim&quot;: &quot;&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;57488&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D CUV 2.2L&quot;, &quot;price-sell&quot;: &quot;5864&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;VUE 2WD 4C 2.2L I-4&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6300&quot;}, {&quot;id&quot;: &quot;67625&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;42442&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7382&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;PT CRUISER 2.4L I4 S&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6305&quot;}, {&quot;id&quot;: &quot;17317&quot;, &quot;trim&quot;: &quot;Her&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;85054&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;EXT CAB 4.2L W/T&quot;, &quot;price-sell&quot;: &quot;5833&quot;, &quot;size&quot;: &quot;LARGE TRUCK&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;F150 PICKUP 2WD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7535&quot;}, {&quot;id&quot;: &quot;62647&quot;, &quot;trim&quot;: &quot;GT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;74987&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN GT&quot;, &quot;price-sell&quot;: &quot;7469&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;G6 V6 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6645&quot;}, {&quot;id&quot;: &quot;19564&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;62187&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;10074&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX 3.8L V6 S&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7805&quot;}, {&quot;id&quot;: &quot;28242&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;78648&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT 3.5L&quot;, &quot;price-sell&quot;: &quot;7185&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA 3.5L V6 SFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8000&quot;}, {&quot;id&quot;: &quot;4700&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;45189&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX&quot;, &quot;price-sell&quot;: &quot;6796&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA 2.0L I4 EFI&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6480&quot;}, {&quot;id&quot;: &quot;31066&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;48155&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;7305&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;AVEO&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6035&quot;}, {&quot;id&quot;: &quot;63359&quot;, &quot;trim&quot;: &quot;SX&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;79081&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN EX&quot;, &quot;price-sell&quot;: &quot;8343&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA 2.0L I-4 EFI&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;MANUAL&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4465&quot;}, {&quot;id&quot;: &quot;66187&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2001&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;77739&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;MINIVAN EX&quot;, &quot;price-sell&quot;: &quot;4499&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ODYSSEY 3.5L V6 MPI&quot;, &quot;make&quot;: &quot;HONDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GOLD&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7245&quot;}, {&quot;id&quot;: &quot;18745&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;70151&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;6592&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX 3.8L V6 S&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5480&quot;}, {&quot;id&quot;: &quot;64272&quot;, &quot;trim&quot;: &quot;Spo&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;74949&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV&quot;, &quot;price-sell&quot;: &quot;7739&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;LIBERTY 2WD V6&quot;, &quot;make&quot;: &quot;JEEP&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7880&quot;}, {&quot;id&quot;: &quot;11825&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 42, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;98823&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE1&quot;, &quot;price-sell&quot;: &quot;3588&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND AM V6&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4265&quot;}, {&quot;id&quot;: &quot;13628&quot;, &quot;trim&quot;: &quot;XLS&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;68334&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D CUV 3.0L XLS&quot;, &quot;price-sell&quot;: &quot;5044&quot;, &quot;size&quot;: &quot;SMALL SUV&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;ESCAPE 4WD V6&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6335&quot;}, {&quot;id&quot;: &quot;44897&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 30, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;74636&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;PASSENGER EXT 3.4L&quot;, &quot;price-sell&quot;: &quot;5136&quot;, &quot;size&quot;: &quot;VAN&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;VENTURE FWD V6 3.4L&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4995&quot;}, {&quot;id&quot;: &quot;24490&quot;, &quot;trim&quot;: &quot;SL2&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;101689&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SL2&quot;, &quot;price-sell&quot;: &quot;3062&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;S SERIES&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3950&quot;}, {&quot;id&quot;: &quot;28559&quot;, &quot;trim&quot;: &quot;EX&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 44, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;48493&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5347&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SPECTRA&quot;, &quot;make&quot;: &quot;KIA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5400&quot;}, {&quot;id&quot;: &quot;51896&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;71608&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;8682&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING V6&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6900&quot;}, {&quot;id&quot;: &quot;57861&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 23, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;88200&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;6002&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;4075&quot;}, {&quot;id&quot;: &quot;65772&quot;, &quot;trim&quot;: &quot;SXT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 38, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;69242&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;5937&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;STRATUS 4C&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5535&quot;}, {&quot;id&quot;: &quot;5024&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 49, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;60042&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE1&quot;, &quot;price-sell&quot;: &quot;8535&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;G6 4C 2.4L I4 MPI&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6180&quot;}, {&quot;id&quot;: &quot;66447&quot;, &quot;trim&quot;: &quot;Adv&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 19, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;44568&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 3.7L SLT&quot;, &quot;price-sell&quot;: &quot;10952&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DURANGO 2WD V6&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;11285&quot;}, {&quot;id&quot;: &quot;68224&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 31, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;62437&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;3809&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION 2.0L I4 MPI&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;MAROON&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5790&quot;}, {&quot;id&quot;: &quot;7139&quot;, &quot;trim&quot;: &quot;ES&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 42, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;91885&quot;, &quot;nation&quot;: &quot;OTHER ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN ES&quot;, &quot;price-sell&quot;: &quot;3053&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;LANCER 2.0L I4 MPI&quot;, &quot;make&quot;: &quot;MITSUBISHI&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;3975&quot;}, {&quot;id&quot;: &quot;31016&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 47, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;50402&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON LS&quot;, &quot;price-sell&quot;: &quot;6438&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;AVEO&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6500&quot;}, {&quot;id&quot;: &quot;62077&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;74471&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;7569&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ALTIMA&quot;, &quot;make&quot;: &quot;NISSAN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8325&quot;}, {&quot;id&quot;: &quot;56817&quot;, &quot;trim&quot;: &quot;S&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;73707&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN 1.8&quot;, &quot;price-sell&quot;: &quot;6303&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;SENTRA 1.8L I4 EFI&quot;, &quot;make&quot;: &quot;NISSAN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6975&quot;}, {&quot;id&quot;: &quot;58704&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2003&quot;, &quot;mpg&quot;: 36, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;89239&quot;, &quot;nation&quot;: &quot;TOP LINE ASIAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE LX AUTO&quot;, &quot;price-sell&quot;: &quot;5840&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;OTHER&quot;, &quot;model&quot;: &quot;ACCORD 4C&quot;, &quot;make&quot;: &quot;HONDA&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6245&quot;}, {&quot;id&quot;: &quot;4717&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 39, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;49514&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;9271&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;AVEO 1.6L I4 EFI&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5240&quot;}, {&quot;id&quot;: &quot;39254&quot;, &quot;trim&quot;: &quot;SES&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 27, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;87391&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SES&quot;, &quot;price-sell&quot;: &quot;4196&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;4940&quot;}, {&quot;id&quot;: &quot;10773&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;86190&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;2472&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU V6 3.1L V6 SF&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;3600&quot;}, {&quot;id&quot;: &quot;56273&quot;, &quot;trim&quot;: &quot;SEL&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 45, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;72996&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SEL&quot;, &quot;price-sell&quot;: &quot;13361&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;TAURUS&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9045&quot;}, {&quot;id&quot;: &quot;3998&quot;, &quot;trim&quot;: &quot;LX&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 26, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;51621&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LX&quot;, &quot;price-sell&quot;: &quot;8147&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;SEBRING 4C&quot;, &quot;make&quot;: &quot;CHRYSLER&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8300&quot;}, {&quot;id&quot;: &quot;68572&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2007&quot;, &quot;mpg&quot;: 41, &quot;wheel-type&quot;: &quot;NULL&quot;, &quot;odo&quot;: &quot;60492&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;8455&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND PRIX&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;NULL&quot;, &quot;price-buy&quot;: &quot;7425&quot;}, {&quot;id&quot;: &quot;36645&quot;, &quot;trim&quot;: &quot;SLT&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;73125&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.7L SLT&quot;, &quot;price-sell&quot;: &quot;9547&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;DURANGO 2WD V8&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9250&quot;}, {&quot;id&quot;: &quot;56966&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;72468&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;5312&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU V6 3.5L V6 SF&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;5400&quot;}, {&quot;id&quot;: &quot;24145&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 40, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;79462&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;3704&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;GRAND AM 4C 2.2L I4&quot;, &quot;make&quot;: &quot;PONTIAC&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4400&quot;}, {&quot;id&quot;: &quot;16373&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 42, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;69706&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;2D COUPE&quot;, &quot;price-sell&quot;: &quot;9485&quot;, &quot;size&quot;: &quot;SPORTS&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;MUSTANG V6 4.0L V6 E&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;9200&quot;}, {&quot;id&quot;: &quot;28923&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 37, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;86732&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT 3.5L FFV&quot;, &quot;price-sell&quot;: &quot;9289&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA V6&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BROWN&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7185&quot;}, {&quot;id&quot;: &quot;44018&quot;, &quot;trim&quot;: &quot;XLS&quot;, &quot;year&quot;: &quot;2004&quot;, &quot;mpg&quot;: 14, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;84801&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 4.0L SPORT TRAC&quot;, &quot;price-sell&quot;: &quot;8295&quot;, &quot;size&quot;: &quot;MEDIUM SUV&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;EXPLORER 2WD V6 4.0L&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;6970&quot;}, {&quot;id&quot;: &quot;38722&quot;, &quot;trim&quot;: &quot;Bas&quot;, &quot;year&quot;: &quot;2002&quot;, &quot;mpg&quot;: 16, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;71423&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;2667&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU V6 3.1L V6 SF&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLUE&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4160&quot;}, {&quot;id&quot;: &quot;29435&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 18, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;53162&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;7750&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6400&quot;}, {&quot;id&quot;: &quot;31752&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 46, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;47778&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;9276&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;AVENGER 4C&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;8000&quot;}, {&quot;id&quot;: &quot;8466&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 43, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;55160&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN&quot;, &quot;price-sell&quot;: &quot;3911&quot;, &quot;size&quot;: &quot;COMPACT&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;NEON&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;4600&quot;}, {&quot;id&quot;: &quot;53196&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 42, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;50013&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D WAGON&quot;, &quot;price-sell&quot;: &quot;7634&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;CHRYSLER&quot;, &quot;model&quot;: &quot;CALIBER 2.0L I4 SFI&quot;, &quot;make&quot;: &quot;DODGE&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;7100&quot;}, {&quot;id&quot;: &quot;48396&quot;, &quot;trim&quot;: &quot;LT&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 47, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;67786&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LT 3.5L&quot;, &quot;price-sell&quot;: &quot;8068&quot;, &quot;size&quot;: &quot;LARGE&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;IMPALA&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;WHITE&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;7885&quot;}, {&quot;id&quot;: &quot;33067&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 23, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;68971&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LS&quot;, &quot;price-sell&quot;: &quot;6442&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;MALIBU 4C 2.2L I4 MP&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;BLACK&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;6245&quot;}, {&quot;id&quot;: &quot;52646&quot;, &quot;trim&quot;: &quot;LS&quot;, &quot;year&quot;: &quot;2005&quot;, &quot;mpg&quot;: 24, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;75951&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SUV 5.3L FFV LS&quot;, &quot;price-sell&quot;: &quot;10536&quot;, &quot;size&quot;: &quot;LARGE SUV&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;TAHOE 2WD&quot;, &quot;make&quot;: &quot;CHEVROLET&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;RED&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;10500&quot;}, {&quot;id&quot;: &quot;10182&quot;, &quot;trim&quot;: &quot;SE&quot;, &quot;year&quot;: &quot;2008&quot;, &quot;mpg&quot;: 14, &quot;wheel-type&quot;: &quot;1&quot;, &quot;odo&quot;: &quot;86145&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN SE&quot;, &quot;price-sell&quot;: &quot;13125&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;FORD&quot;, &quot;model&quot;: &quot;FUSION 4C&quot;, &quot;make&quot;: &quot;FORD&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;SILVER&quot;, &quot;wheels&quot;: &quot;Alloy&quot;, &quot;price-buy&quot;: &quot;8345&quot;}, {&quot;id&quot;: &quot;24647&quot;, &quot;trim&quot;: &quot;2&quot;, &quot;year&quot;: &quot;2006&quot;, &quot;mpg&quot;: 20, &quot;wheel-type&quot;: &quot;2&quot;, &quot;odo&quot;: &quot;55603&quot;, &quot;nation&quot;: &quot;AMERICAN&quot;, &quot;model-sub&quot;: &quot;4D SEDAN LEVEL 2&quot;, &quot;price-sell&quot;: &quot;5705&quot;, &quot;size&quot;: &quot;MEDIUM&quot;, &quot;name&quot;: &quot;GM&quot;, &quot;model&quot;: &quot;ION&quot;, &quot;make&quot;: &quot;SATURN&quot;, &quot;transmission&quot;: &quot;AUTO&quot;, &quot;color&quot;: &quot;GREY&quot;, &quot;wheels&quot;: &quot;Covers&quot;, &quot;price-buy&quot;: &quot;5500&quot;}]]]></content>
      <categories>
        <category>数据处理</category>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[千古奇文_命运赋]]></title>
    <url>%2F2021%2F03%2Fothers%2Freading%2F%E5%8D%83%E5%8F%A4%E5%A5%87%E6%96%87_%E5%91%BD%E8%BF%90%E8%B5%8B%2F</url>
    <content type="text"><![CDATA[《命运赋》文章引用历史上大量的事实，说明这世界人生命运的起落，如今读来，朗朗上口，其状物之精、明理之深，堪称一代奇文，与大家共赏。 一. 原文：天有不测风云，人有旦夕祸福。 蜈蚣百足，行不及蛇；雄鸡两翼，飞不过鸦。 马有千里之程，无骑不能自往；人有冲天之志，非运不能自通。 盖闻：人生在世，富贵不能淫，贫贱不能移。 文章盖世，孔子厄于陈邦；武略超群，太公钓于渭水。 颜渊命短，殊非凶恶之徒；盗跖([dào zhí])年长，岂是善良之辈。 尧帝明圣，却生不肖之儿；瞽叟((gǔ sǒu))愚顽，反生大孝之子。 张良原是布衣，萧何称谓县吏。 晏子身无五尺，封作齐国宰相；孔明卧居草庐，能作蜀汉军师。 楚霸虽雄，败于乌江自刎；汉王虽弱，竟有万里江山。 李广有射虎之威，到老无封；冯唐有乘龙之才，一生不遇。 韩信未遇之时，无一日三餐，及至遇行，腰悬三尺玉印，一旦时衰，死于阴人之手。 有先贫而后富，有老壮而少衰。满腹文章，白发竟然不中；才疏学浅，少年及第登科。 深院宫娥，运退反为妓妾；风流妓女，时来配作夫人。 青春美女，却招愚蠢之夫；俊秀郎君，反配粗丑之妇。 蛟龙未遇，潜水于鱼鳖之间；君子失时，拱手于小人之下。 衣服虽破，常存仪礼之容；面带忧愁，每抱怀安之量。 时遭不遇，只宜安贫守份；心若不欺，必然扬眉吐气。 初贫君子，天然骨骼生成；乍富小人，不脱贫寒肌体。 天不得时，日月无光；地不得时，草木不生； 水不得时，风浪不平；人不得时，利运不通。 注福注禄，命里已安排定，富贵谁不欲？人若不依根基八字，岂能为卿为相? 吾昔寓居洛阳，朝求僧餐，暮宿破窖，思衣不可遮其体，思食不可济其饥，上人憎，下人厌，人道我贱，非我不弃也。 今居朝堂，官至极品，位置三公，身虽鞠躬于一人之下，而列职于千万人之上，有挞百僚之杖，有斩鄙吝之剑，思衣而有罗锦千箱，思食而有珍馐百味，出则壮士执鞭，入则佳人捧觞(shāng)，上人宠，下人拥。 人道我贵，非我之能也，此乃时也、运也、命也。 嗟呼！人生在世，富贵不可尽用，贫贱不可自欺，听由天地循环，周而复始焉。 二. 原文加译文：天有不测风云，人有旦夕祸福。蜈蚣百足，行不及蛇；雄鸡两翼，飞不过鸦。马有千里之程，无骑不能自往；人有冲天之志，非运不能自通。【译文】天上有预测不到的风云变幻，人也会有早晚遇到的灾祸与喜事。蜈蚣有上百只脚，却不如蛇行走得好。家鸡翅膀虽然很大，却不能像鸟一样飞行。马虽然能行走千里之遥，但没有人驾驭也不能自己到达目的地。人虽然有远大的理想，但缺乏机遇就可能难以实现。 盖闻：人生在世，富贵不能淫，贫贱不能移。文章盖世，孔子厄于陈邦；武略超群，太公钓于渭水。颜渊命短，殊非凶恶之徒；盗跖年长，岂是善良之辈。尧帝明圣，却生不肖之儿；瞽叟愚顽，反生大孝之子。【译文】人们常说：人生在世，富贵不能淫，贫贱不能移。孔子的文章写得超过世人却被围困于陈国；拥有文韬武略的姜子牙也曾在渭水垂钓等待机会；孔子的学生颜回虽然早亡，但绝非凶恶的人；盗跖([dào zhí])虽然活得长，却不是善良人；尧、舜虽然英明，却生下不肖的儿子；舜的父亲瞽叟((gǔ sǒu))顽固愚蠢，反而生下舜这样的大孝子。 张良原是布衣，萧何称谓县吏。晏子身无五尺，封作齐国宰相；孔明卧居草庐，能作蜀汉军师。楚霸虽雄，败于乌江自刎；汉王虽弱，竟有万里江山。李广有射虎之威，到老无封；冯唐有乘龙之才，一生不遇。韩信未遇之时，无一日三餐，及至遇行，腰悬三尺玉印，一旦时衰，死于阴人之手。【译文】张良原来只是普通百姓，萧何也只是县吏。晏子的身高不到五尺，却被封为齐国宰相；孔明居住在茅草屋里，却能担当蜀国的军师。项羽虽然强大，却兵败而自刎乌江；刘邦虽然弱小，最终取得了国家政权。汉将李广虽有射虎石的威名，却终身都未获得封侯；冯唐虽有治国安邦的才能，却一生怀才不遇。韩信时运不济时，连饭都吃不上，等到运气来了，成为掌印的大将军，而一旦运气衰败，又死于阴毒人的计谋。 有先贫而后富，有老壮而少衰。满腹文章，白发竟然不中；才疏学浅，少年及第登科。深院宫娥，运退反为妓妾；风流妓女，时来配作夫人。青春美女，却招愚蠢之夫；俊秀郎君，反配粗丑之妇。【译文】有的人先富裕后贫穷，也有人老年富裕少年衰落。满腹锦绣文章，直到老年还没有考上功名；才疏学浅的人，可能很年轻就金榜题名。皇帝的妃娥在动乱中可能沦为妾妓；风流的妓女，时来运转也能做贵夫人。青春美丽的女子嫁了愚蠢的丈夫，俊秀的青年倒找了丑陋的妻子。 蛟龙未遇，潜水于鱼鳖之间；君子失时，拱手于小人之下。衣服虽破，常存仪礼之容；面带忧愁，每抱怀安之量。时遭不遇，只宜安贫守份；心若不欺，必然扬眉吐气。初贫君子，天然骨骼生成；乍富小人，不脱贫寒肌体。【译文】蛟龙没有机遇，只能藏身于鱼鳖(bie)之间；君子没有机会时，只能屈从于小人。衣服虽然破旧，常保持恭敬礼仪；面带忧愁却可能怀有兼济天下的志向。不得志时，只能安于贫穷和本分；心中坦荡，一定会有扬眉吐气的一天。君子贫寒也有一身傲骨，暴富的小人，也脱不了内心的贫寒。 天不得时，日月无光；地不得时，草木不生；水不得时，风浪不平；人不得时，利运不通。注福注禄，命里已安排定，富贵谁不欲？人若不依根基八字，岂能为卿为相?【译文】天气不好时，就见不到太阳和月亮的光辉；土地没有合适的气候条件时，草木都不会生长；水得不到恰当的环境时，就会掀起疾风巨浪；人若得不到机遇时，好运就不畅通。富贵荣华命中都有安排，谁不想要呢？人如果没有依从八德(孝、悌、忠、信、礼、义、廉、耻)而生活，哪里能做高官当宰相？ 吾昔寓居洛阳，朝求僧餐，暮宿破窖，思衣不可遮其体，思食不可济其饥，上人憎，下人厌，人道我贱，非我不弃也。今居朝堂，官至极品，位置三公，身虽鞠躬于一人之下，而列职于千万人之上，有挞百僚之杖，有斩鄙吝之剑，思衣而有罗锦千箱，思食而有珍馐百味，出则壮士执鞭，入则佳人捧觞(shāng)，上人宠，下人拥。人道我贵，非我之能也，此乃时也、运也、命也。【译文】以前，我在洛阳，白天到寺庙里吃斋饭，晚上住在寒冷的窑洞里，所穿衣服不能避寒，吃的粥饭抵御不了饥饿，上等人憎恨我，下等人讨厌我，都说我卑贱，是我没有机遇啊。现在我入朝为官，官职做到最高层，地位达到三公，地位只在皇帝一人之下，千万人之上，拥有管理百官的权利，有惩罚卑鄙悭(qiān)吝官员的权力。穿衣服是绫罗锦缎，吃的则是山珍海味，出门有武士保护，回家有仆人侍奉，皇上宠爱我，百官拥戴我，所有的人说我尊贵，不是我真有多大本领，而是我得到天时和命运的眷顾啊。 嗟呼！人生在世，富贵不可尽用，贫贱不可自欺，听由天地循环，周而复始焉。【译文】所以，人活在世上，居富贵不能尽情享用，处贫贱也不要自暴自弃，听从天地的循环，周而复始吧！]]></content>
      <categories>
        <category>其它</category>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云网址记录]]></title>
    <url>%2F2021%2F03%2Fothers%2Ftools%2F%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[清华开源软件镜像：https://mirrors.tuna.tsinghua.edu.cn/anaconda/ 个人网址记录 网址记录 多用户线上聊天：http://123.56.67.212:9022/ 数据可视化：http://123.56.67.212:9021/ 返回json数据：http://123.56.67.212:9020/data/1 淘金数据：http://123.56.67.212:9007/about/]]></content>
      <categories>
        <category>其它</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>网址</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[诗_十不足]]></title>
    <url>%2F2021%2F02%2Fothers%2Freading%2F%E8%AF%97_%E5%8D%81%E4%B8%8D%E8%B6%B3%2F</url>
    <content type="text"><![CDATA[十不足 [明]朱载育 终日奔忙只为饥，才得有食又思衣。置下绫罗身上穿，抬头又嫌房屋低。盖下高楼并大厦，床前却少美貌妻。娇妻美妾都娶下，又虑出门没马骑。 将钱买下高头马，马前马后少跟随。家人招下数十个，有钱没势被人欺。一铨铨到知县位，又说官小势位卑。一攀攀到阁老位，每日思想要登基。 一日南面坐天下，又想神仙来下棋。洞宾与他把棋下，又问哪是上天梯。上天梯子未坐下，阎王发牌鬼来催。若非此人大限到，上到天上还嫌低。]]></content>
      <categories>
        <category>其它</category>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用python执行js代码：PyExecJS库]]></title>
    <url>%2F2021%2F01%2Fspider%2Fcases%2FPyExecJS%E5%BA%93%2F</url>
    <content type="text"><![CDATA[一. 安装node.js环境安装NodeJS下载： http://nodejs.cn/download/安装： https://www.runoob.com/nodejs/nodejs-install-setup.html 测试安装成功可在控制台输入：node --version 二. 安装PyExecJS源：https://pypi.org/project/PyExecJS/ 安装：pip install PyExecJS 查看执行JS的环境： import execjs # 返回：JScript，是windows 默认执行JS的环境 # 返回：Node.js (V8)，是NodeJS环境 print(execjs.get().name) 三. 案例2.1 一个简短的案例： import execjs print(execjs.eval(&quot;&#39;red yellow blue&#39;.split(&#39; &#39;)&quot;)) ctx = execjs.compile(&quot;&quot;&quot; function add(x, y) { return x + y; } &quot;&quot;&quot;) print(ctx.call(&quot;add&quot;, 1, 2)) 2.2 可以通过 get() 函数选择特定的JavaScript运行时 import execjs default = execjs.get() # the automatically picked runtime print(default.eval(&quot;1 + 2&quot;)) # jscript = execjs.get(&quot;JScript&quot;) # print(default.eval(&quot;1 + 2&quot;)) node = execjs.get(&quot;Node&quot;) print(node.eval(&quot;1 + 2&quot;)) 2.3 先编译、后调用 import execjs # 直接执行 print(&#39;execjs.eval：&#39;, execjs.eval(&#39; &quot;a、b、c、d、e&quot;.split(&quot;、&quot;) &#39;)) # 先编译、后调用 # 将js文件中的内容读取出来编译即可调用里面的方法了 js_compile = execjs.compile( &quot;&quot;&quot; function add(x, y) { return x + y; } &quot;&quot;&quot; ) eval_str = &quot;js_compile.call(&#39;add&#39;, &#39;{}&#39;, &#39;{}&#39;)&quot;.format(&#39;abc&#39;, 123) print(&#39;eval执行的语句：&#39;, eval_str) print(&#39;eval：&#39;, eval(eval_str)) print(&#39;execjs.compile().call()：&#39;, js_compile.call(&#39;add&#39;, &#39;abc&#39;, 123)) 执行结果如下：]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[typescript简介和基础类型]]></title>
    <url>%2F2020%2F12%2Ffront%2F03javascript%2Ftypescript%E7%AE%80%E4%BB%8B%E5%92%8C%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[一.]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[将excel中的内容存入mysql]]></title>
    <url>%2F2020%2F12%2Fpython%2Fcases%2F%E5%B0%86excel%E4%B8%AD%E7%9A%84%E5%86%85%E5%AE%B9%E5%AD%98%E5%85%A5mysql%2F</url>
    <content type="text"><![CDATA[将excel中的内容存入mysql # -*- encoding: utf-8 -*- import time import xlrd import hashlib from sqlalchemy.orm import sessionmaker from sqlalchemy.ext.declarative import declarative_base from sqlalchemy import create_engine, Column, Integer, TIMESTAMP, CHAR, VARCHAR # mysql数据库 ENGINE = create_engine(&#39;mysql+pymysql://wxx:654321@***/weixx?charset=utf8&#39;) # ENGINE = create_engine(&#39;mysql+pymysql://cuh:123456@***/zk?charset=utf8&#39;) DBSession = sessionmaker(bind=ENGINE) session = DBSession() Base = declarative_base() class YonghuiGoodsInfoItem(Base): &quot;&quot;&quot;永辉超市部分商品表&quot;&quot;&quot; __tablename__ = &#39;yonghui_goods_info&#39; id = Column(Integer, primary_key=True, autoincrement=True) sha = Column(CHAR(40), unique=True) crawled_time = Column(TIMESTAMP, doc={&#39;zh&#39;: &#39;数据存入的时间&#39;}) shop_name = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;超市名称&#39;}) goods_id = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;商品id&#39;}) goods_name = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;商品名称&#39;}) goods_category = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;商品分类&#39;}) goods_price = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;商品价格&#39;}) goods_stock = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;商品库存&#39;}) goods_unit = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;商品单位&#39;}) goods_image = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;商品图片url&#39;}) goods_desc = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;商品描述&#39;}) @classmethod def creat_table(cls): &quot;&quot;&quot;创建数据表&quot;&quot;&quot; cls.__table__.create(bind=ENGINE, checkfirst=True) def insert(): &quot;&quot;&quot;插入数据&quot;&quot;&quot; wb = xlrd.open_workbook(filename=&#39;yonghui.xls&#39;) # 打开文件 sheet1 = wb.sheet_by_index(0) # 通过索引获取表格sheet1.nrows for i in range(1, sheet1.nrows): rows = sheet1.row_values(i) # 获取行内容 shop_name = rows[1] goods_id = rows[4] goods_name = rows[5] goods_category = rows[6] goods_price = rows[7] goods_stock = rows[9] goods_unit = rows[10] goods_image = rows[11] goods_desc = rows[12] time_now = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) sha = get_hash(goods_id+goods_name) print(goods_id, goods_name) try: result = session.query(YonghuiGoodsInfoItem).filter(YonghuiGoodsInfoItem.sha == sha).first() if not result: item = YonghuiGoodsInfoItem(sha=sha, crawled_time=time_now, shop_name=shop_name, goods_id=goods_id, goods_name=goods_name, goods_category=goods_category, goods_price=goods_price, goods_stock=goods_stock, goods_unit=goods_unit, goods_image=goods_image, goods_desc=goods_desc) session.add(item) else: result.crawled_time = time_now result.sha = sha session.commit() print(f&#39;时间:{time_now}, cookie:{goods_name} 已存入数据库！&#39;) except BaseException as e: session.rollback() session.close() raise BaseException(f&quot;数据插入失败: {e}&quot;) def get_hash(hash_str): hash = hashlib.sha1() hash.update(str(hash_str).encode(&#39;utf-8&#39;)) url_sha = hash.hexdigest() return url_sha if __name__ == &#39;__main__&#39;: table = YonghuiGoodsInfoItem() table.creat_table() insert()]]></content>
      <categories>
        <category>python</category>
        <category>python案例</category>
      </categories>
      <tags>
        <tag>python案例</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用requests+tkinter实现小型翻译器]]></title>
    <url>%2F2020%2F11%2Fspider%2Fcases%2F%E7%94%A8requests%2Btkinter%E5%AE%9E%E7%8E%B0%E5%B0%8F%E5%9E%8B%E7%BF%BB%E8%AF%91%E5%99%A8%2F</url>
    <content type="text"><![CDATA[代码如下： # -*- coding: utf-8 -*- import requests from requests.exceptions import RequestException import tkinter as tk # 定义翻译函数 def translate(): str1 = text1.get() # 定义一个变量，用来接收输入文本框的值 data = { &#39;doctype&#39;: &#39;json&#39;, &#39;type&#39;: &#39;AUTO&#39;, &#39;i&#39;: str1 # 将输入文本框中的值赋值给接口参数 } url = &quot;http://fanyi.youdao.com/translate&quot; try: r = requests.get(url, params=data) if r.status_code == 200: result = r.json() translate_result = result[&#39;translateResult&#39;][0][0][&quot;tgt&quot;] text2.delete(1.0, &quot;end&quot;) # 清空输出文本框 text2.insert(&#39;end&#39;, translate_result) # 将翻译结果添加到输出文本框中 except RequestException: text2.insert(&#39;end&#39;, &quot;发生错误&quot;) # 定义写入文本txt的函数 def write(): with open(&#39;./data/translate.txt&#39;, &#39;w&#39;) as f1: f1.write(text1.get() + &#39;,&#39; + text2.get(0.0, tk.END)) # 定义清空文本框的函数 def delete(): text1.delete(0, &quot;end&quot;) # 从第一行清除到最后一行 text2.delete(1.0, &quot;end&quot;) window = tk.Tk() # 创建window窗口 window.title(&quot;mini翻译器&quot;) # 定义窗口名称 text1 = tk.Entry(window, width=80, bg=&#39;whitesmoke&#39;) # 在窗体上添加一个输入文本框,并设置尺寸和颜色 text2 = tk.Text(window, height=18, bg=&#39;lightgrey&#39;) # 在窗体上添加一个输出文本框，并设置尺寸和颜色 text1.grid(row=0, sticky=&quot;W&quot;, padx=1) text2.grid(row=1) # 添加一个按钮，用于触发翻译功能 t_button = tk.Button(window, text=&#39;翻译&#39;, relief=tk.RAISED, width=8, height=1, font=&#39;宋体&#39;, bg=&#39;red&#39;, fg=&#39;white&#39;, command=translate) # 添加一个按钮，用于触发清空输入文本框 button1 = tk.Button(window, text=&#39;保存&#39;, font=&#39;宋体&#39;, relief=tk.RAISED, width=8, height=1, command=write) # 添加一个按钮，用于触发清空输出文本框 button2 = tk.Button(window, text=&#39;清空&#39;, font=&#39;宋体&#39;, relief=tk.RAISED, width=8, height=1, command=delete) # 添加背景图片 image_file = tk.PhotoImage(file=&#39;aa.png&#39;) label = tk.Label(window, image=image_file) # 完成界面布局，设置各个控件的位置 t_button.grid(row=0, column=1, padx=2) button1.grid(row=0, column=2, padx=2) button2.grid(row=0, column=3, padx=2) label.grid(row=1, column=1, columnspan=3) tk.mainloop() 执行结果如下]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爬取阳光电影的链接]]></title>
    <url>%2F2020%2F10%2Fspider%2Fcases%2F%E7%88%AC%E5%8F%96%E9%98%B3%E5%85%89%E7%94%B5%E5%BD%B1%E7%9A%84%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[用python爬取阳光电影的链接，并存入文本。把链接直接复制到迅雷软件即可下载电影，方便快捷。python代码如下： # -*- encoding: utf-8 -*- &quot;&quot;&quot; @Author: cuiyonghua @CreateDate: 2020/10/15 3:44 下午 @Description: &quot;&quot;&quot; import requests import re for page in range(1, 223): url = &#39;http://www.ygdy8.net/html/gndy/dyzz/list_23_&#39;+str(page)+&#39;.html&#39; html = requests.get(url) html.encoding = &quot;gb2312&quot; data = re.findall(&#39;&lt;a href=&quot;(.*?)&quot; class=&quot;ulink&quot;&gt;&#39;, html.text) #返回的是列表 for m in data: xqurl = &#39;http://www.ygdy8.net&#39; + m html2 = requests.get(xqurl) html2.encoding = &#39;gb2312&#39; # 指定编码 try: dyLink = re.findall(&#39;&lt;a href=&quot;(.*?)&quot;&gt;ftp://.*?&lt;/a&gt;&lt;/td&gt;&#39;, html2.text)[0] print(f&#39;page: {page}, 链接: {dyLink}&#39;) with open(&#39;阳光电影_最新电影链接.txt&#39;, &#39;a&#39;, encoding=&quot;utf-8&quot;) as f: f.write(dyLink + &#39;\n&#39;) except: print(&quot;没有匹配信息&quot;) 爬取结果存入文本如下图：]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript_ES6至ES10新特性]]></title>
    <url>%2F2020%2F10%2Ffront%2F03javascript%2Fjavascript_ES6%E8%87%B3ES10%E6%96%B0%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[一.]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用python实现代码雨]]></title>
    <url>%2F2020%2F10%2Fpython%2Fcases%2FPython3%E4%BB%A3%E7%A0%81%E9%9B%A8%2F</url>
    <content type="text"><![CDATA[用python实现代码雨：电影黑客帝国里的效果，代码可直接运行 # -*- coding:utf-8 -*- import random import pygame from pygame.locals import * from sys import exit PANEL_width = 1920 PANEL_highly = 1080 FONT_PX = 40 pygame.init() # 创建一个可视窗口, 如果不想全屏运行，可以把 FULLSCREEN 参数去掉 winSur = pygame.display.set_mode((PANEL_width, PANEL_highly), FULLSCREEN, 32) font = pygame.font.SysFont(&quot;SimHei&quot;, 35) bg_suface = pygame.Surface((PANEL_width, PANEL_highly), flags=pygame.SRCALPHA) pygame.Surface.convert(bg_suface) bg_suface.fill(pygame.Color(0, 0, 0, 20)) winSur.fill((0, 0, 0)) # 数字版 # texts = [font.render(str(i), True, (0, 255, 0)) for i in range(10)] # # 二进制版 # letter = [&#39;1&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;1&#39; # ,&#39;1&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;0&#39;, &#39;1&#39;, &#39;0&#39;, &#39;1&#39;] # # 汉字版,但看不到字 # letter = [&#39;我&#39;, &#39;爱&#39;, &#39;你&#39;, &#39;我&#39;, &#39;爱你&#39;, &#39;我爱你&#39;, &#39;我非常爱你&#39;, &#39;我爱你&#39;, &#39;我爱&#39;, &#39;我&#39;, &#39;爱&#39;, &#39;你&#39;, # &#39;我爱你&#39;, &#39;爱&#39;, &#39;我&#39;, &#39;爱你&#39;, &#39;我&#39;, &#39;我爱&#39;, &#39;爱你&#39;, &#39;你&#39;] # # # 字母版 letter = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39; ,&#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] texts = [ font.render(str(letter[i]), True, (0, 255, 0)) for i in range(20) ] # 按屏幕的宽带计算可以在画板上放几列坐标并生成一个列表 column = int(PANEL_width / FONT_PX) drops = [0 for i in range(column)] while True: # 从队列中获取事件, 如果退出程序, 按两下确认键即可 for event in pygame.event.get(): if event.type == pygame.QUIT: exit() elif event.type == pygame.KEYDOWN: chang = pygame.key.get_pressed() if (chang[32]): exit() # 将暂停一段给定的毫秒数 pygame.time.delay(30) # 重新编辑图像第二个参数是坐上角坐标 winSur.blit(bg_suface, (0, 0)) for i in range(len(drops)): text = random.choice(texts) # 重新编辑每个坐标点的图像 winSur.blit(text, (i * FONT_PX, drops[i] * FONT_PX)) drops[i] += 1 if drops[i] * 10 &gt; PANEL_highly or random.random() &gt; 0.95: drops[i] = 0 pygame.display.flip() 实现效果截图如下：]]></content>
      <categories>
        <category>python</category>
        <category>python案例</category>
      </categories>
      <tags>
        <tag>python案例</tag>
        <tag>python</tag>
        <tag>代码雨</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vi的常用指令]]></title>
    <url>%2F2020%2F10%2Fdeploy%2Flinux%2F20201012_vi%2F</url>
    <content type="text"><![CDATA[在工作中，要对 服务器 上的文件进行 简单 的修改，可以使用 ssh 远程登录到服务器上，并且使用 vi 进行快速的编辑即可 常见需要修改的文件包括： 源程序 配置文件，例如 ssh 的配置文件 ~/.ssh/config 在没有图形界面的环境下，要编辑文件，vi 是最佳选择！ 每一个要使用 Linux 的程序员，都应该或多或少的学习一些 vi 的常用命令 01 vi 和 vim 在很多 Linux 发行版中，直接把 vi 做成 vim 的软连接 vi 是 Visual interface 的简称，是 Linux 中 最经典 的文本编辑器 vi 的核心设计思想 —— 让程序员的手指始终保持在键盘的核心区域，就能完成所有的编辑操作 vi 的特点： 没有图形界面 的 功能强大 的编辑器 只能是编辑 文本内容，不能对字体、段落进行排版 不支持鼠标操作 没有菜单 只有命令 vi 编辑器在 系统管理、服务器管理 编辑文件时，其功能永远不是图形界面的编辑器能比拟的 vimvim = vi improved vim 是从 vi 发展出来的一个文本编辑器，支持 代码补全、编译 及 错误跳转 等方便编程的功能特别丰富，在程序员中被广泛使用，被称为 编辑器之神 查询软连接命令（知道） 在很多 Linux 发行版中直接把 vi 做成 vim 的软连接 # 查找 vi 的运行文件 $ which vi $ ls -l /usr/bin/vi $ ls -l /etc/alternatives/vi $ ls -l /usr/bin/vim.basic # 查找 vim 的运行文件 $ which vim $ ls -l /usr/bin/vim $ ls -l /etc/alternatives/vim $ ls -l /usr/bin/vim.basic 02. 打开和新建文件 在终端中输入 vi 在后面跟上文件名 即可 $ vi 文件名 如果文件已经存在，会直接打开该文件 如果文件不存在，会新建一个文件 2.1 打开文件并且定位行 在日常工作中，有可能会遇到 打开一个文件，并定位到指定行 的情况 例如：在开发时，知道某一行代码有错误，可以 快速定位 到出错代码的位置 这个时候，可以使用以下命令打开文件 $ vi 文件名 +行数 提示：如果只带上 + 而不指定行号，会直接定位到文件末尾 2.2 异常处理 如果 vi 异常退出，在磁盘上可能会保存有 交换文件 下次再使用 vi 编辑该文件时，会看到以下屏幕信息，按下字母 d 可以 删除交换文件 即可 提示：按下键盘时，注意关闭输入法 03. 三种工作模式 vi 有三种基本工作模式： 命令模式 打开文件首先进入命令模式，是使用 vi 的 入口 通过 命令 对文件进行常规的编辑操作，例如：定位、翻页、复制、粘贴、删除…… 在其他图形编辑器下，通过 快捷键 或者 鼠标 实现的操作，都在 命令模式 下实现 末行模式 —— 执行 保存、退出 等操作 要退出 vi 返回到控制台，需要在末行模式下输入命令 末行模式 是 vi 的 出口 编辑模式 —— 正常的编辑文字 提示：在 Touch Bar 的 Mac 电脑上 ，按 ESC 不方便，可以使用 CTRL + [ 替代 末行模式命令 命令 英文 功能 w write 保存 q quit 退出，如果没有保存，不允许退出 q! quit 强行退出，不保存退出 wq write &amp; quit 保存并退出 x 保存并退出 04. 常用命令命令线路图 重复次数 在命令模式下，先输入一个数字，再跟上一个命令，可以让该命令 重复执行指定次数 移动和选择（多练） vi 之所以快，关键在于 能够快速定位到要编辑的代码行 移动命令 能够 和 编辑操作 命令 组合使用 编辑操作 删除、复制、粘贴、替换、缩排 撤销和重复 查找替换 编辑 学习提示 vi 的命令较多，不要期望一下子全部记住，个别命令忘记了，只是会影响编辑速度而已 在使用 vi 命令时，注意 关闭中文输入法 4.1 移动（基本） 要熟练使用 vi，首先应该学会怎么在 命令模式 下样快速移动光标 编辑操作命令，能够和 移动命令 结合在一起使用 1) 上、下、左、右 命令 功能 手指 h 向左 食指 j 向下 食指 k 向上 中指 l 向右 无名指 2) 行内移动 命令 英文 功能 w word 向后移动一个单词 b back 向前移动一个单词 0 行首 ^ 行首，第一个不是空白字符的位置 $ 行尾 3) 行数移动 命令 英文 功能 gg go 文件顶部 G go 文件末尾 数字gg go 移动到 数字 对应行数 数字G go 移动到 数字 对应行数 :数字 移动到 数字 对应行数 4) 屏幕移动 命令 英文 功能 Ctrl + b back 向上翻页 Ctrl + f forward 向下翻页 H Head 屏幕顶部 M Middle 屏幕中间 L Low 屏幕底部 4.2 移动（程序）1) 段落移动 vi 中使用 空行 来区分段落 在程序开发时，通常 一段功能相关的代码会写在一起 —— 之间没有空行 命令 功能 { 上一段 } 下一段 2) 括号切换 在程序世界中，()、[]、{} 使用频率很高，而且 都是成对出现的 命令 功能 % 括号匹配及切换 3) 标记 在开发时，某一块代码可能需要稍后处理，例如：编辑、查看 此时先使用 m 增加一个标记，这样可以 在需要时快速地跳转回来 或者 执行其他编辑操作 标记名称 可以是 a~z 或者 A~Z 之间的任意 一个 字母 添加了标记的 行如果被删除，标记同时被删除 如果 在其他行添加了相同名称的标记，之前添加的标记也会被替换掉 命令 英文 功能 mx mark 添加标记 x，x 是 a~z 或者 A~Z 之间的任意一个字母 ‘x 直接定位到标记 x 所在位置 4.3 选中文本（可视模式） 学习 复制 命令前，应该先学会 怎么样选中 要复制的代码 在 vi 中要选择文本，需要先使用 Visual 命令切换到 可视模式 vi 中提供了 三种 可视模式，可以方便程序员选择 选中文本的方式 按 ESC 可以放弃选中，返回到 命令模式 命令 模式 功能 v 可视模式 从光标位置开始按照正常模式选择文本 V 可视行模式 选中光标经过的完整行 Ctrl + v 可视块模式 垂直方向选中文本 可视模式下，可以和 移动命令 连用，例如：ggVG 能够选中所有内容 4.4 撤销和恢复撤销 在学习编辑命令之前，先要知道怎样撤销之前一次 错误的 编辑动作！ 命令 英文 功能 u undo 撤销上次命令 CTRL + r redo 恢复撤销的命令 4.5 删除文本 命令 英文 功能 x cut 删除光标所在字符，或者选中文字 d(移动命令) delete 删除移动命令对应的内容 dd delete 删除光标所在行，可以 ndd 复制多行 D delete 删除至行尾 提示：如果使用 可视模式 已经选中了一段文本，那么无论使用 d 还是 x，都可以删除选中文本 删除命令可以和 移动命令 连用，以下是常见的组合命令： * dw # 从光标位置删除到单词末尾 * d0 # 从光标位置删除到一行的起始位置 * d} # 从光标位置删除到段落结尾 * ndd # 从光标位置向下连续删除 n 行 * d代码行G # 从光标所在行 删除到 指定代码行 之间的所有代码 * d&#39;a # 从光标所在行 删除到 标记a 之间的所有代码 4.6 复制、粘贴 vi 中提供有一个 被复制文本的缓冲区 复制 命令会将选中的文字保存在缓冲区 删除 命令删除的文字会被保存在缓冲区 在需要的位置，使用 粘贴 命令可以将缓冲区的文字插入到光标所在位置 命令 英文 功能 y(移动命令) copy 复制 yy copy 复制一行，可以 nyy 复制多行 p paste 粘贴 提示 命令 d、x 类似于图形界面的 剪切操作 —— CTRL + X 命令 y 类似于图形界面的 复制操作 —— CTRL + C 命令 p 类似于图形界面的 粘贴操作 —— CTRL + V vi 中的 文本缓冲区同样只有一个，如果后续做过 复制、剪切 操作，之前缓冲区中的内容会被替换 注意 vi 中的 文本缓冲区 和系统的 剪贴板 不是同一个 所以在其他软件中使用 CTRL + C 复制的内容，不能在 vi 中通过 P 命令粘贴 可以在 编辑模式 下使用 鼠标右键粘贴 4.7 替换 命令 英文 功能 工作模式 r replace 替换当前字符 命令模式 R replace 替换当前行光标后的字符 替换模式 R 命令可以进入 替换模式，替换完成后，按下 ESC 可以回到 命令模式 替换命令 的作用就是不用进入 编辑模式，对文件进行 轻量级的修改 4.8 缩排和重复执行 命令 功能 &gt;&gt; 向右增加缩进 &lt;&lt; 向左减少缩进 . 重复上次命令 缩排命令 在开发程序时，统一增加代码的缩进 比较有用！ 一次性 在选中代码前增加 4 个空格，就叫做 增加缩进 一次性 在选中代码前删除 4 个空格，就叫做 减少缩进 在 可视模式 下，缩排命令只需要使用 一个 &gt; 或者 &lt; 在程序中，缩进 通常用来表示代码的归属关系 前面空格越少，代码的级别越高 前面空格越多，代码的级别越低 4.9 查找常规查找 命令 功能 /str 查找 str 查找到指定内容之后，使用 Next 查找下一个出现的位置： n: 查找下一个 N: 查找上一个 如果不想看到高亮显示，可以随便查找一个文件中不存在的内容即可 单词快速匹配 命令 功能 * 向后查找当前光标所在单词 # 向前查找当前光标所在单词 在开发中，通过单词快速匹配，可以快速看到这个单词在其他什么位置使用过 4.10 查找并替换 在 vi 中查找和替换命令需要在 末行模式 下执行 记忆命令格式： :%s///g 1) 全局替换 一次性替换文件中的 所有出现的旧文本 命令格式如下： :%s/旧文本/新文本/g 2) 可视区域替换 先选中 要替换文字的 范围 命令格式如下： :s/旧文本/新文本/g 3) 确认替换 如果把末尾的 g 改成 gc 在替换的时候，会有提示！推荐使用！ :%s/旧文本/新文本/gc y - yes 替换 n - no 不替换 a - all 替换所有 q - quit 退出替换 l - last 最后一个，并把光标移动到行首 ^E 向下滚屏 ^Y 向上滚屏 4.11 插入命令 在 vi 中除了常用的 i 进入 编辑模式 外，还提供了以下命令同样可以进入编辑模式： 命令 英文 功能 常用 i insert 在当前字符前插入文本 常用 I insert 在行首插入文本 较常用 a append 在当前字符后添加文本 A append 在行末添加文本 较常用 o 在当前行后面插入一空行 常用 O 在当前行前面插入一空行 常用 演练 1 —— 编辑命令和数字连用 在开发中，可能会遇到连续输入 N 个同样的字符 在 Python 中有简单的方法，但是其他语言中通常需要自己输入 例如：********** 连续 10 个星号 要实现这个效果可以在 命令模式 下 输入 10，表示要重复 10 次 输入 i 进入 编辑模式 输入 * 也就是重复的文字 按下 ESC 返回到 命令模式，返回之后 vi 就会把第 2、3 两步的操作重复 10 次 提示：正常开发时，在 进入编辑模式之前，不要按数字 演练 2 —— 利用 可视块 给多行代码增加注释 在开发中，可能会遇到一次性给多行代码 增加注释 的情况 在 Python 中，要给代码增加注释，可以在代码前增加一个 # 要实现这个效果可以在 命令模式 下 移动到要添加注释的 第 1 行代码，按 ^ 来到行首 按 CTRL + v 进入 可视块 模式 使用 j 向下连续选中要添加的代码行 输入 I 进入 编辑模式，并在 行首插入，注意：一定要使用 I 输入 # 也就是注释符号 按下 ESC 返回到 命令模式，返回之后 vi 会在之前选中的每一行代码 前 插入 # 05. 分屏命令 属于 vi 的高级命令 —— 可以 同时编辑和查看多个文件 5.1 末行命令扩展末行命令 主要是针对文件进行操作的：保存、退出、保存&amp;退出、搜索&amp;替换、另存、新建、浏览文件 命令 英文 功能 :e . edit 会打开内置的文件浏览器，浏览要当前目录下的文件 :n 文件名 new 新建文件 :w 文件名 write 另存为，但是仍然编辑当前文件，并不会切换文件 提示：切换文件之前，必须保证当前这个文件已经被保存！ 已经学习过的 末行命令： 命令 英文 功能 :w write 保存 :q quit 退出，如果没有保存，不允许退出 :q! quit 强行退出，不保存退出 :wq write &amp; quit 保存并退出 :x 保存并退出 :%s///gc 确认搜索并替换 在实际开发中，可以使用 w 命令 阶段性的备份代码 5.2 分屏命令 使用 分屏命令，可以 同时编辑和查看多个文件 命令 英文 功能 :sp [文件名] split 横向增加分屏 :vsp [文件名] vertical split 纵向增加分屏 1) 切换分屏窗口 分屏窗口都是基于 CTRL + W 这个快捷键的，w 对应的英文单词是 window 命令 英文 功能 w window 切换到下一个窗口 r reverse 互换窗口 c close 关闭当前窗口，但是不能关闭最后一个窗口 q quit 退出当前窗口，如果是最后一个窗口，则关闭 vi o other 关闭其他窗口 2) 调整窗口大小 分屏窗口都是基于 CTRL + W 这个快捷键的，w 对应的英文单词是 window 命令 英文 功能 + 增加窗口高度 - 减少窗口高度 &gt; 增加窗口宽度 &lt; 减少窗口宽度 = 等分窗口大小 调整窗口宽高的命令可以和数字连用，例如：5 CTRL + W + 连续 5 次增加高度 06. 常用命令速查vimrc vimrc 是 vim 的配置文件，可以设置 vim 的配置，包括：热键、配色、语法高亮、插件 等 Linux 中 vimrc 有两个位置，家目录下的配置文件优先级更高 /etc/vim/vimrc ~/.vimrc 常用的插件有： 代码补全 代码折叠 搜索 Git 集成 …… 网上有很多高手已经配置好的针对 python 开发的 vimrc 文件，可以下载过来直接使用，或者等大家多 Linux 比较熟悉后，再行学习！]]></content>
      <categories>
        <category>部署</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[800个句子掌握7000单词]]></title>
    <url>%2F2020%2F10%2Fothers%2Fenglish%2F800_centence%2F</url>
    <content type="text"><![CDATA[学习是件苦差事，自己不努力，资料再好也白搭。不过还是希望这些有趣的句子能给你的学习带去些许的乐趣。 With my own ears I clearly heard the heart beat of the nuclear bomb. 我亲耳清楚地听到原子弹的心脏的跳动。 Next year the bearded bear will bear a dear baby in the rear. 明年，长胡子的熊将在后方产一头可爱的小崽。 Early I searched through the earth for earthenware so as to research in earthquake. 早先我在泥土中搜寻陶器以研究地震。 I learn that learned earnest men earn much by learning. 我得知有学问而认真的人靠学问挣很多钱。 She swears to wear the pearls that appear to be pears. 她发誓要戴那些看起来像梨子的珍珠。 I nearly fear to tear the tearful girl’s test paper. 我几乎害怕撕那个泪流满面的女孩的试卷。 The bold folk fold up the gold and hold it in hand. 大胆的人们将黄金折叠起来拿在手里。 The customers are accustomed to the disgusting custom. 顾客们习惯了令人讨厌的风俗。 The dust in the industrial zone frustrated the industrious man. 工业区里的灰尘使勤勉的人灰心。 The just budget judge just justifies the adjustment of justice. 公正的预算法官只不过为司法调整辩护而已。 I used to abuse the unusual usage, but now I’m not used to doing so. 我过去常滥用这个不寻常的用法,但我现在不习惯这样做。 The lace placed in the palace is replaced first, and displaced later. 放在皇宫的带子先被替换，后来被转移。 I paced in the peaceful spacecraft. 我在宁静的宇宙飞船里踱步。 Sir, your bird stirred my girlfriend’s birthday party. 先生，你的鸟搅了我女友的生日聚会。 The waterproof material is suitable for the aerial used near the waterfall. 这种耐水材料适合用在瀑布附近的天线。 I hint that the faint saint painted the printer with a pint of paint. 我暗示说虚弱的圣徒用了一品脱油漆涂印刷机。 At any rate, the separation ratio is accurate. 无论如何,这个分离比是精确的。 The boundary around the round ground separates us from the surroundings. 围绕着圆形场地的边界将我们同四周隔开。 The blunder made the underground instrument undergo an undermining of the thunderbolt. 这个失策让地下仪器经受了一次雷电的破坏。 The tilted salt filters halt alternately for altering. 倾斜的盐过滤器交替地停下以便改造。 The wandering band abandoned her bandaged husband on Swan Island. 流浪的乐队把她那位打着绷带的丈夫遗弃在天鹅岛上。 The manly Roman woman manager by the banner had man’s manner. 军旗旁那位有男子气概的古罗马女经理具有男子风度。 In the lane the planer saw a planet airplane under the crane. 在巷道里，刨工看见了起重机下的行星飞机。 The wet pet in the net hasn’t got on the jet plane yet. 网中的湿宠物还没有登上喷气飞机。 After maintenance the main remains and remainders are left on the domain. 维修之后，主要遗骸和剩余物留在了领地上。 The grandson branded the brandy randomly. 孙子给白兰地随机地打上烙印。 The landlord’s land on the highland of the mainland expanded a lot. 地主在大陆高原上的土地扩张了很多。 Utilize the fertilizer to keep the land fertile. 利用化肥保持土地肥沃。 The grand commander demands thousands of sandy sandwiches. 大司令官要成千个沙色三明治。 I infer that he is indifferent to differentiating the offers in different conferences. 我推断他对区分不同会谈中的报价漠不关心。 The maximum plus or minus the minimum makes minute difference. 最大值加上或者减去最小值只产生极小的差异。 The witty witness withdraws his words within minutes without any reason. 诙谐的证人在几分钟之内无故地收回了他说的话。 The cake maker shakes a naked snake with the quaking rake without sake. 蛋糕制造者无缘无故地用抖动的耙子摇一条赤裸的蛇。 By the crook, the cook looked through a cookbook before making hooked cookies. 在溪边，厨子在做钩形饼干之前查阅了一本食谱。 The writer writes the white book quite quietly in quilt. 作家在被子里十分平静地写白皮书。 On the chilly hillside, he is unwilling to write his will on the ten-shilling bill. 在寒冷的山坡上，他不愿意将遗嘱写在十先令的账单上。 The weaver will leave for the heavy heaven. 那位纺织工将要到阴沉的天国里去。 The handy left-hander left a handsome handkerchief on the handle of the handbag. 手巧的左撇子把一方漂亮手帕留在手提包的提手上。 The thief chief achieved the theft of a handkerchief for mischief. 贼首领完成了偷手帕的恶作剧。 I believe my brief words will relieve her grief. 我相信我简短的话会减轻她的悲痛。 At the dock I’m shocked to see the pocket rocket made of a block of rock. 在码头看到一块岩石做的小巧火箭，我感到震惊。 Standing under the outstanding rock I misunderstood his standard standpoint. 站在突出的岩石下，我误解了他的标准立场。 The substantial part of the constitution about the institution of institutes is substituted. 宪法中有关设立协会的实质性部分被替换。 Spell smell! Very well, the well-being for human being will swell. 拼写气味(一词)!很好，人类的福利将会膨胀。 Once none of you is here, the man in throne will live alone in the lonely zone. 一旦你们没有人在此,王位上的人就要孤独地生活在这个孤寂的地带。 Nowadays the once unknown snowy hill is well-known for snowstorm. 如今那座曾经不出名的多雪小山因暴风雪而出名。 For instance, I can instantly know the constant distance. 例如，我可以即刻知道该恒定距离。 The man beyond the bond is fond of the second wonderful diamond. 那位不受约束的人喜欢第二颗奇异的钻石。 While sinking into thinking, the shrinking linkman drank the pink ink sprinkled on the wrinkly paper. 陷入沉思时,退缩的联络员喝掉了洒在皱纹纸上的粉红色墨水。 The contribution distributor thinks the microcomputer pollution is absolutely beyond dispute. 捐款分配者认为微机污染是绝对不容置疑的。 He repeatedly repeats, “Eat meat.” 他再三重复说：“吃肉。” Having canceled X-ray scan, the cancerous candidate on the canvas ate the idle candles in the candy can. 取消X线扫描后，帆布上的癌症候选人吃了糖果罐里的闲置蜡烛。 The dominant candidate is nominally nominated for president. 占优势的候选人名义上被任命为总统。 The extravagant savage made the interior and exterior criteria of deterioration. 奢侈的野蛮人制定了腐败的内外标准。 No, nobody’s body is noble, nor is his. 不，没有任何人的躯体是高贵的，他的也不是。 Axe the tax on taxis. Wax may relax the body. 削减出租车的税费。蜂蜡可以使身体放松。 The man in mask asked me for a task; I let him put the basket on the desk in the dusk. 戴面具的人向我要任务,我让他在黄昏时把篮子放到桌子上。 The lump jumped off the pump and bumped on the trumpet in the dump. 傻大个跳下水泵撞到垃圾堆里的喇叭上。 On my request the conqueror questioned the man who jumped the queue. 根据我的请求，征服者质问了插队者。 They are arguing about the document of the monumental instrument. 他们在辩论关于那件不朽乐器的文献。 However, Lever never fevers; nevertheless, he is clever forever. 无论如何，杠杆从未发烧;尽管如此，他始终机灵。 I never mind your unkind reminding that my grindstone hinders your cylinder. 我决不介意你不友善的提醒说我的磨刀石妨碍了你的汽缸。 I feed the food to the bleeding man in the flood. 我把食品喂给洪水中的那个流血的人。 It’s a treason terror of the seasonal oversea seafood is reasonable. 认为季节性的海外海鲜的价格是合理的就是背叛。 The veteran in velvet found that the diameter of the thermometer was one metre. 穿天鹅绒的老兵发现温度计的直径为一米。 The cube in the tubular cup occupies one cubic meter. 筒状杯中的立方体占有一个立方米(的体积)。 Put the spotless potatoes, tomatoes and tobacco atoms into the hot pot. 把无斑点的土豆、番茄和烟草微粒放进热锅里。 The preacher preached to the teacher’s teacup. 传教士对着老师的茶杯说教。 “My behavior is on behalf of half zebras,” the algebra teacher said. “我的行为代表了一半斑马的利益。”代数老师说。 Unlike my uncle, I likely like that bike (bicycle). 我不象叔叔,我很可能喜欢那辆自行车。 She likes nothing but things of clothing and cloth. 除了衣物和布料之类的东西外，她什么也不喜欢。 The doctor’s doctrine undid one dollar and a dozen of collars. 博士的学说毁掉了一美元和一打衣领。 On the bus the busy businessman did a business with the buyer. 在公共汽车上,忙碌的商人与买主做了一笔生意。 Vegetables and tablets on the stably established table show no instability. 放在稳定设置的桌子上的蔬菜和药片没有显示不稳定性。 Primarily, the prime criminal’s crime has nothing to do with lime and overtime. 首犯的犯罪基本上与石灰和加班无关。 The ring on the spring string rings during springtime. 弹簧弦上的环在春天鸣响。 Shut in the hut, I’m puzzled how to cut down the output of nuts. 关在茅棚里，我为削减坚果的产量犯难。 It’s better to put letters at the inlet and outlet. 最好在进口和出口处标上字母。 During this serious period, the superior asked the inferior a series of questions about the supermarket. 在这段严肃时间内,上级问了下级一连串有关超级市场的问题。 I tuned the tone of the stone phone with a bone. 我用骨头调整了石质耳机的音调。 On Revenue avenue, the grave traveler jumped the gravestone bravely. 在税收大道上，严肃的旅行者勇敢地跳过墓碑。 The slave safely saved the sharp shavers in a cave nearby the cafeteria. 奴隶将锋利的剃刀安全地保存在自助餐厅附近的洞穴里。 Most hosts are hostile to the foremost ghost hostage almost to the utmost. 大多数主人对最前面的幽灵人质的敌对态度几乎到了极顶。 The mapper trapped in the gap tapped the tap wrapper with strap. 陷在缝中的制图者用皮带轻击塞子套。 The scout with shoulder-straps shouted on the outermost route as a routine. 戴肩章的侦察员照例在最外围的路线上叫喊。 The reproached coach unloaded the loaves to the approachable roadside. 遭到责备的教练把面包卸到可接近的路旁。 The news about the broadened breadth is broadcast abroad. 宽度加宽的消息被广播到国外。 The motive of the emotional movie is to move the removed men. 那部情感电影的动机在于感动被开除的人。 Otherwise, mother will go to another movie together with brother. 不然，妈妈就和弟弟一起去看另一场电影。 Furthermore, we gathered leather and feather for the future colder weather. 而且，我们收集了皮革和羽毛以应付将来更冷的天气。 Before the premier, the old soldier scolds the cold weather. 老兵当着首相的面咒骂寒冷的天气。 Whether the weather is good or bad, neither father nor I am going to the gathering. 无论天气是好是坏,父亲和我都不去参加那个聚会。 The Particle party’s partner participated in the particular Parliament. 粒子党的合伙人参与了特别议会。 For convenience of intensive study, he has an intense intention of making friend with me. 为便于强化学习，他有和我交朋友的强烈意向。 The virtueless girl’s duty is to wash the dirty shirts and skirts in the outskirts. 无美德女孩的职责就是在郊区洗脏衬衣和裙子. I glimpsed the dancer balancing herself on the ambulance by chance. 我碰巧瞥见舞蹈者在救护车上使自己保持平衡。 Balloon, baseball, basketball, football and volleyball all dance ballet on the volcano. 气球、棒球、篮球、足球和排球都在火山上跳芭蕾舞。 A gallon of gasoline and the nylon overalls fall into the valley. 一加仑汽油和尼龙工作裤落进了山谷。 Palm calmly recalled the so-called caller. “手掌”平静地回忆了那个所谓的拜访者。 In the hall, the shallow challenger shall be allowed to swallow the swallows. 在大厅里，肤浅的挑战者将被允许吞下燕子。 The tall man installed a small wallet on the wall. 高个男子把一小钱包安放到墙上。 Except dishonest ones, anyone who is honest can get honey, everyone thinks so. 除了不诚实的人外，任何诚实的人都能得到蜂蜜，人人都这么想。 The exhausted man and the trustful guy thrust a knife into the rusty crust. 精疲力竭的男子和深信不疑的家伙将一把刀子刺向生锈的外壳。 I finally find that the financial findings are binding. 我终于发现财经调查结果具有约束力。 At the windy window, the widow finds a blind snake winding. 在当风的窗口，寡妇发现有条瞎眼蛇在游动。 I refuse to accuse Fuse of diffusing confusion. 我拒绝控告导火索散播混乱。 He had an amusing excuse for executing the executive. 对于处决决策人，他有一个可笑的理由。 At the dawn on the lawn the yawning drowned man began to frown. 拂晓时在草坪上，打呵欠的溺水者开始皱眉头。 Mr Brown owns the brown towels in the downtown tower. 布朗先生拥有闹市区塔里的棕色毛巾。 Lots of pilots plot to dot the rotten robot. 大批领航员策划给腐烂的机器人打点。 In the hot hotel the devoted voter did not notice the noticeable notebook. 在炎热的旅馆里，热心的投票者没有注意到显而易见的笔记本。 The notorious man’s noted notation denotes a notable secret. 那个臭名昭著的男子的著名符号代表一个值得关注的秘密。 Yes, yesterday was the my pay-day; I pay you the payment today. 是的，昨天是我的发薪日，我今天付给你报酬。 Lay a layer of clay on the displayed layout before the relay race. 接力赛之前在展示的陈设上铺一层黏土。 “The gay mayor maybe lay in the hay by the Baby bay,” he says in dismay. 他沮丧地说：“快活的市长大概躺在婴儿湾边上的干草中。” The delayed player delegation stay on the playground. 被耽搁的运动员代表团停留在操场上。 The X-rayed prayer preyed a gray tray. 照过X光的祈祷者捕获了一个灰色盘子。 Anyway, the prayer swayed by me always goes away by subway. 不管怎样，受我支配的祈祷者总是从地铁走向远方。 The chocolates on the plate stimulated my son to calculate. 盘子里的巧克力鼓励了儿子进行计算。 One of my relatives, a late translator, translated a book relating to public relations. 我的一位亲戚，一个已故翻译，翻译了一本有关公共关系的书。 He relates that he is isolated from his relatives. 他叙述说他与亲戚们隔离开了。 The educator located the local location allocated to him. 教育家定出了分配给他的局部的位置。 Comply with the compatible rule of complement when using compliments. 使用问候语时遵守补语的相容规则。 The complicated indicator is dedicated to the delicate delicious machine. 这个复杂的指示器被奉献给精密而美妙的机器。 Likewise, my bike gave a striking strike to the two men alike. 同样，我的自行车给那两个相象的人惊人的打击。 The smoke choked the joking stroker at one stroke. 烟一下呛住了开玩笑的抚摩者。 Somewhere somebody sometimes does something good. 在某处某人有时做某些好事。 Wherever I go, nowhere I like; I dislike everywhere. 无论我到哪里，没有哪里为我喜欢，我讨厌每一个地方。 Therefore, the atmosphere is merely a sphere. 因此大气层只不过是一个球体。 The funny cunning runner uses his gum gun before sunrise or after sunset. 滑稽乖巧的赛跑者在日出之前或日落之后使用胶皮枪。 The applause paused because of the cause caused by a cautious plausible clause. 掌声停了是因为一条谨慎的似乎有理的条款引起的原因。 The county councilor encountered the accountant at the counter of a countryside shop. 县委委员在一乡村商店的柜台边碰到了会计师。 I mounted the mountain and found a fountain with large amount of water. 我登上那座山发现一个水量很大的喷泉。 Step by step, the sleepy creeper crawled into my sleeve to sleep. 昏昏欲睡的爬虫一步一步爬进我的袖子里睡觉。 After a deep sleep, the weeping sweeper keeps on peeping the sheep on the steep. 酣睡之后，哭泣的清扫者继续窥视峭壁上的羊。 The vice-adviser advised the reviser to devise a device for getting rid of vice. 代理顾问建议校订者想出一个根除恶习的计策。 The wise man used his wisdom in the vertical advertisement device. 聪明人把智慧用在垂直的广告装置上。 With rhythm, the arithmetic teacher put the artist’s artificial articles on the vehicle. 算术老师把艺术家的人造物品有节奏地放到运载工具里。 The smart star starts to make cart chart for the commencement. 精明的明星开始制作授学位典礼用的马车图表。 The lady is glad to give the salad to the sad lad on the ladder. 女士乐意把色拉送给梯子上的那位悲哀的小伙子。 You mad madam, my dad doesn’t like the bad badminton pad. 你这个疯太太，我爸爸不喜欢这种坏羽毛球垫。 The one-legged beggar begins to beg eggs illegally. 独腿乞丐开始非法讨蛋。 The promoter promptly made a quotation for the remote control motors. 发起人立刻制了一份遥控马达的报价单。 Each pea and peach on the beach can be reached by the peacock. 海滩上的每一颗豌豆和桃子孔雀都能触及。 Although the plan was thorough, it was not carried through. 尽管计划很周详，但是没有得到贯彻。 Thoughtful men ought not to be thoughtless about the drought. 体贴的人不应该对干旱考虑不周。 “Rough cough is tough enough,” Bough said while touching the torch. “剧烈咳嗽是够难以对付的。”大树枝在触摸手电筒时说道。 The football team stopped the steam stream with beams. 足球队用横杆堵住了蒸汽流。 “Ice-cream!” he screamed in dream. “冰淇淋!”他在梦中惊叫道。 For example, this simple sample similar to his can be exemplified. 例如，这件与他的相似的简单样品可以作为例证。 The spy is shy of taking shelter on the shelf of the shell-like shed. 间谍怕在壳子一样的棚里的架子上栖身。 The optional helicopter is adopted to help the optimistic helpless in the hell. 可选用的直升飞机被用来帮助地狱里那些乐观的无助者。 The cell seller seldom sees the bell belt melt. 小单间的卖主很少见到铃铛带子融化。 The costly post was postponed because of the frost. 那件昂贵的邮件由于霜的缘故而延搁。 Strain brain on the train is restrained. 在列车上过度用脑受到约束。 The gained grain drained away with the rain, all the pains were in vain again. 收获的谷物随雨水流失了，所有辛劳又白费。 Cousin saw a group of couples in cloaks soak their souls in the soapy soup. 表哥看见一群穿着斗篷的夫妇在肥皂汤里浸泡灵魂。 The wounded founder bought a pound of compound. 受伤的奠基人买了一磅化合物。 It’s easy and feasible to control the disease after cease-fire. 停火之后控制这种病很容易也可行。 After a decrease, the price of the grease increases increasingly. 下跌过一次之后，润滑脂的价格日益上涨。 Please release that pleasant peasant teaser who brings us plenty of pleasure. 请释放那个带给我们巨大快乐的友好的农民逗趣者。 In the canal, the Canadian analyzed the bananas. 在运河里，那个加拿大人化验了香蕉。 I pointed out the joint on the coin at the disappointing appointment. 在令人失望的约会上，我指出了硬币上的接头。 His parents apparently stare at the transparent cigarettes. 他父母显然凝视着透明香烟。 The careful man is scarcely scared by the scarce parcel. 细心男子勉强被罕见的包裹吓了一下。 I’m rarely aware that the square area is bare. 我很少觉察到那个正方形区域是光秃秃的。 “Beware the software in the warehouse during the warfare,” hare said glaring at me. 野兔怒视着我说：“战争期间当心仓库里的软件。” I daren’t declare that the shares are my spare fare and welfare on the farewell party. 在告别会上，我不敢宣称这些股票是我的备用车费和福利。 The external and internal interference interrupts my interpretation at short intervals. 内部和外部干涉以很短的间隔打扰我翻译。 The form of the former formula is formally formulated. 前一个分子式的形式得到正式表述。 The performer reformed the performance of the transferred transformer. 表演者改良了转让的变压器的性能。 Normally, enormous deformation is abnormal. 通常，巨大的变形是不正常的。 The bookworm in uniform is informed of the storm. 穿制服的书呆子得到暴风雨的消息。 The story about the six-storeyed dormitory tells a glorious history. 关于六层楼宿舍的故事讲述一段光荣历史。 The perfume consumer presumably assumes that the volume is resumed. 香水消费者假定地设想音量已恢复。 The voluntary revolutionaries revolted like the outbreak of volcano. 志愿革命者们象火山爆发一样起义了。 It’s resolved by resolution that the solution will be used to solve the involved problem. 决议决定用这个办法解决那个复杂的问题。 The generous general’s genuine genius is in making generators. 那位慷慨将军的真正天才在于制造发电机。 Several severe federal generals drank the mineral water on the miner’s funeral. 好几个严厉的联邦将军在矿工的葬礼上喝了矿泉水。 The lean man leans on the clean bean plant to read a leaf leaflet. 瘦人斜靠在干净的豆科植物上读叶片传单。 I mean he used mean means in the meantime on the ocean. 我的意思是其间在海洋上他用了卑鄙手法。 The honourable journalist spent an hour on the journey of tour. 可敬的新闻记者在观光旅程上花了一个小时。 The sour vapour pours into the flourishing flour factory. It’s the source of resources. 酸蒸汽涌进兴旺的面粉厂。这是资源的源泉。 Of course the man’s courage encouraged the discouraged tourists in the courtyard. 自然那个勇敢男子的勇气鼓舞了院子里泄气的游客们。 The zealous dealer has an ideal idea of dealing with the meal. 热心的商人有一个处理膳食的理想主意。 He conceals the fact that he is jealous of my seal and wants to steal it. 他隐瞒了他嫉妒我的印章并想偷的事实。 I really realized that a realm came into reality. 我真地认识到一个王国已变成现实。 The healer reveals an appealing fact that health is great wealth to the commonwealth. 医治者揭示一个吸引人的事实：健康是联邦的巨大财富。 The absent-minded student consents to the sentence in the presence of me. 心不在焉的学生在我面前同意这份判决。 Presently the present is presented to the representative. 现在这份礼物已呈现在代表面前。 Not for a moment has the comment on commercial phenomenon been mentioned. 那个关于商业现象的评论从未被提及过。 The mental patient thinks the cement is the elementary element of the ornament. 精神病人认为水泥是装饰品的基本成分。 As an exception I accept all his concepts and conceptions except one. 作为例外，我接受他所有的概念和构想，只有一个除外。 I perceived that the veil clung on the ceiling of the clinic was deceit. 我觉察到粘附在诊所天花板上的幔子是个骗局。 The receptionist received a receipt from the receiver. 接待员收到一份来自接收者的收据。 The reaper leaped over a heap of cheap weapons. 收割者跃过一堆廉价的武器。 The newly imprisoned prisoners poisoned poisonous moisture are hoisted out from the prison. 中了有毒湿气毒的新近关押的囚犯被从监狱吊出。 The gross grocer crossed his legs before the boss. 粗鄙的杂货商在老板面前叉起腿子。 The lost Bible is possibly the biggest loss of my possessions. 丢失的圣经可能是我最大的财产损失。 A dose of poison made the noisy man’s nose rosy. 一剂毒药使得吵闹的男子的鼻子变成玫瑰色。 The loser closely enclosed himself in the closet. 那个失败者把自己严密地封闭在小室内。 The composer was proposed to decompose his composition into components. 作曲家被建议将著作分解成单元。 Suppose you were exposed in the opposite position by your opponent… 假设你被对手暴露在相反的位置…… The depositor positively positioned the preposition in that position on purpose. 储户有意确信地介词放置在那个位置。 In church the nurse cursed the people pursuing the purple purse. 在教堂里，护士诅咒了追求紫色钱包的人们。 The faculty for agricultural culture isn’t difficult to cultivate. 农业栽培能力不难培养。 The reservoir in the reserved preserve is an obstacle to the obstinate observer. 预留保护区内的水库对固执的观察者是一个障碍。 The desert deserves the nervous servants to observe. 那个沙漠值得神经紧张的公务员们去观察。 The bulk of the ruby rubbish on the pebble bubbles when stirred by bulbed rubber club. 小卵石上的大部分红宝石废料在用有球状突起的橡胶短棍搅动时会起泡。 The adjective injected new meaning into the objected objective object. 这个形容词给受到反对的客观物体注入了新的意义。 The projector is subject to rejection and may be ejected from the project. 投影机有遭到否决的倾向并可能被逐出工程。 A day goes through daybreak, morning, noon, afternoon, evening and midnight. 一天经过坲晓、上午、正午、下午、傍晚和午夜。 His affection for the defects is affected by the infectious perfect effect. 他对缺点的钟爱受到具有感染力的完美效果的影响。 The critic’s criticism is critical to the crisis. 评论家的批评对这场危机至关重要。 The director’s indirect direction led to the incorrect erection of the rectifier. 指导者间接的指导导致整流器的错误安装。 The prospective inspector prospected his prospect with his own perspective. 未来的检查员用自己的观点勘察他的前景。 Two suspicious aspects are suspected respectively. 两个可疑的方面分别受到怀疑。 This section about insects is written by a respectable specialist. 关于昆虫的这一节是由一位可敬的专家撰写的。 I assure the injured jury that a sure insurance is ensured. 我让受伤的陪审团确信一笔有把握的保险得到确保。 My durable endurance made me endure the injury during insurance. 我持久的忍耐力使我忍受了保险期间的伤害。 I can’t endure the leisured man’s measures for the treasures in the treasury. 我不能容忍那个悠闲男子对金库财宝采取的措施。 In the exchange the oranges are arranged into strange ranges. 在交易所里橙子被排成奇怪的行。 The ashtray, splashed with ash, crashed with a clash in a flash while being washed. 那个溅有灰尘的烟灰盘在清洗时咣当一声一下子摔碎了。 He dashed to smash the fashionable ashtray with cash. 他猛冲过去用现金砸那个时髦的烟灰盘。 I feel a bit of bitterness for his ambitious exhibition. 我为他雄心勃勃的展览感到一点点触痛。 On the orbit, the rabbits habitually inherited the merits of the inhabitants. 在轨道上，兔子习惯性地继承了居民们的优点。 Her rejoicing voice is void of something avoidable. 她那令人高兴的声音缺少某种可避免的东西。 I prefer the preferable preference you referred to in the reference books. 我更喜欢你在参考书中提到的那个更可取的优先权。 The specialist specifically specified a special pacific means especially. 专家特地明确指定了一种和解的特殊方法。 The speculator specifically specified the specification of this species specimen. 投机者特地指定了这种物种标本的规范。 231 I’m to be punished for publishing his bad reputation to the public of the republic. 我将因把他的坏名声公布给共和国的公众而受到惩罚。 The drug trafficker is concerned about the condition of the traditional concert. 毒品贩子担心传统音乐会的状况。 It’s a fable that the cable enables the disabled man to be able to walk. 电缆使得残疾人能够行走是天方夜谭。 The problem is that those who are out of jobs probably rob. 问题是那些失业者们可能行劫。 His wicked trick is to get the kids to kick bricks and lick the cricket ticket. 他的缺德恶作剧是让孩子们踢砖和舔板球门。 The thin sick chicken picks the thick sticky stick quickly. 瘦病鸡快速地啄粘乎乎的粗棍。 The animals unanimously vanished from the mammal’s room furnished with Spanish furniture. 动物一齐从配备有西班牙家具的哺乳动物的房间消失。 The loosened goose chooses the cheese to eat. 被解开的鹅挑选奶酪吃。 By policy, the police impolitely sliced the politician’s politics books. 根据政策，警方不客气地把政客的政治书籍切成了薄片。 At the neck of the wrecked deck, the reckoner checked the opaque cheque. 在遭破坏的甲板的颈部，计算者检查了这张不透明支票。 The scholar foolishly took the school cooling pool for swimming pool. 学者愚蠢地把学校的冷却池当成游泳池。 Having played golf, the wolf in wool rested on the tool stool in the zoo. 打过高尔夫球之后，穿羊毛衣的狼歇在动物园里的工具凳子上。 Citizens in the city’s civil buildings are all civilized. 城市全民建筑中的市民都是可教化的。 The pious man is dubious about the vicious civilian’s vivid deion of his vicinity to his wife. 虔诚的男子对邪恶的平民生动地描述他与其妻子的密切(关系)半信半疑。 The corps’ corn in the corner is scorned by the stubborn corporation. 军团种在角落里的玉米遭到顽固公司的蔑视。 The attorney’s horn lies horizontally in the thorns. 代理律师的号角水平地躺在荆棘中。 I seem to deem his foreseeing of that the man will seek seeds in the weed. 我似乎相信他的预见，他预见那个人将在杂草中寻找种子。 The agreement disagrees in the degree of agreeable freedom. 协议在使人愉快的自由程度上存在分歧。 In the freezing breeze, the breeder greedily squeezed oil from the seeds. 在冰冷的微风中，饲养员贪婪地从种子中榨油。 We need reed needles to speed the deed indeed. 我们确实需要一些芦苇针来加快行动。 The accessory successor never made concessions to difficulties, so he succeeded in accessing successive successes. 附属继承人从未向困难妥协，因此在走向连续的成功之路上成功了。 I exceed the excellent student who has excessive excellence. 我胜过那个有过多优点的优秀学生。 During the procession, the microprocessor finished the processing procedure. 在队伍行进时，微处理器完成了加工过程。 The chess professor confessed his professional blessing in the confession. 象棋教授在供状中承认了其职业福气。 The progressive congressman dressed in black stressed his distress. 穿着黑色衣服的进步国会议员强调了他的不幸。 The man depressed by the pressure from the press expressed the impression on him. 那个受到来自新闻界压力压抑的人表达了他的印象。 Initially I kept silent to the essential essay. 起初我对这个重要的短评保持沉默。 The enforced law reinforced that forced divorce is forbidden. 实施的法律强化了禁止强迫离婚。 In the cork workshop, the workers fork the pork. 在软木车间，工人们用叉子叉猪肉。 That person personally persuaded the personnel with persuasive words. 那个人用有说服力的话亲自说服了人事部门。 The dull bull fully fulfilled pulling the bulletproof bulletin board. 迟钝的公牛充分履行了拖防弹公告牌(的职责)。 The lucky duck tucked in truck suddenly sucked the gas from the bucket. 塞在卡车里的幸运鸭子突然从桶里吸汽油。 Boil the oil soiled by the coil in the toilet lest it spoil. 把被盥洗室里的线圈弄脏的油煮开，免得它变质。 The selfish man put himself on the shelf. 那个自私的人把自己束之高阁。 In this climate, the climber climbed up the cliff with his stiff limbs. 在这种气候下，攀登者用僵硬的四肢爬上悬崖。 The puffy staff’s stuffy chests are stuffed with sufficient suffering. 喘气的职员们闷热的胸中填满了足够的痛苦。 The member of good memory remembers to commemorate his friend with memorials. 那位记性好的成员记得用纪念品纪念他的朋友。 The room is lumbered with numerous cucumbers. 房间里乱堆着大量黄瓜。 The poet’s toes get out of his shoes. Here heroes are zeros. 诗人的脚趾露出了鞋子。在这里英雄无足轻重。 In the library, the arbitrary librarian wrote the auxiliary diary about military literature. 在图书馆，武断的图书管理员写下了有关军事文学的辅助日记。 The royal destroyer employs lots of loyal employees. 皇家驱逐舰雇佣了很多忠心的雇员。 On the voyage, the enjoyable toy brought me joy and annoyance. 在航行中，使人愉快的玩具给我带来快乐和烦恼。 Her boyfriend fed a box of oxygen and hydrogen to the ox and fox. 她男朋友给牛和狐狸喂了一盒子氧和氢。 The instructor struggled to say, “The structure of the construction led to the destruction.” 教师挣扎着说：“建筑物的构造导致这场毁灭。” I debated that the debtor was doubtless in double troubles. 我争论说债务人很可能处在双重困境中。 With a dim triumph, she trims the swimming-suit rim at the swimming-pool brim. 她带着暗淡的喜悦在泳池边整理泳装的边缘。 Twice the twin king wins the winter swinging under the wing of the plane. 孪生国王两次赢得冬季机翼下的荡秋千赛。 Having piled miles of files, the compiler smiled a while at the profile. 堆了几英里长的文件之后，编辑对着侧面笑了一会。 By the spoon you’ll soon see the smooth tooth of the moon above the booth. 借助勺子你可以立刻看到电话亭上方月亮的光滑牙齿。 She met me in the Fleet Street and greeted me with a sweet smile. 她在舰队街上遇见我，并对我致以甜甜的一笑。 The conductor is reluctant to reduce the conductivity of the semiconductor. 导演不情愿降低半导体的导电率。 The producer introduced a productive technological product into production. 制造者把一项多产的技术成果引进到生产中。 The anxious man is unconscious of my anxiety. 那个不安的人没有觉察到我的忧虑。 Previously he was obviously envious of my success. 先前他明显地嫉妒我的成功。 I highly appreciate the preceding man’s precious precise exercise. 我高度欣赏前面那个人可贵的精确演练。 The miracle mirrors a horrible error made by the terrorists in the terrible territory. 这件奇事反映了恐怖分子在这一可怕地区犯的可怕错误。 I hurt my tongue when I hurried to eat cherry and strawberry merrily. 我匆忙快活地吃樱桃和草莓时伤了舌头。 The man proclaimed in exclamation that he aimed to reclaim the aimless claim. 那个人呼喊着声明说他打算索回无目标的索赔。 In no circumstances can the bicycle in the circle of the circus be a focus. 马戏表演圈子中的自行车决不会成为焦点。 I’m busy unless I’m blessed with less lesson. 我很忙，除非我很幸运只有少量功课。 How to pronounce the noun “ounce” in the announcement? 布告中的名词“盎司”怎样发音? It’s incredible that the editor’s editorial in this edition is edible. 本版中的编辑社论可以食用让人难以置信。 The whistler whispered, “Which is rich?” 鸣笛者低语道：“哪一个富有?” Which method of making the metal helmet is more economical in total? 生产这种金属头盔的方法哪一种总体上更节约? The diligent teller told a tedious story about the intelligent satellite. 勤奋的出纳讲述了一个关于智能卫星的乏味故事。 The soda made the goddess nod by the fishing rod. 苏打使女神在钓竿旁打盹。 The modest man moderately modified the model in this mode. 谦虚者适度地用这种方式修改了模型。 The humorous rumour has something to do with human humanity and vanity. 那个幽默传闻与人类的仁慈和虚荣心有关。 The wakened cake baker awakes to that he has to brake by the lake. 被唤醒的蛋糕师傅醒悟到他必须在湖边刹车。 I overtake the undertaker who takes my stake by mistake. 我追上那个误拿我赌注的承办人。 The crying boy tries to fry the dry crystal. 哭喊的男孩试图用油炸干晶体。 In the chimney the donkey and monkey found the key to the money monitor. 猴和驴在烟囱里找到了货币监视器的钥匙。 At the edge of the wedged hedge, I acknowledged the knowledgeable man. 在楔形篱笆的边缘上，我向那位博识的人致谢。 The shark’s remark on the marble mark in the market is remarkable. 骗子关于市场上大理石标记的评论值得关注。 In the sparking park, the darling dark dog barked at the embarked larks. 在闪着火花的公园里,可爱的深色狗对着装载于船云雀吠叫。 The drifter swiftly shifted the gift to the left of the lift. 那个漂泊者敏捷地将礼物换到电梯的左边。 The rival’s arrival gives him a forgivable chance. 对手的到来给他一个可原谅的机会。 From the fact, the shivering driver derives that the diver may thrive on river. 发抖的司机从这个事实得出结论说跳水员可以靠河流繁荣。 The striver contrives to derive that privacy can’t be deprived. 奋斗者想方设法推导得出隐私(权)不可剥夺。 The lively survivor surveyed the conveyer. 活泼的幸存者考察了输送装置。 The living olive keeps the deliverer’s liver alive. 活橄榄使发货人的肝脏继续存活。 With a knife the knitter ends his wife’s life in the lifeboat. 在救生艇上编织者用小刀结束了他妻子的性命。 Who made a whole hole in the holy holiday? 谁在神圣的假日里打了一个完整的孔? The man who broke the sole solid lid is solemnly condemned. 打破这个仅有的实心盖子的人受到庄严谴责。 By the ruler’s schedule, the molecule capsules will play an important role in the roller. 根据统治者的时间表，这种分子胶囊将在滚筒上起重要作用。 I deliberately liberated the man who was in despair and desperately struggled for liberation and liberty. 我有意解放了那个拼命地争取解放和自由的绝望者。 At the outset this set of setting settled the offset problem of the kettle. 在开始，这一套设置解决了水壶的弥补问题。 I bet that he forgot the forged alphabetical targets. 我打赌他忘记了按字母顺序排列的锻造靶子。 The draft for aircraft is sent to the airline by airmail. 订购航空器的汇票用航空邮件寄给了航空公司。 On the impaired dairy the chairman lay in a pair of repaired chairs for haircut. 在遭到损害的牛奶场，主席躺在一对修理过的椅子上理发。 I met a fairly unfair affair upstairs. 我在楼上遇到一件颇不公平的事。 At the breakfast, the steak leaked from the break. 早餐时，肉片从缺口处漏出来。 The weak speaker made a speech on the bleak peak. 虚弱的讲话者在荒凉的山峰上发表了演说。 The mouse’s tearing the blouse and trousers aroused the housewife’s anger. 老鼠撕咬短衫和裤子激起了主妇的怒火。 We beat (defeated) the cheat who heated the wheat. 我们打败了给小麦加热的骗子。 He created the great creature with concrete for recreation. 他用混凝土创造了这个伟大的创造物作消遣。 In the theater I threatened to treat the treaty with retreat. 在剧院里，我威胁要以退却来对待条约。 The man in neat sweaty sweater seated himself in the rear. 穿整洁的汗湿毛衣的男子在后面就坐。 The lagging man tagged the bags among the luggage with small flags. 落伍者给行李中的袋子加上小旗标签。 The ragged man drags a waggon of rag fragments. 那个衣衫褴褛的人拉着一货车破布碎片。 The lawyer’s son-in-law likes hawk’s claws and jaws. 律师的女婿喜欢鹰爪和下颌。 The drawer put the strawberries and raw paws into a drawer in the saw-mill. 绘图者把草莓和生熊掌放进锯板厂的抽屉里。 I had appetite for inviting the man who bit me despite I had spite against him. 我有意邀请咬我的人，尽管我怨恨他。 On the exciting kite site, the excited reciter cited my verse. 在激动人心的风筝现场，激动的朗诵者应用了我的诗句。 The photographer put the graph in the paragraph on geographical geometry. 摄影师将图表插到论述地理几何学的段落。 The telegram says that the diagrams show the grammar of the program. 电报说图表表示程序的语法。 With gratitude he congratulated me on the celebration. 他怀着感激向我祝贺庆典。 The rational operator started a new era of opera cooperation in AD 2000. 理性的操作者在公元2000年开创了一个歌剧合作的新时代。 I can’t tolerate the acceleration in decorating the refrigerator. 我不能容忍对冷库装饰的加速。 The fateful up-to-date data of the gate have a fatal error. 大门的决定性最新数据有一个致命错误。 I’ve hatred for the hateful man’s skates bought with prior private privilege. 我对那个可恶男子用优先个人特权购买的冰鞋感到厌恶。 With one penny I had this peculiar pen opened. 我花了一便士让人把这支奇特的钢笔打开了。 I lowered flowing flowers below the table. 我把飘垂的花降低到桌子之下。 The plowman slowly blows at the glowing globe. 犁地者对着发红的球体慢慢吹气。 The fellow’s yellow pillow is hollowed by his follower. 那个家伙的黄色枕头被他的跟随者掏空了。 The junior and senior of the senate all have driver’s licenses. 参议院的年长者和年少者都有驾驶执照。 The immense expense in condensing the steam made me tense. 凝结蒸汽的巨大开支使我感到紧张。 A sensible man’s sensor is sensitive to nonsense on census. 明智者的传感器对人口调查废话敏感。 The offensive offender defended himself with the fence. 那个讨厌的触犯者用篱笆自卫。 The dependent dependant can’t live independently. 依靠别人的被赡养者不能独立生活。 The attendants attend the meeting and pretend to be attentive. 侍从们出席会议并装出专注的样子。 The tenderer surrendered her tremendously slender tender fingers. 投标者交出了她异常纤细娇嫩的手指。 The tension tends to extend to a more extensive extent. 紧张倾向于向更广泛的程度扩展。 I spend money on expensive things endlessly; so the expenditure trends up. 我无休止地花钱买昂贵的东西，所以开支趋向上升。 I send him the blend calendar and the splendid bent lens he lent to me. 我把他借给我的混合日历和绝妙的弯曲透镜送给他。 The goodness of the wooden goods gives me good mood. 木制商品的精华会给我一个好心情。 The teenagers in the canteen are keen to see the queen sitting between the green screens in the greenhouse. 食堂里的少年们巴望见到坐在温室里绿色屏风间的女王。 From the tiny tin pin, the spinner pinched off an inch. 纺纱工从小锡制别针上掐掉一英寸。 In my opinion, only the onion can grow in the iron environment. 据我看，只有洋葱能在铁质环境中生长。 The crazy jazzman gazed at the blaze on the razor with amazement. 疯狂的爵士音乐演奏者惊愕地盯着剃刀上的白斑。 The illustration illuminates the demonstrating Democrat’s penetrating strategy. 图解阐明了正在示威的民主党党员的渗透策略。 The cat catches a fat rat and scatters the others under the mat. 猫抓了一只肥鼠并驱散了席子下面的其它老鼠。 On the flat platform the bat will pat whatever hat it likes. 在平坦的站台上，蝙蝠会拍打它喜欢的任何帽子。 Hence the hen cries whenever it sees a chicken. 从此每当那只母鸡看见小鸡时就叫。 The driller filled the grill with brilliant film. 钻孔者在烤架上填满辉煌的胶片。 The ill man had a pill and sat on the pillar in stillness until now. 那个坏人吃了一颗药丸后静止不动地坐在柱子上直到现在。 The skilful miller killed millions of lions with his ski. 技术娴熟的磨坊主用雪橇杀死了上百万头狮子。 The silly spilled the milk on the silver silk. 傻子把牛奶溅到银白色的丝绸上。 On the far farm the army’s arms are kept warm by a swarm of bees. 在远方的农场上，陆军的武器被一群蜜蜂保暖。 The alarm harmed the charming harmony of the ceremony. 警报声损害了典礼迷人的和谐。 Squirrel inquired an acquaintance and acquired the requirements. 松鼠询问了一位熟人，得知了那些要求。 A title is entitled to the retired worker who repaired the entire tire tirelessly. 那个不倦地修理了整个轮胎的退休工人被授予了一个头衔。 The hired admirer inspired his desire for the wire. 雇佣钦佩者激发了他对铁丝的渴望。 The firm fireman first overcame thirst desire. 坚定的消防员首先克服口渴欲望。 The tiresome pirate sounded siren and let off fireworks. 讨厌的海盗鸣汽笛放焰火。 The career carpenter put the cargo on the carbon carpet. 职业木匠把货物放到碳质地毯上。 The married man carried the scarred car and carriage onto the carrier. 已婚男子把有疤痕的汽车和马车带到了航母上。 Apart from that apartment, the departed department leader was partly partial to this one. 除了那套公寓外，已故系领导还有点偏爱这一套。 I can hardly pardon his discarding the hardware and cardboard in the harbour. 我简直不能原谅他在港口丢弃五金和硬纸板。 The guard guards the guarantee in the garden regardless of the hazard. 卫兵不顾危险看守着花园里的抵押品。 I packed the jackets and rackets into packets with the sacks. 我们用袋子将夹克和球拍打成小包。 The bachelor is detached to attach tags to the yacht. 学士被派遣去给游艇贴标签。 The attacker cracked the racks and stacked them on the track. 攻击者打裂搁板并把它们堆在跑道上。 The backward man lacks black background. 落后的男子缺少黑色背景。 The awfully awkward warship is warned not to be awarded war reward. 那艘非常拙劣的军舰受到不给予战争报酬的警告。 Afterwards, I went toward the yard and looked upward, downward, inward, outward, forward and backward. 后来我走向院子，向上下内外前后看。 The bright fighter is frightened and flies upright in straight line from the right. 那架明亮的战斗机受到惊吓后呈直线地从右边垂直飞起来。 I slightly delight in flight in the sunlight and lightning. 我有点喜欢在阳光和闪电中飞行。 Money will be tight overnight after tonight’s midnight. 银根将在今晚午夜之后一下紧缩。 The sightseer speaks highly of the highway with sigh. 观光者叹息着盛赞这条公路。 At the agency, the aged agent is urgently urged to go for surgery by the gentle surgeon. 在办事处，温和的外科医生急切地催促年老的代理商做外科手术。 If you carry the cabinet of cabbage garbage to the garage, you’ll get an average wage. 如果你把这橱柜包菜垃圾扛进了汽车库，你将获得一份平均工资。 The villagers in rage caused a tragedy on the cage-like stage. 狂怒的村民在笼子形的舞台上制造了一场悲剧。 It is imaginable that breaking the engagement will damage his image. 可以想象，违反婚约将损害他的形象。 The extra theme of the supreme scheme is an extreme secret. 至高无上的计划的额外主题是个极端机密。 No extraordinary disorder happens on the orderly border. 在有序的边界上没有发生不寻常的混乱。 The wordy lord left his sword on the world. 多话的君主把他的剑留在了世界上。 According to the record, the cord was the oldest recorder the people could afford. 据记载，绳子是人们用得起的最古老的记录器。 Moreover, the new government overlooked the governor over the oven. 而且，新政府忽视了炉子上方的州长。 In the discussion I discovered that the lost cover was recovered. 在讨论中我发现盖子失而复得。 The beloved novelist put her lovely gloves above the stove. 敬爱的小说家把她美丽的手套放在火炉上方。 It’s proved that the approver improved waterproof roof. 经证实，赞同者改善了防水屋顶。 In the reaction, the fraction acts as an agent. 在反应中，这些碎片起一种媒剂的作用。 Actually the actor and actress reacted actively to the activity. 实际上男演员和女演员对这个活动作出了积极的反应。 In the racial horse-race, the white racer’s race-horse won. 在种族赛马运动中，白人赛手的马获胜。 I feel a trace of disgrace for the gracious man’s embracing her bracelet. 我对仁慈男子拥抱她的手镯感到一丝耻辱。 The preface is written on the surface of the furnace that faces the space facilities. 序言写在面对太空设施的火炉表面。 “In fact, some factors are unsatisfactory to the factory,”the dissatisfied manager said. “事实上有些因素对工厂来说是不满意的。”不满的经理说。 The manufacturer manually manufactured many machines for the manufactory. 制造商为工厂手工制造了很多机器。 The exact contact with practice has practical impact on me. 同实践的密切接触对我有实际的影响。 To make the contract attractive, the contractor subtracted a tractor from it. 为了使合同有吸引力，承包商从中减去了一台拖拉机。 In this chapter, the capture characterized the characteristics of the characters. 俘虏在本章描述了字符的特性。 The captive captivated by the apt adaptation rapped the cavity with rapture. 被灵巧的改编迷住了的被捕者着迷地敲打空腔。 I’m in charge of discharging a large amount of charcoal and coal at the coal mine. 我负责在煤矿卸一大堆木炭和煤。 With shortcomings overcome, the outcome become welcome. 随着缺点被克服，结果变得受欢迎。 At the station the statesman hesitates to state the status of the statue. 在车站政治家不愿陈述雕像的状况。 The limitation on the imitations is preliminarily eliminated. 对模仿的限制初步被消除。 The unconventional convention put many people to inconvenience. 那个不合惯例的大会使很多人感到不便。 The ventilator inventor’s adventure prevented him from venturing revenge. 通风机发明家的奇遇阻止了他冒险复仇。 Even the evening event couldn’t eventually spoil the joy of the New Year’s Eve. 即便是傍晚的事件最终也无损除夕的欢乐。 After an explosion the explorer restored the storage of the explosive in the exploiter’s storehouse. 爆炸过后勘探者恢复了剥削者仓库里炸药的储量。 The sore is orally ignored by the ignorant immoral man. 疮痛被无知的不道德者口头忽视了。 The boring boy bored ashore for ore core at the score. 讨厌的男孩在海岸上的刻线处钻探矿核。 In the famine I got familiar with this famous family name/surname. 在饥荒中，我熟悉了这个有名的姓。 The tame tigers play the same game on the frame. 温顺的老虎在框架上玩同一游戏。 The shameless lame man is to blame for the flaming frame. 无耻的跛子应为燃烧的框架负责。 The plain woman explained to me why she complained about the chain. 长相平平的女人向我解释她为什么抱怨那条链子。 After the entertainment the captain obtained an entrance fee. 娱乐表演之后，船长获得了一笔入场费。 It’s ascertained that the certificate is behind the curtain of the stainless steel container. 经查实证书在不锈钢容器的帘子后面。 In the building, the wild child hurt his mild chin on the china. 在大楼里，那个粗野的孩子在瓷器上弄伤了温柔的下巴。 The feeble man feels an ache on his heels and knees when he kneels on the steel steering wheel. 当虚弱男子跪在钢舵轮上时他的脚跟和双膝感到疼痛。 The bee paid the fee of coffee, beef and beer for the cheerful deer. 蜜蜂为欢快的鹿付了咖啡、牛肉和啤酒的费用。 To the ants, the infant elephant is a giant in the plantation. 对蚂蚁们来说，幼小的大象是种植园里的庞然大物。 The merciful merchant wants to grant some merchandise to the panting immigrants. 仁慈的商人要给喘气的移民们一些商品。 The lengthened long fishing rod alongside the lake belongs to me. 靠在湖边的加长长钓竿属于我。 The strong man among us strongly hates the wrongdoing. 我们当中的壮汉强烈憎恶这件坏事。 In occasional case the phrase emphasizes the importance of the phase to the laser. 在偶然情况下该短句强调了相位对于激光的重要性。 Based on the basic case, the purchaser found the vase in the basin in the basement. 根据这个基本情况，购买者在地下室的盆子里找到了花瓶。 On the camp of the campus the campaign champion put the camera on the camel. 在校园的营地上运动冠军将摄影机放在骆驼上。 He stamped on the stamps and slammed the lamp on the damp dam. 他用脚踩邮票并将灯砰地摔在潮湿的坝上。 When the boat floats through the throat, the goat in overcoat goes to the goal. 当船漂过狭口时，穿大衣的山羊朝目标走去。 The competitor is compelled to complete the competition. 竞争者被迫完成了比赛。 I’m perplexed by the flexible complex index of sex and age. 我被灵活复杂的性别与年龄索引迷惑住了。 Since then the sincere princess has known the principal principle. 从那时起诚实的公主就知道该主要原理。 The bead is put on the forehead of the dead shepherd ahead of the herd. 珠子被戴在牧群前面的死牧羊人的前额上。 The misleader let me use the lead instead of the unsteady metal. 误导者让我用铅代替不稳定的金属。 The reader already readily spread the thread on the ready-made bread. 那位读者已经欣然将丝线铺散在现成的面包上。 “Ten percent of the cents are made in recent centuries,” he said with strong accent. “百分之十的分币是最近几个世纪制造的，”他带着浓重的口音说。 The neutral scent of kerosene is concentrated in the center of the scene. 煤油的中性气味在场景中心被浓缩。 Those innocent adolescents ascending the hill are the tribe’s descendants of decent descent. 这些爬山的天真青少年是这个部落具有正派血统的后代。 The tenant is discontented with the content of the agreement for renting the tennis tent. 承租人对租用网球帐篷的协议内容不满。 The current occurrence of torrent spurs him to buy fur and sulfur. 现行的倾泻事件驱使他买毛皮衣服和硫磺。 I’m confident that the dentist will deny the confidential accidental incident. 我确信牙医会否认那个机密的意外事件。 The student identified the identical idiom on the identity cards. 学生辨认出了身份证上相同的成语。 The stupid student rapidly studied the accident in the studio. 愚蠢的学生在画室里快速研究了事故。 Considering considerable spiders outside, I stay in the president’s residence. 考虑到外面有相当多的蜘蛛，我呆在总统的住宅里。 Besides this side, I considered both the inside and outside. 除了这一面外我还考虑了内外两面。 It’s evident that the evil devil inevitably goes to ruin. 很明显，邪恶的魔鬼必然灭亡。 In the company my companion accompanied me until I accomplished polishing the shoes. 在公司里同伴陪着我直到我完成擦鞋(任务)。 I prepare to compare the two comparable parallel companies. 我准备比较那两个可比较的类似的公司。 My neighbor knows the height and weight of the highjacked freight. 我邻居知道被劫持货船的高度和重量。 The rebels labeled the labor laboring in the laboratory and lavatory. 反叛者给在实验室和舆洗室劳动的劳工贴上标签。 At 8 o’clock the clerk locked the flock of cocks in the room. 八点钟时办事员将那群公鸡锁在房间里。 The mocker knocked the stock with the knots on the stocking and sock. 嘲笑者用长袜和短裤上的结击打存货。 I’m determined to permit the permanent term on detergent. 我决心同意有关洗涤剂的永久条款。 The committee admits it committed an omission in commissioning the mission. 委员会承认它在委任使团时犯的疏忽。 The odd man added an additional riddle to the middle of the saddle. 那个怪人把一个额外的谜语添加到鞍座中间。 The insult to the adult consulter results in multiplication of the faulty faucets. 对成年咨询者的侮辱导致有缺陷水龙头成倍增加。 The detective detected that the arch was under the marching Arctic architects’ protection. 侦察察觉到拱门受到行进的北极建筑师们的保护。 In the college, I alleged that I recollected the dialog in dialect about the dial collection. 在学院里我宣称回忆起关于收集到度盘用方言进行的对话。 In the selection the lecturer neglected the negligible negative reflection on the election. 在选集中演讲者忽视了对选举的微不足道的消极反思。 The electrical connection in the photoelectric elevator involves electronics. 光电升降机内的电气连接涉及到电子学。 The rising risk arises from the surprised fund raiser’s praise of the appraisal. 上升的风险起因于受惊的资金聚集者对评估的赞美。 The efficient ancient scientist had conscience in science. 那个能干的古代科学家在科学上有良知。 The eagle is eager to anger the tiger in danger. 鹰渴望激怒处在危险中的老虎。 The language angel hanged up the gang and banged them at the angle of the triangle. 语言天使将那伙人吊起朝三角形的角上猛撞。 equal, equator, equation, equivalent, quiver. 相等的赤道方程式均等颤动。 Qualified quality and adequate quantity are equally important. 合格的质量和足够的数量同等重要。 Televisions and telescopes give the visitors visual ability to see the casual casualty. 电视和望远镜赋予参观者们看见偶然伤亡事故的视觉能力。 The grown-up growled at a crowd of crows. 那个成年人对着一群公鸡咆哮。 I threw a row of arrows, which narrowly passed the narrow-minded man’s eyebrows. 我掷了一排箭，箭紧擦心胸狭窄的人的眉毛而过。 “Sorry, I’ll borrow the lorry tomorrow,” the sorrowful man said with worry in the corridor. “对不起，明天我要借用这辆卡车。”那个悲伤的人在走廊里担心地说。 The signalman’s signature sign is significant to the vacant vacation. 信号员的签字符号对空假期具有重要意义。 The resigned designer is designated to an assignment of reigning the foreigners. 辞职的设计者被指派了一个去统治外国人的任务。 Because of the temperature tempo, I temporarily lost temper to my contemporary in the temple. 由于温度进度的原因，我在庙里一时地对同代人发了脾气。 The empty empire’s emperor made an attempt to tempt the contemptuous man. 空虚帝国的皇帝试图诱惑那个轻蔑的人。 The one-eyed man obeyed the obedient audience’s order. 独眼人服从了顺从的听众的命令。 The patriot’s radar made the radical patient impatient. 爱国者的雷达使激进病人不耐烦。 From the experiment the experienced expert gained an unexpected expertise. 有经验的专家从实验中获得一项意外技能。 Details about the tailor’s tail are available from the prevailing dailies. 有关裁缝尾巴的细节可从流行的日报上得到。 The sailor was nailed on the rail for he failed to trail the mail. 水手被钉在横木上，因为他未能跟踪邮件。 The frank man put the first-rank blank blanket into the tan tank. 直率的男子将一流空白毛毯放进黝黑的大容器。 Thanks to the bankrupt banker, my ankle avoided an injury. 多亏那位破产的银行家，我的脚踝免受伤害。 After a shot the foot began to root and shoot in the boot. 打了一针后，脚开始在靴子里生根发芽。 The academic topic is why the blade of the spade is still sharp after decades’ decay. 学术话题是为什么铁锨刃口经过几十年的腐烂之后仍然锋利。 The invader saw the shadow of the lampshade fade away. 入侵者看见灯罩的影子渐渐消失。 The graduated comrade gradually graded the trademarks after the parade. 阅兵过后，那位毕了业的同志逐渐将商标分了等级。 Both the math pathfinders bathed in the bathtub. 两个数学先驱都在浴盆里洗过澡。 In the thesis the synthetic symbol symbolizes sympathy. 在论文中这个综合符号代表同情。 For unity the units united into a unique union. 为了统一，这些单位联合成一个独特的联盟。 The commonsense commonwealth government no longer uses the uncommon commonplace. 有常识的联邦政府不再使用不寻常的陈腐之言。 The communist communicated communism to this municipal community. 那个共产党员把共产主义传入该市立社区。 In the bar the barber bargained for a jar of jam, then got over the barrier of barrels. 在酒巴里理发师为一罐果酱讲了价然后越过桶作的屏障。 The quarrelsome general quarreled about a quarter quart of oil in the headquarters. 好争吵的将军在司令部为四分之一夸脱油而争吵。 On the wedding I saw blooms embeded in the bed of the bedroom. 在婚礼上，我看见卧室的床上镶嵌着花朵。 The fisherman wishes to finish the dish of reddish fish. 渔夫希望做完那盘略带红色的鱼。 On the Christmas the Christian’s assistant fisted Pistol Piston and twisted his wrist. 在圣诞节，基督徒的助手拳击了“手枪活塞”并扭了他的手腕。 My sister insists consistently on persistent resistance to transistor radios. 妹妹一贯坚决主张持久抵制晶体管收音机。 The chemist and the mistress insist that the mist consists of several chemicals. 化学家和女教师坚持认为薄雾由几种化学物品构成。 My nephew found a few dewdrops on the Jewish jeweler’s jewel. 侄儿发现犹太珠宝商的珠宝上有几滴露珠。 The crew unscrewed the screws from the sewing-machine and chewed them. 船员们从缝纫机上旋下螺钉并咀嚼它们。 The interviewer reviewed the newspaper and renewed his viewpoint on the news. 采访者再次查看了报纸并更新了他对该新闻的看法。 The refiner defined a definite confine with her fine finger. 提炼者用她精细的手指定义了一个明确的界限。 The sugared vinegar is refined from the sugarcane and pine. 加糖的醋是从甘蔗和松木中精炼出来的。 We are dined and wined in the inner dining-room of the inn. 在旅店的内部餐厅，我们受到了酒宴款待。 I’m inclined to underline these disciplines in the outline written on linen. 我倾向于给写在亚麻布上的大纲中的这些学科划下画线。 The engineer examined the engine of the mining machine for stomach. 工程师检查采矿机的发动机是否有肚子痛。 The submitted submarine on the magic magazine is shining and magnificent. 魔术杂志上那艘提交的潜艇闪亮而壮观。 Thus the enthusiastic dumb man thumbed the humble man’s umbrella. 于是热情的哑巴用拇指拨弄谦卑男子的伞。 The trembles of the umbrella assembly lines have resemblances. 这些雨伞装配线的抖动有相似之处。 hold your hand and grow old together with you I’m interested in why he is arrested while resting in aural restaurant in the forest. 我对他为何在森林里的香味餐馆歇息的时候被捕感兴趣。 I guess the guest’s gesture suggested that he could not digest well. 我猜想客人的手势暗示了他消化不良。 The pretty priest protested the contest of protein test. 漂亮牧师抗议蛋白质化验赛。 “What a marvelous carving!” the starving harvester in vest said. “好一件神奇的雕刻!”挨饿的穿着背心的收割者说。 During the festival the investor investigated his ancestor. 节日期间投资者调查了他的祖宗。 Subsequently the eloquent man frequently asked the consequence of quenching in sequence. 其后雄辩者频繁地询问顺序灭火的结果。 In this semester the westerner thinks Chest Orchestra is the best. 这学期西方人认为箱子乐队是最好的乐队。 Henceforth, the north wind is worthless to the northerners. 从今以后，北风对北方人没有益处。 On the eastern Easter feast, at least one beast’s breasts were tested with yeast. 在东部复活节宴会上，至少有一头牲畜的乳房被用酵母做了试验。 The young youths lounged in the south mouth of the cave for one month. 无经验的青年们在南洞口闲荡了一个月。 The bird nests only in northeast, northwest, southeast and southwest lest it be found. 此鸟只在东北、西北、东南和西南筑巢，以免被发现。 The airport and seaport are important to import and export of portable goods. 机场和海港对于进口和出口轻便商品很重要。 On the porter’s passport a portion of the portrait isn’t proportional. 在搬运工的护照上，部分肖像不成比例。 With the reporter’s support, the sportsmen are transported to the airport. 在记者的支持下，运动员们被运送到了机场。 After a fortnight’s torture, the unfortunate man got an opportunity to escape the misfortune. 经过两星期的拷打后那个不幸的人得到了逃脱不幸的机会。 I got this sort of comfortable soft shorts with no efforts. 我不费吹灰之力弄到了这种柔软舒适的短裤。 The forecaster contrasted the cast castle with the vast desert. 预言者将铸造的城堡与广阔的沙漠作了对比。 I tasted the paste in haste and cast it on the waste plaster. 我匆忙品尝了浆糊然后将其丢在废泥灰上。 The astronaut, an astronomy fan, is astonished at the gymnastics show in the gymnasium. 宇航员(一位天文学迷)对体育馆里的体操表演感到惊骇。 The master’s masterpiece caused a disaster to headmaster. 主人的杰作给校长造成灾难。 After the blast the plastics show everlasting elasticity. 爆炸过后，塑胶显示出永久的弹性。 The pitch made me itch. I pitched the switch into the ditch around the kitchen. 沥青使我发痒。我把开关抛进围绕厨房的水沟里。 I scratched a match and saw my watch catching a patch. 我划了一根火柴发现我的手表钩着了一块补丁。 With time elapsing, the flaps collapse on the clapper’s lap. 随着时间流逝，副翼在拍手者的膝盖上堆叠起来。 The incapable man in cap went into the hospitable capital hospital. 戴帽的无能男子走进热情好客的首都医院。 I gripped the striped strip that tripped me over on the ship. 我握着那条在船上将我绊倒的带条纹的带子。 With his lips the sly fly clipped the slippery slipper that eclipsed his sight. 狡猾的苍蝇用嘴唇夹住遮挡它视线的滑拖鞋。 The button utters in mutter, “The butterfly likes the buttered earthnut/peanut.” 按钮咕哝着发出声音说：“蝴蝶喜欢涂了奶油的花生。” The scraped escapee taped the grapes into various shapes. 擦伤的逃犯用带子把葡萄扎成各种形状。 In the past the compass could pass passion to the passive man having pastime on the pasture. 在过去，指南针可以将激情传递给在牧场上消遣的被动之人。 In the passage the passenger passed a cassette of message to messenger. 在过道里，乘客给信差传递了一盒带信息。 It was not the aluminum but the massive brass and bronze on the grass that embarrassed me. 让我为难的不是铝，而是草地上厚重的黄铜和青铜。 From the classical class, the classmate with glasses knows the classification of classics. 戴眼镜的同学从古典文学课上知道了古典名著的分类。 The hungry drunk plunged a trunk of lungs into the tunnel under the channel. 饥饿的醉汉把一大箱肺投进了水渠下面的隧道。 I bundled a bunch of branches and anchored it on the punching bench. 我捆起一簇树枝，将它栓在冲压工作台上。 The fundamental fund functions punctually in conjunction with abundant capital. 这笔重要基金与充裕的资本一起准时发挥作用。 Uncle and aunt launched a laundry with the blunt hunter. 伯伯和伯母与直率的猎人创办了一家洗衣店。 The upset supplement supplier went up with the puppet to the upper room for supper. 心烦意乱的增刊供给者与傀儡一起到上面的房间吃晚餐。 I’m liable to give reliable reply to the application for supply of apples. 我有责任对申请供应苹果给予可靠答复。 Salaries vary with various jobs. 薪水随各种各样的工作而异。 I didn’t evaluate the blue glue due to the vague plague. 因为不明确的瘟疫，我没有对蓝色胶水估价。 The flu influenced the influential speaker’s fluency of speech. 流感影响了那个有影响的讲话者讲话的流畅。 I have association with the socialists of the society. 我与协会内的社会主义者有交往。 In the cinema the medicine immediately remedied the medium. 在电影院里这种药立刻拯救了中间人。 I use the ripe recipe to wipe the pipeline. 我用成熟的配方来擦拭管道。 The boastful toaster roasts himself on the coast in the sunshine. 好说大话的祝酒者在海岸上晒太阳。 It was true that the rescued cruel man let fuel oil issue from the tissue. 获救的无情男子真的任凭燃油从薄纱中流出。 The furious obscure curer is curious to secure the curly-curved mercury curiosity. 盛怒的不出名治疗者渴望弄到这种带卷曲曲线的水银珍品。 The dictator predicted the contradiction in the dictionary. 独裁者预言了字典中的矛盾。 In the fiction, the victim of the conflict pictured the picnic after victory. 在小说中，冲突中的受害者描绘了胜利后的野餐。 The pupils will fix with a mixture the fixed figure in the future. 学生们将来要用一种混合物整修固定轮廓。 The impure mixture with impurity is purified. 含杂质的不纯混合物被提纯。 The native has no nationality; he is an international man. 这个土著没有国籍，他是一个国际人。 In the rural the naturally matured tomatoes have this nature. 在乡下自然成熟的番茄具有这种性质。 The worshiper thinks that the worst is the insufficient horsepower. 崇拜者认为最坏的事是马力不足。 A year ago I could go without the foregoing favorite flavor. 一年前没有先前最喜爱的风味我也能过。 The fresh flesh on the mesh refreshed the dog. 网格上的新鲜肉使狗恢复了体力。 In the autumn the authorities automatically authorize me to buy highly mobile automobiles. 秋天，当权者自动授权我买高机动性的汽车。 The columnist holds the colorful column of the colonial newspaper. 那位专栏作家主持殖民地报纸的多彩专栏。 In the beautiful bureau my daughter’s laughter served for the sauce of the sausage. 在漂亮的办公署，女儿的笑声充当了香肠的调料。 The mechanical mechanic knows the technique and technology of the echo mechanism. 呆板的机修工知道共鸣装置的技术和工艺。 The ugly druggist gauged the huge plug in the refugee’s rug. 丑陋的药剂师测量了难民毛毯中的巨大插头。 I hope to make copper copies of the telescope and microscope for hobby in the lobby. 我希望制作望远镜和显微镜的铜质复制品。 The sloped envelope indicates the development velocity of printing. 那个倾斜的信封显示了印刷的发展速度。 The rope is proper property to the prospering rope maker. 绳子对成功的制绳者来说是真正的财产。 It’s a pity that the spitbox in the pit was hit and split. 遗憾的是坑内的痰盂被打裂。 The situation is fit for profiting and beneficial to the shops situated nearby. 这种形势适于获利且对坐落在附近的商铺有益。 The fanciful panda fan panics over the span of the pan-like panel. 爱幻想的熊猫迷对盆状仪表板的全长感到恐慌。 The advanced van has disadvantages as well as advantages. 这辆先进的篷车有优点也有缺点。 The original Organ Organization was originated with an original man. 最初的风琴组织是由一个有创见的人发起的。 The pale salesman wholesales scales on a large scale. 面色苍白的推销员大规模批发比例尺(天平、鱼鳞)。 The males think the females have talent for telling stale tales. 男人认为女人有讲陈腐故事的才能。 Beneath (Underneath) the wreath the deaf man near death is out of breath. 花环下面那个快要死的聋子喘不过气来。 The conclusion includes my attitude toward his rudeness. 结论包含了我对他的粗鲁所持的态度。 In the pond the sponsor responded to the correspondent’s corresponding responsibility. 在池塘里主办者对通讯员的相应责任作出了回应。 In this version, some conversions are made to the verbs and adverbs in the conversation. 该版本中，会话中的动词和副词作了一些转换。 The cosmic verse on the reverse of the paper is very welcome in Universe University. 纸张背面的宇宙韵文在宇宙大学很受欢迎。 The dismissed Swiss miss kissed the once missing missile and scissors. 被解雇的瑞士小姐吻了一度失踪的导弹和剪刀。 The comb is combined with a bomb in the tomb. 梳子和坟墓里的炸弹结合在一起。 The sum of the hammers is made in the summer summary. 锤子总额在夏季总结里作了统计。 Last summer the drummer became an amateur dramatist dramatically. 去年夏天，鼓手戏剧性地变成了业余剧作家。 Long Tongue League’s colleagues are fatigued with cataloguing. 长舌联合会的同僚们编目录编累了。 The bottle is hidden in the bottom of a ton of cotton the cottage. 瓶子被藏在农舍里一吨棉花的底部。 The pattern of the battery doesn’t matter to the battle against the little brittle cattle. 电池的式样对与脆弱小牛作战无关要紧。 By the biography, the biologist’s playing the violet violin violently violated rules. 据传记记载，生物学家猛奏紫罗兰色的小提琴违犯了规矩。 In the faithful waiter’s waist exists a list of the ten listeners. 在忠实的侍者的腰里存有那十位听众的名单。 The typist plays Typhoon on the piano in a typical style. 打字员以典型的风格在钢琴上演奏“台风”。 I pushed aside the crushed cushion in a rush and saw a bushy brush. 我急忙推开压皱的软垫子,看见一把浓密的刷子。 Riding on the ridge of the bridge, the proud bride shouts loudly to the cloud. 骄傲的新娘骑在桥脊上对着云大声喊。 The decisive decimal point made the acid man decide to suicide. 决定性的小数点使刻薄之人决定自杀。 I’m convinced that the provincial government will provide provisional provisions. 我深信地方政府将提供临时供应品。 The hidden division is subdivided into individuals. 隐藏的师被细分为个体。 The tides slide on the tidy wide beach and collide each other. 海潮在整洁宽阔的海滩上滑行并相互碰撞。 The briber described the tribe head’s bribery. 行贿者描述了部落首领的受贿行为。 The ribbon of the rifle is fabricated with fibre. 来复枪的带子是用纤维制作的。 The continent continues to control the import of petrol and petroleum. 大陆方面继续控制汽油和石油进口。 They returned in turn to bury the luxuries burnt in the burst. 他们依次返回来埋藏在爆炸中烧毁的奢侈品。 Banned murders in the suburb bring turbulent disturbance and burden to the urban turbine works. 在郊区被禁止的谋杀给都市的涡轮工厂带来汹涌骚乱和重负。 A nice price of the iced rice is offered to the officer. 军官得到了冰冻米的好价钱。 The poor man in poverty sleeps on the floor at the doorway. 那个贫困的可怜人睡在门口的地板上。 In the log lodge he said some illogical apologies. 在木屋里他说了些不合逻辑的道歉话。 The slogan crier saw the dog and frog jump to and fro in the fog. 呼口号者看见狗和青蛙在雾中来回跳。 I recognized the large-sized prize and seized it. 我认出了大号奖品并将它占有。 The lying liar lied to the dying diet maker that the tie was dyed blue. 躺着的说谎者对临死的食疗制作者谎称带子染成了蓝色。 The unyielding man fiercely pierced the shield in the field. 那个不屈的人凶猛地刺穿田野里的盾牌。 Perhaps something happy will happen to the unhappy man. 或许那个不高兴的人将要碰上某件快乐的事。 The Greek checked his cheeks on the weekend. 希腊人在周末检查了他的面颊。 The troop’s stoop on the loop became the top topic at the bus stop. 部队在环行道上的屈服在公共汽车站成了头等话题。 The chop shopkeeper let the blood drip to the crops. 排骨店老板让血滴到庄稼上。 The pop song is popular in the populous city. 这首流行歌曲在人口稠密的城市流行。 Regretfully, we can’t regulate the irregular liner on the gulf. 遗憾的是我们不能调整海湾上不定期的班船。 The pig is obliged to dig a big pit for the pigeon. 猪被迫为鸽子掘一个大坑。 In this district I can strictly distinguish the distinct distinctions of bee’s stings by instinct. 在该地区我能靠直觉严格分辨蜜蜂刺的明显特征。 In the Administration, this minister is in charge of registering regional religions. 在内阁中这个部长负责登记区域宗教。 The energetic enemy submerged in the water on the verge of the emergency. 在紧急情况快要发生时精力充沛的敌军沉入水中。 The muscular musician found the bud in the mud in the museum. 肌肉发达的音乐家在博物馆里的泥巴中发现了嫩芽。 I also heard of the false pulses elsewhere. 我在别处也听说过这些虚假脉冲。 The kid kidnapper can’t get rid of a ridiculous kidney disease. 绑架小孩的家伙无法摆脱荒谬的肾病。 My niece sacredly sacrificed a piece of pie to the God. 侄女郑重地给神供上一块馅饼。 The sinful single singer’s finger skin is singular. 有罪的单身歌手的手指皮肤独特。 “The enterprise will be supervised by a group comprising prominent men,”the despising chairman said concisely with no compromise. “企业将由杰出人员构成的小组来监管。”轻蔑的主席毫不妥协简明地说。 The promising singer underwent mysterious misery. 那位有前途的歌手遭受了神秘的痛苦。 The physician made a physical examination to the sophisticated philosopher and physicist. 医生给世故的哲学家和物理学家作了体检。 Bowing its elbow, the owl sows in the bowl. 猫头鹰弯着肘在碗中播种。 The cowardly cow vows not to tow vowels. 胆怯的母牛发誓不拖元音字母。 The answer is: Owing to a shower, the powerful powder is no longer on show. 答案是：由于一场阵雨，这种强有力的火药不再展览了。 The biscuit compels the mosquitoes quit the equipment. 这种饼干迫使蚊子离开设备。 What a nuisance, the suit is ruined due to the unsuitable style. 真糟，这套服装由于款式不合适而毁了。 The judge has prejudice to the juicy fruit. 法官对这种多汁水果怀有偏见。 The guide disguised his guilty of mixing the liquor with a liter of liquid. 导游把酒与一公升液体混合的罪过掩饰起来。 When I fetched the sketch on the stretcher I found the secretary’s secret. 当拿来担架上的素描时，我发现了秘书的秘密。 The mutual spirits inspired us to reach the annual aim. 相互的精神鼓舞了我们达到年度目标。 The roaring oar hit the coarse keyboard on the cupboard aboard the boat. 轰鸣的桨击中了船上碗柜上的粗糙键盘。 My intimate mate’s ultimate estimate approximates the appropriate value. 我亲密伙伴的最终估计接近恰当的值。 In case of necessity, necessary session can be held on the vessel. 必要时，必需的开庭可在船舶上进行。 By the navigation of microwave, the navy paved a pavement on the wavy sea. 借助微波导航，海军在多浪的大海上铺了一条路。 The minority of us are confronted with difficulty in the frontier of the major. 我们少数人在该专业尖端领域面临困难。 From the context of the text, I find the next pretext for selling the textile. 我从课文的前后关系中找到卖纺织品的下一个借口。 The systematic items stem from the walker’s talk about the chalk. 这些系统的条款来源于步行者关于粉笔的谈话。 Theoretically, their heir’s theory of meteorology can explain the meteor. 从理论上讲，他们的继承人的气象理论能解释这种大气现象。 I affirmatively confirmed the conformity of the theory with practice. 我断然确认了理论与实践相符。 The subordinate coordinates are in accordance with that set by the cordial chorus. 从属坐标与热心的合唱团的设定值一致。 The transactor thinks activating the atomic interaction in the intact reactor is practicable. 办理人认为激活未受影响的反应堆内原子的相互作用是可行的。 The distracted reader can’t be absorbed in the abstract extract. 心神纷乱的读者无法专心于抽象的节录。 The compact faction fractured because of friction. 紧密小宗派由于摩擦破裂了。 Under the guideline, the output of streamlined seamless liners declines linearly. 在该方针的指引下，流线型无缝班机的产量直线下降。 The dreadful tread on the meadow broke the deadly deadlock. 草场上可怕的践踏声打破了致命的僵局。 The heading is “Headline of Headlong Pleadings”. 标题为“仓促答辩状的摘要”。 I overhear that the hearty man heartily yearns for my harness in the barn. 我无意中听说那个热忱的人十分向往我的牲口棚中的马具。 After the rehearsal, the weary mechanic repaired the gears with shears and spear. 排练完后，疲倦的机修工用剪刀和矛修理了齿轮装置。 Having checked the parameters of the apparatus, the paralysed parasite went to the paradise by parachute. 检查过仪器的参数后，瘫痪的寄生虫乘降落伞到天堂去了。 In the compartment, the impartial participant told me his counterpart’s departure. 在隔间里，公正的参与者把其对等人物的离世告诉了我。 The articulate man’s artistic cartoon startled the charterer. 发音清晰者的艺术卡通使包租人大吃一惊。 The guardian found a quarterly quart of quartz in the safeguard. 监护人在安全装置内找到了四分之一夸脱石英。 The immortal man’s mortgage can be a shortcut to resolve the food shortage. 不朽之人的抵押可以作为解决食品短缺的捷径。 The escort resorted to the orthodox paradox to retort his distortion. 陪护者借助正统悖论反驳他的歪曲。 The oppressor suppressed his aggressive opinion about compressor. 压制者制止了他的有关压缩机的挑衅性观点。 The senseless senator’s pretense of consensus caused a sensation. 愚蠢参议员的舆论借口引起了轰动。 The conspicuous suspicious pension is in suspension. 那笔引人注目的可疑养老金被暂停发放。 He repents having compensated the dispensable pension for fear of penalty. 他后悔因害怕处罚而补偿了不必要的养老金。 Abundance doesn’t mean redundance. The hound found a profound book on the roundabout. 充裕并不意味多余。猎犬在旋转木马上找到一本深奥的书。 By courtesy of the mourner, he endeavours to devour the nourishing odour. 承蒙哀悼者同意，他努力吞食滋养气味。 The thermal therapy terminated after the terminal germ seminar. 热疗在期末细菌研讨会后终止了。 The terraced terrain near the Mediterranean ferry is terrific. 地中海渡口附近的台地地形好极了。 The consul’s consultant hauled out the assaulter from the vault. 领事的顾问把袭击者从地窖中拖了出来。 The nitrogen atoms combine instantaneously, simultaneously and spontaneously. 氮原子瞬间同时自动化合。 The respectful spectator gave the prospective president a retrospect of the spectacular spectrum. 恭敬的旁观者对未来的总统回顾了壮观的光谱(景象)。 The suicides in adjacent area are incidental coincidence. 邻近区域内的自杀是偶然巧合。 His ignorance of her dignity ignited her indignation. 他对她的高贵的无知点燃了她的愤怒(之火)。 The man tackling the drawback of the brackets runs a slack snack business. 那个解决支架缺点的人经营着萧条的小吃生意。 At the turning the turtle met a turkey and made a turnover on the turnips. 在拐弯处海龟遇见了火鸡，在萝卜上翻了个身。 The overthrown president is overwhelmed by the controversy. 被推翻的总统被辩论降服。 The handicapped man got a second-hand handout of shorthand handbook beforehand. 残疾人事先得到了一本二手速记手册施舍品。 Hitherto the withering flowers can’t withstand the sunshine notwithstanding my care. 尽管有我的呵护，这些凋谢的花至今仍经不起阳光。 I averted my eyes from the diverse advertisements for the invert converter. 我把目光从花样繁多的倒置转换器广告上移开。 It’s deduced that the induced fluctuation does no good to the reproducing productivity. 据推断，诱导波动对复制生产率没有好处。 In the Catholic cathedral the athlete shouted out his wrath in the athletic oath. 在天主教大教堂，选手在体育誓言中喊出了他的义愤。 The destiny of the pest in chestnut is not known before reaching the destination. 栗子中害虫的命运在到达目的地之前是未知的。 The wrestler’s testimony manifests that he has large estates. 角力者的证言表明他有大量房地产。 Having attained the entertaining center, the retained man was detained and sustained pain. 到达娱乐中心后，聘请的男子遭到拘留并经受了痛苦。 The assessor asserts that he inserted the deserted desserts in the desert with alert. 估价人认定他警惕地把被抛弃的甜点心插入沙漠中。 The abrupt corrupt man had the Xeroxed code corroded in the erosion episode. 突然腐败的人让人在腐蚀插曲中腐蚀被影印的代码。 The enlightened man highlighted his mighty insight into the fright. 开明的人强调了他对惊悸的强大洞察力。 I would rather withhold than uphold you unfold the gold foil on the threshold. 我宁愿忍住也不支持你在门槛上展开黄金箔。 The imposing man posed as a man of good disposition and disposed of the rubbish. 给人印象深刻的人冒充一个好安排的人并且处理垃圾。 The prose author’s diagnosis discloses that the hose is damaged. 散文作者的诊断透露软管被是损坏的。 The limping shrimp impulsively implemented the compulsory duty. 柔软的小虾有推动力地执行义务的职责。 The implicit implication about the deficit is not explicit. 关于赤字的含蓄暗示是不清楚的。 The degeneration of regenerative gene is exaggerated. 再生基因的恶化是言过其实的。 The competent petitioner thinks the perpetual impetus is petty. 有能力的请愿者认为永久的动力是可爱的。 The superstitious man put the priority on the superficial supersonic superiority. 迷信的人把优先权放在浅薄的超音波高傲上。 The traitor in strait straight forwardly told me the traits of the bait. 海峡里的卖国贼直接主动地告诉了我饵的特性。 The Oriental is proficient in the ingredients. 东方人对成分熟练。 The recipe recipient transiently made the conscientious alien client unconscious. 处方容器瞬间使有责任心的外侨客户丧失意识。 The rotary agitator irrigated him. 旋转的鼓动者把他弄湿了。 The counselor bounced up to denounce discount. 顾问跳起来指责折扣。 The degraded undergraduate upgraded the underlying virus program. 被降职的大学生升级了基础的病毒计划。 Jail life made the frail retailer avail every snail in the pail. 监狱生活使脆弱的零售商有益于桶里的每一只蜗牛。 Deviation in aviation is dangerous. 飞行过程中的背离是危险的。 On the anniversary the versatile poet wrote an adverse verse Virtue versus Evil. 在周年纪念日上，多才多艺的诗人写了一首敌对的诗歌：《美德VS邪恶》。 The recruit made the current circulate in the circuit on the circumference. 新兵使电流在圆周上的电路内循环。 In the suitcase, the guitar tutor found the tuition by intuition. 在小提箱里，吉他导师以直觉发现学费。 The watchful snatcher dispatched a batch of combatants to the hatch. 密切注意的绑架者发送了一批战士到舱口盖。 The wretched butcher clutched the needle and stitched it clumsily. 可怜的屠夫抓住针并且笨拙地缝它。 The peer’s queer peering is a sheer sneer. 贵族奇怪的窥视是一次完全的嘲笑。 The currency curriculum made the excursionist incur loss of time and money. 货币课程使短途旅游者招致时间和钱的损失。 The stray betrayer arrayed the sprayers on the road. 迷路的叛徒在路上排列喷雾器。 Dust accumulated on the insulated simulator in the desolate lab. 灰尘在荒凉的实验室里绝缘的模拟器上堆积。 The inflated balloon indicates a latent inflation on the plateau. 膨胀的气球显示了高原上潜在的通货膨胀。 Trivial tributes constitute the attribute of constituent’s report. 琐屑的颂词形成选民的报告的属性。 I acutely and resolutely refuted the brutal persecution of mute commuter. 我尖锐而坚决地反驳了沉默通勤者的野蛮迫害。 This measure may preclude the exclusive agency from selling crucial crude oil. 这个措施可以使专有的代理不能出售决定性的原油。 He depicted the condition the man contradicting the verdict. 他描绘了那个人反驳裁决的情形。 Magnify the magnitude of the magnetism. 放大磁性的大小。 The deputy chairman of the charity clarified the importance of clarity and purity. 慈善的副会长阐明了透明和纯洁的重要性。 The tramp from the tram swamped the ham hamburger with shampoo. 来自有轨电车的流浪者用洗发水淹没火腿汉堡。 According to the pamphlet, the current in the amplifier can be amplified to 3 amperes. 根据小册子，在放大器里的电流可以被放大到3安培。 Prolong the sponge along the longitude and latitude at an altitude. 沿着经度和纬度在一个高度延长海绵。 The conservative man made a reservation in the observatory. 保守的人在天文台做了一些保留。 The mender recommends me to amend the legend agenda. 修理工建议(劝告)我修改传奇议程。 His comprehensive apprehension about the appendix of the pendulum is obvious. 他广泛的关于这个钟摆的附录的忧虑是明显的。 Elevate the eleventh level to relevant height. 提高第11步到相关的高度。 Thereafter, I adhered to the coherence inherent to the theory. 此后，我坚持理论固有的连贯性。 The prophet appropriately appropriated the fund for repairing propeller. 预言者恰当地为修理螺旋桨拨了专款。 I’m baffled why the affiliated man initiated the negotiator into ego. 我迷惑于为什么附属的人正式介绍谈判者进入自我。 The radiation radius of the radioactive radium radiator in the stadium is variable. 放射性的镭暖气装置的辐射半径在体育场是易变的。 Snobbish Knob is doing his hobby in the lobby. 势利的球形门柄正在大堂里做他的嗜好。 The ass bypassed the guard and assassinated the surpassing ambassador in the embassy. 驴为警卫设旁路并且在大使馆暗杀胜过的大使。 The corporate bodies collaborate elaborately on producing vibrating evaporator. 法人团体在生产振动蒸发器之后苦心制作协作。 The dazzling light from the digital device dizzied me. 来自数字化的设备的耀眼的光使我头昏。 The extinct exotic bird’s feather contains zinc. 那种已绝迹的珍奇的鸟的羽毛中含锌。 The smuggler shrugged to the bugler hugging the bug in the tugboat. 走私者对在拖船中拥抱臭虫的号手耸耸肩。 The vocation advocate found the word “vocal” and “reciprocal” not in the vocabulary. 职业倡导者发现“嗓音的”和“交互的”两词不在词汇表中。 Without my aid I’m afraid the maiden would have been raided. 没有我的帮助我怕少女已遭到袭击。 The slim Muslim reached his climax when he found the axis of the galaxy. 苗条的穆斯林在发现银河的轴线时达到了(人生的)顶点。 Bonus is a stimulus for me to study the silicon in the bacon. 奖金是我研究薰肉中硅原子的动力。 The categories of the lubricated duplicators are intricate. 那些润滑过的复印机的种类错综复杂。 The wagging wasp grasps the crisp clasp for a gasp. 摇摆的黄蜂抓住脆钩喘息。 The reconciled reptiles rest on a fragile tile. 和解的爬行动物歇在易碎的瓷砖上。 The gossip tossed the mossy blossom fossil. 爱讲闲话者向上抛长满苔藓的花化石。 Test the immune function by immersed dispersion. 用浸入扩散(法)测试免疫功能。 The lateral elite is literally illiterate. 边上的精英分子简直就是个文盲。 To abide the abiding bidding, the oxide bidder strides on the seaside. 为了忍耐无休止的吩咐，氧化物投标者在海滨阔步行走。 The tormentor enlarged the engagement garment. 折磨者加大了订婚服装。 The cripple dipped the whip tip into the chip solution nearby his hip. 跛子将鞭子末端浸入他臀部旁边的芯片溶液中。 The tickler pricked a tick on the nickname Nickel. 挠痒者在绰号“镍币”上刺了个勾号。 The administrator diminished the feminine miniature to minimal size. 管理员将女性缩样缩减到最小尺寸。 The man with mittens intermittently intervened the remittance. 戴连指手套的人间歇地介入汇款。 The scorched couch is put in the porch of epoch. 被烤焦的睡椅放在时代门廊内。 The monstrous monarch monopolized monarchy. 可怕的君主垄断了君主国。 The missionary transmitted emission emitted lately. 传教士传播了新近散发出来的散发物。 I’m intent on tentative retention of potential patents. 我热衷于潜在专利权的暂时保留。 The expelled man repelled billions of rebellions. 遭到驱逐的男子击退了数十亿次叛乱。 The cellar-dweller yelled, “Fell the jellyfish burglar!” 住地下室的人喊道：“打倒海蜇窃贼!” The diplomatic diplomas are made in automation in the autonomy. 外交证书在自治区是自动化生产的。 The enrolled jolly stroller polled on the trolley. 被招收的快乐的散步者在无轨电车上投票。 The contaminated vital vitamin made racial discrimination come to culmination. 被污染的重要维他命使种族歧视达到极点。 The jogger made an analytical analogy between the ecology and geology. 慢跑者在生态学和地质学之间进行了分析类比。 The alliance enhanced the reliability of the applicable alloy appliances. 盟友增强了适用的合金用具的可靠性。 The gigantic panther in pants passed the transition period of heart transplant. 穿裤子的巨大黑豹度过了心脏移植的过度期。 With a clatter, the flatterer shattered the chattering wattmeter in the chaos. 当啷一声，马屁精在混乱中打碎了格格作响的瓦特表。 “Homely food is wholesome,” the comedist said on the dome. “家常食品有益于健康，”喜剧作家在拱顶上说。 The subtle subscriber found the preion manu. 敏锐的认购者找到了处方原稿。 Time is finite and infinite. I defy the indefinite definition. 时间既是有限的又是无限的。我公然对抗这个模糊的定义。 The driller filled the grill with brilliant film. 钻孔者在烤架上填满辉煌的胶片。 The ill man had a pill and sat on the pillar in stillness until now. 那个坏人吃了一颗药丸后静止不动地坐在柱子上直到现在。 The skilful miller killed millions of lions with his ski. 技术娴熟的磨坊主用雪橇杀死了上百万头狮子。 The silly spilled the milk on the silver silk. 傻子把牛奶溅到银白色的丝绸上。 On the far farm the army’s arms are kept warm by a swarm of bees. 在远方的农场上，陆军的武器被一群蜜蜂保暖。 The alarm harmed the charming harmony of the ceremony. 警报声损害了典礼迷人的和谐。 Squirrel inquired an acquaintance and acquired the requirements. 松鼠询问了一位熟人，得知了那些要求。 A title is entitled to the retired worker who repaired the entire tire tirelessly. 那个不倦地修理了整个轮胎的退休工人被授予了一个头衔。 The hired admirer inspired his desire for the wire. 雇佣的钦佩者激发了他对铁丝的渴望。 The firm fireman first overcame thirst desire. 坚定的消防员首先克服口渴欲望。 The tiresome pirate sounded siren and let off fireworks. 讨厌的海盗鸣汽笛放焰火。 The adjective injected new meaning into the objected objective object. 这个形容词给受到反对的客观物体注入了新的意义。 The projector is subject to rejection and may be ejected from the project. 投影机有遭到否决的倾向并可能被逐出工程。 A day goes through daybreak, morning, noon, afternoon, evening and midnight. 一天经过拂晓、上午、正午、下午、傍晚和午夜。 His affection for the defects is affected by the infectious perfect effect. 他对缺点的钟爱受到具有感染力的完美效果的影响。 With a clatter, the flatterer shattered the chattering wattmeter in the chaos. 当啷一声，马屁精在混乱中打碎了格格作响的瓦特表。]]></content>
      <categories>
        <category>其它</category>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JDK9到14的重要新特性]]></title>
    <url>%2F2020%2F10%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2F08_java9%E5%88%B014%E6%96%B0%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[文章来自：https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/new-features/%E4%B8%80%E6%96%87%E5%B8%A6%E4%BD%A0%E7%9C%8B%E9%81%8DJDK9%E5%88%B014%E7%9A%84%E9%87%8D%E8%A6%81%E6%96%B0%E7%89%B9%E6%80%A7.md Java9发布于 2017 年 9 月 21 日 。作为 Java8 之后 3 年半才发布的新版本，Java 9 带 来了很多重大的变化其中最重要的改动是 Java 平台模块系统的引入,其他还有诸如集合、Stream 流 Java 平台模块系统Java 平台模块系统，也就是 Project Jigsaw，把模块化开发实践引入到了 Java 平台中。在引入了模块系统之后，JDK 被重新组织成 94 个模块。Java 应用可以通过新增的 jlink 工具，创建出只包含所依赖的 JDK 模块的自定义运行时镜像。这样可以极大的减少 Java 运行时环境的大小。 Java 9 模块的重要特征是在其工件（artifact）的根目录中包含了一个描述模块的 module-info.class 文 件。 工件的格式可以是传统的 JAR 文件或是 Java 9 新增的 JMOD 文件。 Jshelljshell 是 Java 9 新增的一个实用工具。为 Java 提供了类似于 Python 的实时命令行交互工具。 在 Jshell 中可以直接输入表达式并查看其执行结果 集合、Stream 和 Optional 增加 了 List.of()、Set.of()、Map.of() 和 Map.ofEntries()等工厂方法来创建不可变集合，比如List.of(&quot;Java&quot;, &quot;C++&quot;);、Map.of(&quot;Java&quot;, 1, &quot;C++&quot;, 2);（这部分内容有点参考 Guava 的味道） Stream 中增加了新的方法 ofNullable、dropWhile、takeWhile 和 iterate 方法。Collectors 中增加了新的方法 filtering 和 flatMapping Optional 类中新增了 ifPresentOrElse、or 和 stream 等方法 进程 APIJava 9 增加了 ProcessHandle 接口，可以对原生进程进行管理，尤其适合于管理长时间运行的进程 平台日志 API 和服务Java 9 允许为 JDK 和应用配置同样的日志实现。新增了 System.LoggerFinder 用来管理 JDK 使 用的日志记录器实现。JVM 在运行时只有一个系统范围的 LoggerFinder 实例。 我们可以通过添加自己的 System.LoggerFinder 实现来让 JDK 和应用使用 SLF4J 等其他日志记录框架。 反应式流 （ Reactive Streams ） 在 Java9 中的 java.util.concurrent.Flow 类中新增了反应式流规范的核心接口 Flow 中包含了 Flow.Publisher、Flow.Subscriber、Flow.Subscription 和 Flow.Processor 等 4 个核心接口。Java 9 还提供了SubmissionPublisher 作为Flow.Publisher 的一个实现。 变量句柄 变量句柄是一个变量或一组变量的引用，包括静态域，非静态域，数组元素和堆外数据结构中的组成部分等 变量句柄的含义类似于已有的方法句柄MethodHandle 由 Java 类java.lang.invoke.VarHandle 来表示，可以使用类 java.lang.invoke.MethodHandles.Lookup 中的静态工厂方法来创建 VarHandle 对 象 改进方法句柄（Method Handle） 方法句柄从 Java7 开始引入，Java9 在类java.lang.invoke.MethodHandles 中新增了更多的静态方法来创建不同类型的方法句柄 其它新特性 接口私有方法 ：Java 9 允许在接口中使用私有方法 try-with-resources 增强 ：在 try-with-resources 语句中可以使用 effectively-final 变量（什么是 effectively-final 变量，见这篇文章 http://ilkinulas.github.io/programming/java/2016/03/27/effectively-final-java.html） 类 CompletableFuture 中增加了几个新的方法（completeAsync ，orTimeout 等） Nashorn 引擎的增强 ：Nashorn 从 Java8 开始引入的 JavaScript 引擎，Java9 对 Nashorn 做了些增强，实现了一些 ES6 的新特性 I/O 流的新特性 ：增加了新的方法来读取和复制 InputStream 中包含的数据 改进应用的安全性能 ：Java 9 新增了 4 个 SHA- 3 哈希算法，SHA3-224、SHA3-256、SHA3-384 和 S HA3-512 …… Java10发布于 2018 年 3 月 20 日，最知名的特性应该是 var 关键字（局部变量类型推断）的引入了，其他还有垃圾收集器改善、GC 改进、性能提升、线程管控等一批新特性 var 关键字 介绍 :提供了 var 关键字声明局部变量：var list = new ArrayList&lt;String&gt;(); // ArrayList&lt;String&gt; 局限性 ：只能用于带有构造器的局部变量和 for 循环中 Guide 哥：实际上 Lombok 早就体用了一个类似的关键字，使用它可以简化代码，但是可能会降低程序的易读性、可维护性。一般情况下，我个人都不太推荐使用。 不可变集合list，set，map 提供了静态方法copyOf()返回入参集合的一个不可变拷贝（以下为 JDK 的源码） static &lt;E&gt; List&lt;E&gt; copyOf(Collection&lt;? extends E&gt; coll) { return ImmutableCollections.listCopy(coll); } java.util.stream.Collectors中新增了静态方法，用于将流中的元素收集为不可变的集合 Optional 新增了orElseThrow()方法来在没有值时抛出异常 并行全垃圾回收器 G1从 Java9 开始 G1 就了默认的垃圾回收器，G1 是以一种低延时的垃圾回收器来设计的，旨在避免进行 Full GC,但是 Java9 的 G1 的 FullGC 依然是使用单线程去完成标记清除算法,这可能会导致垃圾回收期在无法回收内存的时候触发 Full GC。 为了最大限度地减少 Full GC 造成的应用停顿的影响，从 Java10 开始，G1 的 FullGC 改为并行的标记清除算法，同时会使用与年轻代回收和混合回收相同的并行工作线程数量，从而减少了 Full GC 的发生，以带来更好的性能提升、更大的吞吐量。 应用程序类数据共享在 Java 5 中就已经引入了类数据共享机制 (Class Data Sharing，简称 CDS)，允许将一组类预处理为共享归档文件，以便在运行时能够进行内存映射以减少 Java 程序的启动时间，当多个 Java 虚拟机（JVM）共享相同的归档文件时，还可以减少动态内存的占用量，同时减少多个虚拟机在同一个物理或虚拟的机器上运行时的资源占用 Java 10 在现有的 CDS 功能基础上再次拓展，以允许应用类放置在共享存档中。CDS 特性在原来的 bootstrap 类基础之上，扩展加入了应用类的 CDS (Application Class-Data Sharing) 支持。其原理为：在启动时记录加载类的过程，写入到文本文件中，再次启动时直接读取此启动文本并加载。设想如果应用环境没有大的变化，启动速度就会得到提升 其他特性 线程-局部管控：Java 10 中线程管控引入 JVM 安全点的概念，将允许在不运行全局 JVM 安全点的情况下实现线程回调，由线程本身或者 JVM 线程来执行，同时保持线程处于阻塞状态，这种方式使得停止单个线程变成可能，而不是只能启用或停止所有线程 备用存储装置上的堆分配：Java 10 中将使得 JVM 能够使用适用于不同类型的存储机制的堆，在可选内存设备上进行堆内存分配 统一的垃圾回收接口：Java 10 中，hotspot/gc 代码实现方面，引入一个干净的 GC 接口，改进不同 GC 源代码的隔离性，多个 GC 之间共享的实现细节代码应该存在于辅助类中。统一垃圾回收接口的主要原因是：让垃圾回收器（GC）这部分代码更加整洁，便于新人上手开发，便于后续排查相关问题。 Java11Java11 于 2018 年 9 月 25 日正式发布，这是很重要的一个版本！Java 11 和 2017 年 9 月份发布的 Java 9 以及 2018 年 3 月份发布的 Java 10 相比，其最大的区别就是：在长期支持(Long-Term-Support)方面，Oracle 表示会对 Java 11 提供大力支持，这一支持将会持续至 2026 年 9 月。这是据 Java 8 以后支持的首个长期版本。 字符串加强Java 11 增加了一系列的字符串处理方法，如以下所示。 Guide 哥：说白点就是多了层封装，JDK 开发组的人没少看市面上常见的工具类框架啊! //判断字符串是否为空 &quot; &quot;.isBlank();//true //去除字符串首尾空格 &quot; Java &quot;.strip();// &quot;Java&quot; //去除字符串首部空格 &quot; Java &quot;.stripLeading(); // &quot;Java &quot; //去除字符串尾部空格 &quot; Java &quot;.stripTrailing(); // &quot; Java&quot; //重复字符串多少次 &quot;Java&quot;.repeat(3); // &quot;JavaJavaJava&quot; //返回由行终止符分隔的字符串集合。 &quot;A\nB\nC&quot;.lines().count(); // 3 &quot;A\nB\nC&quot;.lines().collect(Collectors.toList()); ZGC：可伸缩低延迟垃圾收集器ZGC 即 Z Garbage Collector，是一个可伸缩的、低延迟的垃圾收集器。 ZGC 主要为了满足如下目标进行设计： GC 停顿时间不超过 10ms 即能处理几百 MB 的小堆，也能处理几个 TB 的大堆 应用吞吐能力不会下降超过 15%（与 G1 回收算法相比） 方便在此基础上引入新的 GC 特性和利用 colord 针以及 Load barriers 优化奠定基础 当前只支持 Linux/x64 位平台 ZGC 目前 处在实验阶段，只支持 Linux/x64 平台 标准 HTTP Client 升级Java 11 对 Java 9 中引入并在 Java 10 中进行了更新的 Http Client API 进行了标准化，在前两个版本中进行孵化的同时，Http Client 几乎被完全重写，并且现在完全支持异步非阻塞。 并且，Java11 中，Http Client 的包名由 jdk.incubator.http 改为java.net.http，该 API 通过 CompleteableFuture 提供非阻塞请求和响应语义。 使用起来也很简单，如下： var request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://javastack.cn&quot;)) .GET() .build(); var client = HttpClient.newHttpClient(); // 同步 HttpResponse&lt;String&gt; response = client.send(request, HttpResponse.BodyHandlers.ofString()); System.out.println(response.body()); // 异步 client.sendAsync(request, HttpResponse.BodyHandlers.ofString()) .thenApply(HttpResponse::body) .thenAccept(System.out::println); 简化启动单个源代码文件的方法 增强了 Java 启动器，使其能够运行单一文件的 Java 源代码。此功能允许使用 Java 解释器直接执行 Java 源代码。源代码在内存中编译，然后由解释器执行。唯一的约束在于所有相关的类必须定义在同一个 Java 文件中 对于 Java 初学者并希望尝试简单程序的人特别有用，并且能和 jshell 一起使用 一定能程度上增强了使用 Java 来写脚本程序的能力 用于 Lambda 参数的局部变量语法 从 Java 10 开始，便引入了局部变量类型推断这一关键特性。类型推断允许使用关键字 var 作为局部变量的类型而不是实际类型，编译器根据分配给变量的值推断出类型 Java 10 中对 var 关键字存在几个限制 只能用于局部变量上 声明时必须初始化 不能用作方法参数 不能在 Lambda 表达式中使用 Java11 开始允许开发者在 Lambda 表达式中使用 var 进行参数声明 其他特性 新的垃圾回收器 Epsilon，一个完全消极的 GC 实现，分配有限的内存资源，最大限度的降低内存占用和内存吞吐延迟时间 低开销的 Heap Profiling：Java 11 中提供一种低开销的 Java 堆分配采样方法，能够得到堆分配的 Java 对象信息，并且能够通过 JVMTI 访问堆信息 TLS1.3 协议：Java 11 中包含了传输层安全性（TLS）1.3 规范（RFC 8446）的实现，替换了之前版本中包含的 TLS，包括 TLS 1.2，同时还改进了其他 TLS 功能，例如 OCSP 装订扩展（RFC 6066，RFC 6961），以及会话散列和扩展主密钥扩展（RFC 7627），在安全性和性能方面也做了很多提升 飞行记录器：飞行记录器之前是商业版 JDK 的一项分析工具，但在 Java 11 中，其代码被包含到公开代码库中，这样所有人都能使用该功能了 Java12增强 Switch 传统的 switch 语法存在容易漏写 break 的问题，而且从代码整洁性层面来看，多个 break 本质也是一种重复 Java12 提供了 swtich 表达式，使用类似 lambda 语法条件匹配成功后的执行块，不需要多写 break 作为预览特性加入，需要在javac编译和java运行时增加参数--enable-preview switch (day) { case MONDAY, FRIDAY, SUNDAY -&gt; System.out.println(6); case TUESDAY -&gt; System.out.println(7); case THURSDAY, SATURDAY -&gt; System.out.println(8); case WEDNESDAY -&gt; System.out.println(9); } 数字格式化工具类 NumberFormat 新增了对复杂的数字进行格式化的支持 NumberFormat fmt = NumberFormat.getCompactNumberInstance(Locale.US, NumberFormat.Style.SHORT); String result = fmt.format(1000); System.out.println(result); // 输出为 1K，计算工资是多少K更方便了。。。 Shenandoah GC Redhat 主导开发的 Pauseless GC 实现，主要目标是 99.9% 的暂停小于 10ms，暂停与堆大小无关等 和 Java11 开源的 ZGC 相比（需要升级到 JDK11 才能使用），Shenandoah GC 有稳定的 JDK8u 版本，在 Java8 占据主要市场份额的今天有更大的可落地性 G1 收集器提升 Java12 为默认的垃圾收集器 G1 带来了两项更新: 可中止的混合收集集合：JEP344 的实现，为了达到用户提供的停顿时间目标，JEP 344 通过把要被回收的区域集（混合收集集合）拆分为强制和可选部分，使 G1 垃圾回收器能中止垃圾回收过程。 G1 可以中止可选部分的回收以达到停顿时间目标 及时返回未使用的已分配内存：JEP346 的实现，增强 G1 GC，以便在空闲时自动将 Java 堆内存返回给操作系统 Java13引入 yield 关键字到 Switch 中 Switch 表达式中就多了一个关键字用于跳出 Switch 块的关键字 yield，主要用于返回一个值 yield和 return 的区别在于：return 会直接跳出当前循环或者方法，而 yield 只会跳出当前 Switch 块，同时在使用 yield 时，需要有 default 条件 private static String descLanguage(String name) { return switch (name) { case &quot;Java&quot;: yield &quot;object-oriented, platform independent and secured&quot;; case &quot;Ruby&quot;: yield &quot;a programmer&#39;s best friend&quot;; default: yield name +&quot; is a good language&quot;; }; } 文本块 解决 Java 定义多行字符串时只能通过换行转义或者换行连接符来变通支持的问题，引入三重双引号来定义多行文本 两个&quot;&quot;&quot;中间的任何内容都会被解释为字符串的一部分，包括换行符 String json =&quot;{\n&quot; + &quot; \&quot;name\&quot;:\&quot;mkyong\&quot;,\n&quot; + &quot; \&quot;age\&quot;:38\n&quot; + &quot;}\n&quot;; // 未支持文本块之前 String json = &quot;&quot;&quot; { &quot;name&quot;:&quot;mkyong&quot;, &quot;age&quot;:38 } &quot;&quot;&quot;; 增强 ZGC 释放未使用内存 在 Java 11 中是实验性的引入的 ZGC 在实际的使用中存在未能主动将未使用的内存释放给操作系统的问题 ZGC 堆由一组称为 ZPages 的堆区域组成。在 GC 周期中清空 ZPages 区域时，它们将被释放并返回到页面缓存 ZPageCache 中，此缓存中的 ZPages 按最近最少使用（LRU）的顺序，并按照大小进行组织 在 Java 13 中，ZGC 将向操作系统返回被标识为长时间未使用的页面，这样它们将可以被其他进程重用 SocketAPI 重构 Java 13 为 Socket API 带来了新的底层实现方法，并且在 Java 13 中是默认使用新的 Socket 实现，使其易于发现并在排除问题同时增加可维护性 动态应用程序类-数据共享 Java 13 中对 Java 10 中引入的 应用程序类数据共享进行了进一步的简化、改进和扩展，即：允许在 Java 应用程序执行结束时动态进行类归档，具体能够被归档的类包括：所有已被加载，但不属于默认基层 CDS 的应用程序类和引用类库中的类 Java14record 关键字 简化数据类的定义方式，使用 record 代替 class 定义的类，只需要声明属性，就可以在获得属性的访问方法，以及 toString，hashCode,equals 方法 类似于使用 Class 定义类，同时使用了 lomobok 插件，并打上了@Getter,@ToString,@EqualsAndHashCode注解 作为预览特性引入 /** * 这个类具有两个特征 * 1. 所有成员属性都是final * 2. 全部方法由构造方法，和两个成员属性访问器组成（共三个） * 那么这种类就很适合使用record来声明 */ final class Rectangle implements Shape { final double length; final double width; public Rectangle(double length, double width) { this.length = length; this.width = width; } double length() { return length; } double width() { return width; } } /** * 1. 使用record声明的类会自动拥有上面类中的三个方法 * 2. 在这基础上还附赠了equals()，hashCode()方法以及toString()方法 * 3. toString方法中包括所有成员属性的字符串表示形式及其名称 */ record Rectangle(float length, float width) { } 空指针异常精准提示 通过 JVM 参数中添加-XX:+ShowCodeDetailsInExceptionMessages，可以在空指针异常中获取更为详细的调用信息，更快的定位和解决问题 a.b.c.i = 99; // 假设这段代码会发生空指针 Exception in thread &quot;main&quot; java.lang.NullPointerException: Cannot read field &#39;c&#39; because &#39;a.b&#39; is null. at Prog.main(Prog.java:5) // 增加参数后提示的异常中很明确的告知了哪里为空导致 switch 的增强终于转正 JDK12 引入的 switch（预览特性）在 JDK14 变为正式版本，不需要增加参数来启用，直接在 JDK14 中就能使用 主要是用-&gt;来替代以前的:+break；另外就是提供了 yield 来在 block 中返回值 Before Java 14 switch (day) { case MONDAY: case FRIDAY: case SUNDAY: System.out.println(6); break; case TUESDAY: System.out.println(7); break; case THURSDAY: case SATURDAY: System.out.println(8); break; case WEDNESDAY: System.out.println(9); break; } Java 14 enhancements switch (day) { case MONDAY, FRIDAY, SUNDAY -&gt; System.out.println(6); case TUESDAY -&gt; System.out.println(7); case THURSDAY, SATURDAY -&gt; System.out.println(8); case WEDNESDAY -&gt; System.out.println(9); } instanceof 增强 instanceof 主要在类型强转前探测对象的具体类型，然后执行具体的强转 新版的 instanceof 可以在判断的是否属于具体的类型同时完成转换 Object obj = &quot;我是字符串&quot;; if(obj instanceof String str){ System.out.println(str); } 其他特性 从 Java11 引入的 ZGC 作为继 G1 过后的下一代 GC 算法，从支持 Linux 平台到 Java14 开始支持 MacOS 和 Window（个人感觉是终于可以在日常开发工具中先体验下 ZGC 的效果了，虽然其实 G1 也够用） 移除了 CMS 垃圾收集器（功成而退） 新增了 jpackage 工具，标配将应用打成 jar 包外，还支持不同平台的特性包，比如 linux 下的deb和rpm，window 平台下的msi和exe 总结关于预览特性 先贴一段 oracle 官网原文：This is a preview feature, which is a feature whose design, specification, and implementation are complete, but is not permanent, which means that the feature may exist in a different form or not at all in future JDK releases. To compile and run code that contains preview features, you must specify additional command-line options. 这是一个预览功能，该功能的设计，规格和实现是完整的，但不是永久性的，这意味着该功能可能以其他形式存在或在将来的 JDK 版本中根本不存在。 要编译和运行包含预览功能的代码，必须指定其他命令行选项。 就以switch的增强为例子，从 Java12 中推出，到 Java13 中将继续增强，直到 Java14 才正式转正进入 JDK 可以放心使用，不用考虑后续 JDK 版本对其的改动或修改 一方面可以看出 JDK 作为标准平台在增加新特性的严谨态度，另一方面个人认为是对于预览特性应该采取审慎使用的态度。特性的设计和实现容易，但是其实际价值依然需要在使用中去验证 JVM 虚拟机优化 每次 Java 版本的发布都伴随着对 JVM 虚拟机的优化，包括对现有垃圾回收算法的改进，引入新的垃圾回收算法，移除老旧的不再适用于今天的垃圾回收算法等 整体优化的方向是高效，低时延的垃圾回收表现 对于日常的应用开发者可能比较关注新的语法特性，但是从一个公司角度来说，在考虑是否升级 Java 平台时更加考虑的是JVM 运行时的提升 参考信息 IBM Developer Java9 https://www.ibm.com/developerworks/cn/java/the-new-features-of-Java-9/ Guide to Java10 https://www.baeldung.com/java-10-overview Java 10 新特性介绍https://www.ibm.com/developerworks/cn/java/the-new-features-of-Java-10/index.html IBM Devloper Java11 https://www.ibm.com/developerworks/cn/java/the-new-features-of-Java-11/index.html Java 11 – Features and Comparison： https://www.geeksforgeeks.org/java-11-features-and-comparison/ Oracle Java12 ReleaseNote https://www.oracle.com/technetwork/java/javase/12all-relnotes-5211423.html#NewFeature Oracle Java13 ReleaseNote https://www.oracle.com/technetwork/java/javase/13all-relnotes-5461743.html#NewFeature New Java13 Features https://www.baeldung.com/java-13-new-features Java13 新特性概述 https://www.ibm.com/developerworks/cn/java/the-new-features-of-Java-13/index.html Oracle Java14 record https://docs.oracle.com/en/java/javase/14/language/records.html java14-features https://www.techgeeknext.com/java/java14-features]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java8新特性总结]]></title>
    <url>%2F2020%2F10%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2F07_java8%E6%96%B0%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[文章来自：https://github.com/Snailclimb/JavaGuide/edit/master/docs/java/new-features/Java8%E6%96%B0%E7%89%B9%E6%80%A7%E6%80%BB%E7%BB%93.md Github 上有一个相关的仓库，地址：https://github.com/winterbe/java8-tutorial。这个仓库是英文的，下面是中文了。 Java 8 Tutorial 接口的默认方法(Default Methods for Interfaces) Lambda表达式(Lambda expressions) 函数式接口(Functional Interfaces) 方法和构造函数引用(Method and Constructor References) Lamda 表达式作用域(Lambda Scopes) 访问局部变量 访问字段和静态变量 访问默认接口方法 内置函数式接口(Built-in Functional Interfaces) Predicate Function Supplier Consumer Comparator Optional Streams(流) Filter(过滤) Sorted(排序) Map(映射) Match(匹配) Count(计数) Reduce(规约) Parallel Streams(并行流) Sequential Sort(串行排序) Parallel Sort(并行排序) Maps Date API(日期相关API) Clock Timezones(时区) LocalTime(本地时间) LocalDate(本地日期) LocalDateTime(本地日期时间) Annotations(注解) Where to go from here? Java 8 Tutorial欢迎阅读我对Java 8的介绍。本教程将逐步指导您完成所有新语言功能。 在简短的代码示例的基础上，您将学习如何使用默认接口方法，lambda表达式，方法引用和可重复注释。 在本文的最后，您将熟悉最新的 API 更改，如流，函数式接口(Functional Interfaces)，Map 类的扩展和新的 Date API。 没有大段枯燥的文字，只有一堆注释的代码片段。 接口的默认方法(Default Methods for Interfaces)Java 8使我们能够通过使用 default 关键字向接口添加非抽象方法实现。 此功能也称为虚拟扩展方法。 第一个例子： interface Formula{ double calculate(int a); default double sqrt(int a) { return Math.sqrt(a); } } Formula 接口中除了抽象方法计算接口公式还定义了默认方法 sqrt。 实现该接口的类只需要实现抽象方法 calculate。 默认方法sqrt 可以直接使用。当然你也可以直接通过接口创建对象，然后实现接口中的默认方法就可以了，我们通过代码演示一下这种方式。 public class Main { public static void main(String[] args) { // 通过匿名内部类方式访问接口 Formula formula = new Formula() { @Override public double calculate(int a) { return sqrt(a * 100); } }; System.out.println(formula.calculate(100)); // 100.0 System.out.println(formula.sqrt(16)); // 4.0 } } formula 是作为匿名对象实现的。该代码非常容易理解，6行代码实现了计算 sqrt(a * 100)。在下一节中，我们将会看到在 Java 8 中实现单个方法对象有一种更好更方便的方法。 译者注： 不管是抽象类还是接口，都可以通过匿名内部类的方式访问。不能通过抽象类或者接口直接创建对象。对于上面通过匿名内部类方式访问接口，我们可以这样理解：一个内部类实现了接口里的抽象方法并且返回一个内部类对象，之后我们让接口的引用来指向这个对象。 Lambda表达式(Lambda expressions)首先看看在老版本的Java中是如何排列字符串的： List&lt;String&gt; names = Arrays.asList(&quot;peter&quot;, &quot;anna&quot;, &quot;mike&quot;, &quot;xenia&quot;); Collections.sort(names, new Comparator&lt;String&gt;() { @Override public int compare(String a, String b) { return b.compareTo(a); } }); 只需要给静态方法Collections.sort 传入一个 List 对象以及一个比较器来按指定顺序排列。通常做法都是创建一个匿名的比较器对象然后将其传递给 sort 方法。 在Java 8 中你就没必要使用这种传统的匿名对象的方式了，Java 8提供了更简洁的语法，lambda表达式： Collections.sort(names, (String a, String b) -&gt; { return b.compareTo(a); }); 可以看出，代码变得更段且更具有可读性，但是实际上还可以写得更短： Collections.sort(names, (String a, String b) -&gt; b.compareTo(a)); 对于函数体只有一行代码的，你可以去掉大括号{}以及return关键字，但是你还可以写得更短点： names.sort((a, b) -&gt; b.compareTo(a)); List 类本身就有一个 sort 方法。并且Java编译器可以自动推导出参数类型，所以你可以不用再写一次类型。接下来我们看看lambda表达式还有什么其他用法。 函数式接口(Functional Interfaces)译者注： 原文对这部分解释不太清楚，故做了修改！ Java 语言设计者们投入了大量精力来思考如何使现有的函数友好地支持Lambda。最终采取的方法是：增加函数式接口的概念。“函数式接口”是指仅仅只包含一个抽象方法,但是可以有多个非抽象方法(也就是上面提到的默认方法)的接口。 像这样的接口，可以被隐式转换为lambda表达式。java.lang.Runnable 与 java.util.concurrent.Callable 是函数式接口最典型的两个例子。Java 8增加了一种特殊的注解@FunctionalInterface,但是这个注解通常不是必须的(某些情况建议使用)，只要接口只包含一个抽象方法，虚拟机会自动判断该接口为函数式接口。一般建议在接口上使用@FunctionalInterface 注解进行声明，这样的话，编译器如果发现你标注了这个注解的接口有多于一个抽象方法的时候会报错的，如下图所示 示例： @FunctionalInterface public interface Converter&lt;F, T&gt; { T convert(F from); } // TODO 将数字字符串转换为整数类型 Converter&lt;String, Integer&gt; converter = (from) -&gt; Integer.valueOf(from); Integer converted = converter.convert(&quot;123&quot;); System.out.println(converted.getClass()); //class java.lang.Integer 译者注： 大部分函数式接口都不用我们自己写，Java8都给我们实现好了，这些接口都在java.util.function包里。 方法和构造函数引用(Method and Constructor References)前一节中的代码还可以通过静态方法引用来表示： Converter&lt;String, Integer&gt; converter = Integer::valueOf; Integer converted = converter.convert(&quot;123&quot;); System.out.println(converted.getClass()); //class java.lang.Integer Java 8允许您通过::关键字传递方法或构造函数的引用。 上面的示例显示了如何引用静态方法。 但我们也可以引用对象方法： class Something { String startsWith(String s) { return String.valueOf(s.charAt(0)); } } Something something = new Something(); Converter&lt;String, String&gt; converter = something::startsWith; String converted = converter.convert(&quot;Java&quot;); System.out.println(converted); // &quot;J&quot; 接下来看看构造函数是如何使用::关键字来引用的，首先我们定义一个包含多个构造函数的简单类： class Person { String firstName; String lastName; Person() {} Person(String firstName, String lastName) { this.firstName = firstName; this.lastName = lastName; } } 接下来我们指定一个用来创建Person对象的对象工厂接口： interface PersonFactory&lt;P extends Person&gt; { P create(String firstName, String lastName); } 这里我们使用构造函数引用来将他们关联起来，而不是手动实现一个完整的工厂： PersonFactory&lt;Person&gt; personFactory = Person::new; Person person = personFactory.create(&quot;Peter&quot;, &quot;Parker&quot;); 我们只需要使用 Person::new 来获取Person类构造函数的引用，Java编译器会自动根据PersonFactory.create方法的参数类型来选择合适的构造函数。 Lamda 表达式作用域(Lambda Scopes)访问局部变量我们可以直接在 lambda 表达式中访问外部的局部变量： final int num = 1; Converter&lt;Integer, String&gt; stringConverter = (from) -&gt; String.valueOf(from + num); stringConverter.convert(2); // 3 但是和匿名对象不同的是，这里的变量num可以不用声明为final，该代码同样正确： int num = 1; Converter&lt;Integer, String&gt; stringConverter = (from) -&gt; String.valueOf(from + num); stringConverter.convert(2); // 3 不过这里的 num 必须不可被后面的代码修改（即隐性的具有final的语义），例如下面的就无法编译： int num = 1; Converter&lt;Integer, String&gt; stringConverter = (from) -&gt; String.valueOf(from + num); num = 3;//在lambda表达式中试图修改num同样是不允许的。 访问字段和静态变量与局部变量相比，我们对lambda表达式中的实例字段和静态变量都有读写访问权限。 该行为和匿名对象是一致的。 class Lambda4 { static int outerStaticNum; int outerNum; void testScopes() { Converter&lt;Integer, String&gt; stringConverter1 = (from) -&gt; { outerNum = 23; return String.valueOf(from); }; Converter&lt;Integer, String&gt; stringConverter2 = (from) -&gt; { outerStaticNum = 72; return String.valueOf(from); }; } } 访问默认接口方法还记得第一节中的 formula 示例吗？ Formula 接口定义了一个默认方法sqrt，可以从包含匿名对象的每个 formula 实例访问该方法。 这不适用于lambda表达式。 无法从 lambda 表达式中访问默认方法,故以下代码无法编译： Formula formula = (a) -&gt; sqrt(a * 100); 内置函数式接口(Built-in Functional Interfaces)JDK 1.8 API包含许多内置函数式接口。 其中一些借口在老版本的 Java 中是比较常见的比如： Comparator 或Runnable，这些接口都增加了@FunctionalInterface注解以便能用在 lambda 表达式上。 但是 Java 8 API 同样还提供了很多全新的函数式接口来让你的编程工作更加方便，有一些接口是来自 Google Guava 库里的，即便你对这些很熟悉了，还是有必要看看这些是如何扩展到lambda上使用的。 PredicatePredicate 接口是只有一个参数的返回布尔类型值的 断言型 接口。该接口包含多种默认方法来将 Predicate 组合成其他复杂的逻辑（比如：与，或，非）： 译者注： Predicate 接口源码如下 package java.util.function; import java.util.Objects; @FunctionalInterface public interface Predicate&lt;T&gt; { // 该方法是接受一个传入类型,返回一个布尔值.此方法应用于判断. boolean test(T t); //and方法与关系型运算符&quot;&amp;&amp;&quot;相似，两边都成立才返回true default Predicate&lt;T&gt; and(Predicate&lt;? super T&gt; other) { Objects.requireNonNull(other); return (t) -&gt; test(t) &amp;&amp; other.test(t); } // 与关系运算符&quot;!&quot;相似，对判断进行取反 default Predicate&lt;T&gt; negate() { return (t) -&gt; !test(t); } //or方法与关系型运算符&quot;||&quot;相似，两边只要有一个成立就返回true default Predicate&lt;T&gt; or(Predicate&lt;? super T&gt; other) { Objects.requireNonNull(other); return (t) -&gt; test(t) || other.test(t); } // 该方法接收一个Object对象,返回一个Predicate类型.此方法用于判断第一个test的方法与第二个test方法相同(equal). static &lt;T&gt; Predicate&lt;T&gt; isEqual(Object targetRef) { return (null == targetRef) ? Objects::isNull : object -&gt; targetRef.equals(object); } 示例： Predicate&lt;String&gt; predicate = (s) -&gt; s.length() &gt; 0; predicate.test(&quot;foo&quot;); // true predicate.negate().test(&quot;foo&quot;); // false Predicate&lt;Boolean&gt; nonNull = Objects::nonNull; Predicate&lt;Boolean&gt; isNull = Objects::isNull; Predicate&lt;String&gt; isEmpty = String::isEmpty; Predicate&lt;String&gt; isNotEmpty = isEmpty.negate(); FunctionFunction 接口接受一个参数并生成结果。默认方法可用于将多个函数链接在一起（compose, andThen）： 译者注： Function 接口源码如下 package java.util.function; import java.util.Objects; @FunctionalInterface public interface Function&lt;T, R&gt; { //将Function对象应用到输入的参数上，然后返回计算结果。 R apply(T t); //将两个Function整合，并返回一个能够执行两个Function对象功能的Function对象。 default &lt;V&gt; Function&lt;V, R&gt; compose(Function&lt;? super V, ? extends T&gt; before) { Objects.requireNonNull(before); return (V v) -&gt; apply(before.apply(v)); } // default &lt;V&gt; Function&lt;T, V&gt; andThen(Function&lt;? super R, ? extends V&gt; after) { Objects.requireNonNull(after); return (T t) -&gt; after.apply(apply(t)); } static &lt;T&gt; Function&lt;T, T&gt; identity() { return t -&gt; t; } } Function&lt;String, Integer&gt; toInteger = Integer::valueOf; Function&lt;String, String&gt; backToString = toInteger.andThen(String::valueOf); backToString.apply(&quot;123&quot;); // &quot;123&quot; SupplierSupplier 接口产生给定泛型类型的结果。 与 Function 接口不同，Supplier 接口不接受参数。 Supplier&lt;Person&gt; personSupplier = Person::new; personSupplier.get(); // new Person ConsumerConsumer 接口表示要对单个输入参数执行的操作。 Consumer&lt;Person&gt; greeter = (p) -&gt; System.out.println(&quot;Hello, &quot; + p.firstName); greeter.accept(new Person(&quot;Luke&quot;, &quot;Skywalker&quot;)); ComparatorComparator 是老Java中的经典接口， Java 8在此之上添加了多种默认方法： Comparator&lt;Person&gt; comparator = (p1, p2) -&gt; p1.firstName.compareTo(p2.firstName); Person p1 = new Person(&quot;John&quot;, &quot;Doe&quot;); Person p2 = new Person(&quot;Alice&quot;, &quot;Wonderland&quot;); comparator.compare(p1, p2); // &gt; 0 comparator.reversed().compare(p1, p2); // &lt; 0 OptionalOptional不是函数式接口，而是用于防止 NullPointerException 的漂亮工具。这是下一节的一个重要概念，让我们快速了解一下Optional的工作原理。 Optional 是一个简单的容器，其值可能是null或者不是null。在Java 8之前一般某个函数应该返回非空对象但是有时却什么也没有返回，而在Java 8中，你应该返回 Optional 而不是 null。 译者注：示例中每个方法的作用已经添加。 //of（）：为非null的值创建一个Optional Optional&lt;String&gt; optional = Optional.of(&quot;bam&quot;); // isPresent（）： 如果值存在返回true，否则返回false optional.isPresent(); // true //get()：如果Optional有值则将其返回，否则抛出NoSuchElementException optional.get(); // &quot;bam&quot; //orElse（）：如果有值则将其返回，否则返回指定的其它值 optional.orElse(&quot;fallback&quot;); // &quot;bam&quot; //ifPresent（）：如果Optional实例有值则为其调用consumer，否则不做处理 optional.ifPresent((s) -&gt; System.out.println(s.charAt(0))); // &quot;b&quot; 推荐阅读：[Java8]如何正确使用Optional Streams(流)java.util.Stream 表示能应用在一组元素上一次执行的操作序列。Stream 操作分为中间操作或者最终操作两种，最终操作返回一特定类型的计算结果，而中间操作返回Stream本身，这样你就可以将多个操作依次串起来。Stream 的创建需要指定一个数据源，比如java.util.Collection 的子类，List 或者 Set， Map 不支持。Stream 的操作可以串行执行或者并行执行。 首先看看Stream是怎么用，首先创建实例代码的用到的数据List： List&lt;String&gt; stringList = new ArrayList&lt;&gt;(); stringList.add(&quot;ddd2&quot;); stringList.add(&quot;aaa2&quot;); stringList.add(&quot;bbb1&quot;); stringList.add(&quot;aaa1&quot;); stringList.add(&quot;bbb3&quot;); stringList.add(&quot;ccc&quot;); stringList.add(&quot;bbb2&quot;); stringList.add(&quot;ddd1&quot;); Java 8扩展了集合类，可以通过 Collection.stream() 或者 Collection.parallelStream() 来创建一个Stream。下面几节将详细解释常用的Stream操作： Filter(过滤)过滤通过一个predicate接口来过滤并只保留符合条件的元素，该操作属于中间操作，所以我们可以在过滤后的结果来应用其他Stream操作（比如forEach）。forEach需要一个函数来对过滤后的元素依次执行。forEach是一个最终操作，所以我们不能在forEach之后来执行其他Stream操作。 // 测试 Filter(过滤) stringList .stream() .filter((s) -&gt; s.startsWith(&quot;a&quot;)) .forEach(System.out::println);//aaa2 aaa1 forEach 是为 Lambda 而设计的，保持了最紧凑的风格。而且 Lambda 表达式本身是可以重用的，非常方便。 Sorted(排序)排序是一个 中间操作，返回的是排序好后的 Stream。如果你不指定一个自定义的 Comparator 则会使用默认排序。 // 测试 Sort (排序) stringList .stream() .sorted() .filter((s) -&gt; s.startsWith(&quot;a&quot;)) .forEach(System.out::println);// aaa1 aaa2 需要注意的是，排序只创建了一个排列好后的Stream，而不会影响原有的数据源，排序之后原数据stringCollection是不会被修改的： System.out.println(stringList);// ddd2, aaa2, bbb1, aaa1, bbb3, ccc, bbb2, ddd1 Map(映射)中间操作 map 会将元素根据指定的 Function 接口来依次将元素转成另外的对象。 下面的示例展示了将字符串转换为大写字符串。你也可以通过map来将对象转换成其他类型，map返回的Stream类型是根据你map传递进去的函数的返回值决定的。 // 测试 Map 操作 stringList .stream() .map(String::toUpperCase) .sorted((a, b) -&gt; b.compareTo(a)) .forEach(System.out::println);// &quot;DDD2&quot;, &quot;DDD1&quot;, &quot;CCC&quot;, &quot;BBB3&quot;, &quot;BBB2&quot;, &quot;AAA2&quot;, &quot;AAA1&quot; Match(匹配)Stream提供了多种匹配操作，允许检测指定的Predicate是否匹配整个Stream。所有的匹配操作都是 最终操作 ，并返回一个 boolean 类型的值。 // 测试 Match (匹配)操作 boolean anyStartsWithA = stringList .stream() .anyMatch((s) -&gt; s.startsWith(&quot;a&quot;)); System.out.println(anyStartsWithA); // true boolean allStartsWithA = stringList .stream() .allMatch((s) -&gt; s.startsWith(&quot;a&quot;)); System.out.println(allStartsWithA); // false boolean noneStartsWithZ = stringList .stream() .noneMatch((s) -&gt; s.startsWith(&quot;z&quot;)); System.out.println(noneStartsWithZ); // true Count(计数)计数是一个 最终操作，返回Stream中元素的个数，返回值类型是 long。 //测试 Count (计数)操作 long startsWithB = stringList .stream() .filter((s) -&gt; s.startsWith(&quot;b&quot;)) .count(); System.out.println(startsWithB); // 3 Reduce(规约)这是一个 最终操作 ，允许通过指定的函数来讲stream中的多个元素规约为一个元素，规约后的结果是通过Optional 接口表示的： //测试 Reduce (规约)操作 Optional&lt;String&gt; reduced = stringList .stream() .sorted() .reduce((s1, s2) -&gt; s1 + &quot;#&quot; + s2); reduced.ifPresent(System.out::println);//aaa1#aaa2#bbb1#bbb2#bbb3#ccc#ddd1#ddd2 译者注： 这个方法的主要作用是把 Stream 元素组合起来。它提供一个起始值（种子），然后依照运算规则（BinaryOperator），和前面 Stream 的第一个、第二个、第 n 个元素组合。从这个意义上说，字符串拼接、数值的 sum、min、max、average 都是特殊的 reduce。例如 Stream 的 sum 就相当于Integer sum = integers.reduce(0, (a, b) -&gt; a+b);也有没有起始值的情况，这时会把 Stream 的前面两个元素组合起来，返回的是 Optional。 // 字符串连接，concat = &quot;ABCD&quot; String concat = Stream.of(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;).reduce(&quot;&quot;, String::concat); // 求最小值，minValue = -3.0 double minValue = Stream.of(-1.5, 1.0, -3.0, -2.0).reduce(Double.MAX_VALUE, Double::min); // 求和，sumValue = 10, 有起始值 int sumValue = Stream.of(1, 2, 3, 4).reduce(0, Integer::sum); // 求和，sumValue = 10, 无起始值 sumValue = Stream.of(1, 2, 3, 4).reduce(Integer::sum).get(); // 过滤，字符串连接，concat = &quot;ace&quot; concat = Stream.of(&quot;a&quot;, &quot;B&quot;, &quot;c&quot;, &quot;D&quot;, &quot;e&quot;, &quot;F&quot;). filter(x -&gt; x.compareTo(&quot;Z&quot;) &gt; 0). reduce(&quot;&quot;, String::concat); 上面代码例如第一个示例的 reduce()，第一个参数（空白字符）即为起始值，第二个参数（String::concat）为 BinaryOperator。这类有起始值的 reduce() 都返回具体的对象。而对于第四个示例没有起始值的 reduce()，由于可能没有足够的元素，返回的是 Optional，请留意这个区别。更多内容查看： IBM：Java 8 中的 Streams API 详解 Parallel Streams(并行流)前面提到过Stream有串行和并行两种，串行Stream上的操作是在一个线程中依次完成，而并行Stream则是在多个线程上同时执行。 下面的例子展示了是如何通过并行Stream来提升性能： 首先我们创建一个没有重复元素的大表： int max = 1000000; List&lt;String&gt; values = new ArrayList&lt;&gt;(max); for (int i = 0; i &lt; max; i++) { UUID uuid = UUID.randomUUID(); values.add(uuid.toString()); } 我们分别用串行和并行两种方式对其进行排序，最后看看所用时间的对比。 Sequential Sort(串行排序)//串行排序 long t0 = System.nanoTime(); long count = values.stream().sorted().count(); System.out.println(count); long t1 = System.nanoTime(); long millis = TimeUnit.NANOSECONDS.toMillis(t1 - t0); System.out.println(String.format(&quot;sequential sort took: %d ms&quot;, millis)); 1000000 sequential sort took: 709 ms//串行排序所用的时间 Parallel Sort(并行排序)//并行排序 long t0 = System.nanoTime(); long count = values.parallelStream().sorted().count(); System.out.println(count); long t1 = System.nanoTime(); long millis = TimeUnit.NANOSECONDS.toMillis(t1 - t0); System.out.println(String.format(&quot;parallel sort took: %d ms&quot;, millis)); 1000000 parallel sort took: 475 ms//串行排序所用的时间 上面两个代码几乎是一样的，但是并行版的快了 50% 左右，唯一需要做的改动就是将 stream() 改为parallelStream()。 Maps前面提到过，Map 类型不支持 streams，不过Map提供了一些新的有用的方法来处理一些日常任务。Map接口本身没有可用的 stream（）方法，但是你可以在键，值上创建专门的流或者通过 map.keySet().stream(),map.values().stream()和map.entrySet().stream()。 此外,Maps 支持各种新的和有用的方法来执行常见任务。 Map&lt;Integer, String&gt; map = new HashMap&lt;&gt;(); for (int i = 0; i &lt; 10; i++) { map.putIfAbsent(i, &quot;val&quot; + i); } map.forEach((id, val) -&gt; System.out.println(val));//val0 val1 val2 val3 val4 val5 val6 val7 val8 val9 putIfAbsent 阻止我们在null检查时写入额外的代码;forEach接受一个 consumer 来对 map 中的每个元素操作。 此示例显示如何使用函数在 map 上计算代码： map.computeIfPresent(3, (num, val) -&gt; val + num); map.get(3); // val33 map.computeIfPresent(9, (num, val) -&gt; null); map.containsKey(9); // false map.computeIfAbsent(23, num -&gt; &quot;val&quot; + num); map.containsKey(23); // true map.computeIfAbsent(3, num -&gt; &quot;bam&quot;); map.get(3); // val33 接下来展示如何在Map里删除一个键值全都匹配的项： map.remove(3, &quot;val3&quot;); map.get(3); // val33 map.remove(3, &quot;val33&quot;); map.get(3); // null 另外一个有用的方法： map.getOrDefault(42, &quot;not found&quot;); // not found 对Map的元素做合并也变得很容易了： map.merge(9, &quot;val9&quot;, (value, newValue) -&gt; value.concat(newValue)); map.get(9); // val9 map.merge(9, &quot;concat&quot;, (value, newValue) -&gt; value.concat(newValue)); map.get(9); // val9concat Merge 做的事情是如果键名不存在则插入，否则则对原键对应的值做合并操作并重新插入到map中。 Date API(日期相关API)Java 8在 java.time 包下包含一个全新的日期和时间API。新的Date API与Joda-Time库相似，但它们不一样。以下示例涵盖了此新 API 的最重要部分。译者对这部分内容参考相关书籍做了大部分修改。 译者注(总结)： Clock 类提供了访问当前日期和时间的方法，Clock 是时区敏感的，可以用来取代 System.currentTimeMillis() 来获取当前的微秒数。某一个特定的时间点也可以使用 Instant 类来表示，Instant 类也可以用来创建旧版本的java.util.Date 对象。 在新API中时区使用 ZoneId 来表示。时区可以很方便的使用静态方法of来获取到。 抽象类ZoneId（在java.time包中）表示一个区域标识符。 它有一个名为getAvailableZoneIds的静态方法，它返回所有区域标识符。 jdk1.8中新增了 LocalDate 与 LocalDateTime等类来解决日期处理方法，同时引入了一个新的类DateTimeFormatter 来解决日期格式化问题。可以使用Instant代替 Date，LocalDateTime代替 Calendar，DateTimeFormatter 代替 SimpleDateFormat。 ClockClock 类提供了访问当前日期和时间的方法，Clock 是时区敏感的，可以用来取代 System.currentTimeMillis() 来获取当前的微秒数。某一个特定的时间点也可以使用 Instant 类来表示，Instant 类也可以用来创建旧版本的java.util.Date 对象。 Clock clock = Clock.systemDefaultZone(); long millis = clock.millis(); System.out.println(millis);//1552379579043 Instant instant = clock.instant(); System.out.println(instant); Date legacyDate = Date.from(instant); //2019-03-12T08:46:42.588Z System.out.println(legacyDate);//Tue Mar 12 16:32:59 CST 2019 Timezones(时区)在新API中时区使用 ZoneId 来表示。时区可以很方便的使用静态方法of来获取到。 抽象类ZoneId（在java.time包中）表示一个区域标识符。 它有一个名为getAvailableZoneIds的静态方法，它返回所有区域标识符。 //输出所有区域标识符 System.out.println(ZoneId.getAvailableZoneIds()); ZoneId zone1 = ZoneId.of(&quot;Europe/Berlin&quot;); ZoneId zone2 = ZoneId.of(&quot;Brazil/East&quot;); System.out.println(zone1.getRules());// ZoneRules[currentStandardOffset=+01:00] System.out.println(zone2.getRules());// ZoneRules[currentStandardOffset=-03:00] LocalTime(本地时间)LocalTime 定义了一个没有时区信息的时间，例如 晚上10点或者 17:30:15。下面的例子使用前面代码创建的时区创建了两个本地时间。之后比较时间并以小时和分钟为单位计算两个时间的时间差： LocalTime now1 = LocalTime.now(zone1); LocalTime now2 = LocalTime.now(zone2); System.out.println(now1.isBefore(now2)); // false long hoursBetween = ChronoUnit.HOURS.between(now1, now2); long minutesBetween = ChronoUnit.MINUTES.between(now1, now2); System.out.println(hoursBetween); // -3 System.out.println(minutesBetween); // -239 LocalTime 提供了多种工厂方法来简化对象的创建，包括解析时间字符串. LocalTime late = LocalTime.of(23, 59, 59); System.out.println(late); // 23:59:59 DateTimeFormatter germanFormatter = DateTimeFormatter .ofLocalizedTime(FormatStyle.SHORT) .withLocale(Locale.GERMAN); LocalTime leetTime = LocalTime.parse(&quot;13:37&quot;, germanFormatter); System.out.println(leetTime); // 13:37 LocalDate(本地日期)LocalDate 表示了一个确切的日期，比如 2014-03-11。该对象值是不可变的，用起来和LocalTime基本一致。下面的例子展示了如何给Date对象加减天/月/年。另外要注意的是这些对象是不可变的，操作返回的总是一个新实例。 LocalDate today = LocalDate.now();//获取现在的日期 System.out.println(&quot;今天的日期: &quot;+today);//2019-03-12 LocalDate tomorrow = today.plus(1, ChronoUnit.DAYS); System.out.println(&quot;明天的日期: &quot;+tomorrow);//2019-03-13 LocalDate yesterday = tomorrow.minusDays(2); System.out.println(&quot;昨天的日期: &quot;+yesterday);//2019-03-11 LocalDate independenceDay = LocalDate.of(2019, Month.MARCH, 12); DayOfWeek dayOfWeek = independenceDay.getDayOfWeek(); System.out.println(&quot;今天是周几:&quot;+dayOfWeek);//TUESDAY 从字符串解析一个 LocalDate 类型和解析 LocalTime 一样简单,下面是使用 DateTimeFormatter 解析字符串的例子： String str1 = &quot;2014==04==12 01时06分09秒&quot;; // 根据需要解析的日期、时间字符串定义解析所用的格式器 DateTimeFormatter fomatter1 = DateTimeFormatter .ofPattern(&quot;yyyy==MM==dd HH时mm分ss秒&quot;); LocalDateTime dt1 = LocalDateTime.parse(str1, fomatter1); System.out.println(dt1); // 输出 2014-04-12T01:06:09 String str2 = &quot;2014$$$四月$$$13 20小时&quot;; DateTimeFormatter fomatter2 = DateTimeFormatter .ofPattern(&quot;yyy$$$MMM$$$dd HH小时&quot;); LocalDateTime dt2 = LocalDateTime.parse(str2, fomatter2); System.out.println(dt2); // 输出 2014-04-13T20:00 再来看一个使用 DateTimeFormatter 格式化日期的示例 LocalDateTime rightNow=LocalDateTime.now(); String date=DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(rightNow); System.out.println(date);//2019-03-12T16:26:48.29 DateTimeFormatter formatter=DateTimeFormatter.ofPattern(&quot;YYYY-MM-dd HH:mm:ss&quot;); System.out.println(formatter.format(rightNow));//2019-03-12 16:26:48 LocalDateTime(本地日期时间)LocalDateTime 同时表示了时间和日期，相当于前两节内容合并到一个对象上了。LocalDateTime 和 LocalTime还有 LocalDate 一样，都是不可变的。LocalDateTime 提供了一些能访问具体字段的方法。 LocalDateTime sylvester = LocalDateTime.of(2014, Month.DECEMBER, 31, 23, 59, 59); DayOfWeek dayOfWeek = sylvester.getDayOfWeek(); System.out.println(dayOfWeek); // WEDNESDAY Month month = sylvester.getMonth(); System.out.println(month); // DECEMBER long minuteOfDay = sylvester.getLong(ChronoField.MINUTE_OF_DAY); System.out.println(minuteOfDay); // 1439 只要附加上时区信息，就可以将其转换为一个时间点Instant对象，Instant时间点对象可以很容易的转换为老式的java.util.Date。 Instant instant = sylvester .atZone(ZoneId.systemDefault()) .toInstant(); Date legacyDate = Date.from(instant); System.out.println(legacyDate); // Wed Dec 31 23:59:59 CET 2014 格式化LocalDateTime和格式化时间和日期一样的，除了使用预定义好的格式外，我们也可以自己定义格式： DateTimeFormatter formatter = DateTimeFormatter .ofPattern(&quot;MMM dd, yyyy - HH:mm&quot;); LocalDateTime parsed = LocalDateTime.parse(&quot;Nov 03, 2014 - 07:13&quot;, formatter); String string = formatter.format(parsed); System.out.println(string); // Nov 03, 2014 - 07:13 和java.text.NumberFormat不一样的是新版的DateTimeFormatter是不可变的，所以它是线程安全的。关于时间日期格式的详细信息在这里。 Annotations(注解)在Java 8中支持多重注解了，先看个例子来理解一下是什么意思。首先定义一个包装类Hints注解用来放置一组具体的Hint注解： @interface Hints { Hint[] value(); } @Repeatable(Hints.class) @interface Hint { String value(); } Java 8允许我们把同一个类型的注解使用多次，只需要给该注解标注一下@Repeatable即可。 例 1: 使用包装类当容器来存多个注解（老方法） @Hints({@Hint(&quot;hint1&quot;), @Hint(&quot;hint2&quot;)}) class Person {} 例 2：使用多重注解（新方法） @Hint(&quot;hint1&quot;) @Hint(&quot;hint2&quot;) class Person {} 第二个例子里java编译器会隐性的帮你定义好@Hints注解，了解这一点有助于你用反射来获取这些信息： Hint hint = Person.class.getAnnotation(Hint.class); System.out.println(hint); // null Hints hints1 = Person.class.getAnnotation(Hints.class); System.out.println(hints1.value().length); // 2 Hint[] hints2 = Person.class.getAnnotationsByType(Hint.class); System.out.println(hints2.length); // 2 即便我们没有在 Person类上定义 @Hints注解，我们还是可以通过 getAnnotation(Hints.class)来获取 @Hints注解，更加方便的方法是使用 getAnnotationsByType 可以直接获取到所有的@Hint注解。另外Java 8的注解还增加到两种新的target上了： @Target({ElementType.TYPE_PARAMETER, ElementType.TYPE_USE}) @interface MyAnnotation {} Where to go from here?关于Java 8的新特性就写到这了，肯定还有更多的特性等待发掘。JDK 1.8里还有很多很有用的东西，比如Arrays.parallelSort, StampedLock和CompletableFuture等等。]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三种加密方式 sha1加密、MD5加密、Base64加密]]></title>
    <url>%2F2020%2F09%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2F%E4%B8%89%E7%A7%8D%E5%8A%A0%E5%AF%86%E6%96%B9%E5%BC%8F%20sha1%E5%8A%A0%E5%AF%86%E3%80%81MD5%E5%8A%A0%E5%AF%86%E3%80%81Base64%E5%8A%A0%E5%AF%86%2F</url>
    <content type="text"><![CDATA[js的加密没特别多的办法，常见的就三种， MD5加密、Base64加密和sha1加密 一. sha1加密 H5源码： &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;shal加密&lt;/title&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;script src=&quot;js/jquery.min.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script src=&quot;js/shal.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=&quot;password&quot; name=&quot;&quot; id=&quot;md5&quot; value=&quot;&quot; /&gt; &lt;input type=&quot;button&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;hex_sha1加密&quot; οnclick=&quot;testshal(1)&quot; /&gt; &lt;input type=&quot;button&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;b64_sha1加密&quot; οnclick=&quot;testshal(2)&quot; /&gt; &lt;input type=&quot;button&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;str_sha1加密&quot; οnclick=&quot;testshal(3)&quot; /&gt; &lt;/body&gt; &lt;script type=&quot;text/javascript&quot;&gt; function testshal(e){ var password = $(&quot;#md5&quot;).val(); console.log(&quot;没有加密之前的是：&quot;+password); if(e == 1){ var shalpassword = hex_sha1(password); console.log(&quot;hex_sha1方式加密后是：&quot;+shalpassword); } else if(e == 2){ var shalpassword = b64_sha1(password); console.log(&quot;b64_sha1方式加密后是：&quot;+shalpassword); } else if(e == 3){ var shalpassword = str_sha1(password); console.log(&quot;str_sha1方式加密后是：&quot;+shalpassword); } } &lt;/script&gt; &lt;/html&gt; js源码： var hexcase = 0; /* 十六进制输出格式。0 -小写；1 -大写 */ var b64pad = &quot;&quot;; /* base- 64填充字符。“=”表示严格的RFC合规性 */ var chrsz = 8; /* 每个输入字符的位数。8 - ASCII；16 -统一码 */ function hex_sha1(s) { return binb2hex(core_sha1(str2binb(s), s.length * chrsz)); } function b64_sha1(s) { return binb2b64(core_sha1(str2binb(s), s.length * chrsz)); } function str_sha1(s) { return binb2str(core_sha1(str2binb(s), s.length * chrsz)); } function hex_hmac_sha1(key, data) { return binb2hex(core_hmac_sha1(key, data)); } function b64_hmac_sha1(key, data) { return binb2b64(core_hmac_sha1(key, data)); } function str_hmac_sha1(key, data) { return binb2str(core_hmac_sha1(key, data)); } function sha1_vm_test() { return hex_sha1(&quot;abc&quot;) == &quot;a9993e364706816aba3e25717850c26c9cd0d89d&quot;; } function core_sha1(x, len) { x[len &gt;&gt; 5] |= 0x80 &lt;&lt; (24 - len % 32); x[((len + 64 &gt;&gt; 9) &lt;&lt; 4) + 15] = len; var w = Array(80); var a = 1732584193; var b = -271733879; var c = -1732584194; var d = 271733878; var e = -1009589776; for (var i = 0; i &lt; x.length; i += 16) { var olda = a; var oldb = b; var oldc = c; var oldd = d; var olde = e; for (var j = 0; j &lt; 80; j++) { if (j &lt; 16) w[j] = x[i + j]; else w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1); var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)), safe_add(safe_add(e, w[j]), sha1_kt(j))); e = d; d = c; c = rol(b, 30); b = a; a = t; } a = safe_add(a, olda); b = safe_add(b, oldb); c = safe_add(c, oldc); d = safe_add(d, oldd); e = safe_add(e, olde); } return Array(a, b, c, d, e); } function sha1_ft(t, b, c, d) { if (t &lt; 20) return (b &amp; c) | ((~b) &amp; d); if (t &lt; 40) return b ^ c ^ d; if (t &lt; 60) return (b &amp; c) | (b &amp; d) | (c &amp; d); return b ^ c ^ d; } function sha1_kt(t) { return (t &lt; 20) ? 1518500249 : (t &lt; 40) ? 1859775393 : (t &lt; 60) ? -1894007588 : -899497514; } function core_hmac_sha1(key, data) { var bkey = str2binb(key); if (bkey.length &gt; 16) bkey = core_sha1(bkey, key.length * chrsz); var ipad = Array(16), opad = Array(16); for (var i = 0; i &lt; 16; i++) { ipad[i] = bkey[i] ^ 0x36363636; opad[i] = bkey[i] ^ 0x5C5C5C5C; } var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * chrsz); return core_sha1(opad.concat(hash), 512 + 160); } function safe_add(x, y) { var lsw = (x &amp; 0xFFFF) + (y &amp; 0xFFFF); var msw = (x &gt;&gt; 16) + (y &gt;&gt; 16) + (lsw &gt;&gt; 16); return (msw &lt;&lt; 16) | (lsw &amp; 0xFFFF); } function rol(num, cnt) { return (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (32 - cnt)); } function str2binb(str) { var bin = Array(); var mask = (1 &lt;&lt; chrsz) - 1; for (var i = 0; i &lt; str.length * chrsz; i += chrsz) bin[i &gt;&gt; 5] |= (str.charCodeAt(i / chrsz) &amp; mask) &lt;&lt; (24 - i % 32); return bin; } function binb2str(bin) { var str = &quot;&quot;; var mask = (1 &lt;&lt; chrsz) - 1; for (var i = 0; i &lt; bin.length * 32; i += chrsz) str += String.fromCharCode((bin[i &gt;&gt; 5] &gt;&gt;&gt; (24 - i % 32)) &amp; mask); return str; } function binb2hex(binarray) { var hex_tab = hexcase ? &quot;0123456789ABCDEF&quot; : &quot;0123456789abcdef&quot;; var str = &quot;&quot;; for (var i = 0; i &lt; binarray.length * 4; i++) { str += hex_tab.charAt((binarray[i &gt;&gt; 2] &gt;&gt; ((3 - i % 4) * 8 + 4)) &amp; 0xF) + hex_tab.charAt((binarray[i &gt;&gt; 2] &gt;&gt; ((3 - i % 4) * 8)) &amp; 0xF); } return str; } function binb2b64(binarray) { var tab = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;; var str = &quot;&quot;; for (var i = 0; i &lt; binarray.length * 4; i += 3) { var triplet = (((binarray[i &gt;&gt; 2] &gt;&gt; 8 * (3 - i % 4)) &amp; 0xFF) &lt;&lt; 16) | (((binarray[i + 1 &gt;&gt; 2] &gt;&gt; 8 * (3 - (i + 1) % 4)) &amp; 0xFF) &lt;&lt; 8) | ((binarray[i + 2 &gt;&gt; 2] &gt;&gt; 8 * (3 - (i + 2) % 4)) &amp; 0xFF); for (var j = 0; j &lt; 4; j++) { if (i * 8 + j * 6 &gt; binarray.length * 32) str += b64pad; else str += tab.charAt((triplet &gt;&gt; 6 * (3 - j)) &amp; 0x3F); } } return str; } 二. MD5加密 H5源码： &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;md5加密&lt;/title&gt; &lt;script src=&quot;js/jquery.min.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script src=&quot;js/md5.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=&quot;password&quot; name=&quot;&quot; id=&quot;md5&quot; value=&quot;&quot; /&gt; &lt;input type=&quot;button&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;MD5加密&quot; οnclick=&quot;testmd5()&quot; /&gt; &lt;/body&gt; &lt;script type=&quot;text/javascript&quot;&gt; function testmd5(){ var password = $(&quot;#md5&quot;).val(); var md5password = $.md5(password); console.log(&quot;没有加密之前的是：&quot;+password); console.log(&quot;加密以后是：&quot;+md5password); } &lt;/script&gt; &lt;/html&gt; js源码 (function($){ var rotateLeft = function(lValue, iShiftBits) { return (lValue &lt;&lt; iShiftBits) | (lValue &gt;&gt;&gt; (32 - iShiftBits)); } var addUnsigned = function(lX, lY) { var lX4, lY4, lX8, lY8, lResult; lX8 = (lX &amp; 0x80000000); lY8 = (lY &amp; 0x80000000); lX4 = (lX &amp; 0x40000000); lY4 = (lY &amp; 0x40000000); lResult = (lX &amp; 0x3FFFFFFF) + (lY &amp; 0x3FFFFFFF); if (lX4 &amp; lY4) return (lResult ^ 0x80000000 ^ lX8 ^ lY8); if (lX4 | lY4) { if (lResult &amp; 0x40000000) return (lResult ^ 0xC0000000 ^ lX8 ^ lY8); else return (lResult ^ 0x40000000 ^ lX8 ^ lY8); } else { return (lResult ^ lX8 ^ lY8); } } var F = function(x, y, z) { return (x &amp; y) | ((~ x) &amp; z); } var G = function(x, y, z) { return (x &amp; z) | (y &amp; (~ z)); } var H = function(x, y, z) { return (x ^ y ^ z); } var I = function(x, y, z) { return (y ^ (x | (~ z))); } var FF = function(a, b, c, d, x, s, ac) { a = addUnsigned(a, addUnsigned(addUnsigned(F(b, c, d), x), ac)); return addUnsigned(rotateLeft(a, s), b); }; var GG = function(a, b, c, d, x, s, ac) { a = addUnsigned(a, addUnsigned(addUnsigned(G(b, c, d), x), ac)); return addUnsigned(rotateLeft(a, s), b); }; var HH = function(a, b, c, d, x, s, ac) { a = addUnsigned(a, addUnsigned(addUnsigned(H(b, c, d), x), ac)); return addUnsigned(rotateLeft(a, s), b); }; var II = function(a, b, c, d, x, s, ac) { a = addUnsigned(a, addUnsigned(addUnsigned(I(b, c, d), x), ac)); return addUnsigned(rotateLeft(a, s), b); }; var convertToWordArray = function(string) { var lWordCount; var lMessageLength = string.length; var lNumberOfWordsTempOne = lMessageLength + 8; var lNumberOfWordsTempTwo = (lNumberOfWordsTempOne - (lNumberOfWordsTempOne % 64)) / 64; var lNumberOfWords = (lNumberOfWordsTempTwo + 1) * 16; var lWordArray = Array(lNumberOfWords - 1); var lBytePosition = 0; var lByteCount = 0; while (lByteCount &lt; lMessageLength) { lWordCount = (lByteCount - (lByteCount % 4)) / 4; lBytePosition = (lByteCount % 4) * 8; lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount) &lt;&lt; lBytePosition)); lByteCount++; } lWordCount = (lByteCount - (lByteCount % 4)) / 4; lBytePosition = (lByteCount % 4) * 8; lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 &lt;&lt; lBytePosition); lWordArray[lNumberOfWords - 2] = lMessageLength &lt;&lt; 3; lWordArray[lNumberOfWords - 1] = lMessageLength &gt;&gt;&gt; 29; return lWordArray; }; var wordToHex = function(lValue) { var WordToHexValue = &quot;&quot;, WordToHexValueTemp = &quot;&quot;, lByte, lCount; for (lCount = 0; lCount &lt;= 3; lCount++) { lByte = (lValue &gt;&gt;&gt; (lCount * 8)) &amp; 255; WordToHexValueTemp = &quot;0&quot; + lByte.toString(16); WordToHexValue = WordToHexValue + WordToHexValueTemp.substr(WordToHexValueTemp.length - 2, 2); } return WordToHexValue; }; var uTF8Encode = function(string) { string = string.replace(/\x0d\x0a/g, &quot;\x0a&quot;); var output = &quot;&quot;; for (var n = 0; n &lt; string.length; n++) { var c = string.charCodeAt(n); if (c &lt; 128) { output += String.fromCharCode(c); } else if ((c &gt; 127) &amp;&amp; (c &lt; 2048)) { output += String.fromCharCode((c &gt;&gt; 6) | 192); output += String.fromCharCode((c &amp; 63) | 128); } else { output += String.fromCharCode((c &gt;&gt; 12) | 224); output += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128); output += String.fromCharCode((c &amp; 63) | 128); } } return output; }; $.extend({ md5: function(string) { var x = Array(); var k, AA, BB, CC, DD, a, b, c, d; var S11=7, S12=12, S13=17, S14=22; var S21=5, S22=9 , S23=14, S24=20; var S31=4, S32=11, S33=16, S34=23; var S41=6, S42=10, S43=15, S44=21; string = uTF8Encode(string); x = convertToWordArray(string); a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476; for (k = 0; k &lt; x.length; k += 16) { AA = a; BB = b; CC = c; DD = d; a = FF(a, b, c, d, x[k+0], S11, 0xD76AA478); d = FF(d, a, b, c, x[k+1], S12, 0xE8C7B756); c = FF(c, d, a, b, x[k+2], S13, 0x242070DB); b = FF(b, c, d, a, x[k+3], S14, 0xC1BDCEEE); a = FF(a, b, c, d, x[k+4], S11, 0xF57C0FAF); d = FF(d, a, b, c, x[k+5], S12, 0x4787C62A); c = FF(c, d, a, b, x[k+6], S13, 0xA8304613); b = FF(b, c, d, a, x[k+7], S14, 0xFD469501); a = FF(a, b, c, d, x[k+8], S11, 0x698098D8); d = FF(d, a, b, c, x[k+9], S12, 0x8B44F7AF); c = FF(c, d, a, b, x[k+10], S13, 0xFFFF5BB1); b = FF(b, c, d, a, x[k+11], S14, 0x895CD7BE); a = FF(a, b, c, d, x[k+12], S11, 0x6B901122); d = FF(d, a, b, c, x[k+13], S12, 0xFD987193); c = FF(c, d, a, b, x[k+14], S13, 0xA679438E); b = FF(b, c, d, a, x[k+15], S14, 0x49B40821); a = GG(a, b, c, d, x[k+1], S21, 0xF61E2562); d = GG(d, a, b, c, x[k+6], S22, 0xC040B340); c = GG(c, d, a, b, x[k+11], S23, 0x265E5A51); b = GG(b, c, d, a, x[k+0], S24, 0xE9B6C7AA); a = GG(a, b, c, d, x[k+5], S21, 0xD62F105D); d = GG(d, a, b, c, x[k+10], S22, 0x2441453); c = GG(c, d, a, b, x[k+15], S23, 0xD8A1E681); b = GG(b, c, d, a, x[k+4], S24, 0xE7D3FBC8); a = GG(a, b, c, d, x[k+9], S21, 0x21E1CDE6); d = GG(d, a, b, c, x[k+14], S22, 0xC33707D6); c = GG(c, d, a, b, x[k+3], S23, 0xF4D50D87); b = GG(b, c, d, a, x[k+8], S24, 0x455A14ED); a = GG(a, b, c, d, x[k+13], S21, 0xA9E3E905); d = GG(d, a, b, c, x[k+2], S22, 0xFCEFA3F8); c = GG(c, d, a, b, x[k+7], S23, 0x676F02D9); b = GG(b, c, d, a, x[k+12], S24, 0x8D2A4C8A); a = HH(a, b, c, d, x[k+5], S31, 0xFFFA3942); d = HH(d, a, b, c, x[k+8], S32, 0x8771F681); c = HH(c, d, a, b, x[k+11], S33, 0x6D9D6122); b = HH(b, c, d, a, x[k+14], S34, 0xFDE5380C); a = HH(a, b, c, d, x[k+1], S31, 0xA4BEEA44); d = HH(d, a, b, c, x[k+4], S32, 0x4BDECFA9); c = HH(c, d, a, b, x[k+7], S33, 0xF6BB4B60); b = HH(b, c, d, a, x[k+10], S34, 0xBEBFBC70); a = HH(a, b, c, d, x[k+13], S31, 0x289B7EC6); d = HH(d, a, b, c, x[k+0], S32, 0xEAA127FA); c = HH(c, d, a, b, x[k+3], S33, 0xD4EF3085); b = HH(b, c, d, a, x[k+6], S34, 0x4881D05); a = HH(a, b, c, d, x[k+9], S31, 0xD9D4D039); d = HH(d, a, b, c, x[k+12], S32, 0xE6DB99E5); c = HH(c, d, a, b, x[k+15], S33, 0x1FA27CF8); b = HH(b, c, d, a, x[k+2], S34, 0xC4AC5665); a = II(a, b, c, d, x[k+0], S41, 0xF4292244); d = II(d, a, b, c, x[k+7], S42, 0x432AFF97); c = II(c, d, a, b, x[k+14], S43, 0xAB9423A7); b = II(b, c, d, a, x[k+5], S44, 0xFC93A039); a = II(a, b, c, d, x[k+12], S41, 0x655B59C3); d = II(d, a, b, c, x[k+3], S42, 0x8F0CCC92); c = II(c, d, a, b, x[k+10], S43, 0xFFEFF47D); b = II(b, c, d, a, x[k+1], S44, 0x85845DD1); a = II(a, b, c, d, x[k+8], S41, 0x6FA87E4F); d = II(d, a, b, c, x[k+15], S42, 0xFE2CE6E0); c = II(c, d, a, b, x[k+6], S43, 0xA3014314); b = II(b, c, d, a, x[k+13], S44, 0x4E0811A1); a = II(a, b, c, d, x[k+4], S41, 0xF7537E82); d = II(d, a, b, c, x[k+11], S42, 0xBD3AF235); c = II(c, d, a, b, x[k+2], S43, 0x2AD7D2BB); b = II(b, c, d, a, x[k+9], S44, 0xEB86D391); a = addUnsigned(a, AA); b = addUnsigned(b, BB); c = addUnsigned(c, CC); d = addUnsigned(d, DD); } var tempValue = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d); return tempValue.toLowerCase(); } }); })(jQuery); 三. Base64加密 H5源码 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;base64加密&lt;/title&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;script src=&quot;js/jquery.min.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=&quot;password&quot; name=&quot;&quot; id=&quot;basepass&quot; value=&quot;&quot; /&gt; &lt;input type=&quot;button&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;base加密&quot; οnclick=&quot;basefunc(1)&quot;/&gt; &lt;input type=&quot;button&quot; name=&quot;&quot; id=&quot;&quot; value=&quot;base解密&quot; οnclick=&quot;basefunc(2)&quot;/&gt; &lt;/body&gt; &lt;script src=&quot;js/funcbase64.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; function basefunc(e){ var password = $(&quot;#basepass&quot;).val(); var base = new Base64(); var encypass = base.encode(password); var decryptpass = base.decode(encypass); if(e == 1){ console.log(&quot;加密之前的密码是：&quot;+password); console.log(&quot;加密之后的结果是：&quot;+encypass); } else if(e == 2){ console.log(&quot;解密之前的结果是：&quot;+encypass); console.log(&quot;解密之后的结果是：&quot;+decryptpass); } } &lt;/script&gt; &lt;/html&gt; js源码 function Base64() { // private property _keyStr = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;; // public method for encoding this.encode = function (input) { var output = &quot;&quot;; var chr1, chr2, chr3, enc1, enc2, enc3, enc4; var i = 0; input = _utf8_encode(input); while (i &lt; input.length) { chr1 = input.charCodeAt(i++); chr2 = input.charCodeAt(i++); chr3 = input.charCodeAt(i++); enc1 = chr1 &gt;&gt; 2; enc2 = ((chr1 &amp; 3) &lt;&lt; 4) | (chr2 &gt;&gt; 4); enc3 = ((chr2 &amp; 15) &lt;&lt; 2) | (chr3 &gt;&gt; 6); enc4 = chr3 &amp; 63; if (isNaN(chr2)) { enc3 = enc4 = 64; } else if (isNaN(chr3)) { enc4 = 64; } output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4); } return output; } // public method for decoding this.decode = function (input) { var output = &quot;&quot;; var chr1, chr2, chr3; var enc1, enc2, enc3, enc4; var i = 0; input = input.replace(/[^A-Za-z0-9\+\/\=]/g, &quot;&quot;); while (i &lt; input.length) { enc1 = _keyStr.indexOf(input.charAt(i++)); enc2 = _keyStr.indexOf(input.charAt(i++)); enc3 = _keyStr.indexOf(input.charAt(i++)); enc4 = _keyStr.indexOf(input.charAt(i++)); chr1 = (enc1 &lt;&lt; 2) | (enc2 &gt;&gt; 4); chr2 = ((enc2 &amp; 15) &lt;&lt; 4) | (enc3 &gt;&gt; 2); chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4; output = output + String.fromCharCode(chr1); if (enc3 != 64) { output = output + String.fromCharCode(chr2); } if (enc4 != 64) { output = output + String.fromCharCode(chr3); } } output = _utf8_decode(output); return output; } // private method for UTF-8 encoding _utf8_encode = function (string) { string = string.replace(/\r\n/g,&quot;\n&quot;); var utftext = &quot;&quot;; for (var n = 0; n &lt; string.length; n++) { var c = string.charCodeAt(n); if (c &lt; 128) { utftext += String.fromCharCode(c); } else if((c &gt; 127) &amp;&amp; (c &lt; 2048)) { utftext += String.fromCharCode((c &gt;&gt; 6) | 192); utftext += String.fromCharCode((c &amp; 63) | 128); } else { utftext += String.fromCharCode((c &gt;&gt; 12) | 224); utftext += String.fromCharCode(((c &gt;&gt; 6) &amp; 63) | 128); utftext += String.fromCharCode((c &amp; 63) | 128); } } return utftext; } // private method for UTF-8 decoding _utf8_decode = function (utftext) { var string = &quot;&quot;; var i = 0; var c = c1 = c2 = 0; while ( i &lt; utftext.length ) { c = utftext.charCodeAt(i); if (c &lt; 128) { string += String.fromCharCode(c); i++; } else if((c &gt; 191) &amp;&amp; (c &lt; 224)) { c2 = utftext.charCodeAt(i+1); string += String.fromCharCode(((c &amp; 31) &lt;&lt; 6) | (c2 &amp; 63)); i += 2; } else { c2 = utftext.charCodeAt(i+1); c3 = utftext.charCodeAt(i+2); string += String.fromCharCode(((c &amp; 15) &lt;&lt; 12) | ((c2 &amp; 63) &lt;&lt; 6) | (c3 &amp; 63)); i += 3; } } return string; } }]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hive操作]]></title>
    <url>%2F2020%2F08%2Fdatabase%2F%E5%A4%A7%E6%95%B0%E6%8D%AE%2Fhive%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[一. hive介绍hive是基于Hadoop的一个数据仓库工具，用来进行数据提取、转化、加载，这是一种可以存储、查询和分析存储在Hadoop中的大规模数据的机制。hive数据仓库工具能将结构化的数据文件映射为一张数据库表，并提供SQL查询功能，能将SQL语句转变成MapReduce任务来执行。Hive的优点是学习成本低，可以通过类似SQL语句实现快速MapReduce统计，使MapReduce变得更加简单，而不必开发专门的MapReduce应用程序。hive十分适合对数据仓库进行统计分析]]></content>
      <categories>
        <category>数据处理</category>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>大数据</tag>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python3面试汇总]]></title>
    <url>%2F2020%2F07%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2Fpython3%E9%9D%A2%E8%AF%95%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[Python基础文件操作1.有一个jsonline格式的文件file.txt大小约为10Kdef get_lines(): with open(&#39;file.txt&#39;,&#39;rb&#39;) as f: return f.readlines() if __name__ == &#39;__main__&#39;: for e in get_lines(): process(e) # 处理每一行数据 现在要处理一个大小为10G的文件，但是内存只有4G，如果在只修改get_lines 函数而其他代码保持不变的情况下，应该如何实现？需要考虑的问题都有那些？ def get_lines(): with open(&#39;file.txt&#39;,&#39;rb&#39;) as f: for i in f: yield i 个人认为：还是设置下每次返回的行数较好，否则读取次数太多。 def get_lines(): l = [] with open(&#39;file.txt&#39;,&#39;rb&#39;) as f: data = f.readlines(60000) l.append(data) yield l Pandaaaa906提供的方法 from mmap import mmap def get_lines(fp): with open(fp,&quot;r+&quot;) as f: m = mmap(f.fileno(), 0) tmp = 0 for i, char in enumerate(m): if char==b&quot;\n&quot;: yield m[tmp:i+1].decode() tmp = i+1 if __name__==&quot;__main__&quot;: for i in get_lines(&quot;fp_some_huge_file&quot;): print(i) 要考虑的问题有：内存只有4G无法一次性读入10G文件，需要分批读入分批读入数据要记录每次读入数据的位置。分批每次读取数据的大小，太小会在读取操作花费过多时间。https://stackoverflow.com/questions/30294146/python-fastest-way-to-process-large-file 2.补充缺失的代码def print_directory_contents(sPath): &quot;&quot;&quot; 这个函数接收文件夹的名称作为输入参数 返回该文件夹中文件的路径 以及其包含文件夹中文件的路径 &quot;&quot;&quot; import os for s_child in os.listdir(s_path): s_child_path = os.path.join(s_path, s_child) if os.path.isdir(s_child_path): print_directory_contents(s_child_path) else: print(s_child_path) 模块与包3.输入日期， 判断这一天是这一年的第几天？import datetime def dayofyear(): year = input(&quot;请输入年份: &quot;) month = input(&quot;请输入月份: &quot;) day = input(&quot;请输入天: &quot;) date1 = datetime.date(year=int(year),month=int(month),day=int(day)) date2 = datetime.date(year=int(year),month=1,day=1) return (date1-date2).days+1 4.打乱一个排好序的list对象alist？import random alist = [1,2,3,4,5] random.shuffle(alist) print(alist) 数据类型5.现有字典 d= {‘a’:24,’g’:52,’i’:12,’k’:33}请按value值进行排序?sorted(d.items(),key=lambda x:x[1]) x[0]代表用key进行排序；x[1]代表用value进行排序。 6.字典推导式d = {key:value for (key,value) in iterable} 7.请反转字符串 “aStr”?print(&quot;aStr&quot;[::-1]) 8.将字符串 “k:1 |k1:2|k2:3|k3:4”，处理成字典 {k:1,k1:2,…}str1 = &quot;k:1|k1:2|k2:3|k3:4&quot; def str2dict(str1): dict1 = {} for iterms in str1.split(&#39;|&#39;): key,value = iterms.split(&#39;:&#39;) dict1[key] = value return dict1 #字典推导式 d = {k:int(v) for t in str1.split(&quot;|&quot;) for k, v in (t.split(&quot;:&quot;), )} 9.请按alist中元素的age由大到小排序alist = [{&#39;name&#39;:&#39;a&#39;,&#39;age&#39;:20},{&#39;name&#39;:&#39;b&#39;,&#39;age&#39;:30},{&#39;name&#39;:&#39;c&#39;,&#39;age&#39;:25}] def sort_by_age(list1): return sorted(alist,key=lambda x:x[&#39;age&#39;],reverse=True) 10.下面代码的输出结果将是什么？list = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;] print(list[10:]) 代码将输出[],不会产生IndexError错误，就像所期望的那样，尝试用超出成员的个数的index来获取某个列表的成员。例如，尝试获取list[10]和之后的成员，会导致IndexError。然而，尝试获取列表的切片，开始的index超过了成员个数不会产生IndexError，而是仅仅返回一个空列表。这成为特别让人恶心的疑难杂症，因为运行的时候没有错误产生，导致Bug很难被追踪到。 11.写一个列表生成式，产生一个公差为11的等差数列print([x*11 for x in range(10)]) 12.给定两个列表，怎么找出他们相同的元素和不同的元素？list1 = [1,2,3] list2 = [3,4,5] set1 = set(list1) set2 = set(list2) print(set1 &amp; set2) print(set1 ^ set2) 13.请写出一段python代码实现删除list里面的重复元素？l1 = [&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;c&#39;,&#39;a&#39;,&#39;a&#39;] l2 = list(set(l1)) print(l2) 用list类的sort方法: l1 = [&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;c&#39;,&#39;a&#39;,&#39;a&#39;] l2 = list(set(l1)) l2.sort(key=l1.index) print(l2) 也可以这样写: l1 = [&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;c&#39;,&#39;a&#39;,&#39;a&#39;] l2 = sorted(set(l1),key=l1.index) print(l2) 也可以用遍历： l1 = [&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;c&#39;,&#39;a&#39;,&#39;a&#39;] l2 = [] for i in l1: if not i in l2: l2.append(i) print(l2) 14.给定两个list A，B ,请用找出A，B中相同与不同的元素A,B 中相同元素： print(set(A)&amp;set(B)) A,B 中不同元素: print(set(A)^set(B)) 企业面试题15.python新式类和经典类的区别？a. 在python里凡是继承了object的类，都是新式类 b. Python3里只有新式类 c. Python2里面继承object的是新式类，没有写父类的是经典类 d. 经典类目前在Python里基本没有应用 e. 保持class与type的统一对新式类的实例执行a.class与type(a)的结果是一致的，对于旧式类来说就不一样了。 f.对于多重继承的属性搜索顺序不一样新式类是采用广度优先搜索，旧式类采用深度优先搜索。 16.python中内置的数据结构有几种？a. 整型 int、 长整型 long、浮点型 float、 复数 complex b. 字符串 str、 列表 list、 元祖 tuple c. 字典 dict 、 集合 set d. Python3 中没有 long，只有无限精度的 int 17.python如何实现单例模式?请写出两种实现方式?第一种方法:使用装饰器 def singleton(cls): instances = {} def wrapper(*args, **kwargs): if cls not in instances: instances[cls] = cls(*args, **kwargs) return instances[cls] return wrapper @singleton class Foo(object): pass foo1 = Foo() foo2 = Foo() print(foo1 is foo2) # True 第二种方法：使用基类New 是真正创建实例对象的方法，所以重写基类的new 方法，以此保证创建对象的时候只生成一个实例 class Singleton(object): def __new__(cls, *args, **kwargs): if not hasattr(cls, &#39;_instance&#39;): cls._instance = super(Singleton, cls).__new__(cls, *args, **kwargs) return cls._instance class Foo(Singleton): pass foo1 = Foo() foo2 = Foo() print(foo1 is foo2) # True 第三种方法：元类，元类是用于创建类对象的类，类对象创建实例对象时一定要调用call方法，因此在调用call时候保证始终只创建一个实例即可，type是python的元类 class Singleton(type): def __call__(cls, *args, **kwargs): if not hasattr(cls, &#39;_instance&#39;): cls._instance = super(Singleton, cls).__call__(*args, **kwargs) return cls._instance # Python2 class Foo(object): __metaclass__ = Singleton # Python3 class Foo(metaclass=Singleton): pass foo1 = Foo() foo2 = Foo() print(foo1 is foo2) # True 18.反转一个整数，例如-123 –&gt; -321class Solution(object): def reverse(self,x): if -10&lt;x&lt;10: return x str_x = str(x) if str_x[0] !=&quot;-&quot;: str_x = str_x[::-1] x = int(str_x) else: str_x = str_x[1:][::-1] x = int(str_x) x = -x return x if -2147483648&lt;x&lt;2147483647 else 0 if __name__ == &#39;__main__&#39;: s = Solution() reverse_int = s.reverse(-120) print(reverse_int) 19.设计实现遍历目录与子目录，抓取.pyc文件第一种方法： import os def get_files(dir,suffix): res = [] for root,dirs,files in os.walk(dir): for filename in files: name,suf = os.path.splitext(filename) if suf == suffix: res.append(os.path.join(root,filename)) print(res) get_files(&quot;./&quot;,&#39;.pyc&#39;) 第二种方法： import os def pick(obj): if obj.endswith(&quot;.pyc&quot;): print(obj) def scan_path(ph): file_list = os.listdir(ph) for obj in file_list: if os.path.isfile(obj): pick(obj) elif os.path.isdir(obj): scan_path(obj) if __name__==&#39;__main__&#39;: path = input(&#39;输入目录&#39;) scan_path(path) 第三种方法 from glob import iglob def func(fp, postfix): for i in iglob(f&quot;{fp}/**/*{postfix}&quot;, recursive=True): print(i) if __name__ == &quot;__main__&quot;: postfix = &quot;.pyc&quot; func(&quot;K:\Python_script&quot;, postfix) 20.一行代码实现1-100之和count = sum(range(0,101)) print(count) 21.Python-遍历列表时删除元素的正确做法遍历在新在列表操作，删除时在原来的列表操作 a = [1,2,3,4,5,6,7,8] print(id(a)) print(id(a[:])) for i in a[:]: if i&gt;5: pass else: a.remove(i) print(a) print(&#39;-----------&#39;) print(id(a)) #filter a=[1,2,3,4,5,6,7,8] b = filter(lambda x: x&gt;5,a) print(list(b)) 列表解析 a=[1,2,3,4,5,6,7,8] b = [i for i in a if i&gt;5] print(b) 倒序删除因为列表总是‘向前移’，所以可以倒序遍历，即使后面的元素被修改了，还没有被遍历的元素和其坐标还是保持不变的 a=[1,2,3,4,5,6,7,8] print(id(a)) for i in range(len(a)-1,-1,-1): if a[i]&gt;5: pass else: a.remove(a[i]) print(id(a)) print(&#39;-----------&#39;) print(a) 22.字符串的操作题目全字母短句 PANGRAM 是包含所有英文字母的句子，比如：A QUICK BROWN FOX JUMPS OVER THE LAZY DOG. 定义并实现一个方法 get_missing_letter, 传入一个字符串采纳数，返回参数字符串变成一个 PANGRAM 中所缺失的字符。应该忽略传入字符串参数中的大小写，返回应该都是小写字符并按字母顺序排序（请忽略所有非 ACSII 字符） 下面示例是用来解释，双引号不需要考虑: (0)输入: “A quick brown for jumps over the lazy dog” 返回： “” (1)输入: “A slow yellow fox crawls under the proactive dog” 返回: “bjkmqz” (2)输入: “Lions, and tigers, and bears, oh my!” 返回: “cfjkpquvwxz” (3)输入: “” 返回：”abcdefghijklmnopqrstuvwxyz” def get_missing_letter(a): s1 = set(&quot;abcdefghijklmnopqrstuvwxyz&quot;) s2 = set(a.lower()) ret = &quot;&quot;.join(sorted(s1-s2)) return ret print(get_missing_letter(&quot;python&quot;)) # other ways to generate letters # range(&quot;a&quot;, &quot;z&quot;) # 方法一: import string letters = string.ascii_lowercase # 方法二: letters = &quot;&quot;.join(map(chr, range(ord(&#39;a&#39;), ord(&#39;z&#39;) + 1))) 23.可变类型和不可变类型1,可变类型有list,dict.不可变类型有string，number,tuple. 2,当进行修改操作时，可变类型传递的是内存中的地址，也就是说，直接修改内存中的值，并没有开辟新的内存。 3,不可变类型被改变时，并没有改变原内存地址中的值，而是开辟一块新的内存，将原地址中的值复制过去，对这块新开辟的内存中的值进行操作。 24.is和==有什么区别？is：比较的是两个对象的id值是否相等，也就是比较俩对象是否为同一个实例对象。是否指向同一个内存地址 == ： 比较的两个对象的内容/值是否相等，默认会调用对象的eq()方法 25.求出列表所有奇数并构造新列表a = [1,2,3,4,5,6,7,8,9,10] res = [ i for i in a if i%2==1] print(res) 26.用一行python代码写出1+2+3+10248from functools import reduce #1.使用sum内置求和函数 num = sum([1,2,3,10248]) print(num) #2.reduce 函数 num1 = reduce(lambda x,y :x+y,[1,2,3,10248]) print(num1) 27.Python中变量的作用域？（变量查找顺序)函数作用域的LEGB顺序 1.什么是LEGB? L： local 函数内部作用域 E: enclosing 函数内部与内嵌函数之间 G: global 全局作用域 B： build-in 内置作用 python在函数里面的查找分为4种，称之为LEGB，也正是按照这是顺序来查找的 28.字符串 &quot;123&quot; 转换成 123，不使用内置api，例如 int()方法一： 利用 str 函数 def atoi(s): num = 0 for v in s: for j in range(10): if v == str(j): num = num * 10 + j return num 方法二： 利用 ord 函数 def atoi(s): num = 0 for v in s: num = num * 10 + ord(v) - ord(&#39;0&#39;) return num 方法三: 利用 eval 函数 def atoi(s): num = 0 for v in s: t = &quot;%s * 1&quot; % v n = eval(t) num = num * 10 + n return num 方法四: 结合方法二，使用 reduce，一行解决 from functools import reduce def atoi(s): return reduce(lambda num, v: num * 10 + ord(v) - ord(&#39;0&#39;), s, 0) 29.Given an array of integers给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。示例:给定nums = [2,7,11,15],target=9 因为 nums[0]+nums[1] = 2+7 =9,所以返回[0,1] class Solution: def twoSum(self,nums,target): &quot;&quot;&quot; :type nums: List[int] :type target: int :rtype: List[int] &quot;&quot;&quot; d = {} size = 0 while size &lt; len(nums): if target-nums[size] in d: if d[target-nums[size]] &lt;size: return [d[target-nums[size]],size] else: d[nums[size]] = size size = size +1 solution = Solution() list = [2,7,11,15] target = 9 nums = solution.twoSum(list,target) print(nums) class Solution(object): def twoSum(self, nums, target): for i in range(len(nums)): num = target - nums[i] if num in nums[i+1:]: return [i, nums.index(num,i+1)] 给列表中的字典排序：假设有如下list对象，alist=[{“name”:”a”,”age”:20},{“name”:”b”,”age”:30},{“name”:”c”,”age”:25}],将alist中的元素按照age从大到小排序 alist=[{“name”:”a”,”age”:20},{“name”:”b”,”age”:30},{“name”:”c”,”age”:25}] alist_sort = sorted(alist,key=lambda e: e.__getitem__(&#39;age&#39;),reverse=True) 30.python代码实现删除一个list里面的重复元素def distFunc1(a): &quot;&quot;&quot;使用集合去重&quot;&quot;&quot; a = list(set(a)) print(a) def distFunc2(a): &quot;&quot;&quot;将一个列表的数据取出放到另一个列表中，中间作判断&quot;&quot;&quot; list = [] for i in a: if i not in list: list.append(i) #如果需要排序的话用sort list.sort() print(list) def distFunc3(a): &quot;&quot;&quot;使用字典&quot;&quot;&quot; b = {} b = b.fromkeys(a) c = list(b.keys()) print(c) if __name__ == &quot;__main__&quot;: a = [1,2,4,2,4,5,7,10,5,5,7,8,9,0,3] distFunc1(a) distFunc2(a) distFunc3(a) 31.统计一个文本中单词频次最高的10个单词？import re # 方法一 def test(filepath): distone = {} with open(filepath) as f: for line in f: line = re.sub(&quot;\W+&quot;, &quot; &quot;, line) lineone = line.split() for keyone in lineone: if not distone.get(keyone): distone[keyone] = 1 else: distone[keyone] += 1 num_ten = sorted(distone.items(), key=lambda x:x[1], reverse=True)[:10] num_ten =[x[0] for x in num_ten] return num_ten # 方法二 # 使用 built-in 的 Counter 里面的 most_common import re from collections import Counter def test2(filepath): with open(filepath) as f: return list(map(lambda c: c[0], Counter(re.sub(&quot;\W+&quot;, &quot; &quot;, f.read()).split()).most_common(10))) 32.请写出一个函数满足以下条件该函数的输入是一个仅包含数字的list,输出一个新的list，其中每一个元素要满足以下条件： 1、该元素是偶数 2、该元素在原list中是在偶数的位置(index是偶数) def num_list(num): return [i for i in num if i %2 ==0 and num.index(i)%2==0] num = [0,1,2,3,4,5,6,7,8,9,10] result = num_list(num) print(result) 33.使用单一的列表生成式来产生一个新的列表该列表只包含满足以下条件的值，元素为原始列表中偶数切片 list_data = [1,2,5,8,10,3,18,6,20] res = [x for x in list_data[::2] if x %2 ==0] print(res) 34.用一行代码生成[1,4,9,16,25,36,49,64,81,100][x * x for x in range(1,11)] 35.输入某年某月某日，判断这一天是这一年的第几天？import datetime y = int(input(&quot;请输入4位数字的年份:&quot;)) m = int(input(&quot;请输入月份:&quot;)) d = int(input(&quot;请输入是哪一天&quot;)) targetDay = datetime.date(y,m,d) dayCount = targetDay - datetime.date(targetDay.year -1,12,31) print(&quot;%s是 %s年的第%s天。&quot;%(targetDay,y,dayCount.days)) 36.两个有序列表，l1,l2，对这两个列表进行合并不可使用extenddef loop_merge_sort(l1,l2): tmp = [] while len(l1)&gt;0 and len(l2)&gt;0: if l1[0] &lt;l2[0]: tmp.append(l1[0]) del l1[0] else: tmp.append(l2[0]) del l2[0] while len(l1)&gt;0: tmp.append(l1[0]) del l1[0] while len(l2)&gt;0: tmp.append(l2[0]) del l2[0] return tmp 37.给定一个任意长度数组，实现一个函数让所有奇数都在偶数前面，而且奇数升序排列，偶数降序排序，如字符串’1982376455’,变成’1355798642’ # 方法一 def func1(l): if isinstance(l, str): l = [int(i) for i in l] l.sort(reverse=True) for i in range(len(l)): if l[i] % 2 &gt; 0: l.insert(0, l.pop(i)) print(&#39;&#39;.join(str(e) for e in l)) # 方法二 def func2(l): print(&quot;&quot;.join(sorted(l, key=lambda x: int(x) % 2 == 0 and 20 - int(x) or int(x)))) 38.写一个函数找出一个整数数组中，第二大的数def find_second_large_num(num_list): &quot;&quot;&quot; 找出数组第2大的数字 &quot;&quot;&quot; # 方法一 # 直接排序，输出倒数第二个数即可 tmp_list = sorted(num_list) print(&quot;方法一\nSecond_large_num is :&quot;, tmp_list[-2]) # 方法二 # 设置两个标志位一个存储最大数一个存储次大数 # two 存储次大值，one 存储最大值，遍历一次数组即可，先判断是否大于 one，若大于将 one 的值给 two，将 num_list[i] 的值给 one，否则比较是否大于two，若大于直接将 num_list[i] 的值给two，否则pass one = num_list[0] two = num_list[0] for i in range(1, len(num_list)): if num_list[i] &gt; one: two = one one = num_list[i] elif num_list[i] &gt; two: two = num_list[i] print(&quot;方法二\nSecond_large_num is :&quot;, two) # 方法三 # 用 reduce 与逻辑符号 (and, or) # 基本思路与方法二一样，但是不需要用 if 进行判断。 from functools import reduce num = reduce(lambda ot, x: ot[1] &lt; x and (ot[1], x) or ot[0] &lt; x and (x, ot[1]) or ot, num_list, (0, 0))[0] print(&quot;方法三\nSecond_large_num is :&quot;, num) if __name__ == &#39;__main___&#39;: num_list = [34, 11, 23, 56, 78, 0, 9, 12, 3, 7, 5] find_second_large_num(num_list) 39.阅读一下代码他们的输出结果是什么？def multi(): return [lambda x : i*x for i in range(4)] print([m(3) for m in multi()]) 正确答案是[9,9,9,9]，而不是[0,3,6,9]产生的原因是Python的闭包的后期绑定导致的，这意味着在闭包中的变量是在内部函数被调用的时候被查找的，因为，最后函数被调用的时候，for循环已经完成, i 的值最后是3,因此每一个返回值的i都是3,所以最后的结果是[9,9,9,9] 40.统计一段字符串中字符出现的次数# 方法一 def count_str(str_data): &quot;&quot;&quot;定义一个字符出现次数的函数&quot;&quot;&quot; dict_str = {} for i in str_data: dict_str[i] = dict_str.get(i, 0) + 1 return dict_str dict_str = count_str(&quot;AAABBCCAC&quot;) str_count_data = &quot;&quot; for k, v in dict_str.items(): str_count_data += k + str(v) print(str_count_data) # 方法二 from collections import Counter print(&quot;&quot;.join(map(lambda x: x[0] + str(x[1]), Counter(&quot;AAABBCCAC&quot;).most_common()))) 41.super函数的具体用法和场景https://python3-cookbook.readthedocs.io/zh_CN/latest/c08/p07_calling_method_on_parent_class.html Python高级元类42.Python中类方法、类实例方法、静态方法有何区别？类方法: 是类对象的方法，在定义时需要在上方使用 @classmethod 进行装饰,形参为cls，表示类对象，类对象和实例对象都可调用 类实例方法: 是类实例化对象的方法,只有实例对象可以调用，形参为self,指代对象本身; 静态方法: 是一个任意函数，在其上方使用 @staticmethod 进行装饰，可以用对象直接调用，静态方法实际上跟该类没有太大关系 43.遍历一个object的所有属性，并print每一个属性名？class Car: def __init__(self,name,loss): # loss [价格，油耗，公里数] self.name = name self.loss = loss def getName(self): return self.name def getPrice(self): # 获取汽车价格 return self.loss[0] def getLoss(self): # 获取汽车损耗值 return self.loss[1] * self.loss[2] Bmw = Car(&quot;宝马&quot;,[60,9,500]) # 实例化一个宝马车对象 print(getattr(Bmw,&quot;name&quot;)) # 使用getattr()传入对象名字,属性值。 print(dir(Bmw)) # 获Bmw所有的属性和方法 44.写一个类，并让它尽可能多的支持操作符?class Array: __list = [] def __init__(self): print &quot;constructor&quot; def __del__(self): print &quot;destruct&quot; def __str__(self): return &quot;this self-defined array class&quot; def __getitem__(self,key): return self.__list[key] def __len__(self): return len(self.__list) def Add(self,value): self.__list.append(value) def Remove(self,index): del self.__list[index] def DisplayItems(self): print &quot;show all items---&quot; for item in self.__list: print item 45.介绍Cython，Pypy Cpython Numba各有什么缺点Cython 46.请描述抽象类和接口类的区别和联系1.抽象类： 规定了一系列的方法，并规定了必须由继承类实现的方法。由于有抽象方法的存在，所以抽象类不能实例化。可以将抽象类理解为毛坯房，门窗，墙面的样式由你自己来定，所以抽象类与作为基类的普通类的区别在于约束性更强 2.接口类：与抽象类很相似，表现在接口中定义的方法，必须由引用类实现，但他与抽象类的根本区别在于用途：与不同个体间沟通的规则，你要进宿舍需要有钥匙，这个钥匙就是你与宿舍的接口，你的舍友也有这个接口，所以他也能进入宿舍，你用手机通话，那么手机就是你与他人交流的接口 3.区别和关联： 1.接口是抽象类的变体，接口中所有的方法都是抽象的，而抽象类中可以有非抽象方法，抽象类是声明方法的存在而不去实现它的类 2.接口可以继承，抽象类不行 3.接口定义方法，没有实现的代码，而抽象类可以实现部分方法 4.接口中基本数据类型为static而抽象类不是 47.Python中如何动态获取和设置对象的属性？if hasattr(Parent, &#39;x&#39;): print(getattr(Parent, &#39;x&#39;)) setattr(Parent, &#39;x&#39;,3) print(getattr(Parent,&#39;x&#39;)) 内存管理与垃圾回收机制48.哪些操作会导致Python内存溢出，怎么处理？49.关于Python内存管理,下列说法错误的是 BA,变量不必事先声明 B,变量无须先创建和赋值而直接使用 C,变量无须指定类型 D,可以使用del释放资源 50.Python的内存管理机制及调优手段？内存管理机制: 引用计数、垃圾回收、内存池 引用计数：引用计数是一种非常高效的内存管理手段，当一个Python对象被引用时其引用计数增加1, 当其不再被一个变量引用时则计数减1,当引用计数等于0时对象被删除。弱引用不会增加引用计数 垃圾回收： 1.引用计数 引用计数也是一种垃圾收集机制，而且也是一种最直观、最简单的垃圾收集技术。当Python的某个对象的引用计数降为0时，说明没有任何引用指向该对象，该对象就成为要被回收的垃圾了。比如某个新建对象，它被分配给某个引用，对象的引用计数变为1，如果引用被删除，对象的引用计数为0,那么该对象就可以被垃圾回收。不过如果出现循环引用的话，引用计数机制就不再起有效的作用了。 2.标记清除 https://foofish.net/python-gc.html 调优手段 1.手动垃圾回收 2.调高垃圾回收阈值 3.避免循环引用 51.内存泄露是什么？如何避免？内存泄漏指由于疏忽或错误造成程序未能释放已经不再使用的内存。内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，导致在释放该段内存之前就失去了对该段内存的控制，从而造成了内存的浪费。 有__del__()函数的对象间的循环引用是导致内存泄露的主凶。不使用一个对象时使用: del object 来删除一个对象的引用计数就可以有效防止内存泄露问题。 通过Python扩展模块gc 来查看不能回收的对象的详细信息。 可以通过 sys.getrefcount(obj) 来获取对象的引用计数，并根据返回值是否为0来判断是否内存泄露 函数52.python常见的列表推导式？[表达式 for 变量 in 列表] 或者 [表达式 for 变量 in 列表 if 条件] 53.简述read、readline、readlines的区别？read 读取整个文件 readline 读取下一行 readlines 读取整个文件到一个迭代器以供我们遍历 54.什么是Hash（散列函数）？散列函数（英语：Hash function）又称散列算法、哈希函数，是一种从任何一种数据中创建小的数字“指纹”的方法。散列函数把消息或数据压缩成摘要，使得数据量变小，将数据的格式固定下来。该函数将数据打乱混合，重新创建一个叫做散列值（hash values，hash codes，hash sums，或hashes）的指纹。散列值通常用一个短的随机字母和数字组成的字符串来代表 55.python函数重载机制？函数重载主要是为了解决两个问题。1。可变参数类型。2。可变参数个数。 另外，一个基本的设计原则是，仅仅当两个函数除了参数类型和参数个数不同以外，其功能是完全相同的，此时才使用函数重载，如果两个函数的功能其实不同，那么不应当使用重载，而应当使用一个名字不同的函数。 好吧，那么对于情况 1 ，函数功能相同，但是参数类型不同，python 如何处理？答案是根本不需要处理，因为 python 可以接受任何类型的参数，如果函数的功能相同，那么不同的参数类型在 python 中很可能是相同的代码，没有必要做成两个不同函数。 那么对于情况 2 ，函数功能相同，但参数个数不同，python 如何处理？大家知道，答案就是缺省参数。对那些缺少的参数设定为缺省参数即可解决问题。因为你假设函数功能相同，那么那些缺少的参数终归是需要用的。 好了，鉴于情况 1 跟 情况 2 都有了解决方案，python 自然就不需要函数重载了。 56.写一个函数找出一个整数数组中，第二大的数57.手写一个判断时间的装饰器import datetime class TimeException(Exception): def __init__(self, exception_info): super().__init__() self.info = exception_info def __str__(self): return self.info def timecheck(func): def wrapper(*args, **kwargs): if datetime.datetime.now().year == 2019: func(*args, **kwargs) else: raise TimeException(&quot;函数已过时&quot;) return wrapper @timecheck def test(name): print(&quot;Hello {}, 2019 Happy&quot;.format(name)) if __name__ == &quot;__main__&quot;: test(&quot;backbp&quot;) 58.使用Python内置的filter()方法来过滤？list(filter(lambda x: x % 2 == 0, range(10))) 59.编写函数的4个原则1.函数设计要尽量短小 2.函数声明要做到合理、简单、易于使用 3.函数参数设计应该考虑向下兼容 4.一个函数只做一件事情，尽量保证函数语句粒度的一致性 60.函数调用参数的传递方式是值传递还是引用传递？Python的参数传递有：位置参数、默认参数、可变参数、关键字参数。 函数的传值到底是值传递还是引用传递、要分情况： 不可变参数用值传递：像整数和字符串这样的不可变对象，是通过拷贝进行传递的，因为你无论如何都不可能在原处改变不可变对象。 可变参数是引用传递：比如像列表，字典这样的对象是通过引用传递、和C语言里面的用指针传递数组很相似，可变对象能在函数内部改变。 61.如何在function里面设置一个全局变量globals() # 返回包含当前作用余全局变量的字典。 global 变量 设置使用全局变量 62.对缺省参数的理解 ？缺省参数指在调用函数的时候没有传入参数的情况下，调用默认的参数，在调用函数的同时赋值时，所传入的参数会替代默认参数。 *args是不定长参数，它可以表示输入参数是不确定的，可以是任意多个。 **kwargs是关键字参数，赋值的时候是以键值对的方式，参数可以是任意多对在定义函数的时候 不确定会有多少参数会传入时，就可以使用两个参数 63.Mysql怎么限制IP访问？64.带参数的装饰器?带定长参数的装饰器 def new_func(func): def wrappedfun(username, passwd): if username == &#39;root&#39; and passwd == &#39;123456789&#39;: print(&#39;通过认证&#39;) print(&#39;开始执行附加功能&#39;) return func() else: print(&#39;用户名或密码错误&#39;) return return wrappedfun @new_func def origin(): print(&#39;开始执行函数&#39;) origin(&#39;root&#39;,&#39;123456789&#39;) 带不定长参数的装饰器 def new_func(func): def wrappedfun(*parts): if parts: counts = len(parts) print(&#39;本系统包含 &#39;, end=&#39;&#39;) for part in parts: print(part, &#39; &#39;,end=&#39;&#39;) print(&#39;等&#39;, counts, &#39;部分&#39;) return func() else: print(&#39;用户名或密码错误&#39;) return func() return wrappedfun 65.为什么函数名字可以当做参数用?Python中一切皆对象，函数名是函数在内存中的空间，也是一个对象 66.Python中pass语句的作用是什么？在编写代码时只写框架思路，具体实现还未编写就可以用pass进行占位，是程序不报错，不会进行任何操作。 67.有这样一段代码，print c会输出什么，为什么？a = 10 b = 20 c = [a] a = 15 答：10对于字符串，数字，传递是相应的值 68.交换两个变量的值？a, b = b, a 69.map函数和reduce函数？map(lambda x: x * x, [1, 2, 3, 4]) # 使用 lambda # [1, 4, 9, 16] reduce(lambda x, y: x * y, [1, 2, 3, 4]) # 相当于 ((1 * 2) * 3) * 4 # 24 70.回调函数，如何通信的?回调函数是把函数的指针(地址)作为参数传递给另一个函数，将整个函数当作一个对象，赋值给调用的函数。 71.Python主要的内置数据类型都有哪些？ print dir( ‘a ’) 的输出？内建类型：布尔类型，数字，字符串，列表，元组，字典，集合 输出字符串’a’的内建方法 72.map(lambda x:xx，[y for y in range(3)])的输出？[0, 1, 4] 73.hasattr() getattr() setattr() 函数使用详解？hasattr(object,name)函数: 判断一个对象里面是否有name属性或者name方法，返回bool值，有name属性（方法）返回True，否则返回False。 class function_demo(object): name = &#39;demo&#39; def run(self): return &quot;hello function&quot; functiondemo = function_demo() res = hasattr(functiondemo, &quot;name&quot;) # 判断对象是否有name属性，True res = hasattr(functiondemo, &quot;run&quot;) # 判断对象是否有run方法，True res = hasattr(functiondemo, &quot;age&quot;) # 判断对象是否有age属性，False print(res) getattr(object, name[,default])函数： 获取对象object的属性或者方法，如果存在则打印出来，如果不存在，打印默认值，默认值可选。注意：如果返回的是对象的方法，则打印结果是：方法的内存地址，如果需要运行这个方法，可以在后面添加括号(). functiondemo = function_demo() getattr(functiondemo, &quot;name&quot;)# 获取name属性，存在就打印出来 --- demo getattr(functiondemo, &quot;run&quot;) # 获取run 方法，存在打印出方法的内存地址 getattr(functiondemo, &quot;age&quot;) # 获取不存在的属性，报错 getattr(functiondemo, &quot;age&quot;, 18)# 获取不存在的属性，返回一个默认值 setattr(object, name, values)函数： 给对象的属性赋值，若属性不存在，先创建再赋值 class function_demo(object): name = &quot;demo&quot; def run(self): return &quot;hello function&quot; functiondemo = function_demo() res = hasattr(functiondemo, &quot;age&quot;) # 判断age属性是否存在，False print(res) setattr(functiondemo, &quot;age&quot;, 18) # 对age属性进行赋值，无返回值 res1 = hasattr(functiondemo, &quot;age&quot;) # 再次判断属性是否存在，True 综合使用 class function_demo(object): name = &quot;demo&quot; def run(self): return &quot;hello function&quot; functiondemo = function_demo() res = hasattr(functiondemo, &quot;addr&quot;) # 先判断是否存在 if res: addr = getattr(functiondemo, &quot;addr&quot;) print(addr) else: addr = getattr(functiondemo, &quot;addr&quot;, setattr(functiondemo, &quot;addr&quot;, &quot;北京首都&quot;)) print(addr) 74.一句话解决阶乘函数？reduce(lambda x,y : x*y,range(1,n+1)) 75.什么是lambda函数？ 有什么好处？lambda 函数是一个可以接收任意多个参数(包括可选参数)并且返回单个表达式值的函数 1.lambda函数比较轻便，即用即仍，很适合需要完成一项功能，但是此功能只在此一处使用，连名字都很随意的情况下 2.匿名函数，一般用来给filter，map这样的函数式编程服务 3.作为回调函数，传递给某些应用，比如消息处理 76.递归函数停止的条件？递归的终止条件一般定义在递归函数内部，在递归调用前要做一个条件判断，根据判断的结果选择是继续调用自身，还是return，，返回终止递归。 终止的条件：判断递归的次数是否达到某一限定值 2.判断运算的结果是否达到某个范围等，根据设计的目的来选择 77.下面这段代码的输出结果将是什么？请解释。def multipliers(): return [lambda x: i *x for i in range(4)] print([m(2) for m in multipliers()]) 上面代码的输出结果是[6,6,6,6]，不是我们想的[0,2,4,6] 你如何修改上面的multipliers的定义产生想要的结果？ 上述问题产生的原因是python闭包的延迟绑定。这意味着内部函数被调用时，参数的值在闭包内进行查找。因此，当任何由multipliers()返回的函数被调用时,i的值将在附近的范围进行查找。那时，不管返回的函数是否被调用，for循环已经完成，i被赋予了最终的值3. def multipliers(): for i in range(4): yield lambda x: i *x def multipliers(): return [lambda x,i = i: i*x for i in range(4)] 78.什么是lambda函数？它有什么好处？写一个匿名函数求两个数的和lambda函数是匿名函数，使用lambda函数能创建小型匿名函数，这种函数得名于省略了用def声明函数的标准步骤 设计模式79.对设计模式的理解，简述你了解的设计模式？设计模式是经过总结，优化的，对我们经常会碰到的一些编程问题的可重用解决方案。一个设计模式并不像一个类或一个库那样能够直接作用于我们的代码，反之，设计模式更为高级，它是一种必须在特定情形下实现的一种方法模板。常见的是工厂模式和单例模式 80.请手写一个单例#python2 class A(object): __instance = None def __new__(cls,*args,**kwargs): if cls.__instance is None: cls.__instance = objecet.__new__(cls) return cls.__instance else: return cls.__instance 81.单例模式的应用场景有那些？单例模式应用的场景一般发现在以下条件下：资源共享的情况下，避免由于资源操作时导致的性能或损耗等，如日志文件，应用配置。控制资源的情况下，方便资源之间的互相通信。如线程池等，1,网站的计数器 2,应用配置 3.多线程池 4数据库配置 数据库连接池 5.应用程序的日志应用… 82.用一行代码生成[1,4,9,16,25,36,49,64,81,100]print([x*x for x in range(1, 11)]) 83.对装饰器的理解，并写出一个计时器记录方法执行性能的装饰器？装饰器本质上是一个callable object ，它可以让其他函数在不需要做任何代码变动的前提下增加额外功能，装饰器的返回值也是一个函数对象。 import time from functools import wraps def timeit(func): @wraps(func) def wrapper(*args, **kwargs): start = time.clock() ret = func(*args, **kwargs) end = time.clock() print(&#39;used:&#39;,end-start) return ret return wrapper @timeit def foo(): print(&#39;in foo()&#39;foo()) 84.解释以下什么是闭包？在函数内部再定义一个函数，并且这个函数用到了外边函数的变量，那么将这个函数以及用到的一些变量称之为闭包。 85.函数装饰器有什么作用？装饰器本质上是一个callable object，它可以在让其他函数在不需要做任何代码的变动的前提下增加额外的功能。装饰器的返回值也是一个函数的对象，它经常用于有切面需求的场景。比如：插入日志，性能测试，事务处理，缓存。权限的校验等场景，有了装饰器就可以抽离出大量的与函数功能本身无关的雷同代码并发并继续使用。详细参考：https://manjusaka.itscoder.com/2018/02/23/something-about-decorator/ 86.生成器，迭代器的区别？迭代器是遵循迭代协议的对象。用户可以使用 iter() 以从任何序列得到迭代器（如 list, tuple, dictionary, set 等）。另一个方法则是创建一个另一种形式的迭代器 —— generator 。要获取下一个元素，则使用成员函数 next()（Python 2）或函数 next() function （Python 3） 。当没有元素时，则引发 StopIteration 此例外。若要实现自己的迭代器，则只要实现 next()（Python 2）或 __next__()（ Python 3） 生成器（Generator），只是在需要返回数据的时候使用yield语句。每次next()被调用时，生成器会返回它脱离的位置（它记忆语句最后一次执行的位置和所有的数据值） 区别： 生成器能做到迭代器能做的所有事，而且因为自动创建iter()和next()方法，生成器显得特别简洁，而且生成器也是高效的，使用生成器表达式取代列表解析可以同时节省内存。除了创建和保存程序状态的自动方法，当发生器终结时，还会自动抛出StopIteration异常。 官方介绍：https://docs.python.org/3/tutorial/classes.html#iterators 87.X是什么类型?X= (i for i in range(10)) X是 generator类型 88.请用一行代码 实现将1-N 的整数列表以3为单位分组N =100 print ([[x for x in range(1,100)] [i:i+3] for i in range(0,100,3)]) 89.Python中yield的用法?yield就是保存当前程序执行状态。你用for循环的时候，每次取一个元素的时候就会计算一次。用yield的函数叫generator,和iterator一样，它的好处是不用一次计算所有元素，而是用一次算一次，可以节省很多空间，generator每次计算需要上一次计算结果，所以用yield,否则一return，上次计算结果就没了 面向对象90.Python中的可变对象和不可变对象？不可变对象，该对象所指向的内存中的值不能被改变。当改变某个变量时候，由于其所指的值不能被改变，相当于把原来的值复制一份后再改变，这会开辟一个新的地址，变量再指向这个新的地址。 可变对象，该对象所指向的内存中的值可以被改变。变量（准确的说是引用）改变后，实际上其所指的值直接发生改变，并没有发生复制行为，也没有开辟出新的地址，通俗点说就是原地改变。 Pyhton中，数值类型(int 和float)，字符串str、元祖tuple都是不可变类型。而列表list、字典dict、集合set是可变类型 91.Python的魔法方法魔法方法就是可以给你的类增加魔力的特殊方法，如果你的对象实现（重载）了这些方法中的某一个，那么这个方法就会在特殊的情况下被Python所调用，你可以定义自己想要的行为，而这一切都是自动发生的，它们经常是两个下划线包围来命名的（比如__init___,__len__),Python的魔法方法是非常强大的所以了解其使用方法也变得尤为重要! __init__构造器，当一个实例被创建的时候初始化的方法，但是它并不是实例化调用的第一个方法。 __new__才是实例化对象调用的第一个方法，它只取下cls参数，并把其他参数传给__init___. ___new__很少使用，但是也有它适合的场景，尤其是当类继承自一个像元祖或者字符串这样不经常改变的类型的时候。 __call__让一个类的实例像函数一样被调用 __getitem__定义获取容器中指定元素的行为，相当于self[key] __getattr__定义当用户试图访问一个不存在属性的时候的行为。 __setattr__定义当一个属性被设置的时候的行为 __getattribute___定义当一个属性被访问的时候的行为 92.面向对象中怎么实现只读属性?将对象私有化，通过共有方法提供一个读取数据的接口 class person: def __init__(self, x): self.__age = 10 def age(self): return self.__age t = person(22) # t.__age =100 print(t.age()) 最好的方法 class MyCls(object): __weight = 50 @property def weight(self): return self.__weight 93.谈谈你对面向对象的理解？面向对象是相当于面向过程而言的，面向过程语言是一种基于功能分析的，以算法为中心的程序设计方法，而面向对象是一种基于结构分析的，以数据为中心的程序设计思想。在面向对象语言中有一个很重要的东西，叫做类。面向对象有三大特性：封装、继承、多态。 正则表达式94.请写出一段代码用正则匹配出ip？95.a = “abbbccc”，用正则匹配为abccc,不管有多少b，就出现一次？思路：不管有多少个b替换成一个 re.sub(r&#39;b+&#39;, &#39;b&#39;, a) 96.Python字符串查找和替换？a、str.find()：正序字符串查找函数 函数原型： str.find(substr [,pos_start [,pos_end ] ] ) 返回str中第一次出现的substr的第一个字母的标号，如果str中没有substr则返回-1，也就是说从左边算起的第一次出现的substr的首字母标号。 参数说明： str：代表原字符串 substr：代表要查找的字符串 pos_start：代表查找的开始位置，默认是从下标0开始查找 pos_end：代表查找的结束位置 例子： &#39;aabbcc.find(&#39;bb&#39;)&#39; # 2 b、str.index()：正序字符串查找函数 index()函数类似于find()函数，在Python中也是在字符串中查找子串第一次出现的位置，跟find()不同的是，未找到则抛出异常。 函数原型： str.index(substr [, pos_start, [ pos_end ] ] ) 参数说明： str：代表原字符串 substr：代表要查找的字符串 pos_start：代表查找的开始位置，默认是从下标0开始查找 pos_end：代表查找的结束位置 例子： &#39;acdd l1 23&#39;.index(&#39; &#39;) # 4 c、str.rfind()：倒序字符串查找函数 函数原型： str.rfind( substr [, pos_start [,pos_ end ] ]) 返回str中最后出现的substr的第一个字母的标号，如果str中没有substr则返回-1，也就是说从右边算起的第一次出现的substr的首字母标号。 参数说明： str：代表原字符串 substr：代表要查找的字符串 pos_start：代表查找的开始位置，默认是从下标0开始查找 pos_end：代表查找的结束位置 例子： &#39;adsfddf&#39;.rfind(&#39;d&#39;) # 5 d、str.rindex()：倒序字符串查找函数 rindex()函数类似于rfind()函数，在Python中也是在字符串中倒序查找子串最后一次出现的位置，跟rfind()不同的是，未找到则抛出异常。 函数原型： str.rindex(substr [, pos_start, [ pos_end ] ] ) 参数说明： str：代表原字符串 substr：代表要查找的字符串 pos_start：代表查找的开始位置，默认是从下标0开始查找 pos_end：代表查找的结束位置 例子： &#39;adsfddf&#39;.rindex(&#39;d&#39;) # 5 e、使用re模块进行查找和替换： 函数 说明 re.match(pat, s) 只从字符串s的头开始匹配，比如(‘123’, ‘12345’)匹配上了，而(‘123’,’01234’)就是没有匹配上，没有匹配上返回None，匹配上返回matchobject re.search(pat, s) 从字符串s的任意位置都进行匹配，比如(‘123’,’01234’)就是匹配上了，只要s只能存在符合pat的连续字符串就算匹配上了，没有匹配上返回None，匹配上返回matchobject re.sub(pat,newpat,s) re.sub(pat,newpat,s) 对字符串中s的包含的所有符合pat的连续字符串进行替换，如果newpat为str,那么就是替换为newpat,如果newpat是函数，那么就按照函数返回值替换。sub函数两个有默认值的参数分别是count表示最多只处理前几个匹配的字符串，默认为0表示全部处理；最后一个是flags，默认为0 f、使用replace()进行替换： 基本用法：对象.replace(rgExp,replaceText,max) 其中，rgExp和replaceText是必须要有的，max是可选的参数，可以不加。 rgExp是指正则表达式模式或可用标志的正则表达式对象，也可以是 String 对象或文字； replaceText是一个String 对象或字符串文字； max是一个数字。 对于一个对象，在对象的每个rgExp都替换成replaceText，从左到右最多max次。 s1=&#39;hello world&#39; s1.replace(&#39;world&#39;,&#39;liming&#39;) 97.用Python匹配HTML tag的时候，&lt;.&gt; 和 &lt;.?&gt; 有什么区别第一个代表贪心匹配，第二个代表非贪心； ?在一般正则表达式里的语法是指的&quot;零次或一次匹配左边的字符或表达式&quot;相当于{0,1} 而当?后缀于*,+,?,{n},{n,},{n,m}之后，则代表非贪心匹配模式，也就是说，尽可能少的匹配左边的字符或表达式，这里是尽可能少的匹配.(任意字符) 所以：第一种写法是，尽可能多的匹配，就是匹配到的字符串尽量长，第二中写法是尽可能少的匹配，就是匹配到的字符串尽量短。 比如&lt;tag&gt;tag&gt;tag&gt;end，第一个会匹配&lt;tag&gt;tag&gt;tag&gt;,第二个会匹配&lt;tag&gt;。 98.正则表达式贪婪与非贪婪模式的区别？贪婪模式： 定义：正则表达式去匹配时，会尽量多的匹配符合条件的内容 标识符：+，?，*，{n}，{n,}，{n,m} 匹配时，如果遇到上述标识符，代表是贪婪匹配，会尽可能多的去匹配内容 非贪婪模式： 定义：正则表达式去匹配时，会尽量少的匹配符合条件的内容 也就是说，一旦发现匹配符合要求，立马就匹配成功，而不会继续匹配下去(除非有g，开启下一组匹配) 标识符：+?，??，*?，{n}?，{n,}?，{n,m}? 可以看到，非贪婪模式的标识符很有规律，就是贪婪模式的标识符后面加上一个? 参考文章：https://dailc.github.io/2017/07/06/regularExpressionGreedyAndLazy.html 99.写出开头匹配字母和下划线，末尾是数字的正则表达式？s1=&#39;_aai0efe00&#39; res=re.findall(&#39;^[a-zA-Z_]?[a-zA-Z0-9_]{1,}\d$&#39;,s1) print(res) 100.正则表达式操作101.请匹配出变量A 中的json字符串。102.怎么过滤评论中的表情？思路：主要是匹配表情包的范围，将表情包的范围用空替换掉 import re pattern = re.compile(u&#39;[\uD800-\uDBFF][\uDC00-\uDFFF]&#39;) pattern.sub(&#39;&#39;,text) 103.简述Python里面search和match的区别match()函数只检测字符串开头位置是否匹配，匹配成功才会返回结果，否则返回None； search()函数会在整个字符串内查找模式匹配,只到找到第一个匹配然后返回一个包含匹配信息的对象,该对象可以通过调用group()方法得到匹配的字符串,如果字符串没有匹配，则返回None。 104.请写出匹配ip的Python正则表达式105.Python里match与search的区别？见103题 系统编程106.进程总结进程：程序运行在操作系统上的一个实例，就称之为进程。进程需要相应的系统资源：内存、时间片、pid。创建进程：首先要导入multiprocessing中的Process：创建一个Process对象;创建Process对象时，可以传递参数; p = Process(target=XXX,args=(tuple,),kwargs={key:value}) target = XXX 指定的任务函数，不用加(), args=(tuple,)kwargs={key:value}给任务函数传递的参数 使用start()启动进程结束进程给子进程指定函数传递参数Demo import os from mulitprocessing import Process import time def pro_func(name,age,**kwargs): for i in range(5): print(&quot;子进程正在运行中，name=%s,age=%d,pid=%d&quot;%(name,age,os.getpid())) print(kwargs) time.sleep(0.2) if __name__ ==&quot;__main__&quot;: #创建Process对象 p = Process(target=pro_func,args=(&#39;小明&#39;,18),kwargs={&#39;m&#39;:20}) #启动进程 p.start() time.sleep(1) #1秒钟之后，立刻结束子进程 p.terminate() p.join() 注意：进程间不共享全局变量 进程之间的通信-Queue 在初始化Queue()对象时（例如q=Queue(),若在括号中没有指定最大可接受的消息数量，获数量为负值时，那么就代表可接受的消息数量没有上限一直到内存尽头） Queue.qsize():返回当前队列包含的消息数量 Queue.empty():如果队列为空，返回True，反之False Queue.full():如果队列满了，返回True,反之False Queue.get([block[,timeout]]):获取队列中的一条消息，然后将其从队列中移除， block默认值为True。 如果block使用默认值，且没有设置timeout（单位秒),消息队列如果为空，此时程序将被阻塞（停在读中状态），直到消息队列读到消息为止，如果设置了timeout，则会等待timeout秒，若还没读取到任何消息，则抛出“Queue.Empty”异常： Queue.get_nowait()相当于Queue.get(False) Queue.put(item,[block[,timeout]]):将item消息写入队列，block默认值为True;如果block使用默认值，且没有设置timeout（单位秒），消息队列如果已经没有空间可写入，此时程序将被阻塞（停在写入状态），直到从消息队列腾出空间为止，如果设置了timeout，则会等待timeout秒，若还没空间，则抛出”Queue.Full”异常如果block值为False，消息队列如果没有空间可写入，则会立刻抛出”Queue.Full”异常;Queue.put_nowait(item):相当Queue.put(item,False) 进程间通信Demo: from multiprocessing import Process.Queue import os,time,random #写数据进程执行的代码： def write(q): for value in [&#39;A&#39;,&#39;B&#39;,&#39;C&#39;]: print(&quot;Put %s to queue...&quot;,%value) q.put(value) time.sleep(random.random()) #读数据进程执行的代码 def read(q): while True: if not q.empty(): value = q.get(True) print(&quot;Get %s from queue.&quot;,%value) time.sleep(random.random()) else: break if __name__==&#39;__main__&#39;: #父进程创建Queue，并传给各个子进程 q = Queue() pw = Process(target=write,args=(q,)) pr = Process(target=read,args=(q,)) #启动子进程pw ，写入： pw.start() #等待pw结束 pw.join() #启动子进程pr，读取： pr.start() pr.join() #pr 进程里是死循环，无法等待其结束，只能强行终止: print(&#39;&#39;) print(&#39;所有数据都写入并且读完&#39;) 进程池Pool #coding:utf-8 from multiprocessing import Pool import os,time,random def worker(msg): t_start = time.time() print(&quot;%s 开始执行，进程号为%d&quot;%(msg,os.getpid())) # random.random()随机生成0-1之间的浮点数 time.sleep(random.random()*2) t_stop = time.time() print(msg,&quot;执行完毕，耗时%0.2f”%（t_stop-t_start)) po = Pool(3)#定义一个进程池，最大进程数3 for i in range(0,10): po.apply_async(worker,(i,)) print(&quot;---start----&quot;) po.close() po.join() print(&quot;----end----&quot;) 进程池中使用Queue 如果要使用Pool创建进程，就需要使用multiprocessing.Manager()中的Queue(),而不是multiprocessing.Queue(),否则会得到如下的错误信息： RuntimeError： Queue objects should only be shared between processs through inheritance from multiprocessing import Manager,Pool import os,time,random def reader(q): print(&quot;reader 启动(%s),父进程为（%s)&quot;%(os.getpid(),os.getpid())) for i in range(q.qsize()): print(&quot;reader 从Queue获取到消息:%s&quot;%q.get(True)) def writer(q): print(&quot;writer 启动（%s),父进程为(%s)&quot;%(os.getpid(),os.getpid())) for i ini &quot;itcast&quot;: q.put(i) if __name__ == &quot;__main__&quot;: print(&quot;(%s)start&quot;%os.getpid()) q = Manager().Queue()#使用Manager中的Queue po = Pool() po.apply_async(wrtier,(q,)) time.sleep(1) po.apply_async(reader,(q,)) po.close() po.join() print(&quot;(%s)End&quot;%os.getpid()) 107.谈谈你对多进程，多线程，以及协程的理解，项目是否用？这个问题被问的概念相当之大，进程：一个运行的程序（代码）就是一个进程，没有运行的代码叫程序，进程是系统资源分配的最小单位，进程拥有自己独立的内存空间，所有进程间数据不共享，开销大。 线程: cpu调度执行的最小单位，也叫执行路径，不能独立存在，依赖进程存在，一个进程至少有一个线程，叫主线程，而多个线程共享内存（数据共享，共享全局变量),从而极大地提高了程序的运行效率。 协程: 是一种用户态的轻量级线程，协程的调度完全由用户控制。协程拥有自己的寄存器上下文和栈。协程调度时，将寄存器上下文和栈保存到其他地方，在切回来的时候，恢复先前保存的寄存器上下文和栈，直接操中栈则基本没有内核切换的开销，可以不加锁的访问全局变量，所以上下文的切换非常快。 108.Python异步使用场景有那些？异步的使用场景: 1、 不涉及共享资源，获对共享资源只读，即非互斥操作 2、 没有时序上的严格关系 3、 不需要原子操作，或可以通过其他方式控制原子性 4、 常用于IO操作等耗时操作，因为比较影响客户体验和使用性能 5、 不影响主线程逻辑 109.多线程共同操作同一个数据互斥锁同步？import threading import time class MyThread(threading.Thread): def run(self): global num time.sleep(1) if mutex.acquire(1): num +=1 msg = self.name + &#39;set num to &#39; +str(num) print msg mutex.release() num = 0 mutex = threading.Lock() def test(): for i in range(5): t = MyThread() t.start() if __name__==&quot;__main__&quot;: test() 110.什么是多线程竞争？线程是非独立的，同一个进程里线程是数据共享的，当各个线程访问数据资源时会出现竞争状态即：数据几乎同步会被多个线程占用，造成数据混乱，即所谓的线程不安全 那么怎么解决多线程竞争问题？—锁 锁的好处： 确保了某段关键代码（共享数据资源）只能由一个线程从头到尾完整地执行能解决多线程资源竞争下的原子操作问题。 锁的坏处： 阻止了多线程并发执行，包含锁的某段代码实际上只能以单线程模式执行，效率就大大地下降了 锁的致命问题: 死锁 111.请介绍一下Python的线程同步？ 一、 setDaemon(False)当一个进程启动之后，会默认产生一个主线程，因为线程是程序执行的最小单位，当设置多线程时，主线程会创建多个子线程，在Python中，默认情况下就是setDaemon(False),主线程执行完自己的任务以后，就退出了，此时子线程会继续执行自己的任务，直到自己的任务结束。 例子 import threading import time def thread(): time.sleep(2) print(&#39;---子线程结束---&#39;) def main(): t1 = threading.Thread(target=thread) t1.start() print(&#39;---主线程--结束&#39;) if __name__ ==&#39;__main__&#39;: main() #执行结果 ---主线程--结束 ---子线程结束--- 二、 setDaemon（True)当我们使用setDaemon(True)时，这是子线程为守护线程，主线程一旦执行结束，则全部子线程被强制终止 例子 import threading import time def thread(): time.sleep(2) print(’---子线程结束---&#39;) def main(): t1 = threading.Thread(target=thread) t1.setDaemon(True)#设置子线程守护主线程 t1.start() print(&#39;---主线程结束---&#39;) if __name__ ==&#39;__main__&#39;: main() #执行结果 ---主线程结束--- #只有主线程结束，子线程来不及执行就被强制结束 三、 join（线程同步)join 所完成的工作就是线程同步，即主线程任务结束以后，进入堵塞状态，一直等待所有的子线程结束以后，主线程再终止。 当设置守护线程时，含义是主线程对于子线程等待timeout的时间将会杀死该子线程，最后退出程序，所以说，如果有10个子线程，全部的等待时间就是每个timeout的累加和，简单的来说，就是给每个子线程一个timeou的时间，让他去执行，时间一到，不管任务有没有完成，直接杀死。 没有设置守护线程时，主线程将会等待timeout的累加和这样的一段时间，时间一到，主线程结束，但是并没有杀死子线程，子线程依然可以继续执行，直到子线程全部结束，程序退出。 例子 import threading import time def thread(): time.sleep(2) print(&#39;---子线程结束---&#39;) def main(): t1 = threading.Thread(target=thread) t1.setDaemon(True) t1.start() t1.join(timeout=1)#1 线程同步，主线程堵塞1s 然后主线程结束，子线程继续执行 #2 如果不设置timeout参数就等子线程结束主线程再结束 #3 如果设置了setDaemon=True和timeout=1主线程等待1s后会强制杀死子线程，然后主线程结束 print(&#39;---主线程结束---&#39;) if __name__==&#39;__main___&#39;: main() 112.解释以下什么是锁，有哪几种锁？锁(Lock)是python提供的对线程控制的对象。有互斥锁，可重入锁，死锁。 113.什么是死锁？若干子线程在系统资源竞争时，都在等待对方对某部分资源解除占用状态，结果是谁也不愿先解锁，互相干等着，程序无法执行下去，这就是死锁。 GIL锁 全局解释器锁 作用： 限制多线程同时执行，保证同一时间只有一个线程执行，所以cython里的多线程其实是伪多线程！ 所以python里常常使用协程技术来代替多线程，协程是一种更轻量级的线程。 进程和线程的切换时由系统决定，而协程由我们程序员自己决定，而模块gevent下切换是遇到了耗时操作时才会切换 三者的关系：进程里有线程，线程里有协程。 114.多线程交互访问数据，如果访问到了就不访问了？怎么避免重读？ 创建一个已访问数据列表，用于存储已经访问过的数据，并加上互斥锁，在多线程访问数据的时候先查看数据是否在已访问的列表中，若已存在就直接跳过。 115.什么是线程安全，什么是互斥锁？每个对象都对应于一个可称为’互斥锁‘的标记，这个标记用来保证在任一时刻，只能有一个线程访问该对象。 同一进程中的多线程之间是共享系统资源的，多个线程同时对一个对象进行操作，一个线程操作尚未结束，另一线程已经对其进行操作，导致最终结果出现错误，此时需要对被操作对象添加互斥锁，保证每个线程对该对象的操作都得到正确的结果。 116.说说下面几个概念：同步，异步，阻塞，非阻塞？同步： 多个任务之间有先后顺序执行，一个执行完下个才能执行。 异步： 多个任务之间没有先后顺序，可以同时执行，有时候一个任务可能要在必要的时候获取另一个同时执行的任务的结果，这个就叫回调！ 阻塞： 如果卡住了调用者，调用者不能继续往下执行，就是说调用者阻塞了。 非阻塞： 如果不会卡住，可以继续执行，就是说非阻塞的。 同步异步相对于多任务而言，阻塞非阻塞相对于代码执行而言。 117.什么是僵尸进程和孤儿进程？怎么避免僵尸进程？孤儿进程： 父进程退出，子进程还在运行的这些子进程都是孤儿进程，孤儿进程将被init 进程（进程号为1）所收养，并由init 进程对他们完成状态收集工作。 僵尸进程： 进程使用fork 创建子进程，如果子进程退出，而父进程并没有调用wait 获waitpid 获取子进程的状态信息，那么子进程的进程描述符仍然保存在系统中的这些进程是僵尸进程。 避免僵尸进程的方法： 1.fork 两次用孙子进程去完成子进程的任务 2.用wait()函数使父进程阻塞 3.使用信号量，在signal handler 中调用waitpid,这样父进程不用阻塞 118.python中进程与线程的使用场景？多进程适合在CPU密集操作（cpu操作指令比较多，如位多的的浮点运算）。 多线程适合在IO密性型操作（读写数据操作比多的的，比如爬虫） 119.线程是并发还是并行，进程是并发还是并行？线程是并发，进程是并行; 进程之间互相独立，是系统分配资源的最小单位，同一个线程中的所有线程共享资源。 120.并行(parallel)和并发（concurrency)?并行： 同一时刻多个任务同时在运行 不会在同一时刻同时运行，存在交替执行的情况。 实现并行的库有： multiprocessing 实现并发的库有: threading 程序需要执行较多的读写、请求和回复任务的需要大量的IO操作，IO密集型操作使用并发更好。 CPU运算量大的程序，使用并行会更好 121.IO密集型和CPU密集型区别？IO密集型： 系统运行，大部分的状况是CPU在等 I/O（硬盘/内存）的读/写 CPU密集型： 大部分时间用来做计算，逻辑判断等CPU动作的程序称之CPU密集型。 122.python asyncio的原理？asyncio这个库就是使用python的yield这个可以打断保存当前函数的上下文的机制， 封装好了selector 摆脱掉了复杂的回调关系 网络编程123.怎么实现强行关闭客户端和服务器之间的连接?124.简述TCP和UDP的区别以及优缺点?125.简述浏览器通过WSGI请求动态资源的过程?浏览器发送的请求被Nginx监听到，Nginx根据请求的URL的PATH或者后缀把请求静态资源的分发到静态资源的目录，别的请求根据配置好的转发到相应端口。实现了WSGI的程序会监听某个端口，监听到Nginx转发过来的请求接收后(一般用socket的recv来接收HTTP的报文)以后把请求的报文封装成environ的字典对象，然后再提供一个start_response的方法。把这两个对象当成参数传入某个方法比如wsgi_app(environ, start_response)或者实现了__call__(self, environ, start_response)方法的某个实例。这个实例再调用start_response返回给实现了WSGI的中间件，再由中间件返回给Nginx。 126.描述用浏览器访问www.baidu.com的过程127.Post和Get请求的区别?128.cookie 和session 的区别？129.列出你知道的HTTP协议的状态码，说出表示什么意思？130.请简单说一下三次握手和四次挥手？131.说一下什么是tcp的2MSL？132.为什么客户端在TIME-WAIT状态必须等待2MSL的时间？133.说说HTTP和HTTPS区别？134.谈一下HTTP协议以及协议头部中表示数据类型的字段？135.HTTP请求方法都有什么？136.使用Socket套接字需要传入哪些参数 ？137.HTTP常见请求头？138.七层模型？139.url的形式？WebFlask140.对Flask蓝图(Blueprint)的理解？蓝图的定义 蓝图 /Blueprint 是Flask应用程序组件化的方法，可以在一个应用内或跨越多个项目共用蓝图。使用蓝图可以极大简化大型应用的开发难度，也为Flask扩展提供了一种在应用中注册服务的集中式机制。 蓝图的应用场景： 把一个应用分解为一个蓝图的集合。这对大型应用是理想的。一个项目可以实例化一个应用对象，初始化几个扩展，并注册一集合的蓝图。 以URL前缀和/或子域名，在应用上注册一个蓝图。URL前缀/子域名中的参数即成为这个蓝图下的所有视图函数的共同的视图参数（默认情况下）在一个应用中用不同的URL规则多次注册一个蓝图。 通过蓝图提供模板过滤器、静态文件、模板和其他功能。一个蓝图不一定要实现应用或视图函数。 初始化一个Flask扩展时，在这些情况中注册一个蓝图。 蓝图的缺点： 不能在应用创建后撤销注册一个蓝图而不销毁整个应用对象。 使用蓝图的三个步骤 1.创建一个蓝图对象 blue = Blueprint(&quot;blue&quot;,__name__) 2.在这个蓝图对象上进行操作，例如注册路由、指定静态文件夹、注册模板过滤器… @blue.route(&#39;/&#39;) def blue_index(): return &quot;Welcome to my blueprint&quot; 3.在应用对象上注册这个蓝图对象 app.register_blueprint(blue,url_prefix=&quot;/blue&quot;) 141.Flask 和 Django 路由映射的区别？ 在django中，路由是浏览器访问服务器时，先访问的项目中的url，再由项目中的url找到应用中url，这些url是放在一个列表里，遵从从前往后匹配的规则。在flask中，路由是通过装饰器给每个视图函数提供的，而且根据请求方式的不同可以一个url用于不同的作用。 Django142.什么是wsgi,uwsgi,uWSGI?WSGI: web服务器网关接口，是一套协议。用于接收用户请求并将请求进行初次封装，然后将请求交给web框架。 实现wsgi协议的模块：wsgiref,本质上就是编写一socket服务端，用于接收用户请求（django) werkzeug,本质上就是编写一个socket服务端，用于接收用户请求(flask) uwsgi: 与WSGI一样是一种通信协议，它是uWSGI服务器的独占协议，用于定义传输信息的类型。uWSGI: 是一个web服务器，实现了WSGI的协议，uWSGI协议，http协议 143.Django、Flask、Tornado的对比？1、 Django走的大而全的方向，开发效率高。它的MTV框架，自带的ORM,admin后台管理,自带的sqlite数据库和开发测试用的服务器，给开发者提高了超高的开发效率。重量级web框架，功能齐全，提供一站式解决的思路，能让开发者不用在选择上花费大量时间。 自带ORM和模板引擎，支持jinja等非官方模板引擎。 自带ORM使Django和关系型数据库耦合度高，如果要使用非关系型数据库，需要使用第三方库 自带数据库管理app 成熟，稳定，开发效率高，相对于Flask，Django的整体封闭性比较好，适合做企业级网站的开发。python web框架的先驱，第三方库丰富 2、 Flask 是轻量级的框架，自由，灵活，可扩展性强，核心基于Werkzeug WSGI工具 和jinja2 模板引擎 适用于做小网站以及web服务的API,开发大型网站无压力，但架构需要自己设计 与关系型数据库的结合不弱于Django，而与非关系型数据库的结合远远优于Django 3、 Tornado走的是少而精的方向，性能优越，它最出名的异步非阻塞的设计方式 Tornado的两大核心模块： iostraem:对非阻塞的socket进行简单的封装 ioloop: 对I/O 多路复用的封装,它实现一个单例 144.CORS 和 CSRF的区别？什么是CORS？ CORS是一个W3C标准,全称是“跨域资源共享”(Cross-origin resoure sharing).它允许浏览器向跨源服务器，发出XMLHttpRequest请求，从而客服了AJAX只能同源使用的限制。 什么是CSRF？ CSRF主流防御方式是在后端生成表单的时候生成一串随机token,内置到表单里成为一个字段，同时，将此串token置入session中。每次表单提交到后端时都会检查这两个值是否一致，以此来判断此次表单提交是否是可信的，提交过一次之后，如果这个页面没有生成CSRF token,那么token将会被清空,如果有新的需求，那么token会被更新。攻击者可以伪造POST表单提交，但是他没有后端生成的内置于表单的token，session中没有token都无济于事。 145.Session,Cookie,JWT的理解为什么要使用会话管理 众所周知，HTTP协议是一个无状态的协议，也就是说每个请求都是一个独立的请求，请求与请求之间并无关系。但在实际的应用场景，这种方式并不能满足我们的需求。举个大家都喜欢用的例子，把商品加入购物车，单独考虑这个请求，服务端并不知道这个商品是谁的，应该加入谁的购物车？因此这个请求的上下文环境实际上应该包含用户的相关信息，在每次用户发出请求时把这一小部分额外信息，也做为请求的一部分，这样服务端就可以根据上下文中的信息，针对具体的用户进行操作。所以这几种技术的出现都是对HTTP协议的一个补充，使得我们可以用HTTP协议+状态管理构建一个的面向用户的WEB应用。 Session 和Cookie的区别 这里我想先谈谈session与cookies,因为这两个技术是做为开发最为常见的。那么session与cookies的区别是什么？个人认为session与cookies最核心区别在于额外信息由谁来维护。利用cookies来实现会话管理时，用户的相关信息或者其他我们想要保持在每个请求中的信息，都是放在cookies中,而cookies是由客户端来保存，每当客户端发出新请求时，就会稍带上cookies,服务端会根据其中的信息进行操作。 当利用session来进行会话管理时，客户端实际上只存了一个由服务端发送的session_id,而由这个session_id,可以在服务端还原出所需要的所有状态信息，从这里可以看出这部分信息是由服务端来维护的。 除此以外，session与cookies都有一些自己的缺点： cookies的安全性不好，攻击者可以通过获取本地cookies进行欺骗或者利用cookies进行CSRF攻击。使用cookies时,在多个域名下，会存在跨域问题。session 在一定的时间里，需要存放在服务端，因此当拥有大量用户时，也会大幅度降低服务端的性能，当有多台机器时，如何共享session也会是一个问题.(redis集群)也就是说，用户第一个访问的时候是服务器A，而第二个请求被转发给了服务器B，那服务器B如何得知其状态。实际上，session与cookies是有联系的，比如我们可以把session_id存放在cookies中的。 JWT是如何工作的 首先用户发出登录请求，服务端根据用户的登录请求进行匹配，如果匹配成功，将相关的信息放入payload中，利用算法，加上服务端的密钥生成token，这里需要注意的是secret_key很重要，如果这个泄露的话，客户端就可以随机篡改发送的额外信息，它是信息完整性的保证。生成token后服务端将其返回给客户端，客户端可以在下次请求时，将token一起交给服务端，一般是说我们可以将其放在Authorization首部中，这样也就可以避免跨域问题。 146.简述Django请求生命周期一般是用户通过浏览器向我们的服务器发起一个请求(request),这个请求会去访问视图函数，如果不涉及到数据调用，那么这个时候视图函数返回一个模板也就是一个网页给用户）视图函数调用模型毛模型去数据库查找数据，然后逐级返回，视图函数把返回的数据填充到模板中空格中，最后返回网页给用户。 1.wsgi ,请求封装后交给web框架（Flask，Django) 2.中间件，对请求进行校验或在请求对象中添加其他相关数据，例如：csrf,request.session 3.路由匹配 根据浏览器发送的不同url去匹配不同的视图函数 4.视图函数，在视图函数中进行业务逻辑的处理，可能涉及到：orm，templates 5.中间件，对响应的数据进行处理 6.wsgi，将响应的内容发送给浏览器 147.用的restframework完成api发送时间时区当前的问题是用django的rest framework模块做一个get请求的发送时间以及时区信息的api class getCurrenttime(APIView): def get(self,request): local_time = time.localtime() time_zone =settings.TIME_ZONE temp = {&#39;localtime&#39;:local_time,&#39;timezone&#39;:time_zone} return Response(temp) 148.nginx,tomcat,apach到都是什么？Nginx（engine x)是一个高性能的HTTP和反向代理服务器，也是 一个IMAP/POP3/SMTP服务器，工作在OSI七层，负载的实现方式：轮询，IP_HASH,fair,session_sticky.Apache HTTP Server是一个模块化的服务器，源于NCSAhttpd服务器Tomcat 服务器是一个免费的开放源代码的Web应用服务器，属于轻量级应用服务器，是开发和调试JSP程序的首选。 149.请给出你熟悉关系数据库范式有哪些，有什么作用？在进行数据库的设计时，所遵循的一些规范，只要按照设计规范进行设计，就能设计出没有数据冗余和数据维护异常的数据库结构。 数据库的设计的规范有很多，通常来说我们在设是数据库时只要达到其中一些规范就可以了，这些规范又称之为数据库的三范式，一共有三条，也存在着其他范式，我们只要做到满足前三个范式的要求，就能设陈出符合我们的数据库了，我们也不能全部来按照范式的要求来做，还要考虑实际的业务使用情况，所以有时候也需要做一些违反范式的要求。1.数据库设计的第一范式(最基本)，基本上所有数据库的范式都是符合第一范式的，符合第一范式的表具有以下几个特点： 数据库表中的所有字段都只具有单一属性，单一属性的列是由基本的数据类型（整型，浮点型，字符型等）所构成的设计出来的表都是简单的二比表 2.数据库设计的第二范式(是在第一范式的基础上设计的)，要求一个表中只具有一个业务主键，也就是说符合第二范式的表中不能存在非主键列对只对部分主键的依赖关系 3.数据库设计的第三范式，指每一个非主属性既不部分依赖与也不传递依赖于业务主键，也就是第二范式的基础上消除了非主属性对主键的传递依赖 150.简述QQ登陆过程qq登录，在我们的项目中分为了三个接口， 第一个接口是请求qq服务器返回一个qq登录的界面; 第二个接口是通过扫码或账号登陆进行验证，qq服务器返回给浏览器一个code和state,利用这个code通过本地服务器去向qq服务器获取access_token覆返回给本地服务器，凭借access_token再向qq服务器获取用户的openid(openid用户的唯一标识) 第三个接口是判断用户是否是第一次qq登录，如果不是的话直接登录返回的jwt-token给用户，对没有绑定过本网站的用户，对openid进行加密生成token进行绑定 151.post 和 get的区别?1.GET是从服务器上获取数据，POST是向服务器传送数据 2.在客户端，GET方式在通过URL提交数据，数据在URL中可以看到，POST方式，数据放置在HTML——HEADER内提交 3.对于GET方式，服务器端用Request.QueryString获取变量的值，对于POST方式，服务器端用Request.Form获取提交的数据 152.项目中日志的作用一、日志相关概念 1.日志是一种可以追踪某些软件运行时所发生事件的方法 2.软件开发人员可以向他们的代码中调用日志记录相关的方法来表明发生了某些事情 3.一个事件可以用一个包含可选变量数据的消息来描述 4.此外，事件也有重要性的概念，这个重要性也可以被成为严重性级别(level) 二、日志的作用 1.通过log的分析，可以方便用户了解系统或软件、应用的运行情况; 2.如果你的应用log足够丰富，可以分析以往用户的操作行为、类型喜好，地域分布或其他更多信息; 3.如果一个应用的log同时也分了多个级别，那么可以很轻易地分析得到该应用的健康状况，及时发现问题并快速定位、解决问题，补救损失。 4.简单来讲就是我们通过记录和分析日志可以了解一个系统或软件程序运行情况是否正常，也可以在应用程序出现故障时快速定位问题。不仅在开发中，在运维中日志也很重要，日志的作用也可以简单。总结为以下几点： 1.程序调试 2.了解软件程序运行情况，是否正常 3,软件程序运行故障分析与问题定位 4,如果应用的日志信息足够详细和丰富，还可以用来做用户行为分析 153.django中间件的使用？Django在中间件中预置了六个方法，这六个方法的区别在于不同的阶段执行，对输入或输出进行干预，方法如下： 1.初始化：无需任何参数，服务器响应第一个请求的时候调用一次，用于确定是否启用当前中间件 def __init__(): pass 2.处理请求前：在每个请求上调用，返回None或HttpResponse对象。 def process_request(request): pass 3.处理视图前:在每个请求上调用，返回None或HttpResponse对象。 def process_view(request,view_func,view_args,view_kwargs): pass 4.处理模板响应前：在每个请求上调用，返回实现了render方法的响应对象。 def process_template_response(request,response): pass 5.处理响应后：所有响应返回浏览器之前被调用，在每个请求上调用，返回HttpResponse对象。 def process_response(request,response): pass 6.异常处理：当视图抛出异常时调用，在每个请求上调用，返回一个HttpResponse对象。 def process_exception(request,exception): pass 154.谈一下你对uWSGI和nginx的理解？1.uWSGI是一个Web服务器，它实现了WSGI协议、uwsgi、http等协议。Nginx中HttpUwsgiModule的作用是与uWSGI服务器进行交换。WSGI是一种Web服务器网关接口。它是一个Web服务器（如nginx，uWSGI等服务器）与web应用（如用Flask框架写的程序）通信的一种规范。 要注意WSGI/uwsgi/uWSGI这三个概念的区分。 WSGI是一种通信协议。 uwsgi是一种线路协议而不是通信协议，在此常用于在uWSGI服务器与其他网络服务器的数据通信。 uWSGI是实现了uwsgi和WSGI两种协议的Web服务器。 nginx 是一个开源的高性能的HTTP服务器和反向代理： 1.作为web服务器，它处理静态文件和索引文件效果非常高 2.它的设计非常注重效率，最大支持5万个并发连接，但只占用很少的内存空间 3.稳定性高，配置简洁。 4.强大的反向代理和负载均衡功能，平衡集群中各个服务器的负载压力应用 155.Python中三大框架各自的应用场景？django:主要是用来搞快速开发的，他的亮点就是快速开发，节约成本，,如果要实现高并发的话，就要对django进行二次开发，比如把整个笨重的框架给拆掉自己写socket实现http的通信,底层用纯c,c++写提升效率，ORM框架给干掉，自己编写封装与数据库交互的框架,ORM虽然面向对象来操作数据库，但是它的效率很低，使用外键来联系表与表之间的查询;flask: 轻量级，主要是用来写接口的一个框架，实现前后端分离，提考开发效率，Flask本身相当于一个内核，其他几乎所有的功能都要用到扩展(邮件扩展Flask-Mail，用户认证Flask-Login),都需要用第三方的扩展来实现。比如可以用Flask-extension加入ORM、文件上传、身份验证等。Flask没有默认使用的数据库，你可以选择MySQL，也可以用NoSQL。 其WSGI工具箱用Werkzeug(路由模块)，模板引擎则使用Jinja2,这两个也是Flask框架的核心。 Tornado： Tornado是一种Web服务器软件的开源版本。Tornado和现在的主流Web服务器框架（包括大多数Python的框架）有着明显的区别：它是非阻塞式服务器，而且速度相当快。得利于其非阻塞的方式和对epoll的运用，Tornado每秒可以处理数以千计的连接因此Tornado是实时Web服务的一个理想框架 156.Django中哪里用到了线程？哪里用到了协程？哪里用到了进程？1.Django中耗时的任务用一个进程或者线程来执行，比如发邮件，使用celery. 2.部署django项目是时候，配置文件中设置了进程和协程的相关配置。 157.有用过Django REST framework吗？Django REST framework是一个强大而灵活的Web API工具。使用RESTframework的理由有： Web browsable API对开发者有极大的好处 包括OAuth1a和OAuth2的认证策略 支持ORM和非ORM数据资源的序列化 全程自定义开发–如果不想使用更加强大的功能，可仅仅使用常规的function-based views额外的文档和强大的社区支持 158.对cookies与session的了解？他们能单独用吗？Session采用的是在服务器端保持状态的方案，而Cookie采用的是在客户端保持状态的方案。但是禁用Cookie就不能得到Session。因为Session是用Session ID来确定当前对话所对应的服务器Session，而Session ID是通过Cookie来传递的，禁用Cookie相当于SessionID,也就得不到Session。 爬虫159.试列出至少三种目前流行的大型数据库160.列举您使用过的Python网络爬虫所用到的网络数据包?requests, urllib,urllib2, httplib2 161.爬取数据后使用哪个数据库存储数据的，为什么？162.你用过的爬虫框架或者模块有哪些？优缺点？Python自带：urllib,urllib2 第三方：requests 框架： Scrapy urllib 和urllib2模块都做与请求URL相关的操作，但他们提供不同的功能。 urllib2: urllib2.urlopen可以接受一个Request对象或者url,(在接受Request对象时，并以此可以来设置一个URL的headers),urllib.urlopen只接收一个url。 urllib 有urlencode,urllib2没有，因此总是urllib, urllib2常会一起使用的原因 scrapy是封装起来的框架，他包含了下载器，解析器，日志及异常处理，基于多线程，twisted的方式处理，对于固定单个网站的爬取开发，有优势，但是对于多网站爬取100个网站，并发及分布式处理不够灵活，不便调整与扩展 requests是一个HTTP库，它只是用来请求，它是一个强大的库，下载，解析全部自己处理，灵活性高 Scrapy优点：异步，xpath，强大的统计和log系统，支持不同url。shell方便独立调试。写middleware方便过滤。通过管道存入数据库 163.写爬虫是用多进程好？还是多线程好？164.常见的反爬虫和应对方法？165.解析网页的解析器使用最多的是哪几个?166.需要登录的网页，如何解决同时限制ip，cookie,session167.验证码的解决?168.使用最多的数据库，对他们的理解？169.编写过哪些爬虫中间件？170.“极验”滑动验证码如何破解？171.爬虫多久爬一次，爬下来的数据是怎么存储？172.cookie过期的处理问题？173.动态加载又对及时性要求很高怎么处理？174.HTTPS有什么优点和缺点？175.HTTPS是如何实现安全传输数据的？176.TTL，MSL，RTT各是什么？177.谈一谈你对Selenium和PhantomJS了解178.平常怎么使用代理的 ？179.存放在数据库(redis、mysql等)。180.怎么监控爬虫的状态?181.描述下scrapy框架运行的机制？182.谈谈你对Scrapy的理解？183.怎么样让 scrapy 框架发送一个 post 请求（具体写出来）184.怎么监控爬虫的状态 ？185.怎么判断网站是否更新？186.图片、视频爬取怎么绕过防盗连接187.你爬出来的数据量大概有多大？大概多长时间爬一次？188.用什么数据库存爬下来的数据？部署是你做的吗？怎么部署？189.增量爬取190.爬取下来的数据如何去重，说一下scrapy的具体的算法依据。191.Scrapy的优缺点?192.怎么设置爬取深度？193.scrapy和scrapy-redis有什么区别？为什么选择redis数据库？194.分布式爬虫主要解决什么问题？195.什么是分布式存储？196.你所知道的分布式爬虫方案有哪些？197.scrapy-redis，有做过其他的分布式爬虫吗？数据库MySQL198.主键 超键 候选键 外键主键：数据库表中对存储数据对象予以唯一和完整标识的数据列或属性的组合。一个数据列只能有一个主键，且主键的取值不能缺失，即不能为空值(Null). 超键：在关系中能唯一标识元组的属性集称为关系模式的超键。一个属性可以作为一个超键，多个属性组合在一起也可以作为一个超键。超键包含候选键和主键。 候选键：是最小超键，即没有冗余元素的超键。 外键：在一个表中存在的另一个表的主键称此表的外键。 199.视图的作用，视图可以更改么？视图是虚拟的表，与包含数据的表不一样，视图只包含使用时动态检索数据的查询;不包含任何列或数据。使用视图可以简化复杂的sql操作，隐藏具体的细节，保护数据;视图创建后，可以使用与表相同的方式利用它们。 视图不能被索引，也不能有关联的触发器或默认值，如果视图本身内有order by则对视图再次order by将被覆盖。 创建视图： create view xxx as xxxxxx 对于某些视图比如未使用联结子查询分组聚集函数Distinct Union等，是可以对其更新的，对视图的更新将对基表进行更新;但是视图主要用于简化检索，保护数据，并不用于更新，而且大部分视图都不可以更新。 200.drop,delete与truncate的区别drop直接删掉表，truncate删除表中数据，再插入时自增长id又从1开始，delete删除表中数据，可以加where字句。 1.delete 语句执行删除的过程是每次从表中删除一行，并且同时将该行的删除操作作为事务记录在日志中保存以便进行回滚操作。truncate table则一次性地从表中删除所有的数据并不把单独的删除操作记录记入日志保存，删除行是不能恢复的。并且在删除的过程中不会激活与表有关的删除触发器，执行速度快。 2.表和索引所占空间。当表被truncate后，这个表和索引所占用的空间会恢复到初始大小，而delete操作不会减少表或索引所占用的空间。drop语句将表所占用的空间全释放掉。 3.一般而言，drop&gt;truncate&gt;delete 4.应用范围。truncate只能对table，delete可以是table和view 5.truncate和delete只删除数据，而drop则删除整个表（结构和数据) 6.truncate与不带where的delete:只删除数据，而不删除表的结构（定义）drop语句将删除表的结构被依赖的约束(constrain),触发器（trigger)索引(index);依赖于该表的存储过程/函数将被保留，但其状态会变为:invalid. 201.索引的工作原理及其种类数据库索引，是数据库管理系统中一个排序的数据结构，以协助快速查询，更新数据库表中数据。索引的实现通常使用B树以其变种B+树。 在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。 为表设置索引要付出代价的：一是增加了数据库的存储空间，二是在插入和修改数据时要花费较多的时间（因为索引也要随之变动） 202.连接的种类203.数据库优化的思路204.存储过程与触发器的区别205.悲观锁和乐观锁是什么？206.你常用的mysql引擎有哪些?各引擎间有什么区别?Redis207.Redis宕机怎么解决?宕机:服务器停止服务‘ 如果只有一台redis，肯定 会造成数据丢失，无法挽救 多台redis或者是redis集群，宕机则需要分为在主从模式下区分来看： slave从redis宕机，配置主从复制的时候才配置从的redis，从的会从主的redis中读取主的redis的操作日志1，在redis中从库重新启动后会自动加入到主从架构中，自动完成同步数据; 2, 如果从数据库实现了持久化，此时千万不要立马重启服务，否则可能会造成数据丢失，正确的操作如下：在slave数据上执行SLAVEOF ON ONE,来断开主从关系并把slave升级为主库，此时重新启动主数据库，执行SLAVEOF，把它设置为从库，连接到主的redis上面做主从复制，自动备份数据。 以上过程很容易配置错误，可以使用redis提供的哨兵机制来简化上面的操作。简单的方法:redis的哨兵(sentinel)的功能 208.redis和mecached的区别，以及使用场景区别 1、redis和Memcache都是将数据存放在内存中，都是内存数据库。不过memcache还可以用于缓存其他东西，例如图片，视频等等 2、Redis不仅仅支持简单的k/v类型的数据，同时还提供list,set,hash等数据结构的存储 3、虚拟内存-redis当物流内存用完时，可以将一些很久没用的value交换到磁盘 4、过期策略-memcache在set时就指定，例如set key1 0 0 8，即永不过期。Redis可以通过例如expire设定，例如expire name 10 5、分布式-设定memcache集群，利用magent做一主多从，redis可以做一主多从。都可以一主一丛 6、存储数据安全-memcache挂掉后，数据没了，redis可以定期保存到磁盘(持久化) 7、灾难恢复-memcache挂掉后，数据不可恢复，redis数据丢失后可以通过aof恢复 8、Redis支持数据的备份，即master-slave模式的数据备份 9、应用场景不一样，redis除了作为NoSQL数据库使用外，还能用做消息队列，数据堆栈和数据缓存等;Memcache适合于缓存SQL语句，数据集，用户临时性数据，延迟查询数据和session等 使用场景 1,如果有持久方面的需求或对数据类型和处理有要求的应该选择redis 2,如果简单的key/value存储应该选择memcached. 209.Redis集群方案该怎么做?都有哪些方案?1,codis 目前用的最多的集群方案，基本和twemproxy一致的效果，但它支持在节点数量改变情况下，旧节点数据客恢复到新hash节点 2redis cluster3.0自带的集群，特点在于他的分布式算法不是一致性hash，而是hash槽的概念，以及自身支持节点设置从节点。具体看官方介绍 3.在业务代码层实现，起几个毫无关联的redis实例，在代码层，对key进行hash计算，然后去对应的redis实例操作数据。这种方式对hash层代码要求比较高，考虑部分包括，节点失效后的替代算法方案，数据震荡后的字典脚本恢复，实例的监控，等等 210.Redis回收进程是如何工作的一个客户端运行了新的命令，添加了新的数据。 redis检查内存使用情况，如果大于maxmemory的限制，则根据设定好的策略进行回收。 一个新的命令被执行等等，所以我们不断地穿越内存限制的边界，通过不断达到边界然后不断回收回到边界以下。 如果一个命令的结果导致大量内存被使用(例如很大的集合的交集保存到一个新的键)，不用多久内存限制就会被这个内存使用量超越。 MongoDB211.MongoDB中对多条记录做更新操作命令是什么？212.MongoDB如何才会拓展到多个shard里？测试213.编写测试计划的目的是214.对关键词触发模块进行测试215.其他常用笔试题目网址汇总216.测试人员在软件开发过程中的任务是什么217.一条软件Bug记录都包含了哪些内容？218.简述黑盒测试和白盒测试的优缺点219.请列出你所知道的软件测试种类，至少5项220.Alpha测试与Beta测试的区别是什么？221.举例说明什么是Bug？一个bug report应包含什么关键字？数据结构222.数组中出现次数超过一半的数字-Python版223.求100以内的质数224.无重复字符的最长子串-Python实现225.通过2个5/6升得水壶从池塘得到3升水226.什么是MD5加密，有什么特点？227.什么是对称加密和非对称加密228.冒泡排序的思想？229.快速排序的思想？230.如何判断单向链表中是否有环？231.你知道哪些排序算法（一般是通过问题考算法）232.斐波那契数列数列定义: f 0 = f 1 = 1f n = f (n-1) + f (n-2) 根据定义速度很慢，另外(暴栈注意！⚠️️） O(fibonacci n) def fibonacci(n): if n == 0 or n == 1: return 1 return fibonacci(n - 1) + fibonacci(n - 2) 线性时间的状态/循环 def fibonacci(n): a, b = 1, 1 for _ in range(n): a, b = b, a + b return a 递归 def fibonacci(n): def fib(n_, s): if n_ == 0: return s[0] a, b = s return fib(n_ - 1, (b, a + b)) return fib(n, (1, 1)) map(zipwith) def fibs(): yield 1 fibs_ = fibs() yield next(fibs_) fibs__ = fibs() for fib in map(lambad a, b: a + b, fibs_, fibs__): yield fib def fibonacci(n): fibs_ = fibs() for _ in range(n): next(fibs_) return next(fibs) 做缓存 def cache(fn): cached = {} def wrapper(*args): if args not in cached: cached[args] = fn(*args) return cached[args] wrapper.__name__ = fn.__name__ return wrapper @cache def fib(n): if n &lt; 2: return 1 return fib(n-1) + fib(n-2) 利用 funtools.lru_cache 做缓存 from functools import lru_cache @lru_cache(maxsize=32) def fib(n): if n &lt; 2: return 1 return fib(n-1) + fib(n-2) Logarithmic矩阵 import numpy as np def fibonacci(n): return (np.matrix([[0, 1], [1, 1]]) ** n)[1, 1] 不是矩阵 def fibonacci(n): def fib(n): if n == 0: return (1, 1) elif n == 1: return (1, 2) a, b = fib(n // 2 - 1) c = a + b if n % 2 == 0: return (a * a + b * b, c * c - a * a) return (c * c - a * a, b * b + c * c) return fib(n)[0] 233.如何翻转一个单链表？class Node: def __init__(self,data=None,next=None): self.data = data self.next = next def rev(link): pre = link cur = link.next pre.next = None while cur: temp = cur.next cur.next = pre pre = cur cur = tmp return pre if __name__ == &#39;__main__&#39;: link = Node(1,Node(2,Node(3,Node(4,Node(5,Node(6,Node7,Node(8.Node(9)))))))) root = rev(link) while root: print(roo.data) root = root.next 234.青蛙跳台阶问题一只青蛙要跳上n层高的台阶，一次能跳一级，也可以跳两级，请问这只青蛙有多少种跳上这个n层台阶的方法？ 方法1：递归 设青蛙跳上n级台阶有f(n)种方法，把这n种方法分为两大类，第一种最后一次跳了一级台阶，这类共有f(n-1)种，第二种最后一次跳了两级台阶，这种方法共有f(n-2)种，则得出递推公式f(n)=f(n-1) + f(n-2),显然f(1)=1,f(2)=2，这种方法虽然代码简单，但效率低，会超出时间上限 class Solution: def climbStairs(self,n): if n ==1: return 1 elif n==2: return 2 else: return self.climbStairs(n-1) + self.climbStairs(n-2) 方法2：用循环来代替递归 class Solution: def climbStairs(self,n): if n==1 or n==2: return n a,b,c = 1,2,3 for i in range(3,n+1): c = a+b a = b b = c return c 235.两数之和 Two Sum236.搜索旋转排序数组 Search in Rotated Sorted Array237.Python实现一个Stack的数据结构238.写一个二分查找239.set 用 in 时间复杂度是多少，为什么？240.列表中有n个正整数范围在[0，1000]，进行排序；241.面向对象编程中有组合和继承的方法实现新的类大数据242.找出1G的文件中高频词243.一个大约有一万行的文本文件统计高频词244.怎么在海量数据中找出重复次数最多的一个？245.判断数据是否在大量数据中架构Python后端架构演进这篇文章几乎涵盖了python会用的架构，在面试可以手画架构图，根据自己的项目谈下技术选型和优劣，遇到的坑等。绝对加分]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ajax动态刷新-有道翻译案例]]></title>
    <url>%2F2020%2F07%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2FAjax%E5%8A%A8%E6%80%81%E5%88%B7%E6%96%B0-%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91%E6%A1%88%E4%BE%8B%2F</url>
    <content type="text"><![CDATA[1. 网站分析爬取网站：http://fanyi.youdao.com/ 1.1 在输入框中输入需要翻译的字段,翻译动态刷新.可知此链接为Ajax. 1.2 经过一系列测试发现，其实际需操作的URL为 http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule 。上述篮框中的意思为： e 为输入所翻译的内容 ts 为七位整数的时间戳 salt 为时间戳后加上一位,大于0小于9的数字 bv 为User-Agent的值经过md5加密的 密文 sign 为(“fanyideskweb” + e + salt + “Nw(nmmbP%A-r6U3EUn]Aj”)经过md5加密的 密文 2. 代码如下# -*- coding: utf-8 -*- import time import random import hashlib import requests # 定义MD5方法 def hex5(value): manipulator = hashlib.md5() manipulator.update(value.encode(&#39;utf-8&#39;)) return manipulator.hexdigest() # 获取表单数据 def Mach(data_str): ts = round(time.time()) salt = str(ts) + str(random.randint(0, 9)) sign = hex5(&quot;fanyideskweb&quot; + data_str + salt + &quot;Nw(nmmbP%A-r6U3EUn]Aj&quot;) bv = hex5(&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36&quot;) data = { &#39;i&#39;: data_str, &#39;from&#39;: &#39;AUTO&#39;, &#39;to&#39;: &#39;AUTO&#39;, &#39;smartresult&#39;: &#39;dict&#39;, &#39;client&#39;: &#39;fanyideskweb&#39;, &#39;salt&#39;: salt, # salt = ts + 一个随机数 &#39;sign&#39;: sign, &#39;ts&#39;: ts, # ts 时间戳 &#39;bv&#39;: bv, &#39;doctype&#39;: &#39;json&#39;, &#39;version&#39;: &#39;2.1&#39;, &#39;keyfrom&#39;: &#39;fanyi.web&#39;, &#39;action&#39;: &#39;FY_BY_REALTlME&#39;, } return data # 构造请求方法 def Translation(url, data): header = { &#39;Accept&#39;: &#39;application/json, text/javascript, */*; q=0.01&#39;, &#39;Accept-Encoding&#39;: &#39;gzip, deflate, br&#39;, &#39;Accept-Language&#39;: &#39;zh-CN,zh;q=0.9,en;q=0.8&#39;, &#39;Connection&#39;: &#39;keep-alive&#39;, &#39;Content-Length&#39;: &#39;237&#39;, &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8&#39;, &#39;Cookie&#39;: &#39;OUTFOX_SEARCH_USER_ID=1648504734@10.169.0.83; OUTFOX_SEARCH_USER_ID_NCOO=1054516127.1065001; JSESSIONID=aaaFtapMs3Ow4bIaK06-w; ___rl__test__cookies=1580462241081&#39;, &#39;DNT&#39;: &#39;1&#39;, &#39;Host&#39;: &#39;fanyi.youdao.com&#39;, &#39;Origin&#39;: &#39;https://fanyi.youdao.com&#39;, &#39;Referer&#39;: &#39;https://fanyi.youdao.com/&#39;, &#39;Sec-Fetch-Mode&#39;: &#39;cors&#39;, &#39;Sec-Fetch-Site&#39;: &#39;same-origin&#39;, &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36&#39;, &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39;, } response = requests.post(url, headers=header, data=data) return response def main(): url = &#39;http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule&#39; input_str = input(&#39;请输需翻译的内容（不得大于5000字！）:&#39;) data = Mach(input_str) translate = Translation(url, data=data) # 提取json数据 print(translate.json()[&#39;translateResult&#39;][0][0][&#39;tgt&#39;]) if __name__ == &#39;__main__&#39;: main() 执行结果如下：]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码12 - ajaxcrawl]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200715_%20ajaxcrawl%2F</url>
    <content type="text"><![CDATA[ajaxcrawl # -*- coding: utf-8 -*- from __future__ import absolute_import import re import logging import six from w3lib import html from scrapy.exceptions import NotConfigured from scrapy.http import HtmlResponse logger = logging.getLogger(__name__) ` 这些也是导入几个包， 主要看下第一个absolute_import 关于这句from __future__ import absolute_import的作用: 直观地看就是说”加入绝对引入这个新特性”。说到绝对引入，当然就会想到相对引入。那么什么是相对引入呢?比如说，你的包结构是这样的: pkg/ pkg/init.py pkg/main.py pkg/string.py 如果你在main.py中写import string,那么在Python 2.4或之前, Python会先查找当前目录下有没有string.py, 若找到了，则引入该模块，然后你在main.py中可以直接用string了。如果你是真的想用同目录下的string.py那就好，但是如果你是想用系统自带的标准string.py呢？那其实没有什么好的简洁的方式可以忽略掉同目录的string.py而引入系统自带的标准string.py。这时候你就需要from __future__ import absolute_import了。这样，你就可以用import string来引入系统的标准string.py, 而用from pkg import string来引入当前目录下的string.py了 构造函数 def __init__(self, settings): if not settings.getbool(&#39;AJAXCRAWL_ENABLED&#39;): raise NotConfigured # XXX: Google parses at least first 100k bytes; scrapy&#39;s redirect # middleware parses first 4k. 4k turns out to be insufficient # for this middleware, and parsing 100k could be slow. # We use something in between (32K) by default. self.lookup_bytes = settings.getint(&#39;AJAXCRAWL_MAXSIZE&#39;, 32768) 我们可以看出， 先从设置中获取AJAXCTRAWL_ENABLED是否启用， 如果没有设置，就抛出一个没有配置的异常设置获取AJAXCRAWL_MAXSIZE ,提供默认值32768 from_crawler方法 @classmethod def from_crawler(cls, crawler): return cls(crawler.settings) 这个方法，就是根据一个crawler抓取者去构造一个ajaxcrawl中间件 process_response方法 def process_response(self, request, response, spider): if not isinstance(response, HtmlResponse) or response.status != 200: return response if request.method != &#39;GET&#39;: # other HTTP methods are either not safe or don&#39;t have a body return response if &#39;ajax_crawlable&#39; in request.meta: # prevent loops return response if not self._has_ajax_crawlable_variant(response): return response # scrapy already handles #! links properly ajax_crawl_request = request.replace(url=request.url+&#39;#!&#39;) logger.debug(&quot;Downloading AJAX crawlable %(ajax_crawl_request)s instead of %(request)s&quot;, {&#39;ajax_crawl_request&#39;: ajax_crawl_request, &#39;request&#39;: request}, extra={&#39;spider&#39;: spider}) ajax_crawl_request.meta[&#39;ajax_crawlable&#39;] = True return ajax_crawl_request 这段代码先判断response不HtmlResponse响应流或者状态码不是200就直接返回响应流，如果请求方法不是get也直接返回，如果在request.meta中有ajax_crawlable就直接返回，如果响应流中没有ajax可抓取的变量也是直接返回，构造请求，请求的url为原来的url+“#!” _has_ajax_crawlable_variant def _has_ajax_crawlable_variant(self, response): &quot;&quot;&quot; Return True if a page without hash fragment could be &quot;AJAX crawlable&quot; according to https://developers.google.com/webmasters/ajax-crawling/docs/getting-started. &quot;&quot;&quot; body = response.text[:self.lookup_bytes] return _has_ajaxcrawlable_meta(body) 这个方法就是判断下系那个应留是否有ajax可以提取的信息 变量定义_ajax_crawlable_re = re.compile(six.u(r&#39;&lt;meta\s+name=[&quot;\&#39;]fragment[&quot;\&#39;]\s+content=[&quot;\&#39;]![&quot;\&#39;]/?&gt;&#39;)) _has_ajaxcrawlable_metadef _has_ajaxcrawlable_meta(text): &quot;&quot;&quot; &gt;&gt;&gt; _has_ajaxcrawlable_meta(&#39;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;fragment&quot; content=&quot;!&quot;/&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&#39;) True &gt;&gt;&gt; _has_ajaxcrawlable_meta(&quot;&lt;html&gt;&lt;head&gt;&lt;meta name=&#39;fragment&#39; content=&#39;!&#39;&gt;&lt;/head&gt;&lt;/html&gt;&quot;) True &gt;&gt;&gt; _has_ajaxcrawlable_meta(&#39;&lt;html&gt;&lt;head&gt;&lt;!--&lt;meta name=&quot;fragment&quot; content=&quot;!&quot;/&gt;--&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&#39;) False &gt;&gt;&gt; _has_ajaxcrawlable_meta(&#39;&lt;html&gt;&lt;/html&gt;&#39;) False &quot;&quot;&quot; # Stripping scripts and comments is slow (about 20x slower than # just checking if a string is in text); this is a quick fail-fast # path that should work for most pages. if &#39;fragment&#39; not in text: return False if &#39;content&#39; not in text: return False text = html.remove_tags_with_content(text, (&#39;script&#39;, &#39;noscript&#39;)) text = html.replace_entities(text) text = html.remove_comments(text) return _ajax_crawlable_re.search(text) is not None 找到页面上名字为frgment，并且有content，然后调用3个方法去处理text,然后使用正则表达式去匹配他。 remove_tags_with_content:这个方法就是从一个html文本中去除指定的标签及其内容 replace_entities: 转化指定的html内容为unicode charactor remove_comments: 提取注释以外的内容。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL用户管理与PostgreSQL用户管理的对比]]></title>
    <url>%2F2020%2F07%2Fdatabase%2Fmysql%2F20200713_mysql%E4%B8%8Epg%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%AF%B9%E6%AF%94%2F</url>
    <content type="text"><![CDATA[原表为： 执行sql语句： 一. MySQL用户管理【例1.1】使用root用户登录到本地mysql服务器的test库中 mysql -uroot -p -hlocalhost test 【例1.2】使用root用户登录到本地mysql服务器的test库中，执行一条查询语句 mysql -uroot -p -hlocalhost test -e &quot;DESC person;&quot; 【例1.3】使用CREATE USER创建一个用户，用户名是jeffrey，密码是mypass，主机名是localhost CREATE USER &#39;jeffrey&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;mypass&#39;; 【例1.4】使用GRANT语句创建一个新的用户testUser，密码为testpwd。用户 testUser对所有的数据有查询和更新权限，并授于对所有数据表的SELECT和UPDATE权限 GRANT SELECT,UPDATE ON *.* TO &#39;testUser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;testpwd&#39;; /*创建账户并授予权限*/ SELECT Host,User,Select_priv,Update_priv, FROM mysql.user where user=&#39;testUser&#39;; /*查看账户权限信息*/ 【例1.5】使用INSERT创建一个新账户，其用户名称为customer1，主机名称为localhost，密码为customer1： INSERT INTO user (Host,User,Password) VALUES(&#39;localhost&#39;,&#39;customer1&#39;,PASSWORD(&#39;customer1&#39;)); 【例1.6】使用DROP USER删除用户‘jeffrey‘@’localhost’ DROP USER &#39;jeffrey&#39;@&#39;localhost&#39;; 【例1.7】使用DELETE删除用户‘customer1‘@’localhost’ DELETE FROM mysql.user WHERE host=&#39;localhost&#39; and user=&#39;customer1&#39;; 【例1.8】使用mysqladmin将root用户的密码修改为“rootpwd” mysqladmin -u root -p password &quot;123456&quot; 【例1.9】使用UPDATE语句将root用户的密码修改为“rootpwd2”： UPDATE mysql.user set Password=password(&quot;rootpwd2&quot;) WHERE User=&quot;root&quot; and Host=&quot;localhost&quot;; 【例1.10】使用SET语句将root用户的密码修改为“rootpwd3”： SET PASSWORD=password(&quot;rootpwd3&quot;); 【例1.11】使用SET语句将testUser用户的密码修改为“newpwd”： SET PASSWORD FOR &#39;testUser&#39;@&#39;localhost&#39;=password(&quot;newpwd&quot;); 【例1.12】使用UPDATE语句将testUser用户的密码修改为“newpwd2”： UPDATE mysql.user set Password=PASSWORD(&quot;newpwd2&quot;) WHERE User=&quot;testUser&quot; and Host=&quot;localhost&quot;; 【例1.13】使用GRANT语句将testUser用户的密码修改为“newpwd3”：sql 【例1.14】testUser用户使用SET语句将自身的密码修改为“newpwd4”： SET PASSWORD = PASSWORD(&quot;newpwd4&quot;); 【例1.15】使用GRANT语句创建一个新的用户grantUser，密码为“grantpwd”。用户grantUser对所有的数据有查询、插入权限，并授于GRANT权限。GRANT语句及其执行结果如下： MySQL&gt; GRANT SELECT,INSERT ON *.* TO &#39;grantUser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;grantpwd&#39; WITH GRANT OPTION; Query OK, 0 rows affected (0.03 sec) 结果显示执行成功，使用SELECT语句查询用户testUser2的权限： MySQL&gt; SELECT Host,User,Select_priv,Insert_priv, Grant_priv FROM mysql.user where user=&#39;grantUser&#39;; +-----------+------------+-------------+--------------+-------------+ | Host | User | Select_priv | Insert_priv | Grant_priv | +-----------+------------+-------------+--------------+--------------+ | localhost | testUser2 | Y | Y | Y | +-----------+------------+-------------+--------------+--------------+ 1 row in set (0.00 sec) 【例1.16】使用REVOKE语句取消用户testUser的更新权限。REVOKE语句及其执行结果如下： MySQL&gt; REVOKE UPDATE ON *.* FROM &#39;testUser&#39;@&#39;localhost&#39;; Query OK, 0 rows affected (0.00 sec) 执行结果显示执行成功，使用SELECT语句查询用户test的权限： MySQL&gt; SELECT Host,User,Select_priv,Update_priv,Grant_priv FROM MySQL.user where user=&#39;testUser&#39;; 【例1.17】使用SHOW GRANTS语句查询用户testUser的权限信息。SHOW GRANTS语句及其执行结果如下： MySQL&gt; SHOW GRANTS FOR &#39;testUser&#39;@&#39;localhost&#39;; 案例操作过程 打开MySQL客户端工具，输入登录命令，登录MySQL。C:\&gt;mysql -u root -p Enter password: ** 输入正确密码，按回车，出现欢迎信息表示登录成功。选择mysql数据库为当前数据库。MySQL&gt; use mysql; Database changed 出现Database changed信息表明切换数据库成功。创建新账户，用户名称为newAdmin，密码为pw1，允许其从本地主机访问MySQL。使用GRANT语句创建新账户，创建过程如下：`MySQL&gt; GRANT SELECT, UPDATE(id, name, age) -&gt; ON test_db.person_old -&gt; TO ‘newAdmin‘@’localhost’ IDENTIFIED BY ‘pw1’ -&gt; WITH MAX_CONNECTIONS_PER_HOUR 30; SELECT host, user, select_priv, update_priv FROM user WHERE user=’newAdmin’; SELECT host, db, user, table_name, table_priv, column_privFROM tables_priv WHERE user=’newAdmin’; SELECT host, db, user, table_name, column_name, column_privFROM columns_priv WHERE user=’newAdmin’; 3条SQL语句的查询结果分别如下： MySQL&gt; SELECT host, user, select_priv, update_priv FROM user WHERE user=’newAdmin’; MySQL&gt; SELECT host, db, user, table_name, table_priv, column_priv -&gt; FROM tables_priv WHERE user=’newAdmin’; MySQL&gt; SELECT host, db, user, table_name, column_name, column_priv -&gt; FROM columns_priv WHERE user=’newAdmin’; 使用SHOW GRANTS语句查看newAdmin的权限信息。 查看newAdmin账户的权限信息，输入语句如下： SHOW GRANTS FOR ‘newAdmin‘@’localhost’; 使用newAdmin用户登录MySQL。 退出当前登录，使用EXIT命令，语句如下： MySQL&gt; exitBye 使用newAdmin账户登录MySQL，语句如下： C:>MySQL -u newAdmin -pEnter password: *** 输入密码正确后，出现“mysql&gt;”提示符，登录成功。 使用newAdmin用户查看test_db数据库中person_dd表中的数据。 newAdmin用户被授予test数据库中person表中3个字段上的查询权限，因此可以执行SELECT语句查看这几个字段的值，执行过程如下： MySQL&gt; SELECT * FROM test_db.person_dd LIMIT 5; 使用newAdmin用户向person_dd表中插入一条新记录，查看语句执行结果。 插入新记录，输入语句如下： ```sql INSERT INTO test_db.person_old(name, age,info) VALUES(&#39;gaga&#39;, 30); 执行结果如下： ERROR 1142 (42000): INSERT command denied to user &#39;newAdmin&#39;@&#39;localhost&#39; for table &#39;person&#39; 可以看到，语句不能执行，错误信息表明newAdmin用户不能对person表进行插入操作。因此，用户不可以执行没有被授权的操作语句。 退出当前登录，使用root用户重新登录，收回newAdmin账户的权限。输入退出命令：exit重新以root用户登录MySQL，并选择mysql数据库为当前数据库。输入语句收回newAdmin账户的权限，执行过程如下： REVOKE SELECT, UPDATE ON test.person FROM &#39;newAdmin&#39;@&#39;localhost&#39;; 执行结果如下： MySQL&gt; REVOKE SELECT, UPDATE ON test.person FROM &#39;newAdmin&#39;@&#39;localhost&#39;; Query OK, 0 rows affected (0.00 sec) 删除newAdmin的账户信息。删除指定账户，可以使用DROP USER语句，输入如下： DROP USER &#39;newAdmin&#39;@&#39;localhost&#39;; 二. PostgreSQL用户管理组角色管理【例2.1】创建一个名称为post2的角色，SQL代码如下： CREATE ROLE post2; 【例2.2】查看系统中的角色，SQL代码如下： SELECT rolname FROM pg_roles; 【例2.3】修改角色post1的名称为post3。SQL语句如下： ALTER ROLE post1 RENAME TO post3; 【例2.4】删除角色post3。SQL语句如下： DROP ROLE post3; 角色的各种权限1、登录 【例2.5】创建角色post4，此角色具有登录权限。SQL语句如下： CREATE ROLE post4 LOGIN; 2超级用户 【例2.6】创建角色post5，此角色具有超级用户权限。SQL语句如下： CREATE ROLE post5 SUPERUSER; 3、创建数据库 【例2.7】创建角色post6，此角色具有创建数据库权限。SQL语句如下： CREATE ROLE post6 CREATEDB; 4、 创建角色角色要想创建角色，必须明确给出该权限（除了超级用户以外）。一旦角色具有CREATEROLE权限，即可更改和删除其他角色，还可以给其它角色赋予或者撤销成员关系。当然，如果想对超级用户进行操作，仅有此权限还不够，必须拥有SUPERUSER权限。创建具有创建角色权限的角色，SQL语法如下： CREATE ROLE name CREATEROLE; 【例2.8】创建角色post7，此角色具有创建数据库权限。SQL语句如下： CREATE ROLE post7 CREATEROLE; 5、口令在客户认证方法要求与数据库建立连接时，需要口令权限。常见的认证方法包括password、md5和crypt。创建具有口令权限的角色，SQL语法如下：CREATE ROLE name 口令认证方法 具体口令【例2.9】创建角色post8，此角色具有口令权限。SQL语句如下： CREATE ROLE post8 PASSWORD &#39;123456&#39;; 账户管理1、创建用户 【例2.10】创建用户名称为postgre02，并具有创建数据库和创建角色的权限，同时登陆密码为“123456789”。SQL语句如下： CREATE USER postgre02 PASSWORD &#39;123456789&#39; CREATEDB CREATEROLE ; 2、删除用户 【例2.11】使用DROP USER删除账户“postgre02”，SQL语句如下： DROP USER postgre02; 3、修改用户密码 【例2.12】将账户“postgre01”的密码修改为“123123”，SQL语句如下： ALTER USER postgre01 PASSWORD &#39;123123&#39;; 组角色和用户角色管理1、对组角色授权 【例2.13】给“post1”角色添加创建数据表和创建角色的权限，SQL语句如下： ALTER ROLE post1 CREATEDB CREATEROLE; 2、对用户授权 【例2.14】给“postgre01”用户添加创建数据表和创建角色的权限，SQL语句如下： ALTER USER postgre01 CREATEDB CREATEROLE; 3、收回组角色权限 【例2.15】将“post1”角色的创建数据表和创建角色权限收回，SQL语句如下： ALTER ROLE post1 NOCREATEDB NOCREATEROLE; 4、收回用户权限 【例2.16】将“postgre01”用户的创建数据表和创建角色权限收回，SQL语句如下： ALTER USER postgre01 NOCREATEDB NOCREATEROLE; 数据库权限管理1、修改数据库的拥有者 【例2.17】将“mytest”数据库的所有者修改为post1。SQL语句如下： ALTER DATABASE mytest OWNER TO post2; 2、增加用户的数据表权限 【例2.18】其中ppo1是一个现有的数据表，postgres是一个现有的用户，允许postgres更新ppo1数据表，用下面的命令更新表的权限： GRANT UPDATE ON ppo1 TO postgres; 如果将上面的语句修改为： GRANT UPDATE ON ppo1 TO PUBLIC; 则表示将数据表ppo1的更新权限赋予系统中的所有角色。如果将上面的语句修改为： GRANT ALL ON ppo1 TO postgres; 则表示把适用于该对象的所有权限都赋予用户postgres。]]></content>
      <categories>
        <category>数据处理</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码11 - webclient]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200713_%20webclient%2F</url>
    <content type="text"><![CDATA[webclient.py 这个文件从名字上看出来应该是定义一个web 客户端的类。 from time import time 导入时间 from six.moves.urllib.parse import urlparse, urlunparse, urldefrag 导入urlparse,urlunparse,urldefrag from twisted.web.client import HTTPClientFactory 导入HTTPClientFactory from twisted.web.http import HTTPClient 导入HTTPClient from twisted.internet import defer 导入defer from scrapy.http import Headers 导入herader from scrapy.utils.httpobj import urlparse_cached 导入urlparse_cached from scrapy.utils.python import to_bytes 导入to_bytes方法 from scrapy.responsetypes import responsetypes 导入responsetypes方法。 def to_bytes(text, encoding=None, errors=&#39;strict&#39;): &quot;&quot;&quot;Return the binary representation of `text`. If `text` is already a bytes object, return it as-is.&quot;&quot;&quot; if isinstance(text, bytes): return text if not isinstance(text, six.string_types): raise TypeError(&#39;to_bytes must receive a unicode, str or bytes &#39; &#39;object, got %s&#39; % type(text).__name__) if encoding is None: encoding = &#39;utf-8&#39; return text.encode(encoding, errors) 这个方法就是转字节的方法， 如果就是bytes就直接返回， 如果是不是unicode,str,就抛出异常， 设置下默认的encoding, 转化为bytes,这个方法所在的文件里面还有to——unicode unicode_to_str的方法等等。 def _parsed_url_args(parsed): # Assume parsed is urlparse-d from Request.url, # which was passed via safe_url_string and is ascii-only. b = lambda s: to_bytes(s, encoding=&#39;ascii&#39;) path = urlunparse((&#39;&#39;, &#39;&#39;, parsed.path or &#39;/&#39;, parsed.params, parsed.query, &#39;&#39;)) path = b(path) host = b(parsed.hostname) port = parsed.port scheme = b(parsed.scheme) netloc = b(parsed.netloc) if port is None: port = 443 if scheme == b&#39;https&#39; else 80 return scheme, netloc, host, port, path 这个方法从名字上看是解析url参数的。 设置b变量为一个匿名的方法， 使用urlunparse获取路径 将路径to_bytes, host 也to_bytes,port不用， scheme,netloc bytes话， 如果端口没有指定的话， 如果scheme是https就设置443， 其他情况下是80端口。 def _parse(url): &quot;&quot;&quot; Return tuple of (scheme, netloc, host, port, path), all in bytes except for port which is int. Assume url is from Request.url, which was passed via safe_url_string and is ascii-only. &quot;&quot;&quot; url = url.strip() parsed = urlparse(url) return _parsed_url_args(parsed) 这里返回一个元组(scheme, netloc, host, port, path)， 除了端口号是int之外，其他的都是bytes. 这个url 只能是Request.url传递过来 。 url调用strip去除空格。使用urlparse获取一个parsed对象。 class ScrapyHTTPPageGetter(HTTPClient): 这个类继承了HTTPClient. def connectionMade(self): self.headers = Headers() # bucket for response headers # Method command self.sendCommand(self.factory.method, self.factory.path) # Headers for key, values in self.factory.headers.items(): for value in values: self.sendHeader(key, value) self.endHeaders() # Body if self.factory.body is not None: self.transport.write(self.factory.body) 连接模式方法， 定义一个headers对象， 方法命令 设置头信息。传输body信息。 def lineReceived(self, line): return HTTPClient.lineReceived(self, line.rstrip()) 行接受 def handleHeader(self, key, value): self.headers.appendlist(key, value) 处理头信息 def handleStatus(self, version, status, message): self.factory.gotStatus(version, status, message) 获取状态信息 def handleEndHeaders(self): self.factory.gotHeaders(self.headers) 获取头 def connectionLost(self, reason): self._connection_lost_reason = reason HTTPClient.connectionLost(self, reason) self.factory.noPage(reason) 这个方法不知道是干嘛的 def handleResponse(self, response): if self.factory.method.upper() == b&#39;HEAD&#39;: self.factory.page(b&#39;&#39;) elif self.length is not None and self.length &gt; 0: self.factory.noPage(self._connection_lost_reason) else: self.factory.page(response) self.transport.loseConnection() 处理响应，具体代码不知道做什么 def timeout(self): self.transport.loseConnection() # transport cleanup needed for HTTPS connections if self.factory.url.startswith(b&#39;https&#39;): self.transport.stopProducing() self.factory.noPage(\ defer.TimeoutError(&quot;Getting %s took longer than %s seconds.&quot; % \ (self.factory.url, self.factory.timeout))) 这个方法不知道干嘛的。 class ScrapyHTTPClientFactory(HTTPClientFactory): scrapy实现了HTTPClientFactory，冰鞋部分方法，确保url object 缓存结果。 def __init__(self, request, timeout=180): self._url = urldefrag(request.url)[0] # converting to bytes to comply to Twisted interface self.url = to_bytes(self._url, encoding=&#39;ascii&#39;) self.method = to_bytes(request.method, encoding=&#39;ascii&#39;) self.body = request.body or None self.headers = Headers(request.headers) self.response_headers = None self.timeout = request.meta.get(&#39;download_timeout&#39;) or timeout self.start_time = time() self.deferred = defer.Deferred().addCallback(self._build_response, request) # Fixes Twisted 11.1.0+ support as HTTPClientFactory is expected # to have _disconnectedDeferred. See Twisted r32329. # As Scrapy implements it&#39;s own logic to handle redirects is not # needed to add the callback _waitForDisconnect. # Specifically this avoids the AttributeError exception when # clientConnectionFailed method is called. self._disconnectedDeferred = defer.Deferred() self._set_connection_attributes(request) # set Host header based on url self.headers.setdefault(&#39;Host&#39;, self.netloc) # set Content-Length based len of body if self.body is not None: self.headers[&#39;Content-Length&#39;] = len(self.body) # just in case a broken http/1.1 decides to keep connection alive self.headers.setdefault(&quot;Connection&quot;, &quot;close&quot;) # Content-Length must be specified in POST method even with no body elif self.method == b&#39;POST&#39;: self.headers[&#39;Content-Length&#39;] = 0 定义初始化， 设置url,method,body ,headers , timeout,start_time, defered对象。 如果body 不为空， 获取长度设置headers,如果方法为post，则content_length设置为0 def _build_response(self, body, request): request.meta[&#39;download_latency&#39;] = self.headers_time-self.start_time status = int(self.status) headers = Headers(self.response_headers) respcls = responsetypes.from_args(headers=headers, url=self._url) return respcls(url=self._url, status=status, headers=headers, body=body) 构建响应， 设置meta属性， 状态码为 头信息为响应头 respcls 这个不知道到是啥。 def _set_connection_attributes(self, request): parsed = urlparse_cached(request) self.scheme, self.netloc, self.host, self.port, self.path = _parsed_url_args(parsed) proxy = request.meta.get(&#39;proxy&#39;) if proxy: self.scheme, _, self.host, self.port, _ = _parse(proxy) self.path = self.url 设置连接属性， 获取parsed， 获取请求参数， 获取请求的协议，修改部分属性的设置。 def gotHeaders(self, headers): self.headers_time = time() self.response_headers = headers 这个获取头信息的。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码10 - tls]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200712_tls%2F</url>
    <content type="text"><![CDATA[tls.py 这个文件看起来挺简单的。 import logging from OpenSSL import SSL from scrapy import twisted_version logger = logging.getLogger(__name__) 这里就是导入logging，ssl，twisted_version 包。 全局日志logger METHOD_SSLv3 = &#39;SSLv3&#39; METHOD_TLS = &#39;TLS&#39; METHOD_TLSv10 = &#39;TLSv1.0&#39; METHOD_TLSv11 = &#39;TLSv1.1&#39; METHOD_TLSv12 = &#39;TLSv1.2&#39; openssl_methods = { METHOD_TLS: SSL.SSLv23_METHOD, # protocol negotiation (recommended) METHOD_SSLv3: SSL.SSLv3_METHOD, # SSL 3 (NOT recommended) METHOD_TLSv10: SSL.TLSv1_METHOD, # TLS 1.0 only METHOD_TLSv11: getattr(SSL, &#39;TLSv1_1_METHOD&#39;, 5), # TLS 1.1 only METHOD_TLSv12: getattr(SSL, &#39;TLSv1_2_METHOD&#39;, 6), # TLS 1.2 only } 这段是ssl的设置。 里面的openssl_methods的一个字典。 对应的字符串对应的ssl版本 如果twisted_version 版本大于14.0.0的话。 try: # XXX: this try-except is not needed in Twisted 17.0.0+ because # it requires pyOpenSSL 0.16+. from OpenSSL.SSL import SSL_CB_HANDSHAKE_DONE, SSL_CB_HANDSHAKE_START except ImportError: SSL_CB_HANDSHAKE_START = 0x10 SSL_CB_HANDSHAKE_DONE = 0x20 从ssl里面导入两个变量设置。 from twisted.internet.ssl import AcceptableCiphers from twisted.internet._sslverify import (ClientTLSOptions, verifyHostname, VerificationError) 从twisted.internet ssl 导入对应的几个包 if twisted_version &lt; (17, 0, 0): from twisted.internet._sslverify import _maybeSetHostNameIndication set_tlsext_host_name = _maybeSetHostNameIndication else: def set_tlsext_host_name(connection, hostNameBytes): connection.set_tlsext_host_name(hostNameBytes) 如果版本小于17.0.0 的话， 和大于17.0分别处理 class ScrapyClientTLSOptions(ClientTLSOptions): &quot;&quot;&quot; SSL Client connection creator ignoring certificate verification errors (for genuinely invalid certificates or bugs in verification code). Same as Twisted&#39;s private _sslverify.ClientTLSOptions, except that VerificationError and ValueError exceptions are caught, so that the connection is not closed, only logging warnings. &quot;&quot;&quot; def _identityVerifyingInfoCallback(self, connection, where, ret): if where &amp; SSL_CB_HANDSHAKE_START: set_tlsext_host_name(connection, self._hostnameBytes) elif where &amp; SSL_CB_HANDSHAKE_DONE: try: verifyHostname(connection, self._hostnameASCII) except VerificationError as e: logger.warning( &#39;Remote certificate is not valid for hostname &quot;{}&quot;; {}&#39;.format( self._hostnameASCII, e)) except ValueError as e: logger.warning( &#39;Ignoring error while verifying certificate &#39; &#39;from host &quot;{}&quot; (exception: {})&#39;.format( self._hostnameASCII, repr(e))) DEFAULT_CIPHERS = AcceptableCiphers.fromOpenSSLCipherString(&#39;DEFAULT&#39;) 这里定义了ScrapyClientTLSOptions类， 定义一个认证证书的方法。 对异常进程处理。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码9 - downloadermiddleware]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200711_%20downloadermiddleware%2F</url>
    <content type="text"><![CDATA[下载中间件downloadermiddleware: import six 导入six兼容包 from twisted.internet import defer 导入defer from scrapy.http import Request, Response 导入请求和响应 from scrapy.middleware import MiddlewareManager from scrapy.utils.defer import mustbe_deferred 导入中间件管理 和mustbe_defferred from scrapy.utils.conf import build_component_list 导入构建中间件列表函数 @classmethod def _get_mwlist_from_settings(cls, settings): return build_component_list( settings.getwithbase(&#39;DOWNLOADER_MIDDLEWARES&#39;)) 从设置里面获取下载中间件， 然后构建下载中间件列表 def _add_middleware(self, mw): if hasattr(mw, &#39;process_request&#39;): self.methods[&#39;process_request&#39;].append(mw.process_request) if hasattr(mw, &#39;process_response&#39;): self.methods[&#39;process_response&#39;].insert(0, mw.process_response) if hasattr(mw, &#39;process_exception&#39;): self.methods[&#39;process_exception&#39;].insert(0, mw.process_exception) 添加下载中间件，获取定义的几个方法， 并添加到对应的链上去。 这里可以看出来， 我们自己如果写下载中间件的需要提供如下几个方法。 process_request， process_response，process_exception 这3个方法的。 def download(self, download_func, request, spider): 这个download里面定义了3个方法吧， 也就是上面提到的3个方法。 我们一个一个看看具体写的都是啥。 @defer.inlineCallbacks def process_request(request): for method in self.methods[&#39;process_request&#39;]: response = yield method(request=request, spider=spider) assert response is None or isinstance(response, (Response, Request)), \ &#39;Middleware %s.process_request must return None, Response or Request, got %s&#39; % \ (six.get_method_self(method).__class__.__name__, response.__class__.__name__) if response: defer.returnValue(response) defer.returnValue((yield download_func(request=request,spider=spider))) 先从方法中获取处理请求方法链， 遍历。 获取对应处理方法的响应， 断言响应为none,response,request.如果响应不为空的话， 就直接defer.returnValue, 遍历完毕方法链之后，使用download_func获取结果。 @defer.inlineCallbacks def process_response(response): assert response is not None, &#39;Received None in process_response&#39; if isinstance(response, Request): defer.returnValue(response) for method in self.methods[&#39;process_response&#39;]: response = yield method(request=request, response=response, spider=spider) assert isinstance(response, (Response, Request)), \ &#39;Middleware %s.process_response must return Response or Request, got %s&#39; % \ (six.get_method_self(method).__class__.__name__, type(response)) if isinstance(response, Request): defer.returnValue(response) defer.returnValue(response) 判定是否是响应， 如果响应是请求， 调用defer.returnValue处理。 对于响应， 遍历响应链， 断言响应结果。 如果是request的话， 调用defer.returnValue处理。 最后使用defer.returnValue处理响应。 @defer.inlineCallbacks def process_exception(_failure): exception = _failure.value for method in self.methods[&#39;process_exception&#39;]: response = yield method(request=request, exception=exception, spider=spider) assert response is None or isinstance(response, (Response, Request)), \ &#39;Middleware %s.process_exception must return None, Response or Request, got %s&#39; % \ (six.get_method_self(method).__class__.__name__, type(response)) if response: defer.returnValue(response) defer.returnValue(_failure) 遍历异常处理链， 调用对应的方法处理异常。 断言响应的结果。 返回失败值。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码8 - contextfactory]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200709_%20contextfactory%2F</url>
    <content type="text"><![CDATA[contextfactory.py 这个文件，相对文件内容不多。 from OpenSSL import SSL from twisted.internet.ssl import ClientContextFactory from scrapy import twisted_version 这3句代码， 导入ssl, 导入ClientContextFactory ， 导入twisted_version 我们看看这个version是啥内容 twisted_version = (_txv.major, _txv.minor, _txv.micro) 就是个元组，我们直接在命令端测试下输出。 &gt;&gt;&gt; import scrapy &gt;&gt;&gt; scrapy.twisted_version (17, 5, 0) 这个显示的是主版本， 次版本，最后一个不清楚， 发行版本？ 接下来就是要给大的if else ， 根据上面twisted_version 的版本。 我们只看看 if twisted_version &gt;= (14, 0, 0): 这个分支先。 from zope.interface.declarations import implementer 去官方网站的api查阅下， 这个函数是个装饰器 参数是一个或多个接口或者接口规范。 from twisted.internet.ssl import (optionsForClientTLS, CertificateOptions, platformTrust) from twisted.web.client import BrowserLikePolicyForHTTPS from twisted.web.iweb import IPolicyForHTTPS 这里导入了twisted的几个包。和zope下的一个implementer的包。 from scrapy.core.downloader.tls import ScrapyClientTLSOptions, DEFAULT_CIPHERS 从tls.py里面导入了ScrapyClientTLSOptions, DEFAULT_CIPHERS @implementer(IPolicyForHTTPS) class ScrapyClientContextFactory(BrowserLikePolicyForHTTPS): &quot;&quot;&quot; Non-peer-certificate verifying HTTPS context factory Default OpenSSL method is TLS_METHOD (also called SSLv23_METHOD) which allows TLS protocol negotiation &#39;A TLS/SSL connection established with [this method] may understand the SSLv3, TLSv1, TLSv1.1 and TLSv1.2 protocols.&#39; &quot;&quot;&quot; def __init__(self, method=SSL.SSLv23_METHOD, *args, **kwargs): super(ScrapyClientContextFactory, self).__init__(*args, **kwargs) self._ssl_method = method def getCertificateOptions(self): # setting verify=True will require you to provide CAs # to verify against; in other words: it&#39;s not that simple # backward-compatible SSL/TLS method: # # * this will respect `method` attribute in often recommended # `ScrapyClientContextFactory` subclass # (https://github.com/scrapy/scrapy/issues/1429#issuecomment-131782133) # # * getattr() for `_ssl_method` attribute for context factories # not calling super(..., self).__init__ return CertificateOptions(verify=False, method=getattr(self, &#39;method&#39;, getattr(self, &#39;_ssl_method&#39;, None)), fixBrokenPeers=True, acceptableCiphers=DEFAULT_CIPHERS) # kept for old-style HTTP/1.0 downloader context twisted calls, # e.g. connectSSL() def getContext(self, hostname=None, port=None): return self.getCertificateOptions().getContext() def creatorForNetloc(self, hostname, port): return ScrapyClientTLSOptions(hostname.decode(&quot;ascii&quot;), self.getContext()) 先使用装饰器装饰类。 接口指定为IPolicyForHTTPS def __init__(self, method=SSL.SSLv23_METHOD, *args, **kwargs): super(ScrapyClientContextFactory, self).__init__(*args, **kwargs) self._ssl_method = method 初始化先调用super方法完成父类的初始化工作。 设置sll方法为传递过来的方法， 默认值为SSL.SSLv23_METHOD def getCertificateOptions(self): # setting verify=True will require you to provide CAs # to verify against; in other words: it&#39;s not that simple # backward-compatible SSL/TLS method: # # * this will respect `method` attribute in often recommended # `ScrapyClientContextFactory` subclass # (https://github.com/scrapy/scrapy/issues/1429#issuecomment-131782133) # # * getattr() for `_ssl_method` attribute for context factories # not calling super(..., self).__init__ return CertificateOptions(verify=False, method=getattr(self, &#39;method&#39;, getattr(self, &#39;_ssl_method&#39;, None)), fixBrokenPeers=True, acceptableCiphers=DEFAULT_CIPHERS) # kept for old-style HTTP/1.0 downloader context twisted calls, # e.g. connectSSL() 从方法名上可以推断出来是获取认证选项的 def getContext(self, hostname=None, port=None): return self.getCertificateOptions().getContext() 获取认证选项，获取context. def creatorForNetloc(self, hostname, port): return ScrapyClientTLSOptions(hostname.decode(&quot;ascii&quot;), self.getContext()) 调用getContext获取内容。 class BrowserLikeContextFactory(ScrapyClientContextFactory): &quot;&quot;&quot; Twisted-recommended context factory for web clients. Quoting http://twistedmatrix.com/documents/current/api/twisted.web.client.Agent.html: &quot;The default is to use a BrowserLikePolicyForHTTPS, so unless you have special requirements you can leave this as-is.&quot; creatorForNetloc() is the same as BrowserLikePolicyForHTTPS except this context factory allows setting the TLS/SSL method to use. Default OpenSSL method is TLS_METHOD (also called SSLv23_METHOD) which allows TLS protocol negotiation. &quot;&quot;&quot; def creatorForNetloc(self, hostname, port): # trustRoot set to platformTrust() will use the platform&#39;s root CAs. # # This means that a website like https://www.cacert.org will be rejected # by default, since CAcert.org CA certificate is seldom shipped. return optionsForClientTLS(hostname.decode(&quot;ascii&quot;), trustRoot=platformTrust(), extraCertificateOptions={ &#39;method&#39;: self._ssl_method, }) 这个方法基本和上面的是一样的。 else: class ScrapyClientContextFactory(ClientContextFactory): &quot;A SSL context factory which is more permissive against SSL bugs.&quot; # see https://github.com/scrapy/scrapy/issues/82 # and https://github.com/scrapy/scrapy/issues/26 # and https://github.com/scrapy/scrapy/issues/981 def __init__(self, method=SSL.SSLv23_METHOD): self.method = method def getContext(self, hostname=None, port=None): ctx = ClientContextFactory.getContext(self) # Enable all workarounds to SSL bugs as documented by # http://www.openssl.org/docs/ssl/SSL_CTX_set_options.html ctx.set_options(SSL.OP_ALL) return ctx 初始化并定义getContext方法]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码7：downloader的源码分析]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200708_downloader%2F</url>
    <content type="text"><![CDATA[这里我们看看scrapy.core.downloader 这个吧。 from __future__ import absolute_import # 建议尽可能多的使用绝对导入，因此在你的代码中使用from pkg improt string是适宜的。 import random import warnings # 这就是导入随机数和警告 from time import time from datetime import datetime from collections import deque # 这些也是导入基本的包， 没啥问题。 import six from twisted.internet import reactor, defer, task # 这里导入了兼容包six， 以及twisted 下的reactor反应堆， defer以及task。 from scrapy.utils.defer import mustbe_deferred # 导入强制deferred from scrapy.utils.httpobj import urlparse_cached # 这个我们定位过去看看 _urlparse_cache = weakref.WeakKeyDictionary() def urlparse_cached(request_or_response): &quot;&quot;&quot;Return urlparse.urlparse caching the result, where the argument can be a Request or Response object &quot;&quot;&quot; if request_or_response not in _urlparse_cache: _urlparse_cache[request_or_response] = urlparse(request_or_response.url) return _urlparse_cache[request_or_response] # 方法是返回一个结果urlparse,urlparse的缓存结果。 参数可以使请求也可以是响应。 # 如果对象不再字典里面， 就缓存下， 然后返回。 from scrapy.resolver import dnscache # dnscache = LocalCache(10000) ， 说明dnscache 是个dict 的。 from scrapy import signals 导入信号 from .middleware import DownloaderMiddlewareManager from .handlers import DownloadHandlers # 导入了下载中间件和下载处理 # 这个文件2个类， 我们一个一个看。 def __init__(self, concurrency, delay, randomize_delay): self.concurrency = concurrency self.delay = delay self.randomize_delay = randomize_delay self.active = set() self.queue = deque() self.transferring = set() self.lastseen = 0 self.latercall = None # 初始化工作 。 并发，延迟， 是否随机延迟， 活动集合， 队列， 正在传输集合， 最后调用， def free_transfer_slots(self): return self.concurrency - len(self.transferring) # 并发度 - 当前传输的个数= 得到空闲的传输槽 def download_delay(self): if self.randomize_delay: return random.uniform(0.5 * self.delay, 1.5 * self.delay) return self.delay # 下载延迟，如果随机延迟开启的话 在0.5 1.5倍delay之间返回一个值， 否则直接使用delay值。 def close(self): if self.latercall and self.latercall.active(): self.latercall.cancel() # 关闭下载器， 如果最后一个调用存在，代用cancel取消。 def __repr__(self): cls_name = self.__class__.__name__ return &quot;%s(concurrency=%r, delay=%0.2f, randomize_delay=%r)&quot; % ( cls_name, self.concurrency, self.delay, self.randomize_delay) def __str__(self): return ( &quot;&lt;downloader.Slot concurrency=%r delay=%0.2f randomize_delay=%r &quot; &quot;len(active)=%d len(queue)=%d len(transferring)=%d lastseen=%s&gt;&quot; % ( self.concurrency, self.delay, self.randomize_delay, len(self.active), len(self.queue), len(self.transferring), datetime.fromtimestamp(self.lastseen).isoformat() ) ) # 这2个就是基本的方法了。 没啥问题的。 def _get_concurrency_delay(concurrency, spider, settings): delay = settings.getfloat(&#39;DOWNLOAD_DELAY&#39;) if hasattr(spider, &#39;DOWNLOAD_DELAY&#39;): warnings.warn(&quot;%s.DOWNLOAD_DELAY attribute is deprecated, use %s.download_delay instead&quot; % (type(spider).__name__, type(spider).__name__)) delay = spider.DOWNLOAD_DELAY if hasattr(spider, &#39;download_delay&#39;): delay = spider.download_delay if hasattr(spider, &#39;max_concurrent_requests&#39;): concurrency = spider.max_concurrent_requests return concurrency, delay # 获取并发的延迟， 从设置里面获取download_delay 也就是获取下载延迟设置。 # 如果爬虫有对应的下载延迟设置， 提示警告。 还是采用其设置值。 # 如果爬虫有对应的download_delay设置，设置值。 # 如果有最大并发请求个数，最总返回一个最大并发数和延迟量。 # 接下来看看这个下载downloader类 def __init__(self, crawler): self.settings = crawler.settings self.signals = crawler.signals self.slots = {} self.active = set() self.handlers = DownloadHandlers(crawler) self.total_concurrency = self.settings.getint(&#39;CONCURRENT_REQUESTS&#39;) self.domain_concurrency = self.settings.getint(&#39;CONCURRENT_REQUESTS_PER_DOMAIN&#39;) self.ip_concurrency = self.settings.getint(&#39;CONCURRENT_REQUESTS_PER_IP&#39;) self.randomize_delay = self.settings.getbool(&#39;RANDOMIZE_DOWNLOAD_DELAY&#39;) self.middleware = DownloaderMiddlewareManager.from_crawler(crawler) self._slot_gc_loop = task.LoopingCall(self._slot_gc) self._slot_gc_loop.start(60) # 这个是downloader的初始化方法， 根据一个crawler去初始化， # 获取crawler的设置和信号， # 构造一个slots集合， 和一个活动集合。 # 根据crawler构造一个下载处理对象。 # 从设置获取并行请求，每个与的最大请求书， 每个ip的并发请求限制， 随机下载延迟， 中间件通过中间件管理构造。 # task.LoopingCall 百度下， 是一个定时的反复， self._slot_gc_loop = task.LoopingCall(self._slot_gc) self._slot_gc_loop.start(60) # 这2句话的意思就是每60s就去执行下self._slot_gc方法。 def fetch(self, request, spider): def _deactivate(response): self.active.remove(request) return response self.active.add(request) dfd = self.middleware.download(self._enqueue_request, request, spider) return dfd.addBoth(_deactivate) # 活动集合添加请求， 下载中间件完成下载获取deffered对象， 添加一个回调方法移除请求。 def needs_backout(self): return len(self.active) &gt;= self.total_concurrency # 判断当前活动的个数是不是超出了总的并发量 def _get_slot_key(self, request, spider): if &#39;download_slot&#39; in request.meta: return request.meta[&#39;download_slot&#39;] key = urlparse_cached(request).hostname or &#39;&#39; if self.ip_concurrency: key = dnscache.get(key, key) return key # 这个先看看meta有没有download_slot ，如果有的话就直接返回 # 没有话，就从urlparse缓冲里面获取到主机名，如果为空，就设置为‘’ ，如果有ip并发限制 # 从dns缓冲中获取 def _get_slot(self, request, spider): key = self._get_slot_key(request, spider) if key not in self.slots: conc = self.ip_concurrency if self.ip_concurrency else self.domain_concurrency conc, delay = _get_concurrency_delay(conc, spider, self.settings) self.slots[key] = Slot(conc, delay, self.randomize_delay) return key, self.slots[key] # 获取key , 如果key不在slots里面， 如果ip限制了。 就使用ip限制， 否则使用域限制。 # 获取并发和延迟从设置里面， 根据key创建一个slot # 返回key 和slot def _enqueue_request(self, request, spider): key, slot = self._get_slot(request, spider) request.meta[&#39;download_slot&#39;] = key def _deactivate(response): slot.active.remove(request) return response slot.active.add(request) deferred = defer.Deferred().addBoth(_deactivate) slot.queue.append((request, deferred)) self._process_queue(spider, slot) return deferred # 根据请求和爬虫获取key 和slot , 设置请求的meta， slot的active集合添加请求， 添加回调方法去移除活动集合。 # slot的队列添加一个。 调用process_queue 去处理队列。 返回deferred对象。 def _process_queue(self, spider, slot): if slot.latercall and slot.latercall.active(): return # Delay queue processing if a download_delay is configured now = time() delay = slot.download_delay() if delay: penalty = delay - now + slot.lastseen if penalty &gt; 0: slot.latercall = reactor.callLater(penalty, self._process_queue, spider, slot) return # Process enqueued requests if there are free slots to transfer for this slot while slot.queue and slot.free_transfer_slots() &gt; 0: slot.lastseen = now request, deferred = slot.queue.popleft() dfd = self._download(slot, request, spider) dfd.chainDeferred(deferred) # prevent burst if inter-request delays were configured if delay: self._process_queue(spider, slot) break # 处理队列的方法， 如果最后一个调用在，就返回， # 获取当前时间， 从slot获取下载延迟， # 如果有延迟， lastseen 上次slot使用时间， - now 得到 上次使用距离当前时间的差值， 加delay # 如果大于0 说明 等待时间小于延迟时间了。 可以进行下一步操作了。 # 设置下lastcall 设置下几秒之后执行方法。 也就是设置了。等待几秒去执行self._process_queue 方法。 # 如果还有空闲的传输clost的话， # 设置lastseen为now, # 从队列取出一个，调用_download返回一个deferred对象， 添加到deferred链上，如果有延迟，执行#_process_queue方法。 def _download(self, slot, request, spider): # The order is very important for the following deferreds. Do not change! # 1. Create the download deferred dfd = mustbe_deferred(self.handlers.download_request, request, spider) # 2. Notify response_downloaded listeners about the recent download # before querying queue for next request def _downloaded(response): self.signals.send_catch_log(signal=signals.response_downloaded, response=response, request=request, spider=spider) return response dfd.addCallback(_downloaded) # 3. After response arrives, remove the request from transferring # state to free up the transferring slot so it can be used by the # following requests (perhaps those which came from the downloader # middleware itself) slot.transferring.add(request) def finish_transferring(_): slot.transferring.remove(request) self._process_queue(spider, slot) return _ return dfd.addBoth(finish_transferring) # 这个方法写的注释很是详细。 # 创建一个下载deferred， # 通知响应下载监听关于最近的下载，在查询队列为下一次请求之前。 # 在响应接收到到之后， 移除请求从传输状态到free的传输slot上，让其空间给其他请求使用。 def close(self): self._slot_gc_loop.stop() for slot in six.itervalues(self.slots): slot.close() # 关闭方法， 关闭gc_loop # 关闭所有slot。 def _slot_gc(self, age=60): mintime = time() - age for key, slot in list(self.slots.items()): if not slot.active and slot.lastseen + slot.delay &lt; mintime: self.slots.pop(key).close() # 获取近一分钟内，遍历slots。 # 如果slot的状态不是active,上次访问+延迟&lt; mintime的话， 就从slots里面pop出来。 并关闭。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码6：deffer和parallel的源码分析]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200707_deffer%E5%92%8Cparallel%2F</url>
    <content type="text"><![CDATA[deferscrapy的核心的代码大量用到deffer对象，还有一些并行的东西。 这里简单去学习下deffer和并行的方法知识 。twisted.interet.defer 这个官方的api就是下面的网址了。http://twistedmatrix.com/documents/current/api/twisted.internet.defer.html我们可以看到这个defer是twisted提供的internet方法的包 twisted先了解下twisted是个什么。Twisted: The Framework Of Your Internet. 说明twisted是一个网络框架。http://twistedmatrix.com/documents/current/api/twisted.html 这个官方api说的很精简啊， 我们还是看看wiki上怎么说的: Twisted is an event-driven network programming framework written in Python and licensed under the MITLicense.Twisted projects variously support TCP, UDP, SSL/TLS, IP multicast, Unix domain sockets, a large number of protocols (including HTTP, XMPP, NNTP, IMAP, SSH, IRC, FTP, and others), and much more. Twisted is based on the event-driven programming paradigm, which means that users of Twisted write short callbacks which are called by the framework.大概意思如下：Twisted是一个以Python编写的事件驱动的网络编程框架，并根据MIT许可证进行许可。twisted的项目各种支持TCP，UDP，SSL / TLS，IP组播，Unix域套接字，大量协议（包括HTTP，XMPP，NNTP，IMAP，SSH，IRC，FTP等）等等。Twisted是基于事件驱动的编程范例，这意味着Twisted的用户写入框架调用的简短回调。 知道twisted了， 还是应该了解下twisted的异步处理。网址如下: http://blog.csdn.net/fxjtoday/article/details/6396932这个人的博客写的不错。 http://blog.csdn.net/fangjian1204/article/details/42084273 Method addCallbacks Add a pair of callbacks (success and error) to this Deferred.Method addCallback Convenience method for adding just a callback.Method addErrback Convenience method for adding just an errback.Method addBoth Convenience method for adding a single callable as both a callback and an errback. 这里有4个方法， addCallbacks,addBoth 一次添加成功和错误的2个回调。addCallback 添加成功的回调 ， addErrback 添加错误的回调。Method addTimeout Time out this Deferred by scheduling it to be cancelled after timeout seconds. 这个是设置下deferred的时间，超时的话会被取消的。Method chainDeferred Chain another Deferred to this Deferred. Method callback Run all success callbacks that have been added to this Deferred. 运行成功的回调Method errback Run all error callbacks that have been added to this Deferred. 运行所有的错误回调Method pause Stop processing on a Deferred until unpause() is called. 暂定deferred执行， 一直到unpause调用才继续执行Method unpause Process all callbacks made since pause() was called. 解除defered的pause的暂停操作Method cancel Cancel this Deferred. 取消这个defferdMethod str Return a string representation of this Deferred.Method iter UndocumentedMethod send UndocumentedMethod asFuture Adapt a Deferred into a asyncio.Future which is bound to loop.Class Method fromFuture Adapt an asyncio.Future to a Deferred. # 我们在defer.py里面有个方法如下 def parallel(iterable, count, callable, *args, **named): &quot;&quot;&quot;Execute a callable over the objects in the given iterable, in parallel, using no more than ``count`` concurrent calls. Taken from: http://jcalderone.livejournal.com/24285.html &quot;&quot;&quot; coop = task.Cooperator() work = (callable(elem, *args, **named) for elem in iterable) return defer.DeferredList([coop.coiterate(work) for _ in range(count)]) # 先来看看这个task.Cooperator 是什么 # Cooperator的官方api 网址： http://twistedmatrix.com/documents/current/api/twisted.internet.task.Cooperator.html # google翻译了下如下： # 合作任务调度程序。 # 合作任务是一个迭代器，每个迭代代表一个原子工作单元。当迭代器产生时，它允许合作者决定下一个执行其任务。如果迭代器产生defer.Deferred， # 则工作将暂停，直到defer.Deferred触发并完成其回调链。 # 当合作者有多个任务时，它会在所有任务之间分配工作。 # 有两种方法可以向协作者添加任务，进行合作和协调。合作是更有用的两个，因为它返回一个CooperativeTask，可以暂停，恢复和等待。 # coiterate具有相同的效果，但只返回一个延迟。当任务完成时触发。 # 合作者可以用于许多事情，包括但不限于： # 运行一个或多个计算密集型任务而不阻止 # 通过同时运行总任务的子集来限制并行性 # 做一件事，等待延期开火，做下一件事，重复（即序列化一系列异步任务） # 多个合作者不能相互合作，所以在大多数情况下，您应该使用全局的合作伙伴。 # Method __init__ Create a scheduler-like object to which iterators may be added. # 创建可以添加迭代器的类似于调度程序的对象。 # Method coiterate Add an iterator to the list of iterators this Cooperator is #currently running. # 将迭代器添加到此Cooperator当前正在运行的迭代器列表中。 # Method cooperate Start running the given iterator as a long-running cooperative task, by calling next() on it as a periodic timed event. # 开始运行给定的迭代器作为一个长期运行的协作任务，通过调用next（）作为定期定时事件。 # Method start Begin scheduling steps. # 开始安排步骤 # Method stop Stop scheduling steps. Errback the completion Deferreds of all iterators which have been added and forget about them. # 停止调度步骤。 Errback完成所有迭代器已被添加并忘记了它们。 # Method running Is this Cooperator is currently running? # 这个合作伙伴是否正在运行？ # 回到那个代码吧。 第一句 coop = task.Cooperator() 创建一个合作者对象。 # work = (callable(elem, *args, **named) for elem in iterable) 遍历下iterable方法列表， 构造works元组 # coop.coiterate(work) 每一个work都去调用这个方法添加到coop中去， 返回一个deferred数组， 然后转化为defer.DeferredList def process_chain(callbacks, input, *a, **kw): &quot;&quot;&quot;Return a Deferred built by chaining the given callbacks&quot;&quot;&quot; d = defer.Deferred() for x in callbacks: d.addCallback(x, *a, **kw) d.callback(input) return d # 创建一个deferred对象， 添加一系列的成功回调方法， 然后执行所有的成功回调。 返回deffered对象。 def process_chain_both(callbacks, errbacks, input, *a, **kw): &quot;&quot;&quot;Return a Deferred built by chaining the given callbacks and errbacks&quot;&quot;&quot; d = defer.Deferred() for cb, eb in zip(callbacks, errbacks): d.addCallbacks(cb, eb, callbackArgs=a, callbackKeywords=kw, errbackArgs=a, errbackKeywords=kw) if isinstance(input, failure.Failure): d.errback(input) else: d.callback(input) return d # 这个方法， 创建一个deferred对象， 添加成功和失败回调对。 # 如果input是成功的就调用成功回调， 失败调用失败的回调。 def process_parallel(callbacks, input, *a, **kw): &quot;&quot;&quot;Return a Deferred with the output of all successful calls to the given callbacks &quot;&quot;&quot; dfds = [defer.succeed(input).addCallback(x, *a, **kw) for x in callbacks] d = defer.DeferredList(dfds, fireOnOneErrback=1, consumeErrors=1) d.addCallbacks(lambda r: [x[1] for x in r], lambda f: f.value.subFailure) return d # 遍历 callbacks列表， 使用addcallback添加成功的回调。 # defer.succeed(input) 应该是返回一个deferred对象。 # 查看下官方api。 # Function succeed Return a Deferred that has already had .callback(result) called. # 现获取一个dfds 的数组， 然后转为list ， 再有2个参数。 # 添加2个匿名的回调方法。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pyppeteer的各种案例]]></title>
    <url>%2F2020%2F07%2Fspider%2Fpyppeteer%2F02_%E5%90%84%E7%A7%8D%E6%A1%88%E4%BE%8B%2F</url>
    <content type="text"><![CDATA[1. 一个简单的案例 import asyncio from pyppeteer import launch async def main(url): browser = await launch() page = await browser.newPage() res = await page.goto(url, options={&#39;timeout&#39;: 30000}) data = await page.content() title = await page.title() resp_cookies = await page.cookies() # cookie resp_headers = res.headers # 响应头 resp_status = res.status # 响应状态 print(data) print(title) print(resp_headers) print(resp_status) if __name__ == &#39;__main__&#39;: url = &quot;http://www.nows.fun/&quot; asyncio.get_event_loop().run_until_complete(main(url)) 2. launch选项:browser = await pyppeteer.launch({ &#39;headless&#39;: False, # 关闭无头模式 &#39;devtools&#39;: True, # 控制界面的显示，用来调试 &#39;executablePath&#39;: &#39;你下载的Chromium.app/Contents/MacOS/Chromiu&#39;, &#39;args&#39;: [ &#39;--disable-extensions&#39;, &#39;--hide-scrollbars&#39;, &#39;--disable-bundled-ppapi-flash&#39;, &#39;--mute-audio&#39;, &#39;--no-sandbox&#39;, # --no-sandbox 在 docker 里使用时需要加入的参数，不然会报错 &#39;--disable-setuid-sandbox&#39;, &#39;--disable-gpu&#39;, &#39;--disable-xss-auditor&#39;, ], &#39;dumpio&#39;: True, # 解决浏览器多开卡死 }) 3. 截图：import asyncio from pyppeteer import launch async def main(url): browser = await launch() page = await browser.newPage() await page.setViewport(viewport={&#39;width&#39;: 1280, &#39;height&#39;: 1800}) res = await page.goto(url, waitUntil=[&quot;networkidle0&quot;, &quot;load&quot;, &quot;domcontentloaded&quot;],options={&#39;timeout&#39;: 0}) await page.screenshot({&#39;path&#39;: &#39;example.png&#39;}) url = &quot;http://www.nows.fun/&quot; asyncio.get_event_loop().run_until_complete(main(url)) 4. 基本使用pyppeteer的一些基本使用，包括网络请求，返回cookie、title、html、响应头、执行js、获取html元素等用法。 import asyncio from pathlib import Path from pyppeteer import launch async def main(url): browser = await launch() page = await browser.newPage() await page.setUserAgent(&#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#39;) # 是否启用JS，enabled设为False，则无渲染效果 await page.setJavaScriptEnabled(enabled=True) # 注入 js 文件 CURDIR = Path(__file__).parent JS_AJAX_HOOK_LIB = str(CURDIR / &#39;static&#39; / &#39;ajaxhook.min.js&#39;) await page.addScriptTag(path=JS_AJAX_HOOK_LIB) res = await page.goto(url, waitUntil=[&quot;networkidle0&quot;, &quot;load&quot;, &quot;domcontentloaded&quot;],options={&#39;timeout&#39;: 0}) # cookie cookies = await page.cookies() # 网站 title title = await page.title() # html 内容 contents = await page.content() # 响应头 res_headers = res.headers # 响应状态 res_status = res.status # 等待 await asyncio.sleep(2) # 滚动到页面底部 await page.evaluate(&#39;window.scrollBy(0, document.body.scrollHeight)&#39;) # 在网页上执行js 脚本 dimensions = await page.evaluate(pageFunction=&#39;&#39;&#39;() =&gt; { return { width: document.documentElement.clientWidth, // 页面宽度 height: document.documentElement.clientHeight, // 页面高度 deviceScaleFactor: window.devicePixelRatio, // 像素比 1.0000000149011612 } }&#39;&#39;&#39;, force_expr=False) # force_expr=False 执行的是函数 True 则执行表达式 &quot;&quot;&quot; 抓取内容 Page.querySelector() # 选择器 Page.querySelectorAll() Page.xpath() # xpath 表达式 Page.J(), Page.JJ(), and Page.Jx() # 简写 &quot;&quot;&quot; element = await page.querySelector(&quot;.feed-infinite-wrapper &gt; ul&gt;li&quot;) # 只抓取一个 # 获取所有文本内容 执行 js content = await page.evaluate(&#39;(element) =&gt; element.textContent&#39;, element) elements = await page.xpath(&#39;//div[@class=&quot;title-box&quot;]/a&#39;) elements = await page.querySelectorAll(&quot;.title-box a&quot;) for item in elements: print(await item.getProperty(&#39;textContent&#39;)) # &lt;pyppeteer.execution_context.JSHandle object at 0x000002220E7FE518&gt; # 获取文本 title_str = await (await item.getProperty(&#39;textContent&#39;)).jsonValue() # 获取链接 title_link = await (await item.getProperty(&#39;href&#39;)).jsonValue() # 键盘输入 await page.type(&#39;#identifierId&#39;, username) # 点击下一步 await page.click(&#39;#identifierNext &gt; content&#39;) page.mouse # 模拟真实点击 await browser.close() 5. 请求多个url:# -*- encoding: utf-8 -*- import asyncio import pyppeteer from collections import namedtuple Response = namedtuple(&quot;rs&quot;, &quot;title url html cookies headers history status&quot;) async def get_html(url): browser = await pyppeteer.launch(headless=True, args=[&#39;--no-sandbox&#39;]) page = await browser.newPage() res = await page.goto(url, options={&#39;timeout&#39;: 30000}) data = await page.content() title = await page.title() resp_cookies = await page.cookies() # cookie resp_headers = res.headers # 响应头 resp_status = res.status # 响应状态 print(data) print(title) print(resp_headers) print(resp_status) return title if __name__ == &#39;__main__&#39;: url_list = [&quot;https://www.toutiao.com/&quot;, &quot;http://www.nows.fun/&quot;, ] task = [get_html(url) for url in url_list] loop = asyncio.get_event_loop() results = loop.run_until_complete(asyncio.gather(*task)) for res in results: print(res) 6. 模拟输入：# 模拟输入 账号密码 {&#39;delay&#39;: rand_int()} 为输入时间 await page.type(&#39;#TPL_username_1&#39;, &quot;sadfasdfasdf&quot;) await page.type(&#39;#TPL_password_1&#39;, &quot;123456789&quot;, ) await page.waitFor(1000) await page.click(&quot;#J_SubmitStatic&quot;) 7. 爬取京东商城：# -*- encoding: utf-8 -*- import requests from bs4 import BeautifulSoup from pyppeteer import launch import asyncio def screen_size(): &quot;&quot;&quot;使用tkinter获取屏幕大小&quot;&quot;&quot; import tkinter tk = tkinter.Tk() width = tk.winfo_screenwidth() height = tk.winfo_screenheight() tk.quit() return width, height async def main(url): browser = await launch({&#39;args&#39;: [&#39;--no-sandbox&#39;], }) page = await browser.newPage() width, height = screen_size() await page.setViewport(viewport={&quot;width&quot;: width, &quot;height&quot;: height}) await page.setJavaScriptEnabled(enabled=True) await page.setUserAgent(&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299&#39;) await page.goto(url) await page.evaluate(&#39;window.scrollBy(0, document.body.scrollHeight)&#39;) await asyncio.sleep(1) # content = await page.content() li_list = await page.xpath(&#39;//*[@id=&quot;J_goodsList&quot;]/ul/li&#39;) # print(li_list) item_list = [] for li in li_list: a = await li.xpath(&#39;.//div[@class=&quot;p-img&quot;]/a&#39;) detail_url = await (await a[0].getProperty(&quot;href&quot;)).jsonValue() promo_words = await (await a[0].getProperty(&quot;title&quot;)).jsonValue() a_ = await li.xpath(&#39;.//div[@class=&quot;p-commit&quot;]/strong/a&#39;) p_commit = await (await a_[0].getProperty(&quot;textContent&quot;)).jsonValue() i = await li.xpath(&#39;./div/div[3]/strong/i&#39;) price = await (await i[0].getProperty(&quot;textContent&quot;)).jsonValue() em = await li.xpath(&#39;./div/div[4]/a/em&#39;) title = await (await em[0].getProperty(&quot;textContent&quot;)).jsonValue() item = { &quot;title&quot;: title, &quot;detail_url&quot;: detail_url, &quot;promo_words&quot;: promo_words, &#39;p_commit&#39;: p_commit, &#39;price&#39;: price } item_list.append(item) # print(item) # break # print(content) await page_close(browser) return item_list async def page_close(browser): for _page in await browser.pages(): await _page.close() await browser.close() msg = &quot;手机&quot; url = &quot;https://search.jd.com/Search?keyword={}&amp;enc=utf-8&amp;qrst=1&amp;rt=1&amp;stop=1&amp;vt=2&amp;wq={}&amp;cid2=653&amp;cid3=655&amp;page={}&quot; task_list = [] for i in range(1, 6): page = i * 2 - 1 url = url.format(msg, msg, page) task_list.append(main(url)) loop = asyncio.get_event_loop() results = loop.run_until_complete(asyncio.gather(*task_list)) # print(results, len(results)) for i in results: print(i, len(i)) # soup = BeautifulSoup(content, &#39;lxml&#39;) # div = soup.find(&#39;div&#39;, id=&#39;J_goodsList&#39;) # for i, li in enumerate(div.find_all(&#39;li&#39;, class_=&#39;gl-item&#39;)): # if li.select(&#39;.p-img a&#39;): # print(li.select(&#39;.p-img a&#39;)[0][&#39;href&#39;], i) # print(li.select(&#39;.p-price i&#39;)[0].get_text(), i) # print(li.select(&#39;.p-name em&#39;)[0].text, i) # else: # print(&quot;#&quot; * 200) # print(li) 7. xss攻击# -*- encoding: utf-8 -*- import asyncio from pyppeteer import launch payload = &#39;&lt;script&gt;xianzhi(3.1415926535)&lt;/script&gt;&#39; url = &quot;http://192.168.81.132/vuls/sqli/?id=1&#39;&gt;{payload}&quot;.format(payload=payload) def xss_auditor(url, message): if message == 3.1415926535: print(&#39;xss_auditor_found:&#39;, payload) print(url) async def main(): browser = await launch(headless=False, args=[&#39;--disable-xss-auditor&#39;]) page = await browser.newPage() await page.exposeFunction( &#39;xianzhi&#39;, lambda message: xss_auditor(url, message) ) await page.goto(url) await page.close() asyncio.get_event_loop().run_until_complete(main()) 8. 捕获ajax链接启用请求拦截器await page.setRequestInterception(True)，会激活 request.abort，request.continue 和 request.respond 方法，每个请求都将停止，这样可以拦截ajax请求。 page.on(‘request’, get_ajax)遇到request请求时触发。 # -*- encoding: utf-8 -*- import asyncio from pyppeteer import launch async def get_ajax(req): res = {&quot;method&quot;: req.method,&quot;url&quot;:req.url,&quot;data&quot;: &quot;&quot; if req.postData == None else req.postData} print(res) await req.continue_() async def main(url): browser = await launch() page = await browser.newPage() await page.setRequestInterception(True) page.on(&#39;request&#39;, get_ajax) res = await page.goto(url) if __name__ == &#39;__main__&#39;: url = &quot;http://www.nows.fun/&quot; asyncio.get_event_loop().run_until_complete(main(url)) 9. 绕过webdriver检测# -*- encoding: utf-8 -*- import asyncio from pyppeteer import launch async def page_evaluate(page): &#39;&#39;&#39;window.navigator.webdriver=false&#39;&#39;&#39; await page.evaluate(&#39;&#39;&#39;() =&gt;{ Object.defineProperties(navigator,{ webdriver:{ get: () =&gt; undefined } }) }&#39;&#39;&#39;) # 以下为插入中间js，将淘宝会为了检测浏览器而调用的js修改其结果。 await page.evaluate(&#39;&#39;&#39;() =&gt;{ window.navigator.chrome = { runtime: {}, }; }&#39;&#39;&#39;) await page.evaluate(&#39;&#39;&#39;() =&gt;{ Object.defineProperty(navigator, &#39;languages&#39;, { get: () =&gt; [&#39;en-US&#39;, &#39;en&#39;] }); }&#39;&#39;&#39;) await page.evaluate(&#39;&#39;&#39;() =&gt;{ Object.defineProperty(navigator, &#39;plugins&#39;, { get: () =&gt; [1, 2, 3, 4, 5,6], }); }&#39;&#39;&#39;) async def main(): browser = await launch() page = await browser.newPage() await page_evaluate(page) 10. 处理弹框# -*- encoding: utf-8 -*- from pyppeteer import launch async def dialog_control(dialog): await dialog.accept() async def main(self): browser = await launch() page = await browser.newPage() # 用匿名函数：page.on(&#39;dialog&#39;, lambda dialog: dialog.accept()) page.on(&#39;dialog&#39;, self.dialog_control) 11. 过滤掉img, css等请求# -*- encoding: utf-8 -*- import asyncio import pyppeteer from pyppeteer import launch async def goto(page, url): &#39;&#39;&#39;请求加载是否完成，无网都需要处理&#39;&#39;&#39; while True: try: await page.goto(url, { &#39;timeout&#39;: 0, &#39;waitUntil&#39;: &#39;networkidle0&#39; }) break except (pyppeteer.errors.NetworkError, pyppeteer.errors.PageError) as ex: # 无网络 &#39;net::ERR_INTERNET_DISCONNECTED&#39;,&#39;net::ERR_TUNNEL_CONNECTION_FAILED&#39; if &#39;net::&#39; in str(ex): await asyncio.sleep(10) else: raise async def request_check(self, req): &#39;&#39;&#39;filter requests Disable image loading &#39;&#39;&#39; if req.resourceType in [&quot;image&quot;, &quot;media&quot;, &quot;eventsource&quot;, &quot;websocket&quot;, &quot;stylesheet&quot;, &quot;font&quot;]: await req.abort() elif &quot;logout&quot; in req.url or &quot;delete&quot; in req.url or &quot;signout&quot; in req.url: await req.abort() else: await req.continue_() async def main(self): browser = await launch() page = await browser.newPage() await page.setRequestInterception(True) page.on(&#39;request&#39;, self.request_check) 12. 获取表单通过运行js获取表单，先在浏览器中测试通过后再转入脚本运行。 # -*- encoding: utf-8 -*- async def get_urls(page): res = await page.evaluate(&#39;&#39;&#39;() =&gt; { var urls = []; //get form function GetForm() { var f = document.forms; for (var i = 0; i &lt; f.length; i++) { url = f[i].action; //input var inputs = f[i].getElementsByTagName(&#39;*&#39;); var requestdata = &quot;&quot;; var len = inputs.length; for (var j = 0; j &lt; len; j++) { if(inputs[j].hasAttributes(&quot;*&quot;)== true){ if (j &lt; len - 1) { if(inputs[j].hasAttributes(&quot;name&quot;) &amp;&amp; inputs[j].name !=undefined &amp;&amp; inputs[j].name !=&quot;&quot;){ requestdata = requestdata + inputs[j].name } else{ continue } if(inputs[j].hasAttributes(&quot;value&quot;) &amp;&amp; inputs[j].value !=&quot;&quot; &amp;&amp; inputs[j].value !=undefined){ requestdata = requestdata + &quot;=&quot; + inputs[j].value + &quot;&amp;&quot;; } else{ requestdata = requestdata + &quot;=123123&amp;&quot;; } } if (j == len - 1) { if(inputs[j].hasAttributes(&quot;name&quot;) &amp;&amp; inputs[j].name !=undefined &amp;&amp; inputs[j].name !=&quot;&quot;){ requestdata = requestdata + inputs[j].name } else{ continue } if(inputs[j].hasAttributes(&quot;value&quot;) &amp;&amp; inputs[j].value !=&quot;&quot; &amp;&amp; inputs[j].value !=undefined){ requestdata = requestdata + &quot;=&quot; + inputs[j].value ; } else{ requestdata = requestdata + &quot;=123123&quot;; } } } } res = {&quot;method&quot;: &quot;POST&quot;, &quot;url&quot;: url, &quot;data&quot;: requestdata}; if (urls.indexOf(res) &lt; 0) { urls.push(res) } } } GetForm() return urls; }&#39;&#39;&#39;) return res 13. 总的代码： 1 #!/usr/bin/env python3 2 import asyncio 3 import hashlib 4 from pyppeteer import launch 5 from collections import OrderedDict 6 7 &#39;&#39;&#39; 8 pyppeteer/connection.py 9 self._ws = websockets.client.connect( 10 # self._url, max_size=None, loop=self._loop) 11 self._url, max_size=None, loop=self._loop, ping_interval=None, ping_timeout=None) 12 &#39;&#39;&#39; 13 14 class DynamicCrawler(object): 15 &#39;&#39;&#39; Dynamic Crawler 16 crawler ajax onclick tags 17 &#39;&#39;&#39; 18 19 def __init__(self, target): 20 super(DynamicCrawler, self).__init__() 21 self.urls = [] 22 self.target = target 23 self.timeout = 50000 24 self.browser_setting = { 25 &#39;headless&#39;: False, 26 &#39;devtools&#39;: True, # Console 27 # &#39;executablePath&#39;: &#39;Chromium.app/Contents/MacOS/Chromiu&#39;, 28 &#39;ignoreHTTPSErrors&#39;: True, 29 # &#39;slowMo&#39;:100, 30 &#39;args&#39;: [ 31 &#39;--disable-extensions&#39;, 32 &#39;--hide-scrollbars&#39;, 33 &#39;--disable-bundled-ppapi-flash&#39;, 34 &#39;--mute-audio&#39;, 35 &#39;--no-sandbox&#39;, 36 &#39;--disable-setuid-sandbox&#39;, 37 &#39;--disable-gpu&#39;, 38 &#39;--disable-xss-auditor&#39;, 39 ], 40 &#39;dumpio&#39;: True, 41 } 42 43 44 async def request_check(self, req): 45 &#39;&#39;&#39;filter requests 46 Disable image loading 47 &#39;&#39;&#39; 48 49 res = {&quot;method&quot;:req.method,&quot;url&quot;:req.url,&quot;data&quot;: &quot;&quot; if req.postData == None else req.postData} 50 res.update({&quot;hash&quot;:self.get_hash(str(res))}) 51 self.urls.append(res) 52 if req.resourceType in [&quot;image&quot;, &quot;media&quot;, &quot;eventsource&quot;, &quot;websocket&quot;, &quot;stylesheet&quot;, &quot;font&quot;]: 53 # if req.resourceType in [&quot;image&quot;, &quot;media&quot;, &quot;websocket&quot;]: 54 await req.abort() 55 elif &quot;logout&quot; in req.url or &quot;delete&quot; in req.url or &quot;signout&quot; in req.url: 56 await req.abort() 57 else: 58 await req.continue_() 59 60 61 async def frame_nav(self, frameTo): 62 res = {&quot;method&quot;:&quot;Frame&quot;,&quot;url&quot;:frameTo.url} 63 res.update({&quot;hash&quot;:self.get_hash(str(res))}) 64 self.urls.append(res) 65 66 67 async def page_evaluate(self, page): 68 &#39;&#39;&#39;window.navigator.webdriver=false&#39;&#39;&#39; 69 70 await page.evaluate(&#39;&#39;&#39;() =&gt;{ Object.defineProperties(navigator,{ webdriver:{ get: () =&gt; undefined } }) }&#39;&#39;&#39;) # 以下为插入中间js，将淘宝会为了检测浏览器而调用的js修改其结果。 71 await page.evaluate(&#39;&#39;&#39;() =&gt;{ window.navigator.chrome = { runtime: {}, }; }&#39;&#39;&#39;) 72 await page.evaluate(&#39;&#39;&#39;() =&gt;{ Object.defineProperty(navigator, &#39;languages&#39;, { get: () =&gt; [&#39;en-US&#39;, &#39;en&#39;] }); }&#39;&#39;&#39;) 73 await page.evaluate(&#39;&#39;&#39;() =&gt;{ Object.defineProperty(navigator, &#39;plugins&#39;, { get: () =&gt; [1, 2, 3, 4, 5,6], }); }&#39;&#39;&#39;) 74 75 76 async def get_urls(self, page): 77 res = await page.evaluate(&#39;&#39;&#39;() =&gt; { 78 var urls = []; 79 var onevents = []; 80 var onclickstrs = []; 81 //get form 82 function GetForm() { 83 var f = document.forms; 84 for (var i = 0; i &lt; f.length; i++) { 85 url = f[i].action; 86 //input 87 var inputs = f[i].getElementsByTagName(&#39;*&#39;); 88 var requestdata = &quot;&quot;; 89 var len = inputs.length; 90 91 for (var j = 0; j &lt; len; j++) { 92 if(inputs[j].hasAttributes(&quot;*&quot;)== true){ 93 if (j &lt; len - 1) { 94 if(inputs[j].hasAttributes(&quot;name&quot;) &amp;&amp; inputs[j].name !=undefined &amp;&amp; inputs[j].name !=&quot;&quot;){ 95 requestdata = requestdata + inputs[j].name 96 } 97 else{ 98 continue 99 } 100 if(inputs[j].hasAttributes(&quot;value&quot;) &amp;&amp; inputs[j].value !=&quot;&quot; &amp;&amp; inputs[j].value !=undefined){ 101 requestdata = requestdata + &quot;=&quot; + inputs[j].value + &quot;&amp;&quot;; 102 } 103 else{ 104 requestdata = requestdata + &quot;=ATBvea182&amp;&quot;; 105 } 106 } 107 if (j == len - 1) { 108 if(inputs[j].hasAttributes(&quot;name&quot;) &amp;&amp; inputs[j].name !=undefined &amp;&amp; inputs[j].name !=&quot;&quot;){ 109 requestdata = requestdata + inputs[j].name 110 } 111 else{ 112 continue 113 } 114 if(inputs[j].hasAttributes(&quot;value&quot;) &amp;&amp; inputs[j].value !=&quot;&quot; &amp;&amp; inputs[j].value !=undefined){ 115 requestdata = requestdata + &quot;=&quot; + inputs[j].value ; 116 } 117 else{ 118 requestdata = requestdata + &quot;=ATBvea182&quot;; 119 } 120 } 121 } 122 } 123 res = {&quot;method&quot;: &quot;POST&quot;, &quot;url&quot;: url, &quot;data&quot;: requestdata}; 124 if (urls.indexOf(res) &lt; 0) { 125 urls.push(res) 126 } 127 } 128 } 129 130 // get all href 131 function getallurl() { 132 GetForm(); 133 tag_dict = {&#39;a&#39;: &#39;href&#39;,&#39;link&#39;: &#39;href&#39;,&#39;area&#39;: &#39;href&#39;,&#39;img&#39;: &#39;src&#39;,&#39;embed&#39;: &#39;src&#39;,&#39;video&#39;: &#39;src&#39;,&#39;audio&#39;: &#39;src&#39;} 134 for(var tag in tag_dict){ 135 var src = tag_dict[tag]; 136 var elements = document.getElementsByTagName(tag); 137 for (var i = 0; i &lt; elements.length; i++) { 138 res = {&quot;method&quot;:&quot;GET&quot;, &quot;url&quot;: elements[i][src], &quot;data&quot;: &quot;&quot;}; 139 if (urls.indexOf(res) &lt; 0 &amp;&amp; elements[i][src].indexOf(&quot;javascript:&quot;) &lt; 0 &amp;&amp; elements[i][src].indexOf(&quot;mailto:&quot;) &lt; 0) { 140 urls.push(res); 141 } 142 } 143 } 144 } 145 146 //get onevent 147 function getonevents() { 148 // eval all on event 149 var nodes = document.all; 150 for(var i=0;i&lt;nodes.length;i++){ 151 var attrs = nodes[i].attributes; 152 for(var j=0;j&lt;attrs.length;j++){ 153 attr_name = attrs[j].nodeName; 154 attr_value = attrs[j].nodeValue.replace(/return.*/g,&#39;&#39;).replace(/return.*;/g,&#39;&#39;); 155 if(attr_name.substr(0,2) == &quot;on&quot;){ 156 if (onevents.indexOf(attr_value) &lt; 0) { 157 onevents.push(attr_value); 158 } 159 } 160 if(attr_name == &quot;href&quot;){ 161 javascript_code = attr_value.match(&quot;javascript:(.*)&quot;) 162 if (javascript_code) { 163 if (onevents.indexOf(attr_value) &lt; 0) { 164 onevents.push(attr_value); 165 } 166 } 167 } 168 } 169 } 170 } 171 172 function doloop(i) { 173 getallurl(); 174 getonevents(); 175 if (onevents.length ==0) { 176 return; 177 } 178 if (i == (onevents.length - 1)) { 179 try { 180 eval(onevents[i]); 181 }catch(err) { 182 return; 183 } 184 getallurl(); 185 } 186 else { 187 try { 188 eval(onevents[i]); 189 i = i + 1; //1 190 doloop(i); 191 }catch(err) { 192 i = i + 1; //1 193 doloop(i); 194 } 195 } 196 } 197 198 function main() { 199 doloop(0); 200 } 201 main(); 202 return urls; 203 }&#39;&#39;&#39;) 204 return res 205 206 207 def duplicate(self, datas): 208 &#39;&#39;&#39; Data deduplication 209 &#39;&#39;&#39; 210 b = OrderedDict() 211 for item in datas: 212 b.setdefault(item[&#39;hash&#39;],{**item,}) 213 b = list(b.values()) 214 return b 215 216 217 def get_hash(self, content): 218 md = hashlib.md5() 219 md.update(content.encode(&#39;utf-8&#39;)) 220 return md.hexdigest()[:5] 221 222 223 async def main(self): 224 browser = await launch(self.browser_setting) 225 # browser = await launch() 226 page = await browser.newPage() 227 228 await self.page_evaluate(page) 229 230 await page.setUserAgent(&#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36&#39;) 231 232 await page.setJavaScriptEnabled(True) 233 # 禁止加载图片接口 234 await page.setRequestInterception(True) 235 page.on(&#39;request&#39;, self.request_check) 236 237 page.on(&#39;framenavigated&#39;, self.frame_nav) 238 # 处理弹框 239 page.on(&#39;dialog&#39;, lambda dialog: dialog.accept()) 240 241 req = await page.goto(self.target, waitUntil=[&quot;networkidle0&quot;, &quot;load&quot;, &quot;domcontentloaded&quot;], options={&#39;timeout&#39;: self.timeout}) 242 cookies = await page.cookies() 243 244 title = await page.title() 245 # html 内容 246 contents = await page.content() 247 248 # 响应头 249 res_headers = req.headers 250 251 # 响应状态 252 res_status = req.status 253 254 getUrls = await self.get_urls(page) 255 for res in getUrls: 256 res.update({&quot;hash&quot;:self.get_hash(str(res))}) 257 self.urls.append(res) 258 259 print (title) 260 print (cookies) 261 # print (res_headers) 262 263 for i in self.duplicate(self.urls): 264 print(i) 265 266 await page.close() 267 await browser.close() 268 269 270 def run(self): 271 asyncio.get_event_loop().run_until_complete(self.main()) 272 273 274 275 # a = DynamicCrawler(&quot;http://demo.aisec.cn/demo/aisec/&quot;) 276 a = DynamicCrawler(&quot;http://192.168.81.132/vuls/config/setup.php&quot;) 277 278 a.run() 14 在docker里使用在 window10 里开发很流程，部署到 windows server 上，可能由于配置比较差或其他原因，网站渲染很慢。可以放在容器里，效果明显。注意点是上面提到了的关闭沙盒模式，需要下一些浏览器的依赖，还有就是最好先把浏览器下好，做到镜像里，这样就不会在容器里一个一个下了。 FROM python:slim WORKDIR /usr/src/app RUN apt-get update &amp;&amp; apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget RUN apt-get install -y vim COPY requirements.txt ./ RUN pip install --no-cache-dir -r requirements.txt RUN python -c &quot;import pyppeteer;pyppeteer.chromium_downloader.download_chromium();&quot; COPY . . VOLUME /data Puppeteer api手册Pyppeteer 使用笔记pyppeteer使用总结pyppeteer最为核心类Page的接口方法(下)]]></content>
      <categories>
        <category>爬虫</category>
        <category>pyppeteer</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pyppeteer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码5：middleware的源码分析]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200705_%20middleware%2F</url>
    <content type="text"><![CDATA[这个文件是中间件的基类了。 from collections import defaultdict import logging import pprint # 这几个都是引用默认字典， 日志， 打印的，没啥问题。 from scrapy.exceptions import NotConfigured from scrapy.utils.misc import load_object # 导入了notconfigure没有配置的异常， 导入了load_object去完成字符串到对应类对象的方法。前面已经提到了。 from scrapy.utils.defer import process_parallel, process_chain, process_chain_both # 这几个方法都在defer里面。 我们定位过去看看。 def process_parallel(callbacks, input, *a, **kw): &quot;&quot;&quot;Return a Deferred with the output of all successful calls to the given callbacks &quot;&quot;&quot; dfds = [defer.succeed(input).addCallback(x, *a, **kw) for x in callbacks] d = defer.DeferredList(dfds, fireOnOneErrback=1, consumeErrors=1) d.addCallbacks(lambda r: [x[1] for x in r], lambda f: f.value.subFailure) return d # 这个方法完成的功能就是返回一个带有所有成功输出的defrred，通过给定的callback方法。 # 并行处理，得到dfds， 添加一个成功回调。 一个错误回调。 def process_chain(callbacks, input, *a, **kw): &quot;&quot;&quot;Return a Deferred built by chaining the given callbacks&quot;&quot;&quot; d = defer.Deferred() for x in callbacks: d.addCallback(x, *a, **kw) d.callback(input) return d # 这个方法将所有回调方法添加给deferred对象上， 然后给input def process_chain_both(callbacks, errbacks, input, *a, **kw): &quot;&quot;&quot;Return a Deferred built by chaining the given callbacks and errbacks&quot;&quot;&quot; d = defer.Deferred() for cb, eb in zip(callbacks, errbacks): d.addCallbacks(cb, eb, callbackArgs=a, callbackKeywords=kw, errbackArgs=a, errbackKeywords=kw) if isinstance(input, failure.Failure): d.errback(input) else: d.callback(input) return d # 这个是上面的升级版吧， 添加回调。 logger = logging.getLogger(__name__) 全局的一个日志对象。 def __init__(self, *middlewares): self.middlewares = middlewares self.methods = defaultdict(list) for mw in middlewares: self._add_middleware(mw) # 构造函数， 接受中间件列表， 构造方法的默认dict ， 添加中间件。 @classmethod def _get_mwlist_from_settings(cls, settings): raise NotImplementedError # 这个方法什么鬼， 直接抛出异常？， 应该是写一个方法打个桩子吧， 以后可能后去完善它， 然后调用它的吧。 或者子类里面实现吧 。 # 如果子类不实现就抛出异常， 感觉应该是第二种情况， 这个其实和c++的接口是一样的。 强制子类去实现指定的方法。 def from_settings(cls, settings, crawler=None): mwlist = cls._get_mwlist_from_settings(settings) middlewares = [] enabled = [] for clspath in mwlist: try: mwcls = load_object(clspath) if crawler and hasattr(mwcls, &#39;from_crawler&#39;): mw = mwcls.from_crawler(crawler) elif hasattr(mwcls, &#39;from_settings&#39;): mw = mwcls.from_settings(settings) else: mw = mwcls() middlewares.append(mw) enabled.append(clspath) except NotConfigured as e: if e.args: clsname = clspath.split(&#39;.&#39;)[-1] logger.warning(&quot;Disabled %(clsname)s: %(eargs)s&quot;, {&#39;clsname&#39;: clsname, &#39;eargs&#39;: e.args[0]}, extra={&#39;crawler&#39;: crawler}) logger.info(&quot;Enabled %(componentname)ss:\n%(enabledlist)s&quot;, {&#39;componentname&#39;: cls.component_name, &#39;enabledlist&#39;: pprint.pformat(enabled)}, extra={&#39;crawler&#39;: crawler}) return cls(*middlewares) # 使用子类实现的方法_get_mwlist_from_settings 完成从settings里面获取中间件， 遍历中间件列表。 # 如果中间件有from_crawler,from settings 这些方法，就调用下，去构造一个中间件对象。 # 添加到对应的中间件对象列表中去，这里mwlist只是中间件的类名字列表， middlearess存储的是中间件的对象。 # enabled 启用的中间件类列表。如果有异常， 说明配置文件给定的中间件不存在或者没法实例化。 # 日志信息记录启动了那些中间件。返回中间件。 @classmethod def from_crawler(cls, crawler): return cls.from_settings(crawler.settings, crawler) # 调用对应的中间件方法from_settings 方法去完成类实例的创建 def _add_middleware(self, mw): if hasattr(mw, &#39;open_spider&#39;): self.methods[&#39;open_spider&#39;].append(mw.open_spider) if hasattr(mw, &#39;close_spider&#39;): self.methods[&#39;close_spider&#39;].insert(0, mw.close_spider) # 添加中间件的房， 如果有open_spider，close_spider方法的话， 添加到对应方法去。 # 我们这里可以发现， open是append的close是insert 0位置。 # 也就是说， 如果一个中间件的open添加早那么他的close就后关闭的。 def _process_parallel(self, methodname, obj, *args): return process_parallel(self.methods[methodname], obj, *args) # 处理平行的， 这个方法不知道具体怎么并行的。 def _process_chain(self, methodname, obj, *args): return process_chain(self.methods[methodname], obj, *args) # 处理方法链 def _process_chain_both(self, cb_methodname, eb_methodname, obj, *args): return process_chain_both(self.methods[cb_methodname], \ self.methods[eb_methodname], obj, *args) # 处理成功和错误两个链 def open_spider(self, spider): return self._process_parallel(&#39;open_spider&#39;, spider) def close_spider(self, spider): return self._process_parallel(&#39;close_spider&#39;, spider) # 打开爬虫， 关闭爬虫， 都是并行处理的。 # 从这个文件可以看出来， 我们要自己写个中间件的话， 要实现open_spider,close_spider, from_crawler，from_setting这些方法。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码4：spidermw的源码分析]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200704_%20spidermw%2F</url>
    <content type="text"><![CDATA[spidermw的源码分析如下: import six from twisted.python.failure import Failure # 导入six包和导入failure from scrapy.middleware import MiddlewareManager # 这里导入了一个中间件管理的基类，应该适用于后续的继承的吧。 from scrapy.utils.defer import mustbe_deferred from scrapy.utils.conf import build_component_list # 这里从defer里面和conf里面导入2个方法。 先看看具体实现方法吧。 def mustbe_deferred(f, *args, **kw): &quot;&quot;&quot;Same as twisted.internet.defer.maybeDeferred, but delay calling callback/errback to next reactor loop &quot;&quot;&quot; try: result = f(*args, **kw) # FIXME: Hack to avoid introspecting tracebacks. This to speed up # processing of IgnoreRequest errors which are, by far, the most common # exception in Scrapy - see #125 except IgnoreRequest as e: return defer_fail(failure.Failure(e)) except: return defer_fail(failure.Failure()) else: return defer_result(result) # 这个方法有点类似于defer_result 的意思。 不管啥请求都是调用了defer_fail或者defer_result . 都等100ms完成读写。 def build_component_list(compdict, custom=None, convert=update_classpath): &quot;&quot;&quot;Compose a component list from a { class: order } dictionary.&quot;&quot;&quot; def _check_components(complist): if len({convert(c) for c in complist}) != len(complist): raise ValueError(&#39;Some paths in {!r} convert to the same object, &#39; &#39;please update your settings&#39;.format(complist)) def _map_keys(compdict): if isinstance(compdict, BaseSettings): compbs = BaseSettings() for k, v in six.iteritems(compdict): prio = compdict.getpriority(k) if compbs.getpriority(convert(k)) == prio: raise ValueError(&#39;Some paths in {!r} convert to the same &#39; &#39;object, please update your settings&#39; &#39;&#39;.format(list(compdict.keys()))) else: compbs.set(convert(k), v, priority=prio) return compbs else: _check_components(compdict) return {convert(k): v for k, v in six.iteritems(compdict)} def _validate_values(compdict): &quot;&quot;&quot;Fail if a value in the components dict is not a real number or None.&quot;&quot;&quot; for name, value in six.iteritems(compdict): if value is not None and not isinstance(value, numbers.Real): raise ValueError(&#39;Invalid value {} for component {}, please provide &#39; \ &#39;a real number or None instead&#39;.format(value, name)) # BEGIN Backwards compatibility for old (base, custom) call signature if isinstance(custom, (list, tuple)): _check_components(custom) return type(custom)(convert(c) for c in custom) if custom is not None: compdict.update(custom) # END Backwards compatibility _validate_values(compdict) compdict = without_none_values(_map_keys(compdict)) return [k for k, v in sorted(six.iteritems(compdict), key=itemgetter(1))] # 这个方法真的长 啊， 内部嵌套了几个方法。 # 我们把内部嵌套的几个方法都分析下吧。 def _check_components(complist): if len({convert(c) for c in complist}) != len(complist): raise ValueError(&#39;Some paths in {!r} convert to the same object, &#39; &#39;please update your settings&#39;.format(complist)) # 这个方法从名字上看是检查组件的。先判断下长度相等不， 如果不等就抛出异常了。 # 判断过程中用到了convert方法， 发现这个方法有默认值的。也就是convert使用默认的update_classpath方法处理，我们定位过去看看。 def update_classpath(path): &quot;&quot;&quot;Update a deprecated path from an object with its new location&quot;&quot;&quot; for prefix, replacement in DEPRECATION_RULES: if path.startswith(prefix): new_path = path.replace(prefix, replacement, 1) warnings.warn(&quot;`{}` class is deprecated, use `{}` instead&quot;.format(path, new_path), ScrapyDeprecationWarning) return new_path return path # 这里有个规则啊 ，如果以旧的开头， 将他换成新的，然后提示一个警告信息。 返回新的路径。 # 规则我这里也粘贴过来吧。 DEPRECATION_RULES = [ (&#39;scrapy.contrib_exp.downloadermiddleware.decompression.&#39;, &#39;scrapy.downloadermiddlewares.decompression.&#39;), (&#39;scrapy.contrib_exp.iterators.&#39;, &#39;scrapy.utils.iterators.&#39;), (&#39;scrapy.contrib.downloadermiddleware.&#39;, &#39;scrapy.downloadermiddlewares.&#39;), (&#39;scrapy.contrib.exporter.&#39;, &#39;scrapy.exporters.&#39;), (&#39;scrapy.contrib.linkextractors.&#39;, &#39;scrapy.linkextractors.&#39;), (&#39;scrapy.contrib.loader.processor.&#39;, &#39;scrapy.loader.processors.&#39;), (&#39;scrapy.contrib.loader.&#39;, &#39;scrapy.loader.&#39;), (&#39;scrapy.contrib.pipeline.&#39;, &#39;scrapy.pipelines.&#39;), (&#39;scrapy.contrib.spidermiddleware.&#39;, &#39;scrapy.spidermiddlewares.&#39;), (&#39;scrapy.contrib.spiders.&#39;, &#39;scrapy.spiders.&#39;), (&#39;scrapy.contrib.&#39;, &#39;scrapy.extensions.&#39;), (&#39;scrapy.command.&#39;, &#39;scrapy.commands.&#39;), (&#39;scrapy.dupefilter.&#39;, &#39;scrapy.dupefilters.&#39;), (&#39;scrapy.linkextractor.&#39;, &#39;scrapy.linkextractors.&#39;), (&#39;scrapy.telnet.&#39;, &#39;scrapy.extensions.telnet.&#39;), (&#39;scrapy.spider.&#39;, &#39;scrapy.spiders.&#39;), (&#39;scrapy.squeue.&#39;, &#39;scrapy.squeues.&#39;), (&#39;scrapy.statscol.&#39;, &#39;scrapy.statscollectors.&#39;), (&#39;scrapy.utils.decorator.&#39;, &#39;scrapy.utils.decorators.&#39;), (&#39;scrapy.spidermanager.SpiderManager&#39;, &#39;scrapy.spiderloader.SpiderLoader&#39;), ] # 看完这个方法，我们就明白了上面的代码 def _check_components(complist): if len({convert(c) for c in complist}) != len(complist): raise ValueError(&#39;Some paths in {!r} convert to the same object, &#39; &#39;please update your settings&#39;.format(complist)) # 这个他判定长度不等的情况一般是有新的旧的设置，重复导致的。 让你检查你的设置。 def _map_keys(compdict): if isinstance(compdict, BaseSettings): compbs = BaseSettings() for k, v in six.iteritems(compdict): prio = compdict.getpriority(k) if compbs.getpriority(convert(k)) == prio: raise ValueError(&#39;Some paths in {!r} convert to the same &#39; &#39;object, please update your settings&#39; &#39;&#39;.format(list(compdict.keys()))) else: compbs.set(convert(k), v, priority=prio) return compbs else: _check_components(compdict) return {convert(k): v for k, v in six.iteritems(compdict)} # 这个判定下compdict是basesettings的子类， 如果是的话，构造一个basesettings， 遍历compdict # 获取指定key的优先级prio, 如果优先级有相等的是要抛出异常的。其他情况下， 把优先级设置为compdict中指定的优先级。 # 如果不是basesetting的子类。 就调用check_components去检查设置重复，然后返回一个dict对象。 def _validate_values(compdict): &quot;&quot;&quot;Fail if a value in the components dict is not a real number or None.&quot;&quot;&quot; for name, value in six.iteritems(compdict): if value is not None and not isinstance(value, numbers.Real): raise ValueError(&#39;Invalid value {} for component {}, please provide &#39; \ &#39;a real number or None instead&#39;.format(value, name)) # 这个方法就是判定compdict里面value不是none或者real的话就抛出异常。 # 几个内嵌的小方法看完了， 我们还是回到这个build_component_list 这个方法。 # 如果custom是list,tuple的实例的话调用检查个数， 返回指定类对象。 这里返回一个list，或者元组。 # 如果custome 不是none的话，就更新下comdict # 验证下compdict,都是数值的。 def without_none_values(iterable): &quot;&quot;&quot;Return a copy of `iterable` with all `None` entries removed. If `iterable` is a mapping, return a dictionary where all pairs that have value `None` have been removed. &quot;&quot;&quot; try: return {k: v for k, v in six.iteritems(iterable) if v is not None} except AttributeError: return type(iterable)((v for v in iterable if v is not None)) # 这个方法就是把none去掉。 如果是映射的话去掉。 # 这个方法的异常不知道为何要写这个。 方法吧， 可能这个方法其他地方还有其他用地。 # 然后这个方法返回一个排序的key数值， 具体排序方法使用了itemgetter(1) ，定位过去看下。 &quot;&quot;&quot; Return a callable object that fetches the given item(s) from its operand. After f = itemgetter(2), the call f(r) returns r[2]. After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3]) &quot;&quot;&quot; # 这个说明够详细了吧。 根据value去排序key的上面的语句。 # 接下来就是爬虫中间件的具体实现代码了。 我们这里可以看到他继承了。 中间件管理类， 我们看看， 如果简单的话， 就先看看 # 如果复杂的话就先放放。 def _get_mwlist_from_settings(cls, settings): return build_component_list(settings.getwithbase(&#39;SPIDER_MIDDLEWARES&#39;)) # 从名字上， 我们知道这个是从settings里面获取中间件的列表的。没问题的。 def _add_middleware(self, mw): super(SpiderMiddlewareManager, self)._add_middleware(mw) if hasattr(mw, &#39;process_spider_input&#39;): self.methods[&#39;process_spider_input&#39;].append(mw.process_spider_input) if hasattr(mw, &#39;process_spider_output&#39;): self.methods[&#39;process_spider_output&#39;].insert(0, mw.process_spider_output) if hasattr(mw, &#39;process_spider_exception&#39;): self.methods[&#39;process_spider_exception&#39;].insert(0, mw.process_spider_exception) if hasattr(mw, &#39;process_start_requests&#39;): self.methods[&#39;process_start_requests&#39;].insert(0, mw.process_start_requests) # 这个定义了一个添加中间件的方法 # 先调用基类的add方法， 然后判断判定是否有 process_spider_input 等等方法。 # 如果有的话， 把这个中间件的方法添加到对应的方法链上去。 # 这里有4个。 分别是。 process_spider_input， process_spider_output process_spider_exception process_start_requests # 我们这里可以看出， 如果我们自己要写爬虫中间件， 重点是这4个方法的。 切记切记。 # scrape_response 这个方法太长了。内部也嵌套了几个方法， 我们还是先看看内部的小方法吧。 def process_spider_input(response): for method in self.methods[&#39;process_spider_input&#39;]: try: result = method(response=response, spider=spider) assert result is None, \ &#39;Middleware %s must returns None or &#39; \ &#39;raise an exception, got %s &#39; \ % (fname(method), type(result)) except: return scrape_func(Failure(), request, spider) return scrape_func(response, request, spider) # 处理爬虫的中间件个各个 process_spider_input 方法。 def process_spider_exception(_failure): exception = _failure.value for method in self.methods[&#39;process_spider_exception&#39;]: result = method(response=response, exception=exception, spider=spider) assert result is None or _isiterable(result), \ &#39;Middleware %s must returns None, or an iterable object, got %s &#39; % \ (fname(method), type(result)) if result is not None: return result return _failure # 处理爬虫中间件的各个process_spider_exception方法。结果必须是none或者可迭代的。 def process_spider_output(result): for method in self.methods[&#39;process_spider_output&#39;]: result = method(response=response, result=result, spider=spider) assert _isiterable(result), \ &#39;Middleware %s must returns an iterable object, got %s &#39; % \ (fname(method), type(result)) return result # 处理爬虫中间件的各个process_spider_exception方法。结果可迭代的。 # 这个scrape_response 方法， fname是获取到类的名字， 方法的名字 dfd = mustbe_deferred(process_spider_input, response) dfd.addErrback(process_spider_exception) dfd.addCallback(process_spider_output) # 这段代码， 创建延迟对象， 添加错误回调方法，添加成功回调方法。 def process_start_requests(self, start_requests, spider): return self._process_chain(&#39;process_start_requests&#39;, start_requests, spider) # 这个方法， 就是处理开始请求的。调用了_process_chain处理链， 接受开始的请求和对应的爬虫。 具体还是需要去基类去看看这个方法的。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码3：scraper的源码分析]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200703_%20scraper%2F</url>
    <content type="text"><![CDATA[我们看看scraper.py文件吧。从注释中我们可以看出这个scraper模块是实现爬虫组件去解析响应流并且提取数据的。 import logging from collections import deque # 这2个就是日志的deque队列的导入。 from twisted.python.failure import Failure from twisted.internet import defer # 这2句，导入了一个Failure和一个defer延迟。 from scrapy.utils.defer import defer_result, defer_succeed, parallel, iter_errback # 这个从自己的工具类defer里面导入了好几个方法，基本看是并行，错误，成功，结果的一些相关方法。 我们定位过去一个一个分析下。 def defer_result(result): if isinstance(result, defer.Deferred): return result elif isinstance(result, failure.Failure): return defer_fail(result) else: return defer_succeed(result) # 这里对result进行判定， 如果是Deferred对象，那就返回，如果是Failure结果 返回defer_fail(result) 这个defer_fail应该是对这个错误的result解析的吧。先放放 # 其他的情况就直接使用defer_succeed去解析。既然这里提到了defer_fail，defer_succeed 2个方法， 那我们干脆就先看看这2个方法做了啥。 def defer_fail(_failure): &quot;&quot;&quot;Same as twisted.internet.defer.fail but delay calling errback until next reactor loop It delays by 100ms so reactor has a chance to go trough readers and writers before attending pending delayed calls, so do not set delay to zero. &quot;&quot;&quot; d = defer.Deferred() reactor.callLater(0.1, d.errback, _failure) return d # 这个是google翻译了下twisted.internet.defer.fail相同，但延迟调用errback直到下一个反应器回路它延迟了100ms，所以反应堆有机会通过读写在等待延迟呼叫之前，所以不要将延迟设置为零 # 我们从上面可以知道，他故意延迟0.1为了读写操作的。 def defer_succeed(result): &quot;&quot;&quot;Same as twisted.internet.defer.succeed but delay calling callback until next reactor loop It delays by 100ms so reactor has a chance to go trough readers and writers before attending pending delayed calls, so do not set delay to zero. &quot;&quot;&quot; d = defer.Deferred() reactor.callLater(0.1, d.callback, result) return d # 这个方法不多解释了。 和上面的那个是一样的。 def parallel(iterable, count, callable, *args, **named): &quot;&quot;&quot;Execute a callable over the objects in the given iterable, in parallel, using no more than ``count`` concurrent calls. Taken from: http://jcalderone.livejournal.com/24285.html &quot;&quot;&quot; coop = task.Cooperator() work = (callable(elem, *args, **named) for elem in iterable) return defer.DeferredList([coop.coiterate(work) for _ in range(count)]) # 这个看的不太懂。 就是解决并发问题的。 去了http://jcalderone.livejournal.com/24285.html 也没有看懂。 def iter_errback(iterable, errback, *a, **kw): &quot;&quot;&quot;Wraps an iterable calling an errback if an error is caught while iterating it. &quot;&quot;&quot; it = iter(iterable) while True: try: yield next(it) except StopIteration: break except: errback(failure.Failure(), *a, **kw) # 迭代处理iterable这个对象，google翻译下吧： 如果在迭代时捕获到错误，则可以包装一个可调用的回调函数。这个方法一直迭代，如果错误就使用errback包装一个可回调的函数。 from scrapy.utils.spider import iterate_spider_output def iterate_spider_output(result): return arg_to_iter(result) # 这个方法定位到另一个位置了。 我们追踪过去看看 def arg_to_iter(arg): &quot;&quot;&quot;Convert an argument to an iterable. The argument can be a None, single value, or an iterable. Exception: if arg is a dict, [arg] will be returned &quot;&quot;&quot; if arg is None: return [] elif not isinstance(arg, _ITERABLE_SINGLE_VALUES) and hasattr(arg, &#39;__iter__&#39;): return arg else: return [arg] # 将对象转化为可迭代的对象。 # 如果是none返回[], 如果是不可迭代就返回[arg] 本身迭代的就返回自身。 _ITERABLE_SINGLE_VALUES = dict, BaseItem, six.text_type, bytes # 这里是不是需要还需要判定下arg是不是有__next__呢。 from scrapy.utils.misc import load_object 这个01，02的文档都提到了就是将str转对象的。 from scrapy.utils.log import logformatter_adapter, failure_to_exc_info # 这个是基础日志的。我们也看看吧。 def logformatter_adapter(logkws): &quot;&quot;&quot; Helper that takes the dictionary output from the methods in LogFormatter and adapts it into a tuple of positional arguments for logger.log calls, handling backward compatibility as well. &quot;&quot;&quot; if not {&#39;level&#39;, &#39;msg&#39;, &#39;args&#39;} &lt;= set(logkws): warnings.warn(&#39;Missing keys in LogFormatter method&#39;, ScrapyDeprecationWarning) if &#39;format&#39; in logkws: warnings.warn(&#39;`format` key in LogFormatter methods has been &#39; &#39;deprecated, use `msg` instead&#39;, ScrapyDeprecationWarning) level = logkws.get(&#39;level&#39;, logging.INFO) message = logkws.get(&#39;format&#39;, logkws.get(&#39;msg&#39;)) # NOTE: This also handles &#39;args&#39; being an empty dict, that case doesn&#39;t # play well in logger.log calls args = logkws if not logkws.get(&#39;args&#39;) else logkws[&#39;args&#39;] return (level, message, args) # 这个方法是个适配器，将logkws字典对象最终返回一个元组，日志级别，信息，和详细参数。 def failure_to_exc_info(failure): &quot;&quot;&quot;Extract exc_info from Failure instances&quot;&quot;&quot; if isinstance(failure, Failure): return (failure.type, failure.value, failure.getTracebackObject()) # 方法比较简单， 用于提取错误实例的信息。 from scrapy.exceptions import CloseSpider, DropItem, IgnoreRequest # 这里从异常类导入几个异常吧。 我们也定位过去吧。 class DropItem(Exception): &quot;&quot;&quot;Drop item from the item pipeline&quot;&quot;&quot; pass class CloseSpider(Exception): &quot;&quot;&quot;Raise this from callbacks to request the spider to be closed&quot;&quot;&quot; def __init__(self, reason=&#39;cancelled&#39;): super(CloseSpider, self).__init__() self.reason = reason class IgnoreRequest(Exception): &quot;&quot;&quot;Indicates a decision was made not to process a request&quot;&quot;&quot; # 这三个基本都是异常类而已，继承了exception,无实质代码。 # dropitem: item被丢弃的异常。 # closespider：关闭爬虫的异常。 # IgnoreRequest:忽略请求的异常。 from scrapy import signals # 这里就是导入那几个信号了。 from scrapy.http import Request, Response # 这个导入了请求和响应类。 from scrapy.core.spidermw import SpiderMiddlewareManager # 导入了爬虫中间件管理 from scrapy.utils.request import referer_str # 这个不清楚。 定位过去看下吧。 def referer_str(request): &quot;&quot;&quot; Return Referer HTTP header suitable for logging. &quot;&quot;&quot; referrer = request.headers.get(&#39;Referer&#39;) if referrer is None: return referrer return to_native_str(referrer, errors=&#39;replace&#39;) # 从请求头信息里面获取referer信息。 logger = logging.getLogger(__name__) # 全局的日志对象 # 上面的包分析完毕了。 我们看看下面的类吧，有2个一个是slot，一个是scraper。一个一个看吧。 slot的方法看下 def __init__(self, max_active_size=5000000): self.max_active_size = max_active_size self.queue = deque() self.active = set() self.active_size = 0 self.itemproc_size = 0 self.closing = None # 这里设置了，最大活动大小，默认值为5000000， 这个值为何不放到默认配置文件里面呢。疑惑下。 # 构造一个deques,使用集合去存储活动的， 活动的大小开始为0，itemproc_size item 处理的大小，关闭状态为none. def add_response_request(self, response, request): deferred = defer.Deferred() self.queue.append((response, request, deferred)) if isinstance(response, Response): self.active_size += max(len(response.body), self.MIN_RESPONSE_SIZE) else: self.active_size += self.MIN_RESPONSE_SIZE return deferred # 这个方法从名字上看 ，应该是添加响应请求吧， # 创建一个defer对象，队列里面添加一个(response,request,deferred)元祖，如果response shi REsposne的示例的话 # 活动的大小就是原来活动的大小+ body的长度h或者最小响应的大小。 # 否则，就设置为最小的响应大小。放回那个deferred. def next_response_request_deferred(self): response, request, deferred = self.queue.popleft() self.active.add(request) return response, request, deferred # 从队列中popleft一个元组，活动请求添加request,返回一个元组，response,request,deferred def finish_response(self, response, request): self.active.remove(request) if isinstance(response, Response): self.active_size -= max(len(response.body), self.MIN_RESPONSE_SIZE) else: self.active_size -= self.MIN_RESPONSE_SIZE # 完成响应的话， 就从active活动列表中移除这个请求，active_size 减去对应大小。 def is_idle(self): return not (self.queue or self.active) # 是否空闲的判断， 如果队列不为空， 或者active不为空。 def needs_backout(self): return self.active_size &gt; self.max_active_size # 判断是否超限了。 # 下面看看这个scraper类吧。 def __init__(self, crawler): self.slot = None self.spidermw = SpiderMiddlewareManager.from_crawler(crawler) itemproc_cls = load_object(crawler.settings[&#39;ITEM_PROCESSOR&#39;]) self.itemproc = itemproc_cls.from_crawler(crawler) self.concurrent_items = crawler.settings.getint(&#39;CONCURRENT_ITEMS&#39;) self.crawler = crawler self.signals = crawler.signals self.logformatter = crawler.logformatter # 这个是初始化了，爬虫中间件从crawler获取，item处理类从crawler.settings获取。然后获取一个item处理类的对象。 # 并发item数量，信号和日志formatter设置都是从crawler获取。 @defer.inlineCallbacks def open_spider(self, spider): &quot;&quot;&quot;Open the given spider for scraping and allocate resources for it&quot;&quot;&quot; self.slot = Slot() yield self.itemproc.open_spider(spider) # 这个方法就是打开给定的爬虫，并分配指定的资源， # 创建一个slot，然后调用对应的itemproessor类创建的处理类去打开爬虫。 def close_spider(self, spider): &quot;&quot;&quot;Close a spider being scraped and release its resources&quot;&quot;&quot; slot = self.slot slot.closing = defer.Deferred() slot.closing.addCallback(self.itemproc.close_spider) self._check_if_closing(spider, slot) return slot.closing # 关闭爬虫并且释放资源。 # 获取slot， 然后给slot添加一个closing的事件，然后放回方法。 def is_idle(self): &quot;&quot;&quot;Return True if there isn&#39;t any more spiders to process&quot;&quot;&quot; return not self.slot # 如果没有爬虫去处理了。 就返回true了。 def _check_if_closing(self, spider, slot): if slot.closing and slot.is_idle(): slot.closing.callback(spider) # 如果closing不为空，不为空闲， 就调用指定spider的关闭回调。 def enqueue_scrape(self, response, request, spider): slot = self.slot dfd = slot.add_response_request(response, request) def finish_scraping(_): slot.finish_response(response, request) self._check_if_closing(spider, slot) self._scrape_next(spider, slot) return _ dfd.addBoth(finish_scraping) dfd.addErrback( lambda f: logger.error(&#39;Scraper bug processing %(request)s&#39;, {&#39;request&#39;: request}, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) self._scrape_next(spider, slot) return dfd # 调用add_response_request添加返回一个defferd对象，定义一个完成的方法，给成功和失败都添加一个finish_scraping的回调。 # 给错误的在添加一个匿名的回调方法。 # 调用_scrape_next 处理下一个。 def _scrape_next(self, spider, slot): while slot.queue: response, request, deferred = slot.next_response_request_deferred() self._scrape(response, request, spider).chainDeferred(deferred) # 这里如果slot的queue有内容的haunted， 就一直循环下去， 调用_scrape去处理。 def _scrape(self, response, request, spider): &quot;&quot;&quot;Handle the downloaded response or failure through the spider callback/errback&quot;&quot;&quot; assert isinstance(response, (Response, Failure)) dfd = self._scrape2(response, request, spider) # returns spiders processed output dfd.addErrback(self.handle_spider_error, request, response, spider) dfd.addCallback(self.handle_spider_output, request, response, spider) return dfd # 这个方法就是处理下载响应或者失败，通过给爬虫指定的成功和错误的回调方法。 # 先断言这个是响应流或者failure，调用_scrape2获取爬虫处理的输出 # 添加错误回调和成功回调。 def _scrape2(self, request_result, request, spider): &quot;&quot;&quot;Handle the different cases of request&#39;s result been a Response or a Failure&quot;&quot;&quot; if not isinstance(request_result, Failure): return self.spidermw.scrape_response( self.call_spider, request_result, request, spider) else: # FIXME: don&#39;t ignore errors in spider middleware dfd = self.call_spider(request_result, request, spider) return dfd.addErrback( self._log_download_errors, request_result, request, spider) # 如果响应是成功的的。调用自己的爬虫中间件去处理响应。如果是错误的，调用call_spider方法，给dfd添加一个错误的回调。 def call_spider(self, result, request, spider): result.request = request dfd = defer_result(result) dfd.addCallbacks(request.callback or spider.parse, request.errback) return dfd.addCallback(iterate_spider_output) defer_result 这个方法我们上面已经看了。 主要是等100ms读写的。 添加成功的回调。 # 这个地方注意了。 先使用request。callback , 如果没有指定的话，默认采用spider.parse方法。 # 这就是我们的爬虫为何使用parse方法解析response的原因了。 # 添加一个成功回调。 iterate_spider_output 这个上面已经看过了， 就是返回一个可迭代的对象。 def handle_spider_error(self, _failure, request, response, spider): exc = _failure.value if isinstance(exc, CloseSpider): self.crawler.engine.close_spider(spider, exc.reason or &#39;cancelled&#39;) return logger.error( &quot;Spider error processing %(request)s (referer: %(referer)s)&quot;, {&#39;request&#39;: request, &#39;referer&#39;: referer_str(request)}, exc_info=failure_to_exc_info(_failure), extra={&#39;spider&#39;: spider} ) self.signals.send_catch_log( signal=signals.spider_error, failure=_failure, response=response, spider=spider ) self.crawler.stats.inc_value( &quot;spider_exceptions/%s&quot; % _failure.value.__class__.__name__, spider=spider ) # 这个方法就是处理爬虫错误的 ， 如果是关闭爬虫异常， 调用对应引擎去关闭爬虫，返回 # 其他情况，就记录下日志信息。 发送对应的爬虫错误信号， 统计信息的添加。 def handle_spider_output(self, result, request, response, spider): if not result: return defer_succeed(None) it = iter_errback(result, self.handle_spider_error, request, response, spider) dfd = parallel(it, self.concurrent_items, self._process_spidermw_output, request, response, spider) return dfd # 处理爬虫的输出，如果结果不为空 调用defer_succeed,错误的话调用错误回调，平行处理， _process_spidermw_output去处理 def _process_spidermw_output(self, output, request, response, spider): &quot;&quot;&quot;Process each Request/Item (given in the output parameter) returned from the given spider &quot;&quot;&quot; if isinstance(output, Request): self.crawler.engine.crawl(request=output, spider=spider) elif isinstance(output, (BaseItem, dict)): self.slot.itemproc_size += 1 dfd = self.itemproc.process_item(output, spider) dfd.addBoth(self._itemproc_finished, output, response, spider) return dfd elif output is None: pass else: typename = type(output).__name__ logger.error(&#39;Spider must return Request, BaseItem, dict or None, &#39; &#39;got %(typename)r in %(request)s&#39;, {&#39;request&#39;: request, &#39;typename&#39;: typename}, extra={&#39;spider&#39;: spider}) # 处理每个请求或者从给定的爬虫得到的item # 如果output是个请求的话， 调用engine.crawl抓取。 # 如果是baseitem或者dict的话， 处理个数加1，调用item处理类的process_item去处理item。 # 添加处理完毕事件。 # 其他请求输出日志。 报告你的返回类型不是给定的item类或者字典类。 或者请求。 # 这里就是限定了。 我们爬虫里面的parse方法只能返回这3类的原因了。 def _log_download_errors(self, spider_failure, download_failure, request, spider): &quot;&quot;&quot;Log and silence errors that come from the engine (typically download errors that got propagated thru here) &quot;&quot;&quot; if (isinstance(download_failure, Failure) and not download_failure.check(IgnoreRequest)): if download_failure.frames: logger.error(&#39;Error downloading %(request)s&#39;, {&#39;request&#39;: request}, exc_info=failure_to_exc_info(download_failure), extra={&#39;spider&#39;: spider}) else: errmsg = download_failure.getErrorMessage() if errmsg: logger.error(&#39;Error downloading %(request)s: %(errmsg)s&#39;, {&#39;request&#39;: request, &#39;errmsg&#39;: errmsg}, extra={&#39;spider&#39;: spider}) if spider_failure is not download_failure: return spider_failure # 这里定义个方法下载错误的， 如果是错误 并且不是ignorerequest的话进入if块。 # 如果错误frames不为空，记录错误信息。 # 否则调用geterrmessage方法，记录错误。 # 如果错误不是下载错误，返回爬虫的错误。 def _itemproc_finished(self, output, item, response, spider): &quot;&quot;&quot;ItemProcessor finished for the given ``item`` and returned ``output`` &quot;&quot;&quot; self.slot.itemproc_size -= 1 if isinstance(output, Failure): ex = output.value if isinstance(ex, DropItem): logkws = self.logformatter.dropped(item, ex, response, spider) logger.log(*logformatter_adapter(logkws), extra={&#39;spider&#39;: spider}) return self.signals.send_catch_log_deferred( signal=signals.item_dropped, item=item, response=response, spider=spider, exception=output.value) else: logger.error(&#39;Error processing %(item)s&#39;, {&#39;item&#39;: item}, exc_info=failure_to_exc_info(output), extra={&#39;spider&#39;: spider}) else: logkws = self.logformatter.scraped(output, response, spider) logger.log(*logformatter_adapter(logkws), extra={&#39;spider&#39;: spider}) return self.signals.send_catch_log_deferred( signal=signals.item_scraped, item=output, response=response, spider=spider) # itemprocess处理类结束，如果输出㐊错误。 判定他是不是dropitem。 分别记录日志。 # 正常情况下，记录日志 。通过日志适配器将logkws 转出logger.log方法接受的参数。 # 发送itemscraped信号。]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java实现巧妙过桥问题]]></title>
    <url>%2F2020%2F07%2Fjava%2Fjava%E7%AE%97%E6%B3%95%2F%E7%94%A8java%E5%AE%9E%E7%8E%B0%E5%B7%A7%E5%A6%99%E8%BF%87%E6%A1%A5%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[问题：小明一家过一座桥，过桥的时候是黑夜，所以必须有灯。现在小明过桥要 2 分钟，小明 的弟弟要 5 分钟，小明的爸爸要 6 分钟，小明的妈妈要 9 分钟，小明的爷爷要 13 分钟。每次 此桥最多可以过两人，而过桥的速度根据过桥最慢者而定，而且灯在点燃后 40 分钟就会熄灭。 问小明一家如何过桥时间最短？ 代码如下： public class demo { static int index; //过桥临时方案的数组下标 static int size = 64; static int N = 5; static int mintime = 40; //最小过桥时间总和，初始值30 static int[] transit = new int[size]; //进行下标中转的数组 static int program[] = new int[size]; //最短时间内过桥的方案; // static int time[] = {1, 3, 6, 8, 12}; //每个人过桥所需要的时间; static int time[] = {2, 5, 6, 9, 13}; //每个人过桥所需要的时间; /* * 将人员编号：小明 location[0]，弟弟location[1]， * 爸爸location[2]，妈妈location[3]，爷爷location[4] 每个人的当前位置：0--在桥左边， 1--在桥右边 */ static int location[] = new int[N]; /* * 参数说明：notPass:未过桥人数;usedtime:当前已用时间;Direction:过桥方向,1--向右,0--向左 */ public static void Find(int notPass, int usedtime, int Direction) { if (notPass == 0) { //所有人已经过桥，更新最少时间及方案 mintime = usedtime; for (int i = 0; i &lt; size &amp;&amp; transit[i] &gt;= 0; i++) { program[i] = transit[i]; } } else if (Direction == 1) { //过桥方向向右，从桥左侧选出两人过桥 for (int i = 0; i &lt; N; i++) { if (location[i] == 0 &amp;&amp; (usedtime + time[i]) &lt; mintime) { transit[index++] = i; location[i] = 1; for (int j = 0; j &lt; N; j++) { int TmpMax = (time[i] &gt; time[j] ? time[i] : time[j]); if (location[j] == 0 &amp;&amp; (usedtime + TmpMax) &lt; mintime) { transit[index++] = j; location[j] = 1; Find((notPass - 2), (usedtime + TmpMax), 0); location[j] = 0; transit[--index] = -1; } } location[i] = 0; transit[--index] = -1; } } } else { //过桥方向向左，从桥右侧选出一个人回来送灯 for (int j = 0; j &lt; N; j++) { if (location[j] == 1 &amp;&amp; usedtime + time[j] &lt; mintime) { transit[index++] = j; location[j] = 0; Find(notPass + 1, usedtime + time[j], 1); location[j] = 1; transit[--index] = -1; } } } } public static void main(String[] args) { String s1 = &quot;&quot;, s2 = &quot;&quot;, s3 = &quot;&quot;; for (int i = 0; i &lt; size; i++) { program[i] = -1; transit[i] = -1; //初始方案内容为负值，避免和人员标号冲突 } Find(N, 0, 1); // 查找最佳方案 System.out.println(&quot;最短过桥时间为：&quot; + mintime); //输出最短过桥时间 System.out.println(&quot;最佳过桥组合为：&quot;); // 输出最佳过桥组合 for (int i = 0; i &lt; size &amp;&amp; program[i] &gt;= 0; i += 3) { switch (program[i]) { case 0: s1 = &quot;小明&quot;; break; case 1: s1 = &quot;弟弟&quot;; break; case 2: s1 = &quot;爸爸&quot;; break; case 3: s1 = &quot;妈妈&quot;; break; case 4: s1 = &quot;爷爷&quot;; break; } switch (program[i + 1]) { case 0: s2 = &quot;小明&quot;; break; case 1: s2 = &quot;弟弟&quot;; break; case 2: s2 = &quot;爸爸&quot;; break; case 3: s2 = &quot;妈妈&quot;; break; case 4: s2 = &quot;爷爷&quot;; break; } switch (program[i + 2]) { case 0: s3 = &quot;小明&quot;; break; case 1: s3 = &quot;弟弟&quot;; break; case 2: s3 = &quot;爸爸&quot;; break; case 3: s3 = &quot;妈妈&quot;; break; case 4: s3 = &quot;爷爷&quot;; break; case -1: s3 = &quot;没人&quot;; break; } System.out.println(s1 + &quot;和&quot; + s2 + &quot;一道过桥，&quot; + s3 + &quot;再回来&quot;); } } } 执行结果如下：]]></content>
      <categories>
        <category>java</category>
        <category>java算法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码2：scheduler的源码分析]]></title>
    <url>%2F2020%2F07%2Fspider%2Fscrapy%2F20200701_scheduler%2F</url>
    <content type="text"><![CDATA[scheduler核心Scheduler主要负责scrapy请求队列的管理，即进队与出队。进一步来说，会涉及到队列的选择，队列去重，序列化。 from_crawler(cls, crawler): settings = crawler.settings dupefilter_cls = load_object(settings[&#39;DUPEFILTER_CLASS&#39;]) dupefilter = dupefilter_cls.from_settings(settings) pqclass = load_object(settings[&#39;SCHEDULER_PRIORITY_QUEUE&#39;]) dqclass = load_object(settings[&#39;SCHEDULER_DISK_QUEUE&#39;]) mqclass = load_object(settings[&#39;SCHEDULER_MEMORY_QUEUE&#39;]) logunser = settings.getbool(&#39;LOG_UNSERIALIZABLE_REQUESTS&#39;, settings.getbool(&#39;SCHEDULER_DEBUG&#39;)) return cls(dupefilter, jobdir=job_dir(settings), logunser=logunser, stats=crawler.stats, pqclass=pqclass, dqclass=dqclass, mqclass=mqclass) 创建了4个对象，分别是dupefilter,pqclass,dqclass,mqclass。 1. dupefilter过滤器（url去重）DUPEFILTER_CLASS = ‘scrapy.dupefilters.RFPDupeFilter’这个类的含义是”Request Fingerprint duplicates filter”，请求指纹副本过滤。也就是对每个request请求做一个指纹，保证相同的请求有相同的指纹。对重复的请求进行过滤。包含查询字符串、cookies字段的相同url也会被去重。 class RFPDupeFilter(BaseDupeFilter): def request_seen(self, request): fp = self.request_fingerprint(request) if fp in self.fingerprints: return True self.fingerprints.add(fp) if self.file: self.file.write(fp + os.linesep) def request_fingerprint(self, request): return request_fingerprint(request) scrapy默认的去重方案：利用request生成fingerprint, 存入set，每次利用set判断，如果用了 disk queue 追加至文件 2. pqclass优先级队列SCHEDULER_PRIORITY_QUEUE = ‘queuelib.PriorityQueue’这是一个优先级队列，使用的是开源的第三方queuelib.它的作用就是对request请求按优先级进行排序，这样我们可以对不同重要性的URL指定优先级（通过设置Request的priority属性）。优先级是一个整数，虽然queuelib使用小的数做为高优化级，但是由于scheduler入队列时取了负值，所以对于我们来说，数值越大优先级越高。 3. dqclass支持序列化的后进先出的磁盘队列SCHEDULER_DISK_QUEUE = ‘scrapy.squeues.PickleLifoDiskQueue’这是一个支持序列化的后进先出的磁盘队列。主要用来帮助我们在停止爬虫后可以接着上一次继续开始爬虫。 4. mqclass后进先出的内存队列SCHEDULER_MEMORY_QUEUE = ‘scrapy.squeues.LifoMemoryQueue’从名字上看，是后进先出的内存队列。这个队列是为了使用2中的队列而存在的，不必单独分析。 scheduler源码解释笔记# scheduler.py import os import json import logging from os.path import join, exists # request_to_dict: 将请求对象转换成dict，如果给定了一个spider，它将尝试找出回调中使用的spider方法的名称，并将其存储为回调。 # request_from_dict：从dict创建请求对象，如果给定了一个spider，它将尝试解析在spider中查找同名方法的回调。 from scrapy.utils.reqser import request_to_dict, request_from_dict from scrapy.utils.misc import load_object, create_instance from scrapy.utils.job import job_dir logger = logging.getLogger(__name__) # 获得一个全局的logger对象。 class Scheduler(object): def __init__(self, dupefilter, jobdir=None, dqclass=None, mqclass=None, logunser=False, stats=None, pqclass=None): self.df = dupefilter # 去重模块 默认利用set在内存去重 self.dqdir = self._dqdir(jobdir) # 磁盘队列路径 持久化队列至硬盘 self.pqclass = pqclass # 带优先级队列 默认来自queuelib self.dqclass = dqclass # 磁盘队列 持久化队列至硬盘 self.mqclass = mqclass # 内存队列 默认来自queuelib self.logunser = logunser self.stats = stats # 状态记录 状态记录通用模块 # 从crawler的设置获取各个属性， 然后使用load_object 获取对应类。 # 主要有以下几个名词， 调度优先级队列，调度磁盘队列，调度内存队列。调度debug开启是否，日志非序列化请求，重复类。 @classmethod def from_crawler(cls, crawler): # 实例化入口 scrapy风格的实例化入口 settings = crawler.settings dupefilter_cls = load_object(settings[&#39;DUPEFILTER_CLASS&#39;]) dupefilter = create_instance(dupefilter_cls, settings, crawler) pqclass = load_object(settings[&#39;SCHEDULER_PRIORITY_QUEUE&#39;]) # &#39;queuelib.PriorityQueue&#39; dqclass = load_object(settings[&#39;SCHEDULER_DISK_QUEUE&#39;]) # &#39;scrapy.squeues.PickleLifoDiskQueue&#39; mqclass = load_object(settings[&#39;SCHEDULER_MEMORY_QUEUE&#39;]) # &#39;scrapy.squeues.LifoMemoryQueue&#39; logunser = settings.getbool(&#39;LOG_UNSERIALIZABLE_REQUESTS&#39;, settings.getbool(&#39;SCHEDULER_DEBUG&#39;)) return cls(dupefilter, jobdir=job_dir(settings), logunser=logunser, stats=crawler.stats, pqclass=pqclass, dqclass=dqclass, mqclass=mqclass) # 获取是否还有请求没处理。 返回true或者false. def has_pending_requests(self): # 检查队列数 指向len return len(self) &gt; 0 # 打开调度器方法： 设置当前的爬虫，设置当前的内存队列，磁盘队列，内存队列初始值为调度优先级队列。 def open(self, spider): # 初始化队列 scrapy模块的初始化入口 self.spider = spider self.mqs = self.pqclass(self._newmq) self.dqs = self._dq() if self.dqdir else None return self.df.open() # 关闭调度器方法： 判断dqs， 关闭dqs，打开active.json文件， 把prios信息写进去。关闭df def close(self, reason): # 安全退出接口 scrapy模块的安全入口 if self.dqs: prios = self.dqs.close() with open(join(self.dqdir, &#39;active.json&#39;), &#39;w&#39;) as f: json.dump(prios, f) return self.df.close(reason) # enqueue_request: 请求进队列 # 如果请求是不过滤的，过滤器df的请求处理过。记录日志， 返回false def enqueue_request(self, request): # 进队api 调度进队 if not request.dont_filter and self.df.request_seen(request): self.df.log(request, self.spider) return False dqok = self._dqpush(request) # self._dqpush 这个是磁盘队列加入这个请求 if dqok: # 如果成功，就给统计信息的disk的对应爬虫加1 self.stats.inc_value(&#39;scheduler/enqueued/disk&#39;, spider=self.spider) else: # 其他情况的话，就给统计信息的memory的对应爬虫加1 self._mqpush(request) self.stats.inc_value(&#39;scheduler/enqueued/memory&#39;, spider=self.spider) self.stats.inc_value(&#39;scheduler/enqueued&#39;, spider=self.spider) # 总的也需要加1，然后返回true return True # next_request：从队列里取出数据进行处理 # 获取下一个请求， 先从内存队列mqs里面pop一个，给memory加1，如果内存中为空就从磁盘队列dq里面pop一个。 # 然后disk加1，如果request不为空， 就给dequed加1 # 注意这个方法和上个方法， 一个是入，一个是出 的。 # 统计信息也是， 一个统计到en队列中， 一个统计到de队列去。 def next_request(self): # 出队api 调度出队，t优先从内存队列里取，然后才是磁盘队列 request = self.mqs.pop() if request: self.stats.inc_value(&#39;scheduler/dequeued/memory&#39;, spider=self.spider) else: request = self._dqpop() if request: self.stats.inc_value(&#39;scheduler/dequeued/disk&#39;, spider=self.spider) if request: self.stats.inc_value(&#39;scheduler/dequeued&#39;, spider=self.spider) return request # 三目运算， 如果磁盘队列不为空的话， 就是磁盘队列加内存队列的长度， 否则就是内存队列的长度。 def __len__(self): return len(self.dqs) + len(self.mqs) if self.dqs else len(self.mqs) &quot;&quot;&quot; 下面的几个方法，_dqpush，_mqpush，_dqpop，_newmq，_newdq，_dq，_dqdir 从方法名字，看看有push,you pop， new ， 大概可以知道这个是构造，添加，删除操作。 _newmq: 构造一个内存队列， _newdq: 构造一个磁盘队列。 具体的列可以看出从setting里面读取过来的。实例化的在这个方面里面的。 返回值就是对应的对象。 _mqpush: 内存队列里面push一个请求， 优先级为请求的负值 _dqpush: 核心就是请求转化为字典， 然后把dict放到磁盘队列中， 如果有异常，说明是无法序列化请求，构造msg信息。 记录警告信息。并记录序列化失败个数，最总返回true，有异常那就返回none _dqpop: 从磁盘队列获取pop一个dict，然后将dict转为request。 返回回去。 _dqdir: 获取dqdir，如果有设置的话， 就会创建一个目录，并返回这个目录 &quot;&quot;&quot; def _dqpush(self, request): if self.dqs is None: return try: reqd = request_to_dict(request, self.spider) self.dqs.push(reqd, -request.priority) except ValueError as e: # non serializable request if self.logunser: msg = (&quot;Unable to serialize request: %(request)s - reason:&quot; &quot; %(reason)s - no more unserializable requests will be&quot; &quot; logged (stats being collected)&quot;) logger.warning(msg, {&#39;request&#39;: request, &#39;reason&#39;: e}, exc_info=True, extra={&#39;spider&#39;: self.spider}) self.logunser = False self.stats.inc_value(&#39;scheduler/unserializable&#39;, spider=self.spider) return else: return True def _mqpush(self, request): self.mqs.push(request, -request.priority) def _dqpop(self): if self.dqs: d = self.dqs.pop() if d: return request_from_dict(d, self.spider) def _newmq(self, priority): return self.mqclass() def _newdq(self, priority): return self.dqclass(join(self.dqdir, &#39;p%s&#39; % priority)) def _dq(self): activef = join(self.dqdir, &#39;active.json&#39;) if exists(activef): with open(activef) as f: prios = json.load(f) else: prios = () q = self.pqclass(self._newdq, startprios=prios) if q: logger.info(&quot;Resuming crawl (%(queuesize)d requests scheduled)&quot;, {&#39;queuesize&#39;: len(q)}, extra={&#39;spider&#39;: self.spider}) return q def _dqdir(self, jobdir): if jobdir: dqdir = join(jobdir, &#39;requests.queue&#39;) if not exists(dqdir): os.makedirs(dqdir) return dqdir]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java实现蛇形打印]]></title>
    <url>%2F2020%2F06%2Fjava%2Fjava%E7%AE%97%E6%B3%95%2F%E7%94%A8java%E5%AE%9E%E7%8E%B0%E8%9B%87%E5%BD%A2%E6%89%93%E5%8D%B0%2F</url>
    <content type="text"><![CDATA[class demo { static int length = 8; static int value = 1; static int[][] snake = new int[length][length]; static Direction lastDirection = Direction.Right; static enum Direction { Right, Down, Left, Up; } public static void initialArray() { int row = 0, col = 0; for (int c = 0; c &lt; length * length; c++) { snake[row][col] = value; lastDirection = findDirection(row, col); switch (lastDirection) { case Right: col++; break; case Down: row++; break; case Left: col--; break; case Up: row--; break; default: System.out.println(&quot;error&quot;); } value++; } } static Direction findDirection(int row, int col) { Direction direction = lastDirection; switch (direction) { case Right: { if ((col == length - 1) || (snake[row][col + 1] != 0)) direction = direction.Down; break; } case Down: { if ((row == length - 1) || (snake[row + 1][col] != 0)) direction = direction.Left; break; } case Left: { if ((col == 0) || (snake[row][col - 1] != 0)) direction = direction.Up; break; } case Up: { if (snake[row - 1][col] != 0) direction = direction.Right; break; } } return direction; } public static void main(String[] args) { initialArray(); // display..... for (int i = 0; i &lt; length; i++) { for (int j = 0; j &lt; length; j++) { // System.out.print(snake[i][j] + &quot; &quot;); System.out.printf(&quot; %2d&quot;, snake[i][j]); } System.out.println(); } } }]]></content>
      <categories>
        <category>java</category>
        <category>java算法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy源码1：engine的源码分析]]></title>
    <url>%2F2020%2F06%2Fspider%2Fscrapy%2F20200630_engine%2F</url>
    <content type="text"><![CDATA[scrapy中engine.py的源码分析如下： &quot;&quot;&quot; engine.py提供了2个类：Slot和ExecutionEngine Slot: 提供了几个方法添加请求，删除请求，关闭自己，触发关闭方法 它使用Twisted的主循环reactor来不断的调度执行Engine的&quot;_next_request&quot;方法，这个方法也是核心循环方法。 ExecutionEngine: 引擎的执行任务 爬虫引擎是控制调度器，下载器和爬虫的。 This is the Scrapy engine which controls the Scheduler, Downloader and Spiders. For more information see docs/topics/architecture.rst &quot;&quot;&quot; import logging from time import time # Twisted是用Python实现的基于事件驱动的网络引擎框架，这里引用了它，可能用于网络方面 from twisted.internet import defer, task from twisted.python.failure import Failure # 接下来导入了一些自己的包 from scrapy import signals # 这些信号记录在 docs/topics/signals.rst. 请不要在没有记录的情况下在此处添加新信号。 &#39;&#39;&#39;signals源码如下： &quot;&quot;&quot; Scrapy signals These signals are documented in docs/topics/signals.rst. Please don&#39;t add new signals here without documenting them there. &quot;&quot;&quot; engine_started = object() engine_stopped = object() spider_opened = object() spider_idle = object() # 爬虫空闲 spider_closed = object() spider_error = object() request_scheduled = object() request_dropped = object() request_reached_downloader = object() response_received = object() response_downloaded = object() item_scraped = object() item_dropped = object() item_error = object() # for backwards compatibility stats_spider_opened = spider_opened stats_spider_closing = spider_closed stats_spider_closed = spider_closed item_passed = item_scraped request_received = request_scheduled &#39;&#39;&#39; from scrapy.core.scraper import Scraper # scraper:数据抓取器，主要用于从网页中抓取数据的处理。也就是ItemPipeLine的处理。 from scrapy.exceptions import DontCloseSpider # 从自定义的类里面导入了一个异常类 from scrapy.http import Response, Request # 从http里面导入了response,request from scrapy.utils.misc import load_object # 加载给定对象绝对路径的对象，然后返回它;这个方法是传递一个str，返回一个类，方法，变量或者实例 &#39;&#39;&#39;load_object源码如下： def load_object(path): &quot;&quot;&quot;Load an object given its absolute object path, and return it. object can be a class, function, variable or an instance. path ie: &#39;scrapy.downloadermiddlewares.redirect.RedirectMiddleware&#39; &quot;&quot;&quot; try: dot = path.rindex(&#39;.&#39;) except ValueError: raise ValueError(&quot;Error loading object &#39;%s&#39;: not a full path&quot; % path) module, name = path[:dot], path[dot+1:] mod = import_module(module) try: obj = getattr(mod, name) except AttributeError: raise NameError(&quot;Module &#39;%s&#39; doesn&#39;t define any object named &#39;%s&#39;&quot; % (module, name)) return obj &#39;&#39;&#39; from scrapy.utils.reactor import CallLaterOnce # 调度要在下一个reactor循环中调用的函数，但前提是该函数自上次运行以来尚未被调度 &#39;&#39;&#39;CallLaterOnce源码如下： class CallLaterOnce(object): &quot;&quot;&quot;Schedule a function to be called in the next reactor loop, but only if it hasn&#39;t been already scheduled since the last time it ran. &quot;&quot;&quot; def __init__(self, func, *a, **kw): self._func = func self._a = a self._kw = kw self._call = None def schedule(self, delay=0): if self._call is None: self._call = reactor.callLater(delay, self) def cancel(self): if self._call: self._call.cancel() def __call__(self): self._call = None return self._func(*self._a, **self._kw) &#39;&#39;&#39; from scrapy.utils.log import logformatter_adapter, failure_to_exc_info # 日志相关 logger = logging.getLogger(__name__) # 全局的日志对象 # slot代表一次nextcall的执行，实际上就是执行一次engine的_next_request。 # slot创建了一个hearbeat，即为一个心跳。通过twisted的task.LoopingCall实现。 # 每隔5s执行一次，尝试处理一个新的request，这属于被动执行。后面还会有主动执行的代码。 # slot可以理解为一个request的生命周期。 class Slot(object): def __init__(self, start_requests, close_if_idle, nextcall, scheduler): self.closing = False self.inprogress = set() # requests in progress self.start_requests = iter(start_requests) self.close_if_idle = close_if_idle self.nextcall = nextcall self.scheduler = scheduler self.heartbeat = task.LoopingCall(nextcall.schedule) # heartbeat属性在init的时候初始化了，在close的时候调用stop。 def add_request(self, request): self.inprogress.add(request) def remove_request(self, request): self.inprogress.remove(request) self._maybe_fire_closing() def close(self): self.closing = defer.Deferred() self._maybe_fire_closing() return self.closing def _maybe_fire_closing(self): if self.closing and not self.inprogress: if self.nextcall: self.nextcall.cancel() if self.heartbeat.running: self.heartbeat.stop() self.closing.callback(None) class ExecutionEngine(object): # 接受crawler爬虫，spider_close_callback 完成初始化工作 # 接受初始化的几个参数，设置、信号、日志格式、从crawler那里获取到，从设置中加载日志调度类，从设置加载下载类 # 其中的设置scheduler_cls, downloader_cls, 默认值可以从default_settings.py获取 # SCHEDULER = &#39;scrapy.core.scheduler.Scheduler&#39; # DOWNLOADER = &#39;scrapy.core.downloader.Downloader&#39; def __init__(self, crawler, spider_closed_callback): self.crawler = crawler self.settings = crawler.settings self.signals = crawler.signals self.logformatter = crawler.logformatter self.slot = None self.spider = None self.running = False self.paused = False self.scheduler_cls = load_object(self.settings[&#39;SCHEDULER&#39;]) downloader_cls = load_object(self.settings[&#39;DOWNLOADER&#39;]) self.downloader = downloader_cls(crawler) self.scraper = Scraper(crawler) self._spider_closed_callback = spider_closed_callback # start: 启动爬虫引擎，方法上面带了个装饰器 @defer.inlineCallbacks # 先去断言引擎的运行状态，记录下开始时间，发送一个引擎启动的信号，设置运行状态为运行，设置_closewait为延迟对象，返回_closewait # 或者说：记录启动时间；发送一个&quot;engine_started&quot;消息；设置running标志；创建一个_closewait的Deferred对象并返回。 @defer.inlineCallbacks def start(self): &quot;&quot;&quot;Start the execution engine&quot;&quot;&quot; assert not self.running, &quot;Engine already running&quot; self.start_time = time() yield self.signals.send_catch_log_deferred(signal=signals.engine_started) self.running = True # 这个_closewait会返回给CrawlerProcess， # 这个Deferred在引擎结束时才会调用，因此用它来向CrawlerProcess通知一个Crawler已经爬取完毕。 self._closewait = defer.Deferred() yield self._closewait # stop : 优雅地停止执行引擎 # 标记状态running为false, 关闭所有的爬虫, 调用_finish_stopping_engine def stop(self): &quot;&quot;&quot;Stop the execution engine gracefully&quot;&quot;&quot; assert self.running, &quot;Engine not running&quot; self.running = False dfd = self._close_all_spiders() return dfd.addBoth(lambda _: self._finish_stopping_engine()) # close: 优雅的关闭执行引擎 # 调用stop方法，完成引擎的关闭工作，其他情况下，关闭爬虫和下载器 def close(self): &quot;&quot;&quot;Close the execution engine gracefully. If it has already been started, stop it. In all cases, close all spiders and the downloader. &quot;&quot;&quot; if self.running: # Will also close spiders and downloader return self.stop() elif self.open_spiders: # Will also close downloader return self._close_all_spiders() else: return defer.succeed(self.downloader.close()) # pause:暂停执行引擎 def pause(self): &quot;&quot;&quot;Pause the execution engine&quot;&quot;&quot; self.paused = True # unpause:解除引擎的暂停 def unpause(self): &quot;&quot;&quot;Resume the execution engine&quot;&quot;&quot; self.paused = False # _next_request:下次请求 def _next_request(self, spider): slot = self.slot if not slot: # 状态判断 return if self.paused: # 状态判断 return while not self._needs_backout(spider): if not self._next_request_from_scheduler(spider): break # 下面if语句，请求不为空，并且爬虫没有处理完毕 if slot.start_requests and not self._needs_backout(spider): try: request = next(slot.start_requests) # 调用next方法 except StopIteration: slot.start_requests = None except Exception: slot.start_requests = None logger.error(&#39;Error while obtaining start requests&#39;, exc_info=True, extra={&#39;spider&#39;: spider}) else: self.crawl(request, spider) # 否则去调用crawl方法。 # 如果爬虫是空闲的，并且爬虫空闲则关闭 是true的话，调用_spider_idle方法。 if self.spider_is_idle(spider) and slot.close_if_idle: self._spider_idle(spider) # _needs_backout: 返回一个布尔值 # 如果引擎关闭则返回true, 或者slot关闭，或者下载器那里返回了true, 或者爬虫那里返回true, # 后面的那2个needs_backout需要具体到downloader, scrper类里面去看。 # 我们可以对这个方法的理解为没有接下来的工作了就返回true def _needs_backout(self, spider): slot = self.slot return not self.running \ or slot.closing \ or self.downloader.needs_backout() \ or self.scraper.slot.needs_backout() # _next_request_from_scheduler: 从调度器获取下一个请求， 判断request,下载请求 def _next_request_from_scheduler(self, spider): slot = self.slot request = slot.scheduler.next_request() if not request: return d = self._download(request, spider) d.addBoth(self._handle_downloader_output, request, spider) d.addErrback(lambda f: logger.info(&#39;Error while handling downloader output&#39;, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) d.addBoth(lambda _: slot.remove_request(request)) d.addErrback(lambda f: logger.info(&#39;Error while removing request from slot&#39;, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) d.addBoth(lambda _: slot.nextcall.schedule()) d.addErrback(lambda f: logger.info(&#39;Error while scheduling new request&#39;, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) return d # _handle_downloader_output : 处理下载的输出 # 断言response为request,response,failure ,如果是request则调用crawl方法，如果是响应enqueue_scrape处理。 def _handle_downloader_output(self, response, request, spider): assert isinstance(response, (Request, Response, Failure)), response # downloader middleware can return requests (for example, redirects) if isinstance(response, Request): self.crawl(response, spider) return # response is a Response or Failure d = self.scraper.enqueue_scrape(response, request, spider) d.addErrback(lambda f: logger.error(&#39;Error while enqueuing downloader output&#39;, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) return d # spider_is_idle: 判定爬虫是否是空闲的 # 判定slot空闲，判定下载空闲，判定请求为空，判定调度器没有要处理的请求 def spider_is_idle(self, spider): if not self.scraper.slot.is_idle(): # scraper is not idle return False if self.downloader.active: # downloader has pending requests return False if self.slot.start_requests is not None: # not all start requests are handled return False if self.slot.scheduler.has_pending_requests(): # scheduler has pending requests return False return True # open_spiders: 打开爬虫 @property def open_spiders(self): return [self.spider] if self.spider else [] # has_capacity: 判断是否有能力处理更多的爬虫引擎 def has_capacity(self): &quot;&quot;&quot;Does the engine have capacity to handle more spiders&quot;&quot;&quot; return not bool(self.slot) # 初始化时规定了self.slot = None # crawl : 爬取，先断言爬虫是打开的，执行调度，执行回调的调度 def crawl(self, request, spider): assert spider in self.open_spiders, \ &quot;Spider %r not opened when crawling: %s&quot; % (spider.name, request) self.schedule(request, spider) self.slot.nextcall.schedule() # schedule : 调度，发出请求调度事件，如果enqueue_request , 则触发请求丢弃事件。 def schedule(self, request, spider): self.signals.send_catch_log(signal=signals.request_scheduled, request=request, spider=spider) if not self.slot.scheduler.enqueue_request(request): self.signals.send_catch_log(signal=signals.request_dropped, request=request, spider=spider) # download : 下载, 调用内部方法_download def download(self, request, spider): d = self._download(request, spider) d.addBoth(self._downloaded, self.slot, request, spider) return d # _download : 内部方法 def _downloaded(self, response, slot, request, spider): slot.remove_request(request) return self.download(response, spider) \ if isinstance(response, Request) else response # 添加请求， 定义一个成功的方法，一个完成的方法，从下载器里面提取对象, getaway添加成功回调，添加完成。 # addCallbacks,addBoth 这2个方法用的挺多的 # addcallbacks 接受一个成功的回调方法， 一个失败的回调方法， # addBoth函数向callback与errback链中添加了相同的回调函数 def _download(self, request, spider): slot = self.slot slot.add_request(request) def _on_success(response): assert isinstance(response, (Response, Request)) if isinstance(response, Response): response.request = request # tie request to response received logkws = self.logformatter.crawled(request, response, spider) logger.log(*logformatter_adapter(logkws), extra={&#39;spider&#39;: spider}) self.signals.send_catch_log(signal=signals.response_received, \ response=response, request=request, spider=spider) return response def _on_complete(_): slot.nextcall.schedule() return _ dwld = self.downloader.fetch(request, spider) dwld.addCallbacks(_on_success) dwld.addBoth(_on_complete) return dwld # open_spider：打开爬虫 # 先断言容量，记录info日志，获取nextcall; # 通过crawler构造scheduler调度器，构造slot对象，调度器打开爬虫，爬虫打开，出发爬虫打开事件，启动心跳信息。 @defer.inlineCallbacks def open_spider(self, spider, start_requests=(), close_if_idle=True): assert self.has_capacity(), &quot;No free spider slot when opening %r&quot; % \ spider.name logger.info(&quot;Spider opened&quot;, extra={&#39;spider&#39;: spider}) nextcall = CallLaterOnce(self._next_request, spider) scheduler = self.scheduler_cls.from_crawler(self.crawler) start_requests = yield self.scraper.spidermw.process_start_requests(start_requests, spider) slot = Slot(start_requests, close_if_idle, nextcall, scheduler) self.slot = slot self.spider = spider yield scheduler.open(spider) yield self.scraper.open_spider(spider) self.crawler.stats.open_spider(spider) yield self.signals.send_catch_log_deferred(signals.spider_opened, spider=spider) slot.nextcall.schedule() slot.heartbeat.start(5) # _spider_idle: 爬虫空闲， 判定空闲， 如果空闲的话，关闭爬虫 def _spider_idle(self, spider): &quot;&quot;&quot;Called when a spider gets idle. This function is called when there are no remaining pages to download or schedule. It can be called multiple times. If some extension raises a DontCloseSpider exception (in the spider_idle signal handler) the spider is not closed until the next loop and this function is guaranteed to be called (at least) once again for this spider. 翻译：当爬虫空闲时调用。在没有剩余的页面可供下载或调度时，调用此函数。可以称之为 多次。如果某个扩展引发DontCloseSpider异常（在spider_idle信号处理器中）直到 下一个循环这个爬虫才关闭，这个函数保证爬虫被调用（至少）一次。 &quot;&quot;&quot; res = self.signals.send_catch_log(signal=signals.spider_idle, \ spider=spider, dont_log=DontCloseSpider) if any(isinstance(x, Failure) and isinstance(x.value, DontCloseSpider) \ for _, x in res): return if self.spider_is_idle(spider): self.close_spider(spider, reason=&#39;finished&#39;) # close_spider : 关闭爬虫，绑定各种错误回调。 # 关闭（取消）spider并清除所有未完成的请求 def close_spider(self, spider, reason=&#39;cancelled&#39;): &quot;&quot;&quot;Close (cancel) spider and clear all its outstanding requests&quot;&quot;&quot; slot = self.slot if slot.closing: return slot.closing logger.info(&quot;Closing spider (%(reason)s)&quot;, {&#39;reason&#39;: reason}, extra={&#39;spider&#39;: spider}) dfd = slot.close() def log_failure(msg): def errback(failure): logger.error( msg, exc_info=failure_to_exc_info(failure), extra={&#39;spider&#39;: spider} ) return errback dfd.addBoth(lambda _: self.downloader.close()) dfd.addErrback(log_failure(&#39;Downloader close failure&#39;)) dfd.addBoth(lambda _: self.scraper.close_spider(spider)) dfd.addErrback(log_failure(&#39;Scraper close failure&#39;)) dfd.addBoth(lambda _: slot.scheduler.close(reason)) dfd.addErrback(log_failure(&#39;Scheduler close failure&#39;)) dfd.addBoth(lambda _: self.signals.send_catch_log_deferred( signal=signals.spider_closed, spider=spider, reason=reason)) dfd.addErrback(log_failure(&#39;Error while sending spider_close signal&#39;)) dfd.addBoth(lambda _: self.crawler.stats.close_spider(spider, reason=reason)) dfd.addErrback(log_failure(&#39;Stats close failure&#39;)) dfd.addBoth(lambda _: logger.info(&quot;Spider closed (%(reason)s)&quot;, {&#39;reason&#39;: reason}, extra={&#39;spider&#39;: spider})) dfd.addBoth(lambda _: setattr(self, &#39;slot&#39;, None)) dfd.addErrback(log_failure(&#39;Error while unassigning slot&#39;)) dfd.addBoth(lambda _: setattr(self, &#39;spider&#39;, None)) dfd.addErrback(log_failure(&#39;Error while unassigning spider&#39;)) dfd.addBoth(lambda _: self._spider_closed_callback(spider)) return dfd # _close_all_spiders :关闭所有的爬虫，遍历爬虫，执行关闭操作 def _close_all_spiders(self): dfds = [self.close_spider(s, reason=&#39;shutdown&#39;) for s in self.open_spiders] dlist = defer.DeferredList(dfds) return dlist # _finish_stopping_engine : 结束引擎，触发引擎关闭操作。 @defer.inlineCallbacks def _finish_stopping_engine(self): yield self.signals.send_catch_log_deferred(signal=signals.engine_stopped) self._closewait.callback(None) 实际源码中engine.py &quot;&quot;&quot; This is the Scrapy engine which controls the Scheduler, Downloader and Spiders. For more information see docs/topics/architecture.rst &quot;&quot;&quot; import logging from time import time from twisted.internet import defer, task from twisted.python.failure import Failure from scrapy import signals from scrapy.core.scraper import Scraper from scrapy.exceptions import DontCloseSpider from scrapy.http import Response, Request from scrapy.utils.misc import load_object from scrapy.utils.reactor import CallLaterOnce from scrapy.utils.log import logformatter_adapter, failure_to_exc_info logger = logging.getLogger(__name__) class Slot(object): def __init__(self, start_requests, close_if_idle, nextcall, scheduler): self.closing = False self.inprogress = set() # requests in progress self.start_requests = iter(start_requests) self.close_if_idle = close_if_idle self.nextcall = nextcall self.scheduler = scheduler self.heartbeat = task.LoopingCall(nextcall.schedule) def add_request(self, request): self.inprogress.add(request) def remove_request(self, request): self.inprogress.remove(request) self._maybe_fire_closing() def close(self): self.closing = defer.Deferred() self._maybe_fire_closing() return self.closing def _maybe_fire_closing(self): if self.closing and not self.inprogress: if self.nextcall: self.nextcall.cancel() if self.heartbeat.running: self.heartbeat.stop() self.closing.callback(None) class ExecutionEngine(object): def __init__(self, crawler, spider_closed_callback): self.crawler = crawler self.settings = crawler.settings self.signals = crawler.signals self.logformatter = crawler.logformatter self.slot = None self.spider = None self.running = False self.paused = False self.scheduler_cls = load_object(self.settings[&#39;SCHEDULER&#39;]) downloader_cls = load_object(self.settings[&#39;DOWNLOADER&#39;]) self.downloader = downloader_cls(crawler) self.scraper = Scraper(crawler) self._spider_closed_callback = spider_closed_callback @defer.inlineCallbacks def start(self): &quot;&quot;&quot;Start the execution engine&quot;&quot;&quot; assert not self.running, &quot;Engine already running&quot; self.start_time = time() yield self.signals.send_catch_log_deferred(signal=signals.engine_started) self.running = True self._closewait = defer.Deferred() yield self._closewait def stop(self): &quot;&quot;&quot;Stop the execution engine gracefully&quot;&quot;&quot; assert self.running, &quot;Engine not running&quot; self.running = False dfd = self._close_all_spiders() return dfd.addBoth(lambda _: self._finish_stopping_engine()) def close(self): &quot;&quot;&quot;Close the execution engine gracefully. If it has already been started, stop it. In all cases, close all spiders and the downloader. &quot;&quot;&quot; if self.running: # Will also close spiders and downloader return self.stop() elif self.open_spiders: # Will also close downloader return self._close_all_spiders() else: return defer.succeed(self.downloader.close()) def pause(self): &quot;&quot;&quot;Pause the execution engine&quot;&quot;&quot; self.paused = True def unpause(self): &quot;&quot;&quot;Resume the execution engine&quot;&quot;&quot; self.paused = False def _next_request(self, spider): slot = self.slot if not slot: return if self.paused: return while not self._needs_backout(spider): if not self._next_request_from_scheduler(spider): break if slot.start_requests and not self._needs_backout(spider): try: request = next(slot.start_requests) except StopIteration: slot.start_requests = None except Exception: slot.start_requests = None logger.error(&#39;Error while obtaining start requests&#39;, exc_info=True, extra={&#39;spider&#39;: spider}) else: self.crawl(request, spider) if self.spider_is_idle(spider) and slot.close_if_idle: self._spider_idle(spider) def _needs_backout(self, spider): slot = self.slot return not self.running \ or slot.closing \ or self.downloader.needs_backout() \ or self.scraper.slot.needs_backout() def _next_request_from_scheduler(self, spider): slot = self.slot request = slot.scheduler.next_request() if not request: return d = self._download(request, spider) d.addBoth(self._handle_downloader_output, request, spider) d.addErrback(lambda f: logger.info(&#39;Error while handling downloader output&#39;, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) d.addBoth(lambda _: slot.remove_request(request)) d.addErrback(lambda f: logger.info(&#39;Error while removing request from slot&#39;, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) d.addBoth(lambda _: slot.nextcall.schedule()) d.addErrback(lambda f: logger.info(&#39;Error while scheduling new request&#39;, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) return d def _handle_downloader_output(self, response, request, spider): assert isinstance(response, (Request, Response, Failure)), response # downloader middleware can return requests (for example, redirects) if isinstance(response, Request): self.crawl(response, spider) return # response is a Response or Failure d = self.scraper.enqueue_scrape(response, request, spider) d.addErrback(lambda f: logger.error(&#39;Error while enqueuing downloader output&#39;, exc_info=failure_to_exc_info(f), extra={&#39;spider&#39;: spider})) return d def spider_is_idle(self, spider): if not self.scraper.slot.is_idle(): # scraper is not idle return False if self.downloader.active: # downloader has pending requests return False if self.slot.start_requests is not None: # not all start requests are handled return False if self.slot.scheduler.has_pending_requests(): # scheduler has pending requests return False return True @property def open_spiders(self): return [self.spider] if self.spider else [] def has_capacity(self): &quot;&quot;&quot;Does the engine have capacity to handle more spiders&quot;&quot;&quot; return not bool(self.slot) def crawl(self, request, spider): assert spider in self.open_spiders, \ &quot;Spider %r not opened when crawling: %s&quot; % (spider.name, request) self.schedule(request, spider) self.slot.nextcall.schedule() def schedule(self, request, spider): self.signals.send_catch_log(signal=signals.request_scheduled, request=request, spider=spider) if not self.slot.scheduler.enqueue_request(request): self.signals.send_catch_log(signal=signals.request_dropped, request=request, spider=spider) def download(self, request, spider): d = self._download(request, spider) d.addBoth(self._downloaded, self.slot, request, spider) return d def _downloaded(self, response, slot, request, spider): slot.remove_request(request) return self.download(response, spider) \ if isinstance(response, Request) else response def _download(self, request, spider): slot = self.slot slot.add_request(request) def _on_success(response): assert isinstance(response, (Response, Request)) if isinstance(response, Response): response.request = request # tie request to response received logkws = self.logformatter.crawled(request, response, spider) logger.log(*logformatter_adapter(logkws), extra={&#39;spider&#39;: spider}) self.signals.send_catch_log(signal=signals.response_received, \ response=response, request=request, spider=spider) return response def _on_complete(_): slot.nextcall.schedule() return _ dwld = self.downloader.fetch(request, spider) dwld.addCallbacks(_on_success) dwld.addBoth(_on_complete) return dwld @defer.inlineCallbacks def open_spider(self, spider, start_requests=(), close_if_idle=True): assert self.has_capacity(), &quot;No free spider slot when opening %r&quot; % \ spider.name logger.info(&quot;Spider opened&quot;, extra={&#39;spider&#39;: spider}) nextcall = CallLaterOnce(self._next_request, spider) scheduler = self.scheduler_cls.from_crawler(self.crawler) start_requests = yield self.scraper.spidermw.process_start_requests(start_requests, spider) slot = Slot(start_requests, close_if_idle, nextcall, scheduler) self.slot = slot self.spider = spider yield scheduler.open(spider) yield self.scraper.open_spider(spider) self.crawler.stats.open_spider(spider) yield self.signals.send_catch_log_deferred(signals.spider_opened, spider=spider) slot.nextcall.schedule() slot.heartbeat.start(5) def _spider_idle(self, spider): &quot;&quot;&quot;Called when a spider gets idle. This function is called when there are no remaining pages to download or schedule. It can be called multiple times. If some extension raises a DontCloseSpider exception (in the spider_idle signal handler) the spider is not closed until the next loop and this function is guaranteed to be called (at least) once again for this spider. &quot;&quot;&quot; res = self.signals.send_catch_log(signal=signals.spider_idle, \ spider=spider, dont_log=DontCloseSpider) if any(isinstance(x, Failure) and isinstance(x.value, DontCloseSpider) \ for _, x in res): return if self.spider_is_idle(spider): self.close_spider(spider, reason=&#39;finished&#39;) def close_spider(self, spider, reason=&#39;cancelled&#39;): &quot;&quot;&quot;Close (cancel) spider and clear all its outstanding requests&quot;&quot;&quot; slot = self.slot if slot.closing: return slot.closing logger.info(&quot;Closing spider (%(reason)s)&quot;, {&#39;reason&#39;: reason}, extra={&#39;spider&#39;: spider}) dfd = slot.close() def log_failure(msg): def errback(failure): logger.error( msg, exc_info=failure_to_exc_info(failure), extra={&#39;spider&#39;: spider} ) return errback dfd.addBoth(lambda _: self.downloader.close()) dfd.addErrback(log_failure(&#39;Downloader close failure&#39;)) dfd.addBoth(lambda _: self.scraper.close_spider(spider)) dfd.addErrback(log_failure(&#39;Scraper close failure&#39;)) dfd.addBoth(lambda _: slot.scheduler.close(reason)) dfd.addErrback(log_failure(&#39;Scheduler close failure&#39;)) dfd.addBoth(lambda _: self.signals.send_catch_log_deferred( signal=signals.spider_closed, spider=spider, reason=reason)) dfd.addErrback(log_failure(&#39;Error while sending spider_close signal&#39;)) dfd.addBoth(lambda _: self.crawler.stats.close_spider(spider, reason=reason)) dfd.addErrback(log_failure(&#39;Stats close failure&#39;)) dfd.addBoth(lambda _: logger.info(&quot;Spider closed (%(reason)s)&quot;, {&#39;reason&#39;: reason}, extra={&#39;spider&#39;: spider})) dfd.addBoth(lambda _: setattr(self, &#39;slot&#39;, None)) dfd.addErrback(log_failure(&#39;Error while unassigning slot&#39;)) dfd.addBoth(lambda _: setattr(self, &#39;spider&#39;, None)) dfd.addErrback(log_failure(&#39;Error while unassigning spider&#39;)) dfd.addBoth(lambda _: self._spider_closed_callback(spider)) return dfd def _close_all_spiders(self): dfds = [self.close_spider(s, reason=&#39;shutdown&#39;) for s in self.open_spiders] dlist = defer.DeferredList(dfds) return dlist @defer.inlineCallbacks def _finish_stopping_engine(self): yield self.signals.send_catch_log_deferred(signal=signals.engine_stopped) self._closewait.callback(None)]]></content>
      <categories>
        <category>爬虫</category>
        <category>scrapy</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java实现哥德巴赫猜想]]></title>
    <url>%2F2020%2F06%2Fjava%2Fjava%E7%AE%97%E6%B3%95%2F%E7%94%A8java%E5%AE%9E%E7%8E%B0%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3%2F</url>
    <content type="text"><![CDATA[问题：哥德巴赫猜想即任何一个大于 2 的偶数都能表示为两个素数之和。编写一个 Java 程序， 验证 1～200 内哥德巴赫猜想的正确性，近似证明哥德巴赫猜想。 代码如下： public class demo { public static boolean isPrime(int i) { // 判断参数i是否是素数，是则返回true反之则返回false int n; boolean flag = true; if (1 == i) // 1本身不是素数，因此需把这个特殊的数字抛出 flag = false; for (n = 2; n &lt;= i - 1; n++) /* 判断i是否是素数的一个方法是看2～i-1之间有其因子（能被2整除），有则不是素数返回false，反之则返回true*/ if (i % n == 0) { flag = false; break; } return flag; } public static boolean isGoldbach(int a) { // 判断参数a是否符合哥德巴赫猜想 int i; boolean flag = false; for (i = 1; i &lt;= a / 2; i++) { if (isPrime(i) &amp;&amp; isPrime(a - i)) { // 根据试题分析中的表达式，传入相关的两个参数 flag = true; // System.out.print(a + &quot;=&quot; + i + &quot;+&quot; + (a - i) + &quot; &quot;); System.out.printf(&quot;%3d=%3d+%3d &quot;, a, i, (a - i)); break; // 只要有一个符合条件的就可以退出循环，判断下一个偶数 } } return flag; } public static boolean Testify_Guess(int low, int high) { // 判断1～100范围内的所有偶数是否符合哥德巴赫猜想，符合则返回true，反之则返回false int i, j = 0; boolean flag = true; for (i = low; i &lt;= high; i++) if (i % 2 == 0 &amp;&amp; i &gt; 2) // 在1～200之间选取大于2的偶数进行猜想测试 if (isGoldbach(i)) { j++; // j用来控制输出格式 ，每行输出5个数据 if (j == 10) { System.out.println(); j = 0; } } else { flag = false; break; } return flag; } public static void main(String[] args) { System.out.println(&quot;\n在1~200范围内，现在开始证实哥德巴赫猜想：&quot;); if (Testify_Guess(1, 200)) { System.out.println(&quot;\n在 1~200范围内，哥德巴赫猜想是正确的。&quot;); } else { System.out.println(&quot;\n哥德巴赫猜想是错误的&quot;); } } } 执行结果如下：]]></content>
      <categories>
        <category>java</category>
        <category>java算法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java实现字符串匹配问题]]></title>
    <url>%2F2020%2F06%2Fjava%2Fjava%E7%AE%97%E6%B3%95%2F%E7%94%A8java%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[考题：判断字符串 a 是否包含字符串 b，这里称 a 为文本串，b 为模式串。代码如下： import java.util.Scanner; public class demo { /** * 判断是否匹配 * * @param target 目标文本串 * @param mode 模式串 * @return 匹配结果 */ public static boolean matchString(String target, String mode) { //为了和算法保持一致，使index从1开始，增加一前缀 String newTarget = &quot;x&quot; + target; String newMode = &#39;x&#39; + mode; int[] K = calculateK(mode); int i = 1; int j = 1; while (i &lt;= target.length() &amp;&amp; j &lt;= mode.length()) { if (j == 0 || newTarget.charAt(i) == newMode.charAt(j)) { i++; j++; } else { j = K[j]; } } if (j &gt; mode.length()) { return true; } return false; } /* * 计算K值 */ private static int[] calculateK(String mode) { //为了和算法保持一致，使index从1开始，增加一前缀 String newMode = &quot;x&quot; + mode; int[] K = new int[newMode.length()]; int i = 1; K[1] = 0; int j = 0; while (i &lt; mode.length()) { if (j == 0 || newMode.charAt(i) == newMode.charAt(j)) { i++; j++; K[i] = j; } else { j = K[j]; } } return K; } /** * @param args */ public static void main(String[] args) { String s1, s2; boolean b; Scanner input = new Scanner(System.in); System.out.println(&quot;请输入字符串1：&quot;); s1 = input.next(); System.out.println(&quot;请输入字符串2：&quot;); s2 = input.next(); b = demo.matchString(s1, s2); System.out.println(&quot;匹配成功？&quot; + b); } } 执行结果如下：]]></content>
      <categories>
        <category>java</category>
        <category>java算法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pyppeteer的环境搭建，常见参数及2个案例]]></title>
    <url>%2F2020%2F06%2Fspider%2Fpyppeteer%2F01_%E4%BB%8B%E7%BB%8D%E5%8F%8A%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[一. pyppeteer介绍Puppeteer是谷歌出品的一款基于Node.js开发的一款工具，主要是用来操纵Chrome浏览器的 API，通过Javascript代码来操纵Chrome浏览器，完成数据爬取、Web程序自动测试等任务。 Puppeteer 默认以 headless 模式运行，但是可以通过修改配置文件运行“有头”模式。 Pyppeteer的两大特点，chromium浏览器和asyncio框架： Chromium是一款独立的浏览器，是Google为发展自家的浏览器Google Chrome而开启的计划，相当于Chrome的实验版，Chromium的稳定性不如Chrome但是功能更加丰富，而且更新速度很快，通常每隔数小时就有新的开发版本发布。 asyncio是Python的一个异步协程库，自3.4版本引入的标准库，直接内置了对异步IO的支持。 github地址：https://github.com/puppeteer/puppeteer/blob/v2.1.1/docs/api.md 中文版教程：https://zhaoqize.github.io/puppeteer-api-zh_CN/ 二. 环境搭建 国内无法访问 可以使用国内镜像 pip install pyppeteer -i https://pypi.douban.com/simple chromium下载地址：https://npm.taobao.org/mirrors/chromium-browser-snapshots/，下载之后解压之后，通过executablePath属性指定运行浏览器了 三. 常见参数 属性 数据类型 描述 executablePath str chrome.exe运行的路径 ignorehttpserrrors bool 忽略https错误，默认false headless bool True 开始无头浏览器 False关闭无头 dumpio bool 设置True 解决浏览器多开卡死 args的参数设置：| 属性 | 数据类型 | 描述 || — | — | — || –disable-infobars | - | 关闭自动化提示框 || –window-size=1920,1080 | str | 设置浏览器大小吗，1920是宽，1080是宽 || –log-level=30 | str | 日志保存等级 || –start-maximized | - | 窗口最大化模式 || –proxy-server=http://localhost:1080 | str | 设置代理 || userDataDir=D:\userData\ | str | 用户文件保存地址 | 四. 使用案例4.1 案例1#!/usr/bin/python # -*- coding: UTF-8 -*- import asyncio from pyppeteer import launch async def main(): # 浏览器 启动参数 start_parm = { # 启动chrome的路径 &quot;executablePath&quot;: r&quot;E:\tmp\chrome-win\chrome.exe&quot;, # 关闭无头浏览器 默认是无头启动的 &quot;headless&quot;: False, } # 创建浏览器对象，可以传入 字典形式参数 browser = await launch(**start_parm) # 创建一个页面对象， 页面操作在该对象上执行 page = await browser.newPage() await page.goto(&#39;http://www.nows.fun/&#39;) # 页面跳转 page_text = await page.content() # 页面内容 print(page_text) await browser.close() # 关闭浏览器对象 asyncio.get_event_loop().run_until_complete(main()) # 创建异步池并执行main函数。 执行结果如下图： 4.2 案例2: 设置可视化参数，代码如下# !/usr/bin/python # -*- coding: UTF-8 -*- import asyncio import tkinter from pyppeteer import launcher # 注意 在导入launch之前先把默认参数改了 # 去除自动化 启动参数 launcher.AUTOMATION_ARGS.remove(&quot;--enable-automation&quot;) from pyppeteer import launch async def main(): # 浏览器 启动参数 start_parm = { # 启动chrome的路径 &quot;executablePath&quot;: r&quot;E:\tmp\chrome-win\chrome.exe&quot;, # 关闭无头浏览器 &quot;headless&quot;: False, &quot;args&quot;: [ &#39;--disable-infobars&#39;, # 关闭自动化提示框 &#39;--no-sandbox&#39;, # 关闭沙盒模式 &#39;--start-maximized&#39;, # 窗口最大化模式 ], } browser = await launch(**start_parm) page = await browser.newPage() # 查看当前 桌面视图大小 tk = tkinter.Tk() width = tk.winfo_screenwidth() height = tk.winfo_screenheight() tk.quit() print(f&#39;设置窗口为：width：{width} height：{height}&#39;) # 设置网页 视图大小 await page.setViewport(viewport={&#39;width&#39;: width, &#39;height&#39;: height}) await page.goto(&#39;http://www.nows.fun/&#39;) page_text = await page.content() print(page_text) await browser.close() asyncio.get_event_loop().run_until_complete(main())]]></content>
      <categories>
        <category>爬虫</category>
        <category>pyppeteer</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pyppeteer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[进度条模块tqdm详解]]></title>
    <url>%2F2020%2F06%2Fpython%2Fpython%E6%A8%A1%E5%9D%97%2Ftqdm%E8%BF%9B%E5%BA%A6%E6%9D%A1%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[进度条 tqdm 库比较热门，声称比老版的 python-progressbar 库的单次响应时间提高了 10 倍以上。 其实进度条的原理十分的简单，无非就是在 shell 中不断重写当前输出。 from tqdm import tqdm pbar = tqdm(range(300))#进度条 for i in pbar: err = &#39;abc&#39; pbar.set_description(f&quot;Reconstruction loss: {err}&quot;) 参数解释iterable=None, desc=None, 传入str类型，作为进度条标题（类似于说明） total=None, 预期的迭代次数 leave=True, file=None, ncols=None, 可以自定义进度条的总长度 mininterval=0.1, 最小的更新间隔 maxinterval=10.0, 最大更新间隔miniters=None, ascii=None, unit=&#39;it&#39;,unit_scale=False, dynamic_ncols=False, smoothing=0.3,bar_format=None, initial=0, position=None, postfix 以字典形式传入 详细信息 例如 速度= 10， 如： from tqdm import tqdm dict = {&quot;a&quot;:123,&quot;b&quot;:456} for i in tqdm(range(10),total=10,desc = &quot;WSX&quot;,ncols = 100,postfix = dict,mininterval = 0.3): pass 执行结果如下： 再如： from tqdm import trange from random import random, randint from time import sleep with trange(100) as t: for i in t: # Description will be displayed on the left t.set_description(f&#39;下载速度 {i}&#39;) # Postfix will be displayed on the right, # formatted automatically based on argument&#39;s datatype t.set_postfix(loss=random(), gen=randint(1, 999), str=&#39;详细信息&#39;, lst=[1, 2]) sleep(0.1) 执行结果如下：]]></content>
      <categories>
        <category>python</category>
        <category>python模块</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用4种方式爬取CSDN用户的全部文章]]></title>
    <url>%2F2020%2F06%2Fspider%2Fcases%2F%E7%94%A84%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%88%AC%E5%8F%96CSDN%E7%94%A8%E6%88%B7%E7%9A%84%E5%85%A8%E9%83%A8%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[爬取全部文章（341篇），所用时间统计： 使用selenium爬取csdn（需要9分钟）； 使用requests爬取csdn（需要139秒就能爬取全部文章）； 模拟scrapy爬取(需要102秒)； 使用asyncio异步爬取csdn（只需要17秒就能爬取全部文章）。 1. 使用selenium爬取csdn（需要9分钟）#-*- coding:utf-8 -*- import time import requests from selenium import webdriver from selenium.webdriver.chrome.options import Options from lxml import etree def run(url): try: chrome_options = Options() chrome_options.add_argument(&#39;--headless&#39;) chrome_options.add_argument(&#39;lang=zh_CN.UTF-8&#39;) UserAgent = &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36&#39; chrome_options.add_argument(&#39;User-Agent=&#39; + UserAgent) browser = webdriver.Chrome(chrome_options=chrome_options) browser.get(url) res = etree.HTML(browser.page_source) # 提取文章页的链接并爬取 article_urls = res.xpath(&#39;//div[@class=&quot;article-list&quot;]/div/h4/a/@href&#39;) for article_url in article_urls: browser.get(article_url) article_result = etree.HTML(browser.page_source) title = article_result.xpath(&#39;//h1[@class=&quot;title-article&quot;]/text()&#39;)[0] publish_time = article_result.xpath(&#39;//div[@class=&quot;bar-content&quot;]/span[@class=&quot;time&quot;]/text()&#39;)[0] print(publish_time, title) except: pass if __name__ == &#39;__main__&#39;: start = time.time() for i in range(1, 10): # 建立任务链接 url = &#39;https://blog.csdn.net/cui_yonghua/article/list/1&#39; run(url=url) print(&#39;time cost:{}&#39;.format(time.time()-start)) 2. 使用requests爬取csdn（需要139秒就能爬取全部文章）#-*- coding:utf-8 -*- import time import requests from lxml import etree headers = {&#39;Accept&#39;: &#39;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#39;, &#39;Accept-Encoding&#39;: &#39;gb2312,utf-8&#39;, &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0&#39;, &#39;Accept-Language&#39;: &#39;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&#39;, &#39;Connection&#39;: &#39;Keep-alive&#39; } def run(url): try: res_text = requests.get(url=url, headers=headers) res = etree.HTML(res_text.text) # 提取文章页的链接并爬取 article_urls = res.xpath(&#39;//div[@class=&quot;article-list&quot;]/div/h4/a/@href&#39;) for article_url in article_urls: article_text = requests.get(url=article_url, headers=headers) article_result = etree.HTML(article_text.text) title = article_result.xpath(&#39;//h1[@class=&quot;title-article&quot;]/text()&#39;)[0] publish_time = article_result.xpath(&#39;//div[@class=&quot;bar-content&quot;]/span[@class=&quot;time&quot;]/text()&#39;)[0] print(publish_time, title) except: pass if __name__ == &#39;__main__&#39;: start = time.time() for i in range(1, 10): # 建立任务链接 url = &#39;https://blog.csdn.net/cui_yonghua/article/list/{}&#39;.format(i) run(url=url) print(&#39;time cost:{}&#39;.format(time.time()-start)) 3. 用scrapy爬取(需要102秒)#-*- coding:utf-8 -*- import time import random import requests from lxml import etree import scrapy from scrapy.http import HtmlResponse HEADERS = [ {&#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0) Gecko/20100101 Firefox/6.0&#39;}, {&#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&#39;}, ] def run(url): try: res_text = requests.get(url=url, headers=random.choice(HEADERS)) request = scrapy.Request(url=url) res = HtmlResponse(url=request.url, body=res_text.content, request=request, status=200) # 提取文章页的链接并爬取 article_urls = res.xpath(&#39;//div[@class=&quot;article-list&quot;]/div/h4/a/@href&#39;).extract() for article_url in article_urls: res_article = requests.get(url=article_url, headers=random.choice(HEADERS)) article = scrapy.Request(url=article_url, headers=random.choice(HEADERS)) article_text = HtmlResponse(url=article.url, body=res_article.content, request=article, status=200) title = article_text.xpath(&#39;//h1[@class=&quot;title-article&quot;]/text()&#39;).extract_first() publish_time = article_text.xpath(&#39;//div[@class=&quot;bar-content&quot;]/span[@class=&quot;time&quot;]/text()&#39;).extract_first() print(publish_time, title) except: pass if __name__ == &#39;__main__&#39;: start = time.time() for i in range(1, 10): # 建立任务链接 url = &#39;https://blog.csdn.net/cui_yonghua/article/list/{}&#39;.format(i) run(url=url) print(&#39;time cost:{}&#39;.format(time.time()-start)) 4. 使用asyncio异步爬取csdn（只需要17秒就能爬取全部文章）#-*- coding:utf-8 -*- import asyncio import aiohttp import time from lxml import etree targe_url = [] for i in range(1, 10): # 建立任务链接 targe_url.append(&#39;https://blog.csdn.net/cui_yonghua/article/list/{}&#39;.format(i)) async def run(url): async with aiohttp.ClientSession() as session: aiohttp.ClientTimeout(total=3) async with session.get(url, headers=headers) as response: res_text = await response.text() res = etree.HTML(res_text) # 提取文章页的链接并爬取 article_urls = res.xpath(&#39;//div[@class=&quot;article-list&quot;]/div/h4/a/@href&#39;) for article_url in article_urls: async with session.get(url=article_url, headers=headers) as article: article_text = await article.text() article_result = etree.HTML(article_text) title = article_result.xpath(&#39;//h1[@class=&quot;title-article&quot;]/text()&#39;)[0] publish_time = article_result.xpath(&#39;//div[@class=&quot;bar-content&quot;]/span[@class=&quot;time&quot;]/text()&#39;)[0] print(publish_time, title) if __name__ == &#39;__main__&#39;: start = time.time() loop = asyncio.get_event_loop() tasks = [] for u in targe_url: tasks.append(asyncio.ensure_future(run(u))) loop.run_until_complete(asyncio.wait(tasks)) loop.close() print(&#39;total {}pages,time cost:{}&#39;.format(len(tasks), time.time()-start)) 更全的代码已上传至github ：https://github.com/cuiyonghua6/csdn_crawl]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用selenium爬取csdn博客并提取数据]]></title>
    <url>%2F2020%2F06%2Fspider%2Fcases%2F%E7%94%A8selenium%E7%88%AC%E5%8F%96csdn%E5%8D%9A%E5%AE%A2%E5%B9%B6%E6%8F%90%E5%8F%96%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[爬取selenium，下面代码用selenium爬取博客文章的标题和时间，并用selenium自带的解析，etree，bs4，scrapy框架自带的selector等4种方式来解析网页数据； 当然，请求库还可以使用urllib，requests；也可以用aiohttp来实现异步爬取，用Splash实现动态渲染页面的抓取。 # -*- encoding: utf-8 -*- from selenium import webdriver from selenium.webdriver.chrome.options import Options from lxml import etree from bs4 import BeautifulSoup from scrapy import Selector def selenium_test(url): # 设置无头浏览器，字符编码，请求头等信息，防止反爬虫检测 chrome_options = Options() chrome_options.add_argument(&#39;--headless&#39;) chrome_options.add_argument(&#39;lang=zh_CN.UTF-8&#39;) UserAgent = &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36&#39; chrome_options.add_argument(&#39;User-Agent=&#39; + UserAgent) browser = webdriver.Chrome(chrome_options=chrome_options) browser.get(url) print(&#39;用4种方式提取标题和时间：&#39;) # 解析数据 方式一：用selenium自带的解析 title = browser.find_element_by_xpath(&#39;//h1[@class=&quot;title-article&quot;]&#39;).text publish_time = browser.find_element_by_xpath(&#39;//div[@class=&quot;bar-content&quot;]/span[@class=&quot;time&quot;]&#39;).text print(&#39; 方式一 用selenium自带的解析: &#39;, title, publish_time) # 解析数据 方式二：用etree selector = etree.HTML(browser.page_source) title = selector.xpath(&#39;//h1[@class=&quot;title-article&quot;]/text()&#39;)[0] publish_time = selector.xpath(&#39;//div[@class=&quot;bar-content&quot;]/span[@class=&quot;time&quot;]/text()&#39;)[0] print(&#39; 方式二 用etree解析：&#39;, title, publish_time) # 解析数据 方式三：用beautifulsoup soup = BeautifulSoup(browser.page_source, &#39;lxml&#39;) title = soup.find(&#39;h1&#39;, {&#39;class&#39;: &#39;title-article&#39;}).text publish_title = soup.find(&#39;div&#39;, {&#39;class&#39;: &#39;bar-content&#39;}).find(&#39;span&#39;, {&#39;class&#39;: &#39;time&#39;}).text print(&#39; 方式三：用beautifulsoup解析：&#39;, title, publish_title) # 解析数据 方式四：用scrapy框架中的选择器Selector selector = Selector(text=browser.page_source) title = selector.xpath(&#39;//h1[@class=&quot;title-article&quot;]/text()&#39;).extract_first() publish_time = selector.xpath(&#39;//div[@class=&quot;bar-content&quot;]/span[@class=&quot;time&quot;]/text()&#39;).extract_first() article_list = selector.xpath(&#39;//div[@class=&quot;markdown_views prism-atom-one-dark&quot;]&#39;).extract() article = &#39;&#39;.join(article_list) if len(article_list) &gt; 0 else None print(&#39; 方式四：用scrapy框架中的选择器Selector解析：&#39;, title, publish_time) # 可以把博客文章保存到本地，然后用浏览器打开，会发现博客文章和网页上的结构是一样的 # with open(&#39;article.html&#39;, &#39;w&#39;) as f: # f.write(article) selenium_test(url=&#39;https://blog.csdn.net/cui_yonghua/article/details/90512943&#39;) 执行结果如下图：更全的代码已上传至github: https://github.com/cuiyonghua6/csdn_crawl]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql报错：1366, Incorrect string value:for colum 的解决办法]]></title>
    <url>%2F2020%2F06%2Fdatabase%2Fmysql%2F20200609_mysql%E6%8A%A5%E9%94%991366%2F</url>
    <content type="text"><![CDATA[原表为： 执行sql语句： 向mysql中插入数据时，报错：1366, &quot;Incorrect string value: &#39;\\xE5\\x96\\x9C\\xE6\\xAC\\xA2...&#39; for colum 报错原因：ubuntu刚安装完mysql，默认字符集是latin1，把字符编码修改成utf8格式就行了。修复方法：在 【client】下追加： default-character-set=utf8 在 【mysqld】下追加： character-set-server=utf8 在 【mysql】 下追加： default-character-set=utf8 保存并退出注： 我的【mysqld】在 /etc/mysql/mysql.conf.d/mysqld.cnf我的【mysql】 在 /etc/mysql/conf.d/mysql.cnf我的【client】 在 /etc/mysql/debian.cnf 4. 然后重启MySQL：service mysql restart。可查看字符集：mysql -u root -p 输入密码 show variables like &#39;%character%&#39;; 可看到结果如下图：]]></content>
      <categories>
        <category>数据处理</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科学计算pandas]]></title>
    <url>%2F2020%2F05%2Fdeep_learnning%2F%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%2F%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97pandas%2F</url>
    <content type="text"><![CDATA[一. pandas概述pandas官网：https://pandas.pydata.org/ 功能：是一个常用的python科学计算工具包，被广泛应用于金融，经济，统计，分析等学术和商业领域的数据分析，数据清洗和准备等工作。 二. Pandas 数据结构系列(Series)是能够保存任何类型的数据(整数，字符串，浮点数，Python对象等)的一维标记数组。轴标签统称为索引。 #************1 Pandas 数据结构******************* import pandas as pd import numpy as np import matplotlib.pyplot as plt # 1 系列 Series # pandas.Series( data, index, dtype, copy)。 # data ：如 ndarray，list，constants # index 索引唯一与数据的长度相同。 # dtype dtype用于数据类型。 # copy 复制数据，默认为false。 data = np.array([&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]) index=[100,101,102,103] obj = pd.Series(data,index) print(obj) &#39;&#39;&#39; 运行结果： 100 a 101 b 102 c 103 d dtype: object &#39;&#39;&#39; # 2 数据帧 DataFrame # pandas.DataFrame( data, index, columns, dtype, copy) # data :如:ndarray，series，map，lists，dict，constant和另一个DataFrame。 data = {&#39;Name&#39;:[&#39;Tom&#39;, &#39;Jack&#39;, &#39;Steve&#39;, &#39;Ricky&#39;],&#39;Age&#39;:[28,34,29,42]} df = pd.DataFrame(data, index=[&#39;rank1&#39;,&#39;rank2&#39;,&#39;rank3&#39;,&#39;rank4&#39;],dtype=float) print(df[:2]) &#39;&#39;&#39; Name Age rank1 Tom 28.0 rank2 Jack 34.0 &#39;&#39;&#39; # 3 面板 Panel:是3D容器的数据。 # axis 0:items，每个项目对应于内部包含的数据帧(DataFrame)。 # axis 1:major_axis ，每个数据帧(DataFrame)的索引(行)。 # axis 2:minor_axis ，它是每个数据帧(DataFrame)的列。 # pandas.Panel(data, items, major_axis, minor_axis, dtype, copy) # items : axis=0 # major_axis : axis=1 # minor_axis : axis=2 data = {&#39;Item1&#39; : pd.DataFrame(np.random.randn(4, 3)), &#39;Item2&#39; : pd.DataFrame(np.random.randn(4, 2))} p = pd.Panel(data) print(p[&#39;Item1&#39;]) # print( p.major_xs(1)) &#39;&#39;&#39; 运行结果： 0 1 2 0 -1.586204 0.425280 -2.190339 1 1.456369 -1.974917 0.740831 2 -1.299986 -0.831230 -1.328189 3 1.013347 0.963660 -0.178311 &#39;&#39;&#39; 三. Pandas 数据统计#************2 Pandas 数据统计******************* import pandas as pd import numpy as np #Create a Dictionary of series d = {&#39;Name&#39;:pd.Series([&#39;Tom&#39;,&#39;James&#39;,&#39;Ricky&#39;,&#39;Vin&#39;,&#39;Steve&#39;,&#39;Minsu&#39;,&#39;Jack&#39;, &#39;Lee&#39;,&#39;David&#39;,&#39;Gasper&#39;,&#39;Betina&#39;,&#39;Andres&#39;]), &#39;Age&#39;:pd.Series([25,26,25,23,30,29,23,34,40,30,51,46]), &#39;Rating&#39;:pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8,3.78,2.98,4.80,4.10,3.65])} df = pd.DataFrame(d) print(df) &#39;&#39;&#39; Name Age Rating 0 Tom 25 4.23 1 James 26 3.24 2 Ricky 25 3.98 3 Vin 23 2.56 4 Steve 30 3.20 5 Minsu 29 4.60 6 Jack 23 3.80 7 Lee 34 3.78 8 David 40 2.98 9 Gasper 30 4.80 10 Betina 51 4.10 11 Andres 46 3.65 &#39;&#39;&#39; # 统计数据之和 print(&#39;数据之和:\n&#39;,df.sum()) # 统计数据的均值 print(&#39;数据的均值:\n&#39;,df.mean()) # 统计数据的标准偏差 print(&#39;数据的标准偏差:\n&#39;,df.std()) &#39;&#39;&#39; count() 非空观测数量 sum() 所有值之和 mean() 所有值的平均值 median() 所有值的中位数 mode() 值的模值 std() 值的标准偏差 min() 所有值中的最小值 max() 所有值中的最大值 abs() 绝对值 prod() 数组元素的乘积 cumsum() 累计总和 cumprod() 累计乘积 &#39;&#39;&#39; # pct_change()函数:DatFrames和Panel都有pct_change()函数。此函数将每个元素与其前一个元素进行比较，并计算变化百分比。 s = pd.Series([1,2,3,4,5,4]) print (s.pct_change()) # 协方差:DataFrame时，协方差方法计算所有列之间的协方差(cov)值。 frame = pd.DataFrame(np.random.randn(10, 5), columns=[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]) print (frame[&#39;a&#39;].cov(frame[&#39;b&#39;])) print (frame.cov()) # 相关性:相关性显示了任何两个数值(系列)之间的线性关系。 frame = pd.DataFrame(np.random.randn(10, 5), columns=[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]) print (frame[&#39;a&#39;].corr(frame[&#39;b&#39;])) print (frame.corr()) 四. Pandas 处理丢失值# ************3 Pandas 处理丢失值******************* # 机器学习和数据挖掘等领域由于数据缺失导致的数据质量差， # 在模型预测的准确性上面临着严重的问题。 import pandas as pd import numpy as np # 重构缺失值 # 使用重构索引(reindexing)，创建了一个缺少值的DataFrame。 在输出中，NaN表示不是数字的值 df = pd.DataFrame(np.random.randn(5, 3), index=[&#39;a&#39;, &#39;c&#39;, &#39;e&#39;, &#39;f&#39;, &#39;h&#39;], columns=[&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]) df = df.reindex([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]) print(df) # 检查缺失值:Pandas提供isnull()和notnull()函数，它们也是Series和DataFrame对象的方法 df = pd.DataFrame(np.random.randn(5, 3), index=[&#39;a&#39;, &#39;c&#39;, &#39;e&#39;, &#39;f&#39;, &#39;h&#39;], columns=[&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]) df = df.reindex([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]) print(df.isnull()) # print (df[&#39;one&#39;].notnull()) # 缺少数据的计算 # 在求和数据时，NA将被视为0.如果数据全部是NA，那么结果将是NA # df = pd.DataFrame(np.random.randn(5, 3), index=[&#39;a&#39;, &#39;c&#39;, &#39;e&#39;, &#39;f&#39;, # &#39;h&#39;],columns=[&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]) # df = df.reindex([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]) # # print(df[&#39;one&#39;]) # print (df[&#39;one&#39;].sum()) # 清理/填充缺少数据 # 1 用标量值替换NaN:0替换NaN df = pd.DataFrame(np.random.randn(5, 3), index=[&#39;a&#39;, &#39;c&#39;, &#39;e&#39;, &#39;f&#39;, &#39;h&#39;], columns=[&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]) df = df.reindex([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]) print(&quot;NaN replaced with &#39;0&#39;:&quot;) print(df.fillna(0)) # 2 填写NA前进和后退:pad/fill 填充方法向前 和 bfill/backfill 填充方法向后 df = pd.DataFrame(np.random.randn(5, 3), index=[&#39;a&#39;, &#39;c&#39;, &#39;e&#39;, &#39;f&#39;, &#39;h&#39;], columns=[&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]) df = df.reindex([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]) print(df.fillna(method=&#39;pad&#39;)) # print (df.fillna(method=&#39;backfill&#39;)) # 3 丢失缺少的值：axis=0在行上应用，axis=1在列上应用 df = pd.DataFrame(np.random.randn(5, 3), index=[&#39;a&#39;, &#39;c&#39;, &#39;e&#39;, &#39;f&#39;, &#39;h&#39;], columns=[&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]) df = df.reindex([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]) print(df.dropna(axis=0)) # 4 替换丢失(或)通用值 df = pd.DataFrame({&#39;one&#39;: [10, 20, 30, 40, 50, 2000], &#39;two&#39;: [1000, 0, 30, 40, 50, 60]}) print(df.replace({1000: 10, 2000: 60})) # 5 处理无效值 df = pd.DataFrame({&#39;one&#39;: [10, 20, np.nan, 40, 50, 2000], &#39;two&#39;: [1000, 0, 30, np.nan, 50, 60]}) print(&quot;df:\n{}\n&quot;.format(pd.isna(df))) # 6 忽略无效值 df = pd.DataFrame(np.random.randn(5, 3), index=[&#39;a&#39;, &#39;c&#39;, &#39;e&#39;, &#39;f&#39;, &#39;h&#39;], columns=[&#39;one&#39;, &#39;two&#39;, &#39;three&#39;]) df = df.reindex([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;]) print(&quot;df.dropna():\n{}\n&quot;.format(df.dropna())) 五. Pandas 稀疏数据# ************4 Pandas 稀疏数据******************* # 当任何匹配特定值的数据(NaN/缺失值或任何值)被省略时，稀疏对象被“压缩”。 import pandas as pd import numpy as np # 稀疏数据处理 df = pd.DataFrame(np.random.randn(10000, 4)) df.ix[:9998] = np.nan sdf = df.to_sparse() # 通过调用to_dense标准密集 print(sdf.to_dense()) # 稀疏率 print(&#39;稀疏率：\n&#39;, sdf.density) # 稀疏Dtypes s = pd.Series([1, np.nan, np.nan]) print(s) print(&quot;=============================&quot;) s.to_sparse() print(s) 六. 可视化# ************5 Pandas 可视化******************* import matplotlib.pyplot as plt import pandas as pd import numpy as np # 折线图 # # df = pd.DataFrame(np.random.randn(10,4),index=pd.date_range(&#39;2019/2/27&#39;, # periods=10), columns=list(&#39;ABCD&#39;)) # df.plot() # plt.show() # # # 条形图 # df = pd.DataFrame(np.random.rand(10,4),columns=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]) # df.plot.bar() # plt.show() # # # # 堆积条形图 # df = pd.DataFrame(np.random.rand(10,4),columns=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]) # df.plot.bar(stacked=True) # plt.show() # # # 水平条形图 # df = pd.DataFrame(np.random.rand(10,4),columns=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]) # df.plot.barh(stacked=True) # plt.show() # # # 直方图 # df = pd.DataFrame({&#39;a&#39;:np.random.randn(1000)+1,&#39;b&#39;:np.random.randn(1000),&#39;c&#39;: # np.random.randn(1000) - 1}, columns=[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]) # df.plot.hist(bins=20) # plt.show() # # # # 多个直方图 # df=pd.DataFrame({&#39;a&#39;:np.random.randn(1000)+1,&#39;b&#39;:np.random.randn(1000),&#39;c&#39;: # np.random.randn(1000) - 1}, columns=[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]) # df.hist(bins=20) # plt.show() # # # 箱形图 # df = pd.DataFrame(np.random.rand(10, 5), columns=[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;]) # df.plot.box() # plt.show() # # # 区域块图形 # df = pd.DataFrame(np.random.rand(10, 4), columns=[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]) # df.plot.area() # plt.show() # # # 散点图形 # df = pd.DataFrame(np.random.rand(50, 4), columns=[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]) # df.plot.scatter(x=&#39;a&#39;, y=&#39;b&#39;) # plt.show() # 饼状图 df = pd.DataFrame(3 * np.random.rand(4), index=[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;], columns=[&#39;x&#39;]) df.plot.pie(subplots=True) plt.show() 七. Pandas 文件操作# ************6 Pandas 文件操作******************* # pandas库提供了一系列的read_函数来读取各种格式的文件，它们如下所示： # read_csv # read_table # read_fwf # read_clipboard # read_excel # read_hdf # read_html # read_json # read_msgpack # read_pickle # read_sas # read_sql # read_stata # read_feather import pandas as pd import numpy as np # 读取Excel文件 pip install xlrd df1 = pd.read_excel(&quot;data/test1.xlsx&quot;) print(&quot;df1:\n{}\n&quot;.format(df1)) # 读取CSV文件 df2 = pd.read_csv(&quot;data/test2.csv&quot;, sep=&quot;,&quot;) print(&quot;df2:\n{}\n&quot;.format(df2)) # 转存JSON文件 df = pd.DataFrame([[&#39;a&#39;, &#39;b&#39;], [&#39;c&#39;, &#39;d&#39;]],index=[&#39;row 1&#39;, &#39;row 2&#39;],columns=[&#39;col 1&#39;, &#39;col 2&#39;]) data_json=df.to_json(orient=&#39;columns&#39;) print(&#39;JSON文件\n&#39;,data_json) # 读取json文件 df3 = pd.read_json(&quot;data/test3.json&quot;) print(&quot;\ndf3:\n{}\n&quot;.format(df2))]]></content>
      <categories>
        <category>机器学习</category>
        <category>科学计算</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>科学计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科学计算numpy]]></title>
    <url>%2F2020%2F05%2Fdeep_learnning%2F%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%2F%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97numpy%2F</url>
    <content type="text"><![CDATA[一. 数组操作import numpy as np # ***********1 数组操作******************** # 1. 创建一维数组 arr1 = np.array([1, 2, 3]) print(arr1) &#39;&#39;&#39;结果： [1 2 3] &#39;&#39;&#39; # 2. 创建多维数组 arr2 = np.array([[1, 2], [3, 4],[5, 6]]) print(arr2) # 3. 数组的维数:维度的数量 print(&quot;数组的维数:&quot;,arr2.ndim) &#39;&#39;&#39;结果：2&#39;&#39;&#39; # 数组的维度:对于矩阵，n 行 m 列 print(&quot;数组的维度&quot;,arr2.shape) &#39;&#39;&#39;结果：(3, 2)&#39;&#39;&#39; # 数组元素的总个数，相当于 n*m 的值 print(&quot;数组元素总个数&quot;,arr2.size) &#39;&#39;&#39;结果：6&#39;&#39;&#39; # ndarray 对象的元素类型 print(&quot;元素类型&quot;,arr2.dtype) &#39;&#39;&#39;结果：int32&#39;&#39;&#39; # 3. 常用数组：创建零数组,shape数组形状;dtype数据类型，可选;order 有&quot;C&quot;和&quot;F&quot;两个选项,分别代表，行优先和列优先. arr3 = np.zeros((2,3), dtype = float, order = &#39;C&#39;) print(arr3) &#39;&#39;&#39;结果： [[0. 0. 0.] [0. 0. 0.]] &#39;&#39;&#39; # 创建1数组,shape数组形状;dtype数据类型，可选;order 有&quot;C&quot;和&quot;F&quot;两个选项,分别代表，行优先和列优先. arr4 = np.ones([2,3], dtype = None, order = &#39;C&#39;) print(arr4) &#39;&#39;&#39;结果： [[1. 1. 1.] [1. 1. 1.]] &#39;&#39;&#39; # 5. 从数值范围创建数组,从1开始到10终止，步长为2的浮点型数组 arr5 = np.arange(1,10,2,dtype=float) print(arr5) &#39;&#39;&#39;结果：[1. 3. 5. 7. 9.]&#39;&#39;&#39; # 6. 切片和索引 arr6 = np.arange(20) s = slice(1,20,3) # 从索引1开始到索引20停止，间隔为3 print (arr6[s]) &#39;&#39;&#39;结果：[ 1 4 7 10 13 16 19]&#39;&#39;&#39; b = arr6[2:14:2] # 从索引 2 开始到索引 14 停止，间隔为 2 print(b) &#39;&#39;&#39;结果：[ 2 4 6 8 10 12]&#39;&#39;&#39; 二. 数学函数import numpy as np #***********2 数学函数******************** # 三角函数：标准的三角函数：sin()、cos()、tan() arr7 = np.array([0,45,90]) # 不同角度的正弦值 # 通过乘 pi/180 转化为弧度 print (np.sin(arr7*np.pi/180)) &#39;&#39;&#39;结果：[0. 0.70710678 1. ]&#39;&#39;&#39; # 类似的：正弦np.sin 余弦np.cos 正切np.tan；arcsin，arccos，和 arctan 函数返回给定角度的 sin，cos 和 tan 的反三角函数 # 加减乘除: add()，subtract()，multiply() 和 divide()、 arr8 = np.arange(9, dtype = np.float_).reshape(3,3) print (&#39;第一个数组：\n&#39;,arr8) arr9 = np.array([10,10,10]) print (&#39;第二个数组：\n&#39;,arr9) print (&#39;两个数组之和：\n&#39;,np.add(arr8,arr9)) &#39;&#39;&#39;结果： 第一个数组： [[0. 1. 2.] [3. 4. 5.] [6. 7. 8.]] 第二个数组： [10 10 10] 两个数组之和： [[10. 11. 12.] [13. 14. 15.] [16. 17. 18.]] &#39;&#39;&#39; # numpy.reciprocal() 函数返回参数逐元素的倒数。如 1/4 倒数为 4/1。 # numpy.power() 函数将第一个输入数组中的元素作为底数，计算它与第二个输入数组中相应元素的幂。 # numpy.mod() 计算输入数组中相应元素的相除后的余数。 函数 numpy.remainder() 也产生相同的结果。 # numpy.amin() 用于计算数组中的元素沿指定轴的最小值。 # numpy.amax() 用于计算数组中的元素沿指定轴的最大值。 # numpy.ptp()函数计算数组中元素最大值与最小值的差（最大值 - 最小值） # numpy.percentile()百分位数是统计中使用的度量，表示小于这个值的观察值的百分比。 # numpy.median() 函数用于计算数组 a 中元素的中位数（中值） # numpy.mean() 函数返回数组中元素的算术平均值。 # numpy.average() 函数根据在另一个数组中给出的各自的权重计算数组中元素的加权平均值。 # numpy.std()标准差公式如下：std = sqrt(mean((x - x.mean())**2)) # numpy.var() 方差是每个样本值与全体样本值的平均数之差的平方值的平均数，即 mean((x - x.mean())** 2)。换句话说，标准差是方差的平方根。arr8 = np.arange(9, dtype = np.float).reshape(3,3) # numpy.sort() 函数返回输入数组的排序副本。 # numpy.argsort() 函数返回的是数组值从小到大的索引值。 # numpy.argmax() 和 numpy.argmin()函数分别沿给定轴返回最大和最小元素的索引。 # ndarray.copy() 函数创建一个副本。 三. 矩阵运算import numpy as np #***********3 矩阵运算******************** import numpy.matlib # 将要废弃 # numpy.matlib.zeros() 函数创建一个以 0 填充的矩阵 print (np.matlib.zeros((3,3))) &#39;&#39;&#39;结果： [[0. 0. 0.] [0. 0. 0.] [0. 0. 0.]] &#39;&#39;&#39; # numpy.matlib.identity() 函数返回给定大小的单位矩阵。 # 大小为4，整型单位矩阵 print(np.matlib.identity(5, dtype = int)) &#39;&#39;&#39;结果： [[1 0 0 0 0] [0 1 0 0 0] [0 0 1 0 0] [0 0 0 1 0] [0 0 0 0 1]] &#39;&#39;&#39; # 类似的： # numpy.matlib.ones()函数创建一个以 1 填充的矩阵。 # numpy.matlib.eye() 函数返回一个矩阵，对角线元素为 1，其他位置为零。 # numpy.matlib.rand() 函数创建一个给定大小的矩阵，数据是随机填充的。 四. 线性代数import numpy as np #***********4 线性代数******************** # numpy.dot() 两个数组的点积，即元素对应相乘 arr10 = np.array([[1,2],[3,4]]) arr11 = np.array([[5,6],[7,8]]) print(np.dot(arr10,arr11)) &#39;&#39;&#39;结果： [[19 22] [43 50]] &#39;&#39;&#39; # numpy.vdot() 函数是两个向量的点积。 如果第一个参数是复数，那么它的共轭复数会用于计算。 如果参数是多维数组，它会被展开。 print(np.vdot(arr10,arr11)) &#39;&#39;&#39;结果：70 &#39;&#39;&#39; # numpy.inner() 函数返回一维数组的向量内积。对于更高的维度，它返回最后一个轴上的和的乘积。 print (np.inner(arr10,arr11)) &#39;&#39;&#39;结果： [[17 23] [39 53]] 计算： 1*5+2*6=17，1*7+2*8=23 3*5+4*6=39,3*7+4*8=53 &#39;&#39;&#39; # numpy.matmul 函数返回两个数组的矩阵乘积。 # numpy.linalg.det() 函数计算输入矩阵的行列式。 # numpy.linalg.solve() 函数给出了矩阵形式的线性方程的解。 # numpy.linalg.inv() 函数计算矩阵的乘法逆矩阵。 五. IO操作import numpy as np # ***********5 IO操作******************** # NumPy 为 ndarray 对象引入了一个简单的文件格式：npy。npy 文件用于存储重建 ndarray 所需的数据、图形、dtype 和其他信息。 # numpy.save() 函数将数组保存到以 .npy 为扩展名的文件中。 arr12 = np.array([[17, 23], [39, 53]]) # 保存到 outfile.npy 文件上 np.save(&#39;data/outfile.npy&#39;, arr12) # 保存到 outfile2.npy 文件上，如果文件路径末尾没有扩展名 .npy，该扩展名会被自动加上 # np.save(&#39;outfile2&#39;,arr12) # numpy.load() arr13 = np.load(&#39;data/outfile.npy&#39;) print(arr13) &#39;&#39;&#39;结果： [[17. 23.] [39. 53.]] &#39;&#39;&#39; # savetxt() 函数是以简单的文本文件格式存储数据，对应的使用 loadtxt() 函数来获取数据。 np.savetxt(&#39;out.txt&#39;, arr12) arr14 = np.loadtxt(&#39;data/out.txt&#39;) print(arr14) &#39;&#39;&#39;结果： [[17. 23.] [39. 53.]] &#39;&#39;&#39;]]></content>
      <categories>
        <category>机器学习</category>
        <category>科学计算</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>科学计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科学计算scipy]]></title>
    <url>%2F2020%2F05%2Fdeep_learnning%2F%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%2F%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97scipy%2F</url>
    <content type="text"><![CDATA[一. SciPy概述SciPy官网：https://www.scipy.org/ 功能：包含最优化，线性代数，积分，特殊函数，快速傅里叶变换，信号处理和图像处理，常微分方程求解等 二. Scipy Linalg# ************1 Scipy Linalg******************* &quot;&quot;&quot; Scipy Linalg: 该模块包含线性代数相关函数，可以计算逆矩阵，求特征值，解线性方程组及求行列式等 &quot;&quot;&quot; import numpy as np from scipy import linalg # 求解线性方程组 # 3x+2y=2 # x- y=4 # 5y+ z=-2 a = np.array([[3, 2, 0], [1, -1, 0], [0, 5, 1]]) b = np.array([2, 4, -2]) res1 = linalg.solve(a, b) print(res1) # [ 2. -2. 8.] # 求解行列式 # |A|是一个方阵 A = np.array([[1, 2], [3, 4]]) res2 = linalg.det(A) print(res2) # 1*4-2*3=-2.0 # 求解特征值和特征向量 # A是方阵，特征值λ和相应的特征向量v # Av = λv A = np.array([[1, 2], [3, 4]]) l, v = linalg.eig(A) print(&quot;特征值:\n&quot;, l, &quot;\n特征向量\n&quot;, v) # 特征值: # [-0.37228132+0.j 5.37228132+0.j] # 特征向量 # [[-0.82456484 -0.41597356] # [ 0.56576746 -0.90937671]] # 奇异值分解(SVD) # 矩阵a分解为两个酉矩阵U和Vh，以及一个奇异值(实数，非负)的一维数组s，使得 # a == U * S * Vh a = np.random.randn(2, 3) + 1.j * np.random.randn(2, 3) U, s, Vh = linalg.svd(a) print(&#39;酉矩阵:\n&#39;, U, &#39;\n酉矩阵\n&#39;, Vh, &#39;\n奇异值\n&#39;, s) # 酉矩阵: # [[-0.55728327+6.19565045e-18j 0.83032244+1.53440325e-16j] # [-0.73499882+3.86279815e-01j -0.4933054 +2.59257451e-01j]] # 酉矩阵 # [[-0.01859058+0.2815052j 0.48875549-0.51402169j -0.59175181-0.25911153j] # [ 0.05125373-0.51573816j -0.43163592-0.32192764j -0.03326072-0.66357664j] # [-0.6951096 +0.41063251j -0.24183519-0.38531617j 0.37284682-0.04728662j]] # 奇异值 # [4.13890535 0.88993684] 三. Scipy 文件操作# ************2 Scipy 文件操作******************* import scipy.io as sio import numpy as np # 保存一个matlab文件 vect = np.arange(10) sio.savemat(&#39;array.mat&#39;, {&#39;vect&#39;:vect}) # 加载一个matlab文件 mat_file_content = sio.loadmat(&#39;data/array.mat&#39;) print(mat_file_content) # 列出MATLAB文件中的变量 mat_file_content = sio.whosmat(&#39;data/array.mat&#39;) print(mat_file_content) 四. Scipy 插值插值是在直线或者曲线上的两个点找到值的过程。插值不仅适用于统计学，而且在科学，商业和需要预测两个现有数据点之间的值也很有用处。 #************3 Scipy 插值******************* import numpy as np from scipy.interpolate import * import matplotlib.pyplot as plt # # 1. 两个维度空间点绘图 # x = np.linspace(0, 4, 12) # y = np.cos(x**2/3+4) # print (x,y) # plt.plot(x, y,&#39;o&#39;) # plt.show() # # # # 2. 一维插值 # f1 = interp1d(x, y,kind = &#39;linear&#39;) # f2 = interp1d(x, y, kind = &#39;cubic&#39;) # xnew = np.linspace(0, 4,30) # plt.plot(x, y, &#39;o&#39;, xnew, f1(xnew), &#39;-&#39;, xnew, f2(xnew), &#39;--&#39;) # plt.legend([&#39;data&#39;, &#39;linear&#39;, &#39;cubic&#39;,&#39;nearest&#39;], loc = &#39;best&#39;) # plt.show() # 3. 样条曲线 # 默认平滑参数 x = np.linspace(-3, 3, 50) y = np.exp(-x**2) + 0.1 * np.random.randn(50) plt.plot(x, y, &#39;ro&#39;, ms = 5) # 手动更改平滑量 spl = UnivariateSpline(x, y) xs = np.linspace(-3, 3, 1000) spl.set_smoothing_factor(0.5) plt.plot(xs, spl(xs), &#39;b&#39;, lw = 3) plt.show() 五. Scipy Ndimagendimage子模块专用于图像处理，ndimage表示一个n维图像 # ************4 Scipy Ndimage******************* from scipy import misc,ndimage import scipy.ndimage as nd import numpy as np import matplotlib.pyplot as plt # 打开图像 f = misc.face() misc.imsave(&#39;data/face.png&#39;, f) plt.imshow(f) plt.show() # 图像倒置 face = misc.face() flip_ud_face = np.flipud(face) plt.imshow(flip_ud_face) plt.show() # 指定的角度旋转图像 face = misc.face() rotate_face = ndimage.rotate(face, 45) plt.imshow(rotate_face) plt.show() # 模糊图像 face = misc.face() blurred_face = ndimage.gaussian_filter(face, sigma=5) plt.imshow(blurred_face) plt.show() `` ## 六. Scipy 优化算法 ```python import numpy as np from scipy.interpolate import * import matplotlib.pyplot as plt #************5 Scipy 优化算法******************* # 梯度下降优化算法 # 我们求解方程：x^2-2x的最小值？常规方法求解如下： def f(x): return x**2-2*x x = np.arange(-10, 10, 0.1) plt.plot(x, f(x)) plt.show() from scipy import optimize # 梯度下降优化算法 def f(x): return x**2-2*x initial_x = 0 optimize.fmin_bfgs(f,initial_x) # 最小二乘法优化算法 # 最小二乘 from scipy.optimize import least_squares def fun_rosenbrock(x): return np.array([10 * (x[1] - x[0]**2), (1 - x[0])]) input = np.array([2, 2]) res = least_squares(fun_rosenbrock, input) print(&#39;最小值是：&#39;,res)]]></content>
      <categories>
        <category>机器学习</category>
        <category>科学计算</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>科学计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用python爬取链家二手房信息，并把数据存入mongodb]]></title>
    <url>%2F2020%2F05%2Fspider%2Fcases%2F%E7%88%AC%E9%93%BE%E5%AE%B6%E4%BA%8C%E6%89%8B%E6%88%BF%E5%AD%98mongo%2F</url>
    <content type="text"><![CDATA[爬取网站：https://gz.lianjia.com/ershoufang/pg 爬取链家二手房信息，数据存mongodb，代码如下： import requests from fake_useragent import UserAgent from lxml import etree import time import random from pymongo import MongoClient class LianjiaSpider(object): def __init__(self): self.url = &#39;https://gz.lianjia.com/ershoufang/pg{}/&#39; # 获取页面，异常处理 def get_html(self, url): ua = UserAgent() headers = {&#39;User-Agent&#39;: ua.random} response = requests.get(url=url, headers=headers) return response.content.decode(&#39;utf-8&#39;) # 解析页面 def parse_html(self, url): html = self.get_html(url) # with open(&#39;test.html&#39;, &#39;w&#39;, encoding=&#39;utf-8&#39;) as f: # f.write(html) parse_obj = etree.HTML(html) li_list = parse_obj.xpath(&#39;//ul[@class=&quot;sellListContent&quot;]/li&#39;) # 2.for循环一次遍历每个房源li节点，获取1房源的所有注释 house_list = [] item = {} for li in li_list: # 名称[0]:第一个房源,strip移除空格 item[&#39;name&#39;] = li.xpath(&#39;.//div[@class=&quot;positionInfo&quot;]/a[1]/text()&#39;)[0].strip() # 信息 户型+面积+方向+装修+楼层+时间+类型 # 2室1厅 | 51.99平米 | 西 | 精装 | 中楼层(共18层) | 2000年建 | 塔楼 info_list = li.xpath(&#39;.//div[@class=&quot;houseInfo&quot;]/text()&#39;)[0].split(&#39;|&#39;) item[&#39;model&#39;] = info_list[0].strip() item[&#39;area&#39;] = info_list[1].strip() item[&#39;direction&#39;] = info_list[2].strip() item[&#39;perfect&#39;] = info_list[3].strip() item[&#39;floor&#39;] = info_list[4].strip() item[&#39;time&#39;] = info_list[5].strip()[:-2] item[&#39;type&#39;] = info_list[-1].strip() if len(info_list) == 6 else None # 地区 总价 单价 item[&#39;address&#39;] = li.xpath(&#39;.//div[@class=&quot;positionInfo&quot;]/a[2]/text()&#39;)[0].strip() item[&#39;total price&#39;] = li.xpath(&#39;.//div[@class=&quot;totalPrice&quot;]/span/text()&#39;)[0].strip() item[&#39;unit price&#39;] = li.xpath(&#39;.//div[@class=&quot;unitPrice&quot;]/span/text()&#39;)[0].strip() house_list.append(item) lianjia_info = dict() lianjia_info[&#39;url&#39;] = self.url lianjia_info[&#39;描述&#39;] = &#39;链家二手房信息&#39; lianjia_info[&#39;信息&#39;] = house_list return lianjia_info def save_data(self, data): client = MongoClient(&#39;mongodb://localhost:27017&#39;) collection = client[&quot;student_de&quot;] collection[&#39;class_one&#39;].insert(data) def run(self): for pg in range(1, 3): url = self.url.format(pg) data = self.parse_html(url) self.save_data(data) time.sleep(random.randint(1, 3)) if __name__ == &#39;__main__&#39;: spider = LianjiaSpider() spider.run() 执行成功，结果如下图：]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[frida详解]]></title>
    <url>%2F2020%2F05%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2Ffrida%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[一. frida介绍frida是基于Hook的动态分析工具。是一款基于 python+javascript 的 hook 框架，核心是用C编写的，可运行在 android、ios、linux、win等各个平台，主要使用的动态二进制插桩技术。 官网: https://www.frida.re/ 文档: https://www.frida.re/docs/android/ 安卓相关文件: https://github.com/frida/frida/releases 关于frda学习路线了，只需要了解两方面的内容： 1）主控端和目标进程的交互（message） 2）Python接口和js接口（查文档） frida框架分为两部分： 1）一部分是运行在系统上的交互工具frida CLI。 2）另一部分是运行在目标机器上的代码注入工具 frida-serve。 二. mac下环境搭建2.1 安装adb工具参考博客：https://www.cnblogs.com/nebie/p/7282784.html 1、到 http://tools.android-studio.org/ 并安装IDE （android studio）人性化的安装，直接点击下一步下一步就可以完成安装啦 2、配置环境，在安装完成之后，将android的adb工具所在目录加入环境变量里面去，在终端中输入 sudo vim ~/.bash_profile ，打开 .bash_profile文件。加入下面配置： #Setting PATH for Android ADB Tools export ANDROID_HOME=/Users/xxx/Library/Android/sdk export PATH=${PATH}:${ANDROID_HOME}/tools export PATH=${PATH}:${ANDROID_HOME}/platform-tools 这里面的xxx根据自己实际的用户名称进行修改，添加完成后输入： source ~/.bash_profile 应用该变更。 3、测试，输入：adb version Android Debug Bridge version 1.0.41 Version 31.0.3-7562133 Installed as /Users/cuiyonghua/Library/Android/sdk/platform-tools/adb 输入： adb devices List of devices attached * daemon not running. starting it now at tcp:5037 * * daemon started successfully * 到这里说明android adb命令已经可以正常使用了， adb常用指令如下，输入exit退出adb环境： adb version adb shell adb help adb install D:\\xx.apk # 安装应用 adb uninstall C:\\xx.apk # 卸载应用 # 获取应用包名列表 adb shell pm list packages # 获取第三方应用包名列表 adb shell pm list packages -3 # 获取系统包名列表 adb shell pm list packages -s # 启动应用 如：adb shell am start -n com.netease.dwrg/.Launcher adb shell am start -n 应用包名/应用Activity类名 # 关闭应用 如：adb shell am force-stop com.netease.dwrg adb shell am force-stop 应用包名 # 查看设备型号 adb shell getprop ro.product.model # 查看设备品牌 adb shell getprop ro.product.brand # 查看安卓版本号 adb shell getprop ro.build.version.release 2.2 安装fridapc端安装frida： Frida提供了四个工具，frida-trace，frida-ps，frida，frida-discover，这些工具都位于python的Scripts路径下。 pip3 install frida pip3 install frida-tools==5.3.0 #安装完成后可以查看一下版本信息 frida --version #目前测试最好用的版本，坑少 frida 12.11.18 frida-tools 5.3.0 frida-server 12.8.10 frida 12.7.26 frida-tools 5.3.0 frida-server 12.8.10 手机端安装frida: https://github.com/frida/frida/releases下载电脑端对应版本的frida-server，如果没记住版本可以在终端中输入 frida --version 命令查看。 Android为例，根据手机类型下载对应架构。 adb shell getprop ro.product.cpu.abi # 输出：arm64-v8a， 根据cpu版本去下载相应frida-server,手机是arm64-v8a的，找到相应的服务器server: frida-server-15.0.8-android-arm64.xz,下载，解压，放进手机，进行端口转发，运行frida-server，指令如下： # 放入手机 adb push frida-server-15.0.8-android-arm64.xz /data/local/tmp # 端口转发 adb forward tcp:27042 tcp:27042 adb forward tcp:27043 tcp:27043 # 运行frida adb shell walleye:/ $ su walleye:/ # cd /data/local/tmp walleye:/ # chmod 777 frida-server-15.0.8-android-arm64.xz walleye:/ # ./frida-server-15.0.8-android-arm64.xz walleye:/ # 如果运行不了，关闭liunx的SELinux： echo 0 &gt; /sys/fs/selinux/enforce。 另打开一个cmd，输入：frida-ps -U，查看frida-server64是否运行成功。 2.3 连接网易mumu模拟器打开终端，输入以下命令即可： adb connect 127.0.0.1:7555 # windows adb connect 127.0.0.1:5555 # mac 网易MuMu模拟器的配置文件在安装目录下emulator\nemu\vms\myandrovm_vbox86\myandrovm_vbox86.nemu文件中 配置文件中的ADB_PORT与上面的127.0.0.1:7555相对应。 出现的问题出现下面问题，则手机需要root。 adb shell walleye:/ $ su /system/bin/sh: su: inaccessible or not found]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[逆向概述]]></title>
    <url>%2F2020%2F05%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2F%E9%80%86%E5%90%91%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[基本逆向工具: dexdump, smali/baksmali, apktool JEB: 最好用的逆向工具 IDA: ARM逆向和APK调试，二进制级别的逆向 Androguard: 基于python的静态分析工具，已开源 Frida: 动态调试工具 GDB: 动态调试工具 Burpsuite: 网络行为分析工具 hook:拦截服务器响应]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[与人相处]]></title>
    <url>%2F2020%2F05%2Fothers%2Freading%2F%E4%B8%8E%E4%BA%BA%E7%9B%B8%E5%A4%84%2F</url>
    <content type="text"><![CDATA[1. 为什么与女生一生气 男生就不说话？说了你又不听，听了你又不懂，懂了你又不做，做了你又做错，错了你又不认，认了你又不改，改了你又不服，不服你还要说，说我凶你说我吵你让我道歉，道歉也是可以，可是道着道着还真以为我错了啊。]]></content>
      <categories>
        <category>其它</category>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[flask,tornado,fastapi 的比较]]></title>
    <url>%2F2020%2F04%2Fpython%2Fweb%2Fflask%2Ctornado%2Cfastapi%E7%9A%84%E6%AF%94%E8%BE%83%2F</url>
    <content type="text"><![CDATA[大数据flask,tornado,fastapi三个都是web框架，前两者都十分流行，后者是一个新框架。 flask是一个轻应用框架，简单好用易扩展。 tornado 是一个非阻塞的异步框架，性能高，并发高。 fastapi是一个入门简单，性能高的框架，据说可比node 和go，仅支持 python3.6及以上 fastapi的启动： from ftapistapi import FastAPI app = FastAPI() @app.get(&quot;/&quot;) async def root(): return {&quot;message&quot;: &quot;Hello World&quot;} # 启动命令 # uvicorn app:app --reload --port 5159 --host 0.0.0.0 flask的启动： from flask import Flask app = Flask(__name__) @app.route(&#39;/&#39;) def hello_world(): return &#39;Hello, World!&#39; #启动命令 # flask run --host=0.0.0.0 --port=5159 tornado的启动： import tornado.ioloop import tornado.web class MainHandler(tornado.web.RequestHandler): def get(self): self.write(&quot;Hello, world&quot;) if __name__ == &quot;__main__&quot;: application = tornado.web.Application([ (r&quot;/&quot;, MainHandler), ]) application.listen(5159) tornado.ioloop.IOLoop.current().start() #启动命令 # python app.py]]></content>
      <categories>
        <category>python</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>python3</tag>
        <tag>fastapi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Base64编码的反爬虫]]></title>
    <url>%2F2020%2F03%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2F%E5%9F%BA%E4%BA%8EBase64%E7%BC%96%E7%A0%81%E7%9A%84%E5%8F%8D%E7%88%AC%E8%99%AB%2F</url>
    <content type="text"><![CDATA[1. Base64的用法# base64的用法 import base64 encodestr = base64.b64encode(&#39;abcr34r344r&#39;.encode(&#39;utf-8&#39;)) print(encodestr) # b&#39;YWJjcjM0cjM0NHI=&#39; encodestr = base64.b64encode(&#39;abcr34r344r&#39;.encode(&#39;utf-8&#39;)) print(str(encodestr, &#39;utf-8&#39;)) # YWJjcjM0cjM0NHI= 以“==”或者“=”结尾的加密字符串，往往就是经过Base64加密得来的。如下代码： from base64 import b64decode code = [&#39;d3d3Lmh1YXdlaS5jb20=&#39;, &#39;d3d3Lmp1ZWppbi5pbQ==&#39;] for c in code: string = b64decode(c).decode(&#39;utf8&#39;) print(string) 执行结果如下： www.huawei.com www.juejin.im 基于Base64实现新的编码规则Base64编码和解码时都是将原本的8位二进制转成6位的二进制数，如果我们改动位数，将其设置为5位或者4位，就可以实现新的编码规则。代码如下： class Custom64: comparison = {&#39;0&#39;: &#39;A&#39;, &#39;1&#39;: &#39;B&#39;, &#39;2&#39;: &#39;C&#39;, &#39;3&#39;: &#39;D&#39;, &#39;4&#39;: &#39;E&#39;, &#39;5&#39;: &#39;F&#39;, &#39;6&#39;: &#39;G&#39;, &#39;7&#39;: &#39;H&#39;, &#39;8&#39;: &#39;I&#39;, &#39;9&#39;: &#39;J&#39;, &#39;10&#39;: &#39;K&#39;, &#39;11&#39;: &#39;L&#39;, &#39;12&#39;: &#39;M&#39;, &#39;13&#39;: &#39;N&#39;, &#39;14&#39;: &#39;O&#39;, &#39;15&#39;: &#39;P&#39;, &#39;16&#39;: &#39;Q&#39;, &#39;17&#39;: &#39;R&#39;, &#39;18&#39;: &#39;S&#39;, &#39;19&#39;: &#39;T&#39;, &#39;20&#39;: &#39;U&#39;, &#39;21&#39;: &#39;V&#39;, &#39;22&#39;: &#39;W&#39;, &#39;23&#39;: &#39;X&#39;, &#39;24&#39;: &#39;Y&#39;, &#39;25&#39;: &#39;Z&#39;, &#39;26&#39;: &#39;a&#39;, &#39;27&#39;: &#39;b&#39;, &#39;28&#39;: &#39;c&#39;, &#39;29&#39;: &#39;d&#39;, &#39;30&#39;: &#39;e&#39;, &#39;31&#39;: &#39;f&#39;, &#39;32&#39;: &#39;g&#39;, &#39;33&#39;: &#39;h&#39;, &#39;34&#39;: &#39;i&#39;, &#39;35&#39;: &#39;j&#39;, &#39;36&#39;: &#39;k&#39;, &#39;37&#39;: &#39;l&#39;, &#39;38&#39;: &#39;m&#39;, &#39;39&#39;: &#39;n&#39;, &#39;40&#39;: &#39;o&#39;, &#39;41&#39;: &#39;p&#39;, &#39;42&#39;: &#39;q&#39;, &#39;43&#39;: &#39;r&#39;, &#39;44&#39;: &#39;s&#39;, &#39;45&#39;: &#39;t&#39;, &#39;46&#39;: &#39;u&#39;, &#39;47&#39;: &#39;v&#39;, &#39;48&#39;: &#39;w&#39;, &#39;49&#39;: &#39;x&#39;, &#39;50&#39;: &#39;y&#39;, &#39;51&#39;: &#39;z&#39;, &#39;52&#39;: &#39;0&#39;, &#39;53&#39;: &#39;1&#39;, &#39;54&#39;: &#39;2&#39;, &#39;55&#39;: &#39;3&#39;, &#39;56&#39;: &#39;4&#39;, &#39;57&#39;: &#39;5&#39;, &#39;58&#39;: &#39;6&#39;, &#39;59&#39;: &#39;7&#39;, &#39;60&#39;: &#39;8&#39;, &#39;61&#39;: &#39;9&#39;, &#39;62&#39;: &#39;+&#39;, &#39;63&#39;: &#39;/&#39;, &#39;65&#39;: &#39;=&#39;, } def encode(self, value: str, threshold: int = 4) -&gt; str: # 对传入的字符进行编码，并返回编码结果 value = &#39;&#39;.join([&#39;0&#39; + bin(ord(t))[2:] for t in value]) inputs = self.shift(value, threshold) result = &#39;&#39; for i in inputs: if i == &#39;0&#39; * threshold: # 全为0则视为补位 encoding = 65 else: encoding = 0 for key, v in enumerate(i): # 二进制数按权相加得到十进制数 val = int(v) * pow(2, len(i) - 1 - key) encoding += val # 从对照表中取值 after = self.comparison.get(str(encoding)) result += after return result def decode(self, value: str, threshold: int, group: int = 8) -&gt; str: &quot;&quot;&quot;对传入的字符串解码，得到原字符&quot;&quot;&quot; result = [] coder = self.str2binary(value, threshold=threshold) bins = self.shift(&#39;&#39;.join(coder), group) for i in range(len(bins)): binary = &#39;&#39;.join(bins)[i * group: (i + 1) * group] if binary != &#39;0&#39; * group: # 如果全为0则视为补位，无需处理 result.append(&#39;&#39;.join([chr(i) for i in [int(b, 2) for b in binary.split(&#39; &#39;)]])) return &#39;&#39;.join(result) def str2binary(self, value: str, threshold: int = 6) -&gt; list: &quot;&quot;&quot;字符串转十进制再转二进制&quot;&quot;&quot; result = [] values = self.str2decimal(value) for i in values: # 判断是否为补位 if i == &#39;65&#39;: val = &#39;0&#39; * threshold else: val = &#39;{:0{threshold}b}&#39;.format(int(i), threshold=threshold) result.append(val) return result @staticmethod def shift(value: str, threshold: int, group: int = 24) -&gt; list: &quot;&quot;&quot;位数转换&quot;&quot;&quot; remainder = len(value) % group if remainder: # 如果有余数，则说明需要用0补位 padding = &#39;0&#39; * (group - remainder) value += padding # 按照threshold值切割字符 result = [value[i:i + threshold] for i in range(0, len(value), threshold)] return result def str2decimal(self, value: str) -&gt; list: &quot;&quot;&quot;使用Base64编码表做对照，取出字符串对应的十进制数&quot;&quot;&quot; keys = [] for t in value: for k, v in self.comparison.items(): if v == t: keys.append(k) return keys if __name__ == &#39;__main__&#39;: # threshold 的值建议为 4/5/6 cus = Custom64() encode_res = cus.encode(&#39;async&#39;, threshold=5) decode_res = cus.decode(encode_res, threshold=5) print(encode_res) print(decode_res) 执行结果如下： MFZXSbTD=A async 注意：threshold的值可以设置成4，5，6等。 encode_res = cus.encode(&#39;async&#39;, threshold=6) decode_res = cus.decode(encode_res, threshold=6)]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用3种方式爬取动态网站数据]]></title>
    <url>%2F2020%2F03%2Fspider%2Fcases%2F%E7%94%A83%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%88%AC%E5%8F%96%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[到博客：https://cuiyonghua.blog.csdn.net/article/details/107024506]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用生成器]]></title>
    <url>%2F2020%2F03%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2F%E4%BD%BF%E7%94%A8%E7%94%9F%E6%88%90%E5%99%A8%2F</url>
    <content type="text"><![CDATA[一. 使用生成器生成器例子： def multiple_generator(number, limit): counter = 1 value = number * counter while value &lt;= limit: yield value counter += 1 value = number * counter for num in multiple_generator(500, 5000): print(num) yield比列表或者元组之类的数据结构更快 data = range(1000) def using_yield(): def wrapper(): for d in data: yield d return list(wrapper()) def using_list(): result = [] for d in data: result.append(d) return result print(using_yield()) print(using_list()) 生成器在读取大量数据或者大量文件时非常有用。 from _generate_data import PURCHASES_FILE, create_purchases_file from log import logger class PurchasesStats: def __init__(self, purchases): self.purchases = iter(purchases) self.min_price: float = None self.max_price: float = None self._total_purchases_price: float = 0.0 self._total_purchases = 0 self._initialize() def _initialize(self): try: first_value = next(self.purchases) except StopIteration: raise ValueError(&quot;no values provided&quot;) self.min_price = self.max_price = first_value self._update_avg(first_value) def process(self): for purchase_value in self.purchases: self._update_min(purchase_value) self._update_max(purchase_value) self._update_avg(purchase_value) return self def _update_min(self, new_value: float): if new_value &lt; self.min_price: self.min_price = new_value def _update_max(self, new_value: float): if new_value &gt; self.max_price: self.max_price = new_value @property def avg_price(self): return self._total_purchases_price / self._total_purchases def _update_avg(self, new_value: float): self._total_purchases_price += new_value self._total_purchases += 1 def __str__(self): return ( f&quot;{self.__class__.__name__}({self.min_price}, &quot; f&quot;{self.max_price}, {self.avg_price})&quot; ) def _load_purchases(filename): purchases = [] with open(filename) as f: for line in f: *_, price_raw = line.partition(&quot;,&quot;) purchases.append(float(price_raw)) return purchases def load_purchases(filename): with open(filename) as f: for line in f: *_, price_raw = line.partition(&quot;,&quot;) yield float(price_raw) def main(): create_purchases_file(PURCHASES_FILE) purchases = load_purchases(PURCHASES_FILE) stats = PurchasesStats(purchases).process() logger.info(&quot;Results: %s&quot;, stats) if __name__ == &quot;__main__&quot;: main() 生成数据： &quot;&quot;&quot;Helper to generate test data.&quot;&quot;&quot; import os from tempfile import gettempdir PURCHASES_FILE = os.path.join(gettempdir(), &quot;purchases.csv&quot;) def create_purchases_file(filename, entries=1_000_000): if os.path.exists(PURCHASES_FILE): return with open(filename, &quot;w+&quot;) as f: for i in range(entries): line = f&quot;2018-01-01,{i}\n&quot; f.write(line) if __name__ == &quot;__main__&quot;: create_purchases_file(PURCHASES_FILE) print(PURCHASES_FILE) 一. yield fromyield from 最简单的用途，可以使用新的yield from 语法将嵌套for循环的生成器链接到一个单独的生成器中，该生成器将在连续流中以一个包含所有值的字符串结束 def chain(*iterables): for it in iterables: yield from it def _chain(*iterables): for it in iterables: for value in it: yield value def all_powers(n, power): yield from (n ** i for i in range(power + 1)) print(list(chain(&quot;hello&quot;, [&quot;world&quot;], (&quot;tuple&quot;, &quot; of &quot;, &quot;values.&quot;)))) print(list(_chain(&quot;hello&quot;, [&quot;world&quot;], (&quot;tuple&quot;, &quot; of &quot;, &quot;values.&quot;)))) 捕获生成器返回的值 from log import logger def sequence(name, start, end): logger.info(&quot;%s started at %i&quot;, name, start) yield from range(start, end) logger.info(&quot;%s finished at %i&quot;, name, end) return end def main(): step1 = yield from sequence(&quot;first&quot;, 0, 5) step2 = yield from sequence(&quot;second&quot;, step1, 10) return step1 + step2 g = main() print(next(g)) 向子生成器发送和接收数据 from log import logger class CustomException(Exception): &quot;&quot;&quot;A type of exception that is under control.&quot;&quot;&quot; def sequence(name, start, end): value = start logger.info(&quot;%s started at %i&quot;, name, value) while value &lt; end: try: received = yield value logger.info(&quot;%s received %r&quot;, name, received) value += 1 except CustomException as e: logger.info(&quot;%s is handling %s&quot;, name, e) received = yield &quot;OK&quot; return end def main(): step1 = yield from sequence(&quot;first&quot;, 0, 5) step2 = yield from sequence(&quot;second&quot;, step1, 10) return step1 + step2 g = main() print(next(g))]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python基础</tag>
        <tag>python优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[异步编程]]></title>
    <url>%2F2020%2F03%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2F%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[异步编程的主要模块： 事件循环主要是管理，分发和执行不同的任务，事件循环注册每个任务并负责这些任务之间的流控制； 协程（coroutine）是安排事件循环执行的函数，await将控制权释放给事件循环； future 表示可能已执行或尚未执行的任务的结果，结果可能是一个异常。 asyncio简单的案例 import asyncio async def hello(first_print, second_print): print(first_print) await asyncio.sleep(1) print(second_print) asyncio.run(hello(&#39;welcome&#39;, &#39;good-by&#39;))]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python中好用的模块-collections]]></title>
    <url>%2F2020%2F03%2Fpython%2Fpython%E6%A8%A1%E5%9D%97%2Fcollections%E6%A8%A1%E5%9D%97%2F</url>
    <content type="text"><![CDATA[Python中好用的collections模块@[toc]这个模块实现了特定目标的容器，以提供Python标准内建容器 dict、list、set、tuple 的替代选择。 Counter：字典的子类，提供了可哈希对象的计数功能 defaultdict：字典的子类，提供了一个工厂函数，为字典查询提供了默认值 OrderedDict：字典的子类，保留了他们被添加的顺序 namedtuple：创建命名元组子类的工厂函数 deque：类似列表容器，实现了在两端快速添加(append)和弹出(pop) ChainMap：类似字典的容器类，将多个映射集合到一个视图里面 1. CounterCounter是一个dict子类，主要是用来对你访问的对象的频率进行计数。常用方法： elements()：返回一个迭代器，每个元素重复计算的个数，如果一个元素的计数小于1,就会被忽略。 most_common([n])：返回一个列表，提供n个访问频率最高的元素和计数 subtract([iterable-or-mapping])：从迭代对象中减去元素，输入输出可以是0或者负数 update([iterable-or-mapping])：从迭代对象计数元素或者从另一个 映射对象 (或计数器) 添加。 import collections # 统计字符出现的次数 print(collections.Counter(&#39;hello world&#39;)) # Counter({&#39;l&#39;: 3, &#39;o&#39;: 2, &#39;h&#39;: 1, &#39;e&#39;: 1, &#39; &#39;: 1, &#39;w&#39;: 1, &#39;r&#39;: 1, &#39;d&#39;: 1}) # 统计单词个数 print(collections.Counter(&#39;hello world hello lucy&#39;.split())) # Counter({&#39;hello&#39;: 2, &#39;world&#39;: 1, &#39;lucy&#39;: 1}) # 获取指定对象的访问次数，也可以使用get方法 c = collections.Counter(&#39;hello world hello lucy&#39;.split()) print(c.get(&#39;hello&#39;)) # 2 # 查看元素 print(list(c.elements())) # [&#39;hello&#39;, &#39;hello&#39;, &#39;world&#39;, &#39;lucy&#39;] # 清除 c.clear() c1 = collections.Counter(&#39;hello world&#39;.split()) c2 = collections.Counter(&#39;hello lucy&#39;.split()) print(c1+c2) # 追加对象，+或者c1.update(c2) 输出：Counter({&#39;hello&#39;: 2, &#39;world&#39;: 1, &#39;lucy&#39;: 1}) print(c1-c2) # 减少对象，-或者c1.subtract(c2) 输出：Counter({&#39;world&#39;: 1}) 2. defaultdictcollections.defaultdict(default_factory) 为字典的没有的key提供一个默认的值。参数应该是一个函数，当没有参数调用时返回默认值。如果没有传递任何内容，则默认为None。 import collections d = collections.defaultdict() d[&#39;hello&#39;] = &#39;zhan&#39; print(d) # defaultdict(None, {&#39;hello&#39;: &#39;zhan&#39;}) e = collections.defaultdict(str) e[&#39;hello11&#39;] = &#39;zhan11&#39; print(e) # defaultdict(&lt;class &#39;str&#39;&gt;, {&#39;hello11&#39;: &#39;zhan11&#39;}) fruit = collections.defaultdict(int) print(fruit) # defaultdict(&lt;class &#39;int&#39;&gt;, {}) s = [(&#39;NC&#39;, &#39;Raleigh&#39;), (&#39;VA&#39;, &#39;Richmond&#39;), (&#39;WA&#39;, &#39;Seattle&#39;), (&#39;NC&#39;, &#39;Asheville&#39;)] d = collections.defaultdict(list) for k, v in s: d[k].append(v) print(d) # defaultdict(&lt;class &#39;list&#39;&gt;, {&#39;NC&#39;: [&#39;Raleigh&#39;, &#39;Asheville&#39;], &#39;VA&#39;: [&#39;Richmond&#39;], &#39;WA&#39;: [&#39;Seattle&#39;]}) 3. OrderedDictPython字典中的键的顺序是任意的:它们不受添加的顺序的控制。collections.OrderedDict 类提供了保留他们添加顺序的字典对象。 import collections o = collections.OrderedDict() o[&#39;key1&#39;] = &#39;value1&#39; o[&#39;key2&#39;] = &#39;value2&#39; o[&#39;key3&#39;] = &#39;value3&#39; # 如果在已经存在的key上添加新的值，将会保留原来的key的位置，然后覆盖value值。 o[&#39;key1&#39;] = &#39;value5&#39; print(o) # OrderedDict([(&#39;key1&#39;, &#39;value5&#39;), (&#39;key2&#39;, &#39;value2&#39;), (&#39;key3&#39;, &#39;value3&#39;)]) 4. namedtuple三种定义命名元组的方法：第一个参数是命名元组的构造器（如下的：Person，Human） import collections P1 = collections.namedtuple(&#39;Person1&#39;, [&#39;name&#39;, &#39;age&#39;, &#39;height&#39;]) P2 = collections.namedtuple(&#39;Person2&#39;, &#39;name,age,height&#39;) P3 = collections.namedtuple(&#39;Person3&#39;, &#39;name age height&#39;) lucy = P1(&#39;lucy&#39;, 23, 180) jack = P2(&#39;jack&#39;, 20, 190) rose = P3(&#39;rose&#39;, 29, 340) print(lucy) print(jack) print(rose) 5. dequecollections.deque返回一个新的双向队列对象，从左到右初始化(用方法 append()) ，从 iterable （迭代对象) 数据创建。如果 iterable 没有指定，新队列为空。collections.deque队列支持线程安全，对于从两端添加(append)或者弹出(pop)，复杂度O(1)。虽然list对象也支持类似操作，但是这里优化了定长操作（pop(0)、insert(0,v)）的开销。如果 maxlen 没有指定或者是 None ，deques 可以增长到任意长度。否则，deque就限定到指定最大长度。一旦限定长度的deque满了，当新项加入时，同样数量的项就从另一端弹出。支持的方法： append(x)：添加x到右端 appendleft(x)：添加x到左端 clear()：清楚所有元素，长度变为0 copy()：创建一份浅拷贝 count(x)：计算队列中个数等于x的元素 extend(iterable)：在队列右侧添加iterable中的元素 extendleft(iterable)：在队列左侧添加iterable中的元素，注：在左侧添加时，iterable参数的顺序将会反过来添加 index(x[,start[,stop]])：返回第 x 个元素（从 start 开始计算，在 stop 之前）。返回第一个匹配，如果没找到的话，升起 ValueError 。 insert(i,x)：在位置 i 插入 x 。注：如果插入会导致一个限长deque超出长度 maxlen 的话，就升起一个 IndexError 。 pop()：移除最右侧的元素 popleft()：移除最左侧的元素 remove(value)：移去找到的第一个 value。没有抛出ValueError reverse()：将deque逆序排列。返回 None 。 maxlen：队列的最大长度，没有限定则为None。 import collections dd = collections.deque(maxlen=10) print(dd) dd.extend(&#39;python&#39;) print([i.upper() for i in dd]) dd.append(&#39;e&#39;) print(dd) dd.appendleft(&#39;f&#39;) print(dd) 6. ChainMap一个 ChainMap 将多个字典或者其他映射组合在一起，创建一个单独的可更新的视图。 如果没有 maps 被指定，就提供一个默认的空字典 。ChainMap是管理嵌套上下文和覆盖的有用工具。 import collections d1 = {&#39;apple&#39;: 1, &#39;banana&#39;: 2} d2 = {&#39;orange&#39;: 2, &#39;apple&#39;: 3, &#39;pike&#39;: 1} combined_d = collections.ChainMap(d1, d2) print(combined_d) # ChainMap({&#39;apple&#39;: 1, &#39;banana&#39;: 2}, {&#39;orange&#39;: 2, &#39;apple&#39;: 3, &#39;pike&#39;: 1}) for k, v in combined_d.items(): print(k, v) reverse_combind_d = collections.ChainMap(d2, d1) print(reverse_combind_d) # ChainMap({&#39;orange&#39;: 2, &#39;apple&#39;: 3, &#39;pike&#39;: 1}, {&#39;apple&#39;: 1, &#39;banana&#39;: 2}) for k, v in reverse_combind_d.items(): print(k, v)]]></content>
      <categories>
        <category>python</category>
        <category>python模块</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[请求参数中的mcode是按时间戳通过base64加密得来的]]></title>
    <url>%2F2020%2F02%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2F%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E4%B8%AD%E7%9A%84mcode%E6%98%AF%E6%8C%89%E6%97%B6%E9%97%B4%E6%88%B3%E9%80%9A%E8%BF%87base64%E5%8A%A0%E5%AF%86%E5%BE%97%E6%9D%A5%E7%9A%84%2F</url>
    <content type="text"><![CDATA[代码如下： # coding=utf-8 &quot;&quot;&quot; 1.在债券信息中找到债券代码：http://bond.sse.com.cn/disclosure/info/creditabs/ 2.搜索：http://webapi.cninfo.com.cn/#/thematicStatistics?location=b11 进入债券报表，选择债券基本信息查询，再按债券查询 遇到的问题：请求参数中的mcode是按时间戳通过base64加密得来的 &quot;&quot;&quot; import requests import time import base64 dt = int(time.time()) base64_dt = base64.b64encode(str(dt).encode(&#39;utf-8&#39;)) print(base64_dt) headers = { &#39;mcode&#39;: &#39;{}&#39;.format(base64_dt.decode()), &#39;Referer&#39;: &#39;http://webapi.cninfo.com.cn/&#39;, } url = &#39;http://webapi.cninfo.com.cn/api/sysapi/p_sysapi1101?scode=104111&#39; print(headers) resp = requests.post(url=url, headers=headers) print(resp.text) # base64的用法 import base64 encodestr = base64.b64encode(&#39;abcr34r344r&#39;.encode(&#39;utf-8&#39;)) print(encodestr) # b&#39;YWJjcjM0cjM0NHI=&#39; encodestr = base64.b64encode(&#39;abcr34r344r&#39;.encode(&#39;utf-8&#39;)) print(str(encodestr, &#39;utf-8&#39;)) # YWJjcjM0cjM0NHI=]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[请求头中加X-Requested-With才能请求到数据]]></title>
    <url>%2F2020%2F02%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2F%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%B8%AD%E5%8A%A0X-Requested-With%E6%89%8D%E8%83%BD%E8%AF%B7%E6%B1%82%E5%88%B0%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[请求头中加X-Requested-With，才能请求到数据 如网站：http://view.jfinfo.com/research/ydjc import re import requests from lxml import etree &quot;&quot;&quot; 网站：http://view.jfinfo.com/research/ydjc 请求头中加X-Requested-With，才能请求到数据 &quot;&quot;&quot; headers = { &quot;X-Requested-With&quot;: &quot;XMLHttpRequest&quot; } url = &#39;http://view.jfinfo.com/articles_categories/more?page=4&amp;category_id=52&#39; response = requests.get(url=url, headers=headers) def generator(response): data = response.text result = re.search(&#39;.*append\((.*)?\).*&#39;, data).group(1) result = re.sub(r&#39;\\n||\\&#39;, r&#39;&#39;, result) element = etree.HTML(result) nodes = element.xpath(&#39;//dl&#39;) result = [] for i in nodes: item = {} item[&#39;title&#39;] = i.xpath(&#39;./dt/a/text()&#39;)[0] item[&#39;url&#39;] = i.xpath(&#39;./dt/a/@href&#39;)[0] item[&#39;date&#39;] = i.xpath(&#39;./dd/span/text()&#39;)[0] result.append(item) print(result, len(result)) return result generator(response)]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java常用的爬虫框架]]></title>
    <url>%2F2019%2F12%2Fspider%2Fcases%2Fjava%E5%B8%B8%E7%94%A8%E7%9A%84%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[目前主流的Java爬虫框架主要有Nutch、Crawler4j、WebMagic、WebCollector等。 1. 分布式爬虫：Nutchgithub地址：https://github.com/andrewcao95/nutch-crawlerNutch是apache旗下的一个用Java实现的开源索引引擎项目，通过nutch，诞生了hadoop、tika、gora。Nutch的设计初衷主要是为了解决下述两个问题： 商业搜索引擎存在商业利益的考虑。 有的商业搜索引擎允许竞价排名(比如百度)，搜索结果不是纯粹的根据网页本身的价值进行排序，这样有的搜索结果不全是和站点内容相关。 商业搜索引擎不开源。 Nutch是开放源代码，因此任何人都可以查看它的排序算法是如何工作的。Nutch对学术搜索和政府类站点的搜索来说是个好选择。因为一个公平的排序结果是非常重要的。 Nutch1.2版本之后，Nutch已经从搜索引擎演化为网络爬虫，演化为两大分支版本：1.X和2.X，最大区别在于2.X对底层的数据存储进行了抽象以支持各种底层存储技术，其中： Nutch1.2之后是一个完整的搜索引擎 Nutch1.7之后是一个基于HDFS的网络爬虫 Nutch2.2.1之后是一个基于Gora的网络爬虫 Nutch 2.x 与 Nutch 1.x 相比，剥离出了存储层，放到了gora中，可以使用多种数据库，例如HBase, Cassandra, MySql来存储数据了。Nutch 1.7 则是把数据直接存储在HDFS上。 2. Crawler4jcrawler4j是一个开源的Java抓取Web爬虫，它提供了一个简单的抓取Web的界面。 使用它，可以在几分钟内设置一个多线程的网络爬虫。 3. WebMagicWebMagic的结构分为Downloader、PageProcessor、Scheduler、Pipeline四大组件，并由Spider将它们彼此组织起来。这四大组件对应爬虫生命周期中的下载、处理、管理和持久化等功能。在这四个组件中我们需要做的就是在PageProcessor中写自己的业务逻辑，比如如何解析当前页面，抽取有用信息，以及发现新的链接。 4. WebCollectorWebCollector是一个无须配置、便于二次开发的JAVA爬虫框架（内核），它提供精简的的API，只需少量代码即可实现一个功能强大的爬虫。WebCollector-Hadoop是WebCollector的Hadoop版本，支持分布式爬取。 目前WebCollector在Github上维护：https://github.com/CrawlScript/WebCollector]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在爬虫框架scrapy中使用selenium]]></title>
    <url>%2F2019%2F12%2Fspider%2Fselenium%2F%E5%9C%A8%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6scrapy%E4%B8%AD%E4%BD%BF%E7%94%A8selenium%2F</url>
    <content type="text"><![CDATA[1. wangyi.pyimport scrapy from selenium import webdriver &#39;&#39;&#39; 在scrapy中使用selenium的编码流程: 1.在spider的构造方法中创建一个浏览器对象(作为当前spider的一个属性) 2.重写spider的一个方法closed(self,spider),在该方法中执行浏览器关闭的操作 3.在下载中间件的process_response方法中,通过spider参数获取浏览器对象 4.在中间件的process_response中定制基于浏览器自动化的操作代码(获取动态加载出来的页面源码数据) 5.实例化一个响应对象,且将page_source返回的页面源码封装到该对象中 6.返回该新的响应对象 &#39;&#39;&#39; class TestSpider(scrapy.Spider): name = &#39;wangyi&#39; # allowed_domains = [&#39;www.xxx.com&#39;] start_urls = [&#39;http://war.163.com/&#39;] def __init__(self): self.browser = webdriver.Chrome() def parse(self, response): div_list = response.xpath(&#39;//div[@class=&quot;data_row news_article clearfix &quot;]&#39;) for div in div_list: title = div.xpath(&#39;.//div[@class=&quot;news_title&quot;]/h3/a/text()&#39;).extract_first() print(title) def closed(self, spider): print(&#39;bro has been closed&#39;) self.browser.quit() 2. middlewares.pyfrom scrapy import signals from scrapy.http import HtmlResponse from time import sleep class WangyiproDownloaderMiddleware(object): # Not all methods need to be defined. If a method is not defined, # scrapy acts as if the downloader middleware does not modify the # passed objects. @classmethod def from_crawler(cls, crawler): # This method is used by Scrapy to create your spiders. s = cls() crawler.signals.connect(s.spider_opened, signal=signals.spider_opened) return s def process_request(self, request, spider): # Called for each request that goes through the downloader # middleware. # Must either: # - return None: continue processing this request # - or return a Response object # - or return a Request object # - or raise IgnoreRequest: process_exception() methods of # installed downloader middleware will be called return None def process_response(self, request, response, spider): # Called with the response returned from the downloader. # Must either; # - return a Response object # - return a Request object # - or raise IgnoreRequest print(&#39;即将返回一个新的响应对象!!!&#39;) #如何获取动态加载出来的数据 bro = spider.bro bro.get(url=request.url) sleep(3) #包含了动态加载出来的新闻数据 page_text = bro.page_source sleep(3) return HtmlResponse(url=spider.bro.current_url,body=page_text,encoding=&#39;utf-8&#39;,request=request) def process_exception(self, request, exception, spider): # Called when a download handler or a process_request() # (from other downloader middleware) raises an exception. # Must either: # - return None: continue processing this exception # - return a Response object: stops process_exception() chain # - return a Request object: stops process_exception() chain pass def spider_opened(self, spider): spider.logger.info(&#39;Spider opened: %s&#39; % spider.name) 3. 在中间件判断是否需要使用selenium来爬取内容的版本from scrapy.http import HtmlResponse #参数介绍： #拦截到响应对象（下载器传递给Spider的响应对象） #request：响应对象对应的请求对象 #response：拦截到的响应对象 #spider：爬虫文件中对应的爬虫类的实例 def process_response(self, request, response, spider): #响应对象中存储页面数据的篡改 if request.url in[&#39;http://news.163.com/domestic/&#39;,&#39;http://news.163.com/world/&#39;,&#39;http://news.163.com/air/&#39;,&#39;http://war.163.com/&#39;]: spider.bro.get(url=request.url) js = &#39;window.scrollTo(0,document.body.scrollHeight)&#39; spider.bro.execute_script(js) time.sleep(2) #一定要给与浏览器一定的缓冲加载数据的时间 #页面数据就是包含了动态加载出来的新闻数据对应的页面数据 page_text = spider.bro.page_source #篡改响应对象 return HtmlResponse(url=spider.bro.current_url,body=page_text,encoding=&#39;utf-8&#39;,request=request) else: return response]]></content>
      <categories>
        <category>爬虫</category>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[向PostgreSQL中json中加入某个字段 或者更新某个字段的SQL语句]]></title>
    <url>%2F2019%2F12%2Fdatabase%2FPostgreSql%2F20191220_%E5%AF%B9pg%E4%B8%ADjson%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E5%A2%9E%E5%88%A0%E6%94%B9%2F</url>
    <content type="text"><![CDATA[需求：通过SQL的方式，对JSON里面的某个字段统一处理，更新成一个新值 向PostgreSQL中json中加入某个字段。例如：向users表中id为3的data列中加入 {“uptate_data”: “7”} 执行SQL: update users set data = &#39;{&quot;uptate_data&quot;: &quot;7&quot;}&#39;::jsonb where id = 3; 执行效果如下图： 向PostgreSQL中json中更新某个字段。例如：例如：向users表中id为3的data列中再加入 {“uptate_minute”: “10”} 执行SQL: update users set data = data::jsonb || &#39;{&quot;uptate_minute&quot;: &quot;10&quot;}&#39;::jsonb where id = 3; 执行效果如下图：]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分别用java，go，python语言 实现猜石头剪刀布的游戏的功能]]></title>
    <url>%2F2019%2F11%2Fjava%2Fjava%E6%A1%88%E4%BE%8B%2F%E7%94%A83%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%8E%B0%E7%8C%9C%E7%9F%B3%E5%A4%B4%E5%89%AA%E5%88%80%E5%B8%83%E7%9A%84%E6%B8%B8%E6%88%8F%E7%9A%84%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[游戏规则：人和电脑分别出剪刀、石头、布，直到人战胜电脑，游戏结束。 1. 用Java语言实现import java.util.Scanner; /** * java实现人机猜拳游戏 * 人和电脑分别出剪刀、石头、布，直到人战胜电脑，游戏结束 */ public class Scissors_Stone_Cloth { public static void main(String[] args) { while (true) { System.out.println(&quot;*******************************&quot;); System.out.println(&quot;--------欢迎进入猜拳游戏--------&quot;); System.out.println(&quot;请出拳:（1是剪刀，2是石头，3是布）&quot;); Scanner sc=new Scanner(System.in); int person=sc.nextInt(); //获取用户输入 int computer=(int)(Math.random()*3)+1; //电脑随机出拳 String per=&quot;用户&quot;; String com = &quot;电脑&quot;; //用户出拳 switch(person){ case 1: per=&quot;剪刀&quot;; break; case 2: per=&quot;石头&quot;; break; case 3: per=&quot;布&quot;; break; } //电脑出拳 switch(computer){ case 1: com=&quot;剪刀&quot;; break; case 2: com=&quot;石头&quot;; break; case 3: com=&quot;布&quot;; break; } //根据出拳判断输赢 if(person==1&amp;&amp;computer==2||person==2&amp;&amp;computer==3||person==3&amp;&amp;computer==1){ System.out.println(&quot;你出的是（&quot;+per+&quot;） 电脑出的是（&quot;+com+&quot;）&quot;); System.out.println(&quot; 【你输了！再来一次吧】&quot;); //System.out.println(); }else if (person==computer){ System.out.println(&quot;你出的是（&quot;+per+&quot;） 电脑出的是（&quot;+com+&quot;）&quot;); System.out.println(&quot; 【平局！再来一次吧】&quot;); // System.out.println(); }else{ System.out.println(&quot;你出的是（&quot;+per+&quot;） 电脑出的是（&quot;+com+&quot;）&quot;); System.out.println(&quot; 【恭喜你赢了！！！】&quot;); System.out.println(&quot;【你终于战胜了电脑，游戏结束！】&quot;);; break; } } } } 2. 用Go语言实现package main import ( &quot;fmt&quot; &quot;math/rand&quot; ) // 下面这个函数判断一个一维slice在不在二维slice中，相当于python中in功能 func exist_in(str1 [][]string, str2 []string) int { for _, item := range str1 { if item[0] == str2[0] &amp;&amp; item[1] == str2[1] { return 1 } } return 0 } func main() { var person string guess_list := []string{&quot;石头&quot;, &quot;剪刀&quot;, &quot;布&quot;} Win := [][]string{{"布", "石头"}, {"石头", "剪刀"}, {"剪刀", "布"}} for { num := rand.Intn(len(guess_list)) computer := guess_list[num] fmt.Println(computer) fmt.Println(&quot;请输入&#39;石头,剪刀,布&#39;&quot;) fmt.Scanf(&quot;%s\n&quot;, &amp;person) input := []string{computer, person} //构造一个一维slice if computer == person { fmt.Println(&quot;平手！&quot;) } else if exist_in(Win, input) &gt; 0 { fmt.Println(&quot;电脑获胜&quot;) } else { fmt.Println(&quot;人获胜&quot;) break } } } 3. 用python实现import random guess_list = [&quot;石头&quot;, &quot;剪刀&quot;, &quot;布&quot;] win_combination = [[&quot;布&quot;, &quot;石头&quot;], [&quot;石头&quot;, &quot;剪刀&quot;], [&quot;剪刀&quot;, &quot;布&quot;]] while True: computer = random.choice(guess_list) people = input(&#39;请输入：石头,剪刀,布\n&#39;).strip() if people not in guess_list: continue elif computer == people: print(&quot;平手，再玩一次！&quot;) elif [computer, people] in win_combination: print(&quot;电脑获胜，再玩，人获胜才能退出！&quot;) else: print(&quot;人获胜！&quot;) break 执行结果如下图：]]></content>
      <categories>
        <category>java</category>
        <category>java案例</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java案例</tag>
        <tag>python案例</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《Python3标准库》主题]]></title>
    <url>%2F2019%2F11%2Fpython%2Fpython%E6%A8%A1%E5%9D%97%2Fpython%E6%A0%87%E5%87%86%E5%BA%93%E4%B8%BB%E9%A2%98%2F</url>
    <content type="text"><![CDATA[《Python3标准库》全文1000+页。一共19章，每一章都是按照一个主题来介绍相关的库，每一个库会分几个小节来举例说明。这些例子来源于作者的“Python Module of the Week”开源项目，地址为：https://pymotw.com/3/ 《Python3标准库》主题： 文本：介绍了string、re、difflib。 数据结构：介绍了enum、collections、array、heapq、bisect、queue、struct、weakref、copy、pprint。 算方：介绍了functools、itertools、operator、contextlib。 日期和时间:：介绍了time、datetime、calendar。 数学运算：介绍了decimal、fraction、random、math、statistics。 文件系统：介绍了os.path、pathlib、glob、fnmatch、linecache、tempfile、shutil、filecmp、mmap、codecs、io。 数据持久存储与交换： 介绍了pickle、shelve、dbm、sqlite3、xml、csv。 数据压缩与归档：介绍了zlib、gzip、bz2、tarfile、zipfile。 加密：介绍了hashlib、hmac。 并发编程：介绍了suprocess、signal、threading、multiprocessing、asyncio、consurrent。 联网：socket 互联网：http 网络：email 应用模块构建：介绍了argparse、getopt、readline、getpass、cmd、shlex、configparser、logging、fileinput、atexit、sched。 国际化：介绍了gettext、local。 开发工具：介绍了pydoc、doctest、unittest、trace、traceback、cgitb、pdb、profile、pstats、timeit、tabnanny、compileall、pyclbr、venv、ensurepip。 运行时：介绍了site、sys、os、platform、resource、gc、sysconfig。 语言工具：介绍了warnings、abc、dis、inspect。 模块和包：介绍了importlib、pkgutil、zipimport。]]></content>
      <categories>
        <category>python</category>
        <category>python模块</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Elasticsearch的介绍 以及使用python操作es详细步骤]]></title>
    <url>%2F2019%2F11%2Fdatabase%2Fes%2Fes%E4%BB%8B%E7%BB%8D%E5%8F%8Apyhton%E6%93%8D%E4%BD%9Ces%2F</url>
    <content type="text"><![CDATA[一. 什么是 Elasticsearch想查数据就免不了搜索，搜索就离不开搜索引擎，百度、谷歌都是一个非常庞大复杂的搜索引擎，他们几乎索引了互联网上开放的所有网页和数据。然而对于我们自己的业务数据来说，肯定就没必要用这么复杂的技术了，如果我们想实现自己的搜索引擎，方便存储和检索，Elasticsearch 就是不二选择，它是一个全文搜索引擎，可以快速地储存、搜索和分析海量数据。 Elasticsearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java语言开发的，并作为Apache许可条款下的开放源码发布，是一种流行的企业级搜索引擎。Elasticsearch用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。官方客户端在Java、.NET（C#）、PHP、Python、Apache Groovy、Ruby和许多其他语言中都是可用的。根据DB-Engines的排名显示，Elasticsearch是最受欢迎的企业搜索引擎，其次是Apache Solr，也是基于Lucene。 二. 为什么要用 ElasticsearchElasticsearch 是一个开源的搜索引擎，建立在一个全文搜索引擎库 Apache Lucene™ 基础之上。 那 Lucene 又是什么？Lucene 可能是目前存在的，不论开源还是私有的，拥有最先进，高性能和全功能搜索引擎功能的库，但也仅仅只是一个库。要用上 Lucene，我们需要编写 Java 并引用 Lucene 包才可以，而且我们需要对信息检索有一定程度的理解才能明白 Lucene 是怎么工作的，反正用起来没那么简单。 那么为了解决这个问题，Elasticsearch 就诞生了。Elasticsearch 也是使用 Java 编写的，它的内部使用 Lucene 做索引与搜索，但是它的目标是使全文检索变得简单，相当于 Lucene 的一层封装，它提供了一套简单一致的 RESTful API 来帮助我们实现存储和检索。 所以 Elasticsearch 仅仅就是一个简易版的 Lucene 封装吗？那就大错特错了，Elasticsearch 不仅仅是 Lucene，并且也不仅仅只是一个全文搜索引擎。 它可以被下面这样准确的形容： 一个分布式的实时文档存储，每个字段可以被索引与搜索 一个分布式实时分析搜索引擎 能胜任上百个服务节点的扩展，并支持 PB 级别的结构化或者非结构化数据 总之，是一个相当牛逼的搜索引擎，维基百科、Stack Overflow、GitHub 都纷纷采用它来做搜索 三. Elasticsearch 相关概念在 Elasticsearch 中有几个基本的概念，如节点、索引、文档等等，下面来分别说明一下，理解了这些概念对熟悉 Elasticsearch 是非常有帮助的。 3.1 Node 和 ClusterElasticsearch 本质上是一个分布式数据库，允许多台服务器协同工作，每台服务器可以运行多个 Elasticsearch 实例。 单个 Elasticsearch 实例称为一个节点（Node）。一组节点构成一个集群（Cluster）。 3.2 IndexElasticsearch 会索引所有字段，经过处理后写入一个反向索引（Inverted Index）。查找数据的时候，直接查找该索引。 所以，Elasticsearch 数据管理的顶层单位就叫做 Index（索引），其实就相当于 MySQL、MongoDB 等里面的数据库的概念。另外值得注意的是，每个 Index （即数据库）的名字必须是小写。 3.3 DocumentIndex 里面单条的记录称为 Document（文档）。许多条 Document 构成了一个 Index。 Document 使用 JSON 格式表示，下面是一个例子。 同一个 Index 里面的 Document，不要求有相同的结构（scheme），但是最好保持相同，这样有利于提高搜索效率。 3.4 TypeDocument 可以分组，比如 weather 这个 Index 里面，可以按城市分组（北京和上海），也可以按气候分组（晴天和雨天）。这种分组就叫做 Type，它是虚拟的逻辑分组，用来过滤 Document，类似 MySQL 中的数据表，MongoDB 中的 Collection。 不同的 Type 应该有相似的结构（Schema），举例来说，id 字段不能在这个组是字符串，在另一个组是数值。这是与关系型数据库的表的一个区别。性质完全不同的数据（比如 products 和 logs）应该存成两个 Index，而不是一个 Index 里面的两个 Type（虽然可以做到）。 根据规划，Elastic 6.x 版只允许每个 Index 包含一个 Type，7.x 版将会彻底移除 Type。 3.5 Fields即字段，每个 Document 都类似一个 JSON 结构，它包含了许多字段，每个字段都有其对应的值，多个字段组成了一个 Document，其实就可以类比 MySQL 数据表中的字段。 在 Elasticsearch 中，文档归属于一种类型（Type），而这些类型存在于索引（Index）中，我们可以画一些简单的对比图来类比传统关系型数据库： Relational DB -&gt; Databases -&gt; Tables -&gt; Rows -&gt; Columns Elasticsearch -&gt; Indices -&gt; Types -&gt; Documents -&gt; Fields 以上就是 Elasticsearch 里面的一些基本概念，通过和关系性数据库的对比更加有助于理解。 四. Python 对接 ElasticsearchElasticsearch 实际上提供了一系列 Restful API 来进行存取和查询操作，我们可以使用 curl 等命令来进行操作，但毕竟命令行模式没那么方便，所以这里我们就直接介绍利用 Python 来对接 Elasticsearch 的相关方法。 Python 中对接 Elasticsearch 使用的就是一个同名的库，安装方式非常简单： pip3 install elasticsearch 官方文档是：https://elasticsearch-py.readthedocs.io/，所有的用法都可以在里面查到，文章后面的内容也是基于官方文档来的。 4.1 创建 Index我们先来看下怎样创建一个索引（Index），这里我们创建一个名为 news 的索引： from elasticsearch import Elasticsearch es = Elasticsearch() result = es.indices.create(index=&#39;news&#39;, ignore=400) print(result) 如果创建成功，会返回如下结果： {&#39;acknowledged&#39;: True, &#39;shards_acknowledged&#39;: True, &#39;index&#39;: &#39;news&#39;} 返回结果是 JSON 格式，其中的 acknowledged 字段表示创建操作执行成功。 但这时如果我们再把代码执行一次的话，就会返回如下结果： {&#39;error&#39;: {&#39;root_cause&#39;: [{&#39;type&#39;: &#39;resource_already_exists_exception&#39;, &#39;reason&#39;: &#39;index [news/QxBPZzVwQhujlPqCLjOlVg] already exists&#39;, &#39;index_uuid&#39;: &#39;QxBPZzVwQhujlPqCLjOlVg&#39;, &#39;index&#39;: &#39;news&#39;}], &#39;type&#39;: &#39;resource_already_exists_exception&#39;, &#39;reason&#39;: &#39;index [news/QxBPZzVwQhujlPqCLjOlVg] already exists&#39;, &#39;index_uuid&#39;: &#39;QxBPZzVwQhujlPqCLjOlVg&#39;, &#39;index&#39;: &#39;news&#39;}, &#39;status&#39;: 400} 它提示创建失败，status 状态码是 400，错误原因是 Index 已经存在了。 注意这里我们的代码里面使用了 ignore 参数为 400，这说明如果返回结果是 400 的话，就忽略这个错误不会报错，程序不会执行抛出异常。 假如我们不加 ignore 这个参数的话： es = Elasticsearch() result = es.indices.create(index=&#39;news&#39;) print(result) 再次执行就会报错了： raise HTTP_EXCEPTIONS.get(status_code, TransportError)(status_code, error_message, additional_info) elasticsearch.exceptions.RequestError: TransportError(400, &#39;resource_already_exists_exception&#39;, &#39;index [news/QM6yz2W8QE-bflKhc5oThw] already exists&#39;) 这样程序的执行就会出现问题，所以说，我们需要善用 ignore 参数，把一些意外情况排除，这样可以保证程序的正常执行而不会中断。 4.2 删除 Index删除 Index 也是类似的，代码如下： from elasticsearch import Elasticsearch es = Elasticsearch() result = es.indices.delete(index=&#39;news&#39;, ignore=[400, 404]) print(result) 这里也是使用了 ignore 参数，来忽略 Index 不存在而删除失败导致程序中断的问题。 如果删除成功，会输出如下结果： {&#39;acknowledged&#39;: True} 如果 Index 已经被删除，再执行删除则会输出如下结果： {&#39;error&#39;: {&#39;root_cause&#39;: [{&#39;type&#39;: &#39;index_not_found_exception&#39;, &#39;reason&#39;: &#39;no such index&#39;, &#39;resource.type&#39;: &#39;index_or_alias&#39;, &#39;resource.id&#39;: &#39;news&#39;, &#39;index_uuid&#39;: &#39;_na_&#39;, &#39;index&#39;: &#39;news&#39;}], &#39;type&#39;: &#39;index_not_found_exception&#39;, &#39;reason&#39;: &#39;no such index&#39;, &#39;resource.type&#39;: &#39;index_or_alias&#39;, &#39;resource.id&#39;: &#39;news&#39;, &#39;index_uuid&#39;: &#39;_na_&#39;, &#39;index&#39;: &#39;news&#39;}, &#39;status&#39;: 404} 这个结果表明当前 Index 不存在，删除失败，返回的结果同样是 JSON，状态码是 400，但是由于我们添加了 ignore 参数，忽略了 400 状态码，因此程序正常执行输出 JSON 结果，而不是抛出异常。 4.3 插入数据Elasticsearch 就像 MongoDB 一样，在插入数据的时候可以直接插入结构化字典数据，插入数据可以调用 create() 方法，例如这里我们插入一条新闻数据： from elasticsearch import Elasticsearch es = Elasticsearch() es.indices.create(index=&#39;news&#39;, ignore=400) data = {&#39;title&#39;: &#39;美国留给伊拉克的是个烂摊子吗&#39;, &#39;url&#39;: &#39;http://view.news.qq.com/zt2011/usa_iraq/index.htm&#39;} result = es.create(index=&#39;news&#39;, doc_type=&#39;politics&#39;, id=1, body=data) print(result) 这里我们首先声明了一条新闻数据，包括标题和链接，然后通过调用 create() 方法插入了这条数据，在调用 create() 方法时，我们传入了四个参数，index 参数代表了索引名称，doc_type 代表了文档类型，body 则代表了文档具体内容，id 则是数据的唯一标识 ID。 运行结果如下： {&#39;_index&#39;: &#39;news&#39;, &#39;_type&#39;: &#39;politics&#39;, &#39;_id&#39;: &#39;1&#39;, &#39;_version&#39;: 1, &#39;result&#39;: &#39;created&#39;, &#39;_shards&#39;: {&#39;total&#39;: 2, &#39;successful&#39;: 1, &#39;failed&#39;: 0}, &#39;_seq_no&#39;: 0, &#39;_primary_term&#39;: 1} 结果中 result 字段为 created，代表该数据插入成功。 另外其实我们也可以使用 index() 方法来插入数据，但与 create() 不同的是，create() 方法需要我们指定 id 字段来唯一标识该条数据，而 index() 方法则不需要，如果不指定 id，会自动生成一个 id，调用 index() 方法的写法如下： es.index(index=&#39;news&#39;, doc_type=&#39;politics&#39;, body=data) create() 方法内部其实也是调用了 index() 方法，是对 index() 方法的封装。 4.4 更新数据更新数据也非常简单，我们同样需要指定数据的 id 和内容，调用 update() 方法即可，代码如下： from elasticsearch import Elasticsearch es = Elasticsearch() data = { &#39;title&#39;: &#39;美国留给伊拉克的是个烂摊子吗&#39;, &#39;url&#39;: &#39;http://view.news.qq.com/zt2011/usa_iraq/index.htm&#39;, &#39;date&#39;: &#39;2011-12-16&#39; } result = es.update(index=&#39;news&#39;, doc_type=&#39;politics&#39;, body=data, id=1) print(result) 这里我们为数据增加了一个日期字段，然后调用了 update() 方法，结果如下： {&#39;_index&#39;: &#39;news&#39;, &#39;_type&#39;: &#39;politics&#39;, &#39;_id&#39;: &#39;1&#39;, &#39;_version&#39;: 2, &#39;result&#39;: &#39;updated&#39;, &#39;_shards&#39;: {&#39;total&#39;: 2, &#39;successful&#39;: 1, &#39;failed&#39;: 0}, &#39;_seq_no&#39;: 1, &#39;_primary_term&#39;: 1} 可以看到返回结果中，result 字段为 updated，即表示更新成功，另外我们还注意到有一个字段 _version，这代表更新后的版本号数，2 代表这是第二个版本，因为之前已经插入过一次数据，所以第一次插入的数据是版本 1，可以参见上例的运行结果，这次更新之后版本号就变成了 2，以后每更新一次，版本号都会加 1。 如果报错：ActionRequestValidationException[Validation Failed: 1: script or doc is missing。解决方法：body中加’doc’节点，把其他包裹起来：body={‘doc’: data} 另外更新操作其实利用 index() 方法同样可以做到，写法如下： es.index(index=&#39;news&#39;, doc_type=&#39;politics&#39;, body=data, id=1) 可以看到，index() 方法可以代替我们完成两个操作，如果数据不存在，那就执行插入操作，如果已经存在，那就执行更新操作，非常方便。 4.5 删除数据如果想删除一条数据可以调用 delete() 方法，指定需要删除的数据 id 即可，写法如下： from elasticsearch import Elasticsearch es = Elasticsearch() result = es.delete(index=&#39;news&#39;, doc_type=&#39;politics&#39;, id=1) print(result) 运行结果如下： {&#39;_index&#39;: &#39;news&#39;, &#39;_type&#39;: &#39;politics&#39;, &#39;_id&#39;: &#39;1&#39;, &#39;_version&#39;: 3, &#39;result&#39;: &#39;deleted&#39;, &#39;_shards&#39;: {&#39;total&#39;: 2, &#39;successful&#39;: 1, &#39;failed&#39;: 0}, &#39;_seq_no&#39;: 2, &#39;_primary_term&#39;: 1} 可以看到运行结果中 result 字段为 deleted，代表删除成功，_version 变成了 3，又增加了 1。 4.6 查询数据上面的几个操作都是非常简单的操作，普通的数据库如 MongoDB 都是可以完成的，看起来并没有什么了不起的，Elasticsearch 更特殊的地方在于其异常强大的检索功能。 对于中文来说，我们需要安装一个分词插件，这里使用的是 elasticsearch-analysis-ik，GitHub 链接为：https://github.com/medcl/elasticsearch-analysis-ik，这里我们使用 Elasticsearch 的另一个命令行工具 elasticsearch-plugin 来安装，这里安装的版本是 6.2.4，请确保和 Elasticsearch 的版本对应起来，命令如下： elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.8.8/elasticsearch-analysis-ik-6.8.8.zip 这里的版本号请替换成你的 Elasticsearch 的版本号。 安装之后重新启动 Elasticsearch 就可以了，它会自动加载安装好的插件。 首先我们新建一个索引并指定需要分词的字段，代码如下： from elasticsearch import Elasticsearch es = Elasticsearch() mapping = { &#39;properties&#39;: { &#39;title&#39;: { &#39;type&#39;: &#39;text&#39;, &#39;analyzer&#39;: &#39;ik_max_word&#39;, &#39;search_analyzer&#39;: &#39;ik_max_word&#39; } } } es.indices.delete(index=&#39;news&#39;, ignore=[400, 404]) es.indices.create(index=&#39;news&#39;, ignore=400) result = es.indices.put_mapping(index=&#39;news&#39;, doc_type=&#39;politics&#39;, body=mapping) print(result) 这里我们先将之前的索引删除了，然后新建了一个索引，然后更新了它的 mapping 信息，mapping 信息中指定了分词的字段，指定了字段的类型 type 为 text，分词器 analyzer 和 搜索分词器 search_analyzer 为 ik_max_word，即使用我们刚才安装的中文分词插件。如果不指定的话则使用默认的英文分词器。 接下来我们插入几条新的数据： datas = [ { &#39;title&#39;: &#39;美国留给伊拉克的是个烂摊子吗&#39;, &#39;url&#39;: &#39;http://view.news.qq.com/zt2011/usa_iraq/index.htm&#39;, &#39;date&#39;: &#39;2011-12-16&#39; }, { &#39;title&#39;: &#39;公安部：各地校车将享最高路权&#39;, &#39;url&#39;: &#39;http://www.chinanews.com/gn/2011/12-16/3536077.shtml&#39;, &#39;date&#39;: &#39;2011-12-16&#39; }, { &#39;title&#39;: &#39;中韩渔警冲突调查：韩警平均每天扣1艘中国渔船&#39;, &#39;url&#39;: &#39;https://news.qq.com/a/20111216/001044.htm&#39;, &#39;date&#39;: &#39;2011-12-17&#39; }, { &#39;title&#39;: &#39;中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首&#39;, &#39;url&#39;: &#39;http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml&#39;, &#39;date&#39;: &#39;2011-12-18&#39; } ] for data in datas: es.index(index=&#39;news&#39;, doc_type=&#39;politics&#39;, body=data) 这里我们指定了四条数据，都带有 title、url、date 字段，然后通过 index() 方法将其插入 Elasticsearch 中，索引名称为 news，类型为 politics。 接下来我们根据关键词查询一下相关内容： result = es.search(index=&#39;news&#39;, doc_type=&#39;politics&#39;) print(result) 可以看到查询出了所有插入的四条数据： { &quot;took&quot;: 0, &quot;timed_out&quot;: false, &quot;_shards&quot;: { &quot;total&quot;: 5, &quot;successful&quot;: 5, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 }, &quot;hits&quot;: { &quot;total&quot;: 4, &quot;max_score&quot;: 1.0, &quot;hits&quot;: [ { &quot;_index&quot;: &quot;news&quot;, &quot;_type&quot;: &quot;politics&quot;, &quot;_id&quot;: &quot;c05G9mQBD9BuE5fdHOUT&quot;, &quot;_score&quot;: 1.0, &quot;_source&quot;: { &quot;title&quot;: &quot;美国留给伊拉克的是个烂摊子吗&quot;, &quot;url&quot;: &quot;http://view.news.qq.com/zt2011/usa_iraq/index.htm&quot;, &quot;date&quot;: &quot;2011-12-16&quot; } }, { &quot;_index&quot;: &quot;news&quot;, &quot;_type&quot;: &quot;politics&quot;, &quot;_id&quot;: &quot;dk5G9mQBD9BuE5fdHOUm&quot;, &quot;_score&quot;: 1.0, &quot;_source&quot;: { &quot;title&quot;: &quot;中国驻洛杉矶领事馆遭亚裔男子枪击，嫌犯已自首&quot;, &quot;url&quot;: &quot;http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml&quot;, &quot;date&quot;: &quot;2011-12-18&quot; } }, { &quot;_index&quot;: &quot;news&quot;, &quot;_type&quot;: &quot;politics&quot;, &quot;_id&quot;: &quot;dU5G9mQBD9BuE5fdHOUj&quot;, &quot;_score&quot;: 1.0, &quot;_source&quot;: { &quot;title&quot;: &quot;中韩渔警冲突调查：韩警平均每天扣1艘中国渔船&quot;, &quot;url&quot;: &quot;https://news.qq.com/a/20111216/001044.htm&quot;, &quot;date&quot;: &quot;2011-12-17&quot; } }, { &quot;_index&quot;: &quot;news&quot;, &quot;_type&quot;: &quot;politics&quot;, &quot;_id&quot;: &quot;dE5G9mQBD9BuE5fdHOUf&quot;, &quot;_score&quot;: 1.0, &quot;_source&quot;: { &quot;title&quot;: &quot;公安部：各地校车将享最高路权&quot;, &quot;url&quot;: &quot;http://www.chinanews.com/gn/2011/12-16/3536077.shtml&quot;, &quot;date&quot;: &quot;2011-12-16&quot; } } ] } } 可以看到返回结果会出现在 hits 字段里面，然后其中有 total 字段标明了查询的结果条目数，还有 max_score 代表了最大匹配分数。 另外我们还可以进行全文检索，这才是体现 Elasticsearch 搜索引擎特性的地方： dsl = { &#39;query&#39;: { &#39;match&#39;: { &#39;title&#39;: &#39;中国 领事馆&#39; } } } es = Elasticsearch() result = es.search(index=&#39;news&#39;, doc_type=&#39;politics&#39;, body=dsl) print(json.dumps(result, indent=2, ensure_ascii=False)) 这里我们使用 Elasticsearch 支持的 DSL 语句来进行查询，使用 match 指定全文检索，检索的字段是 title，内容是“中国领事馆”，搜索结果如下： { &quot;took&quot;: 1, &quot;timed_out&quot;: false, &quot;_shards&quot;: { &quot;total&quot;: 5, &quot;successful&quot;: 5, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 }, &quot;hits&quot;: { &quot;total&quot;: 2, &quot;max_score&quot;: 2.546152, &quot;hits&quot;: [ { &quot;_index&quot;: &quot;news&quot;, &quot;_type&quot;: &quot;politics&quot;, &quot;_id&quot;: &quot;dk5G9mQBD9BuE5fdHOUm&quot;, &quot;_score&quot;: 2.546152, &quot;_source&quot;: { &quot;title&quot;: &quot;中国驻洛杉矶领事馆遭亚裔男子枪击，嫌犯已自首&quot;, &quot;url&quot;: &quot;http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml&quot;, &quot;date&quot;: &quot;2011-12-18&quot; } }, { &quot;_index&quot;: &quot;news&quot;, &quot;_type&quot;: &quot;politics&quot;, &quot;_id&quot;: &quot;dU5G9mQBD9BuE5fdHOUj&quot;, &quot;_score&quot;: 0.2876821, &quot;_source&quot;: { &quot;title&quot;: &quot;中韩渔警冲突调查：韩警平均每天扣1艘中国渔船&quot;, &quot;url&quot;: &quot;https://news.qq.com/a/20111216/001044.htm&quot;, &quot;date&quot;: &quot;2011-12-17&quot; } } ] } } 这里我们看到匹配的结果有两条，第一条的分数为 2.54，第二条的分数为 0.28，这是因为第一条匹配的数据中含有“中国”和“领事馆”两个词，第二条匹配的数据中不包含“领事馆”，但是包含了“中国”这个词，所以也被检索出来了，但是分数比较低。 因此可以看出，检索时会对对应的字段全文检索，结果还会按照检索关键词的相关性进行排序，这就是一个基本的搜索引擎雏形。 另外 Elasticsearch 还支持非常多的查询方式，详情可以参考官方文档：https://www.elastic.co/guide/en/elasticsearch/reference/6.3/query-dsl.html 以上便是对 Elasticsearch 的基本介绍以及 Python 操作 Elasticsearch 的基本用法。 五. 资料推荐另外推荐几个不错的学习站点： Elasticsearch 权威指南：https://es.xiaoleilu.com/index.html全文搜索引擎 Elasticsearch 入门教程：http://www.ruanyifeng.com/blog/2017/08/elasticsearch.htmlElastic 中文社区：https://www.elasticsearch.cn/]]></content>
      <categories>
        <category>数据处理</category>
        <category>ES</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>ES</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[面向对象扑克牌发牌程序]]></title>
    <url>%2F2019%2F10%2Fpython%2Fcases%2F%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%89%91%E5%85%8B%E7%89%8C%E5%8F%91%E7%89%8C%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[案例：4名牌手打牌，计算机随机将52张牌（不含大小王）发给4名牌手，并在屏幕上显示每位牌手的牌。 Card类：代表一张牌，FaceNum指牌面数字，Suit指花色； Hand类：代表一手牌，可以增加，清空手里的牌； Poke类：代表一副牌，deal指发牌。 class Card(): &quot;&quot;&quot;A playing card.&quot;&quot;&quot; RANKS = [&#39;A&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;10&#39;, &#39;J&#39;, &#39;Q&#39;, &#39;K&#39;] SUITS = [&#39;梅&#39;, &#39;方&#39;, &#39;红&#39;, &#39;黑&#39;] def __init__(self, rank, suit, face_up=True): self.rank = rank self.suit = suit self.is_face_up = face_up # 是否显示牌的正面 def __str__(self): # 重写print方法，打印一张牌的信息 if self.is_face_up: rep = self.suit + self.rank else: rep = &#39;XX&#39; return rep def pic_order(self): # 牌的顺序号 if self.rank == &#39;A&#39;: FaceNum = 1 elif self.rank == &#39;J&#39;: FaceNum = 11 elif self.rank == &#39;Q&#39;: FaceNum = 12 elif self.rank == &#39;K&#39;: FaceNum = 13 else: FaceNum = int(self.rank) if self.suit == &#39;梅&#39;: Suit = 1 elif self.suit == &#39;方&#39;: Suit = 2 elif self.suit == &#39;红&#39;: Suit = 3 else: Suit = 4 return (Suit-1) * 13 + FaceNum def flip(self): # 翻牌方法 self.is_face_up = not self.is_face_up class Hand(): &quot;&quot;&quot;A hand of playing cards&quot;&quot;&quot; def __init__(self): self.cards = [] # cards列表变量存储牌手中的牌 def __str__(self): if self.cards: rep = &#39;&#39; for card in self.cards: rep += str(card) + &#39;\t&#39; else: rep = &#39;无牌&#39; return rep def clear(self): # 清空手里的牌 self.cards = [] def add(self, card): # 增加牌 self.cards.append(card) def give(self, card, other_hand): # 把一张牌给其他牌手 self.cards.remove(card) other_hand.add(card) class Poke(Hand): &quot;&quot;&quot;A deck of playing cards.&quot;&quot;&quot; def populate(self): # 生成一副牌 for suit in Card.SUITS: for rank in Card.RANKS: self.add(Card(rank, suit)) def shuffle(self): # 洗牌 import random random.shuffle(self.cards) # 打乱牌的顺序 def deal(self, hands, per_hand=13): # 发牌，发给玩家，每人默认13张牌 for rounds in range(per_hand): for hand in hands: if self.cards: top_card=self.cards[0] self.cards.remove(top_card) hand.add(top_card) # self.give(top_card, hand) # 上面的两句可以用这一句代替 else: print(&#39;牌已发完！&#39;) if __name__ == &quot;__main__&quot;: print(&#39;扑克发牌开始：&#39;) # 4个玩家 players = [Hand(), Hand(), Hand(), Hand()] poke1 = Poke() poke1.populate() # 生成一副牌 poke1.shuffle() # 洗牌 poke1.deal(players, 13) # 发给每个玩家13张牌 # 显示4位牌手的牌 n = 1 for hand in players: print(&#39;牌手&#39;, n, end=&#39;:&#39;) print(hand) n = n + 1 input(&#39;\n Press the enter key to exit.&#39;) 程序执行结果如下图：]]></content>
      <categories>
        <category>python</category>
        <category>python案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[运行js的execjs模块]]></title>
    <url>%2F2019%2F10%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2F%E8%BF%90%E8%A1%8Cjs%E7%9A%84execjs%E6%A8%A1%E5%9D%97%2F</url>
    <content type="text"><![CDATA[# -*- encoding: utf-8 -*- &quot;&quot;&quot; @Author: cuiyonghua @CreateDate: 2020/1/7 7:38 下午 @File: 案例execjs.py @Description: 安装方式： 先解决 JS 环境，这里推荐安装 Node.js ，安装方便，执行效率也高。 然后 pip install PyExecJS 就可以了。 &quot;&quot;&quot; # 一个简短的案例 import execjs print(execjs.eval(&quot;&#39;red yellow blue&#39;.split(&#39; &#39;)&quot;)) ctx = execjs.compile(&quot;&quot;&quot; function add(x, y) { return x + y; } &quot;&quot;&quot;) print(ctx.call(&quot;add&quot;, 1, 2)) # get() 函数 default = execjs.get() # the automatically picked runtime print(default.eval(&quot;1 + 2&quot;)) # jscript = execjs.get(&quot;JScript&quot;) # print(default.eval(&quot;1 + 2&quot;)) node = execjs.get(&quot;Node&quot;) print(node.eval(&quot;1 + 2&quot;)) import execjs # 查看执行JS的环境 print(execjs.get().name) # 直接执行 print(&#39;execjs.eval：&#39;, execjs.eval(&#39; &quot;a、b、c、d、e&quot;.split(&quot;、&quot;) &#39;)) # 先编译、后调用 # 将js文件中的内容读取出来编译即可调用里面的方法了 js_compile = execjs.compile( &quot;&quot;&quot; function add(x, y) { return x + y; } &quot;&quot;&quot; ) eval_str = &quot;js_compile.call(&#39;add&#39;, &#39;{}&#39;, &#39;{}&#39;)&quot;.format(&#39;abc&#39;, 123) print(&#39;eval执行的语句：&#39;, eval_str) print(&#39;eval：&#39;, eval(eval_str)) print(&#39;execjs.compile().call()：&#39;, js_compile.call(&#39;add&#39;, &#39;abc&#39;, 123))]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[对数据库中的数据 进行增删改查用到的SQL语句]]></title>
    <url>%2F2019%2F10%2Fdatabase%2FPostgreSql%2F20191008_%E6%9B%B4%E6%94%B9%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[向表中插入一列：例如：向 top_iqiyi_info 表中增加一列 up_trend。 alter table top_iqiyi_info add up_trend Integer 向表中删除一部分数据：比如：删除一个时间段内的数据 delete from tong_info where crawled_time between &#39;2019-10-14 10:00:00&#39; and &#39;2019-10-14 12:00:00&#39;]]></content>
      <categories>
        <category>数据处理</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL中增加，更新或删除 数据库中原数据的内容]]></title>
    <url>%2F2019%2F09%2Fdatabase%2Fmysql%2F20190927_mysql%E6%9B%B4%E6%94%B9%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[1. 向原数据增加内容原表为： 执行sql语句： # 在name字段下数据的前面加上 ‘我的’ 字段 update person_info set name = concat(&#39;我的&#39;, name) 增加之后的结果为： 2. 修改原数据的内容语法：replace(object,search,replace) ， 把object中出现search的全部替换为replace 执行的sql: # 在name字段下， 把 ‘我’ 替换成 ‘你们’ update person_info set name = replace(name, &#39;我&#39;, &#39;你们&#39;) 3. 删除原数据的内容执行的sql如下 # 在name字段下， 把 ‘我们的’ 替换成 ‘’ update person_info set name = replace(name, &#39;你们的&#39;, &#39;&#39;) 执行的结果如下图： 注：如果想增加，更新或删除数据的部分内容，可指定要操作的字段比如： update person_info set name = replace(name, &#39;china&#39;, &#39;chinamoney&#39;) where id in (1, 2, 3)]]></content>
      <categories>
        <category>数据处理</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计每5分钟，MySQL数据库中数据的插入量]]></title>
    <url>%2F2019%2F09%2Fdatabase%2Fmysql%2F20190921_%E6%AF%8F5%E5%88%86%E9%92%9Fmysql%E7%9A%84%E6%8F%92%E5%85%A5%E9%87%8F%2F</url>
    <content type="text"><![CDATA[统计每5分钟，MySQL数据库中数据的插入量，id，start_time，end_time都在表sk_job_execution中。 SELECT time, COUNT( * ) AS num FROM ( SELECT id, DATE_FORMAT( concat( date(start_time ), &#39; &#39;, HOUR ( start_time ), &#39;:&#39;, floor( MINUTE ( start_time ) / 5 ) * 5 ), &#39;%Y-%m-%d %H:%i&#39; ) AS time FROM sk_job_execution where start_time BETWEEN &#39;2019-09-20 00:00:00&#39; and &#39;2019-09-21 10:00:00&#39; ) a GROUP BY DATE_FORMAT( time, &#39;%Y-%m-%d %H:%i&#39; ) ORDER BY time; 执行结果如下图所示：]]></content>
      <categories>
        <category>数据处理</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[查询PostgreSQL占多大内存]]></title>
    <url>%2F2019%2F09%2Fdatabase%2FPostgreSql%2F20190909_%E6%9F%A5%E7%9C%8Bpg%E5%86%85%E5%AD%98%2F</url>
    <content type="text"><![CDATA[select pg_size_pretty(pg_relation_size(&#39;cuiyonghua.top_iqiyi_info&#39;)); select pg_size_pretty(pg_relation_size(&#39;cuiyonghua.top_mgtv_info&#39;)); select pg_size_pretty(pg_relation_size(&#39;cuiyonghua.top_tencent_info&#39;)); select pg_size_pretty(pg_relation_size(&#39;cuiyonghua.top_zhihu_info&#39;));]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：十八. 内部结构]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190827_%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[PostgreSQL的内部概述1、查询经过的路径 建立连接 分析器阶段 重写系统 规划器/优化器 执行器阶段 2、如何建立连接 PostgreSQL是用一个简单的“每用户一进程”的client/server模型来实现的。在这种模式里，一个客户端进程只与一个服务器进程连接，由于不知道具体要建立多少个连接，所以不得不利用一个主进程在每次连接请求时都派生出一个新的服务器进程来，这个主进程叫做postgres，它监听着一个特定的TCP/IP端口等待进来的连接。主进程每当检测到一个连接请求时，postgres进程派生出一个新的服务器进程。服务器进程之间使用信号灯和共享内存进行通讯，以确保在并发的数据访问过程中的数据完整性。客户端进程可以是任何理解PostgreSQL协议的程序。应用程序一旦与PostgreSQL服务器建立起来连接，客户端进程就可以向后端（服务器）进程发送查询了。查询是通过纯文本传输的，也就是说在前端（客户端）不做任何分析处理。服务器分析查询，创建执行规划，执行该规划并且通过已经建立起来的连接把检索出来的数据行返回给客户端。 3、分析器阶段 分析器分析器必须检查查询字符串的语法。如果语法正确，则创建一个分析树并将其返回，否则，将返回一个错误。实现分析器和词法器使用了著名的Unix工具yacc和lex。 转换处理分析器阶段只使用与SQL语法结构相关的固定规则来创建分析树。由于分析器不会查找任何系统表，因此它不可能理解请求查询的详细含义。在分析器技术之后，转换处理分析器传过来的分析树，再做进一步的处理，即：解析哪些查询中引用了哪个表、哪个函数、哪个操作符，最后再生成表示这个信息的数据结构，该数据结构就是查询树。 4、PostgreSQL规则系统 第一个能用的规则系统采用行级别的处理，是在执行器的深层实现的。每次访问一条独立的行时都要调用规则系统，这个规则在1995年被删除了。第二个规则系统从技术角度来说叫查询重写。重写系统是一个存在于分析器阶段和规划器/优化器之间的一个模块，目前，这个技术仍然存在。 5、规划器/优化器 规划器/优化器概述规划器/优化器的任务是创建一个优化了的执行规划。如果可能，查询优化器将检查每个可能的执行规划，最终选择运行最快的执行计划。 生成可能的规划规划器/优化器通过为扫描查询里出现的每个关系生成规划，可能的规划是由每个关系上由哪些可用的索引决定的。对一个关系总是可以进行一次顺序查找，所以总是会创建只使用顺序查找的规划。假设一个关系上定义着一个索引（例如B-tree索引），并且一条查询包含约束 relation.attribute OPR constant。如果relation.attribute碰巧匹配B-tree索引的关键字，那么将会创建另一个使用B-tree索引扫描该关系的规划。如果还有别的索引，而且查询里面的约束又和那个索引的关键字匹配，则还会生成更多的规划。 6、执行器 执行器接受规划器/优化器传过来的查询规划然后递归地处理它，抽取所需要的行集合。它实际上是一个需求拉动地流水线机制。每次调用一个规划节点的时候，它都必须给出更多的一个行，或者汇报它已经完成行的传递。执行器机制用于计算四种基本SQL查询类型，分别是SELECT、INSERT、UPDATE和DELETE。 PostgreSQL的内部系统表1、数据表 大多数数据表都是在数据库创建的过程中从模版数据库中拷贝过来的，这些表与数据库是相关的。 pg_aggregatepg_aggregate表用于存储与聚集函数有关的信息。聚集函数是对一个数值集进行操作的函数，它返回从这些值中计算出的一个数值，一般情况下，数值集通常是指每个匹配查询条件的行中的一个字段。 pg_ampg_am存储有关索引访问方法的信息，系统支持的每种索引访问方法都有一行。 pg_amoppg_amop表存储有关和索引访问方法操作符类关联的信息。如果一个操作符是一个操作符类中的成员，那么在这个表中会占据一行。 2、系统视图 pg_available_extensionspg_available_extensions视图列出了可用于安装的扩展，该视图是只读的。 pg_cursorspg_cursors列出了当前可用的游标。 pg_lockspg_locks提供有关在数据库服务器中由打开的事务持有的锁的信息。pg_locks对每个活跃的可锁定对象、请求的锁模式、以及相关的事务保存一行。 PostgreSQL的内部前端/后端协议1、概述 PostgreSQL为了可以有效地为多个客户端提供服务，服务器为每个客户端派生一个新的“后端”进程。在检测到连接请求后，马上创建一个新的子进程。不过，这些是对协议透明的。对于协议而言，术语“后端”和“服务器”是可以互换的；“前端”和“客户机”也是可以互换的。 2、消息流 在PostgreSQL内部，所有通讯都是通过一个消息流进行的。消息的第一个字节标识消息类型，后面的四个字节声明消息剩下部分的长度，这个长度包括长度域自 身，但不包括消息类型字节。剩下的消息内容由消息类型决定。因连接状态的不同，存在几种不同的子协议：启动、查询、函数调用、COPY、结束。还有用于通知响应和命令取消的特殊信息，这些特殊信息可能在启动阶段过后的任何时间产生。 3、消息数据类型 Intn(i)一个网络字节顺序的n位整数。如果声明了i，它将会出现确切的值，否则这个数值就是一个变量。 Intn[k]一个k个n位整数元素的数组，每个都是以网络字节顺序存储的。数组长度k是由消息前面的字段来判断的。3.String(s)一个以零结尾的字符串。 Byten(c)精确的n字节。如果声明了c那么它是确切的数值。 4、错误和通知消息字段 S：表示严重性。C：表示代码。M：表示消息。D：表示细节。H：表示提示。P：表示位置。Q：表示内部查询。W：表示哪里。F：表示文件。L：表示行。R：表示过程。 PostgreSQL的编码约定1、格式 代码格式使用每个制表符4列的空白，也就是说制表符不被展开为空白。每个逻辑缩进层次都是更多的一个制表符，布局规则遵循BSD传统。src/tools目录包含了适用于Emacs的示范配置文件，文本浏览工具more和less可以用下面命令调用。more -x4less -x4 2、报告服务器里的错误 在服务器代码里生成的错误、警告以及日志信息都应该用ereport来创建。每条消息都有两个必须的要素：一个严重级别（范围从DEBUG到PANIC）和一个主要消息文本。除此之外还有可选的元素，最常见的就是一个遵循SQL标准的错误标识码。ereport本身只是一个壳函数，它的存在主要是为了便于让消息生成看起来像C代码里的函数调用。ereport直接接受的唯一参数是严重级别。主消息文本和任何附加消息元素都是通过在ereport里调用辅助函数生成的。 3、错误消息风格指南 主信息简短 格式 引号 使用引号 语法和标点 大写字符与小写字符比较 避免被动语气 现代时与过去时的比较 对象类型 方括弧 组装错误信息 错误的原因消息应该总是说明为什么发生错误。 函数名不要在错误信息里包含报告过程的名字。 尽量避免的字眼尽量避免的字眼包括不能、坏的、 非法、未知等。 正确地拼写用单词的全拼。避免对单词进行缩写。 本地化错误信息文本是需要翻译成其它语言的，因此，语句应该本地化。 基因查询优化器1、作为复杂优化问题的查询处理 在所有关系型操作符里，最难处理和优化的是连接。一个查询需要回答的可选规划的数目将随着该查询包含的连接的个数呈指数增长。目前PostgreSQL优化器的实现在候选策略空间里执行一个近似穷举搜索。这个算法最早是在IBM System R database数据库中引入的，它生成一个近乎最优的连接顺序，但是如果查询中的连接增长得很大，它可能会消耗大量的时间和内存空间。这样就使普通的PostgreSQL查询优化器不适合那种连接了大量表的查询。 2、基因算法 基因算法（GA）是一种启发式的优化法，它是通过不确定的随机搜索进行操作。优化问题的集合被认为是个体组成的种群，一个个体对它的环境的适应程度由它的适应性表示。一个个体在搜索空间里的参照物用染色体表示，该染色体实际上是一套字符串。一个基因是染色体的一个片段，基因是被优化的单个参数的编码。一个基因的典型的编码可以是二进制或整数。 3、PostgreSQL里的基因查询优化（GEQO） GEQO模块是试图解决类似漫游推销员问题(TSP)的查询优化问题。可能的查询规划被当作整数字符串进行编码。每个字符串代表查询里面一个关系到下一个关系的连接的顺序。 索引访问方法接口定义1、索引的系统表记录 每个索引访问方法都在系统表 pg_am 里面用一行来描述。一个 pg_am 行的主要内容是引用 pg_proc 里面的记录，用来标识索引访问方法提供的索引访问函数。要想有真正用处，一个索引访问方法还必须有一个或多个操作符类，定义在 pg_opclass, pg_amop, pg_amproc 里面。这些记录允许规划器判断哪些查询的条件可以适用于用这个索引访问方法创建的索引。 2、索引访问方法函数 索引访问方法必须提供的索引构造和维护函数有：IndexBuildResult ambuild (Relation heapRelation, Relation indexRelation, IndexInfo indexInfo); 3、索引扫描 在一个索引扫描里，索引访问方法负责拿到匹配扫描键字的所有行。访问方法不会卷入从索引的父表中实际抓取这些行的动作中，也不会判断他们是否通过了扫描的时间条件测试或者是其它条件。一个扫描键字是如同 index_key operator constant 的 WHERE 子句的内部表现形式，这里的索引键字是索引中的一个字段，而操作符是和该索引字段相关联的操作符类的一个成员。一个索引扫描拥有零个或者多个扫描键字。 4、索引唯一性检查 PostgreSQL 使用唯一索引来强制SQL唯一约束，唯一索引实际上是不允许多条记录有相同键值的的索引。支持这个特性的访问方法要设置pg_am.amcanunique为真。目前，只有b-tree支持它。因为MVCC，必须允许重复的条目物理上存在于索引之中：该条目可能指向某个逻辑行的后面的版本。实际想强制的行为 是，任何MVCC都不能包含两条相同的索引键字。 5、索引开销估计函数 系统给amcostestimate函数一个WHERE子句的列表，这个WHERE 子句列表是系统认为可以被索引使用的东西。它必须返回访问该索引的开销估计值以及WHERE 子句的选择性。对于简单的场合，开销估计器的所有工作几乎都可以通过调用优化器里面的标准过程完成；amcostestimate 函数的目的是允许索引访问方法提供和索引类型相关的知识，这样也许可以改进标准的开销估计。 GiST索引1、GiST简介 GiST的意思是通用的搜索树(Generalized Search Tree)。它是一种平衡树结构的访问方法，在系统中起一个基础的模版，然后可以使用它实现任意索引模式。B-trees和许多其它的索引模式都可以用GiST实现。GiST的一个优点是它允许一种自定义的数据类型和合适的访问方法一起开发，并且是由该数据类型范畴里的专家，而不是数据库专家开发。 2、GiST的可扩展性 通常，实现一种新的索引访问方法意味着大量的艰苦工作。必须理解数据库的内部工作机制，比如锁的机制和预写日志。GiST接口有一个高层的抽像，只要求访问方法的实现者实现被访问的数据类型的语意。GiST层本身会处理并发，日志和搜索树结构的任务。不要把这个扩展性和其它标准搜索树的扩展性混淆在一起，比如它们所能处理的数据等方面。简单说，GiST组合了扩展性和通用性，以及代码复用和一个干净的界面。 3、实现方法 consistent。这个方法给出一个在树的数据页上的谓词p和一个用户查询q，如果对于一个给定的数据项，p和q 都很明确地不能为真，那么这个方法将返回假。union 。这个方法合并树中的信息。给出一个条目的集合，这个函数生成一个新的谓词，这个谓词对所有这些条目都为真。compress。这个方法将数据项转换成一个适合于在一个索引页里面物理存储的格式。decompress。这个方法是compress方法的反方法。把一个数据项的索引表现形式转换成可以由数据库操作的格式。penalty 。这个方法返回一个表示将新条目插入树中特定分支需要的”开销”的数值。项将会按照树中最小 penalty 的路径插下去。picksplit。如果需要分裂一个页面的时候，这个函数决定页面中哪些条目保存呆旧页面里，而哪些移动到新页面里。same。如果两个条目相同，返回真，否则返回假。 数据库的物理存储1、数据库文件布局 数据库集群所需要的所有数据都存储在集群的数据目录里，通常用环境变量PGDATA来引用。不同服务器管理的多个集群，可以在同一台机器上共存。PGDATA目录包含几个子目录以及一些控制文件。除了这些必要的东西之外，集群的配置文件postgresql、conf、 pg_hba、conf、pg_ident、conf通常也都存储在这里。 2、TOAST 由于PostgreSQL的页面大小是固定的，通常是8Kb，并且不允许行跨越多个页面，因此不可能直接存储非常大的字段值。为了突破这个限制，大的字段值被压缩或被打碎成多个物理行。这些事情对用户都是透明的，只是在后端代码上有一些小的影响，这就是TOAST。只有一部分数据类型支持TOAST。要支持TOAST，数据类型必须有变长(varlena)表现形式。TOAST并不约束剩下的表现形式。所有支持TOAST的数据类型之C级别的函数都必须仔细处理TOAST的输入值。 3、数据库分页文件 序列和TOAST的格式与普通表一样。项指的是存储在一个页面里的独立数据值。在一个表里，一个项是一个行；在一个索引里，一个项是一条索引记录。每个表和索引都以固定尺寸(通常是 8K ，但也可以在编译时选择其它尺寸)的页面数组存储。在表里，所有页面逻辑都相同，所以一个特定的项(行)可以存储在任何页面里。在索引里，第一个页面通常保留为元页面，保存着控制信息，并且依索引访问方法的不同，在索引里可能有不同类型的页面。 BKI后端接口1、BKI文件格式 BKI输入是由一系列命令组成的。命令是由一些记号组成的，具体情况则由命令语法决定。记号通常是用空白分隔的，但是如果没有歧义的话可以不要。没有什么特殊的命令分隔符。通常会把一条新的命令放在新的一行上以保持清晰。记号可以是某些关键字，特殊字符（圆括弧，逗号等），数字，或者双引号字符串。注意，所有命令都是区分大小写的。 2、BKI命令 （1） create [bootstrap] [shared_relation] [without_oids] tablename tableoid (name1 = type1 [, name2 = type2, …])（2） open tablename（3） close [tablename]（4） insert [OID = oid_value] ( value1 value2 … )（5）declare [unique] index indexname indexoid on tablename using amname ( opclass1 name1 [, …] )（6）declare toast toasttableoid toastindexoid on tablename（7）build indices 3、系统初始化的BKI文件结构 ⑴ create bootstrap其中一个关键表。⑵ insert数据，这些数据至少描述这些关键表本身。⑶ close。⑷ 重复创建和填充其它关键表。⑸ create（不带 bootstrap）一个非关键表。⑹ open。⑺ insert 需要的数据。⑻ close。⑼ 重复创建其它非关键表。⑽ 定义索引。⑾ build indices。 4、例子 下面的命令集将创建名为 test_table 的表，该表有两个类型分别为int4和text的字段cola和colb，然后向该表插入两行。create test_table 420 (cola = int4, colb = text)open test_tableinsert OID=421 ( 1 “value1” )insert OID=422 ( 2 null )close test_table 常见问题及解答]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：十七. 服务器配置与数据库监控]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190825_%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%9B%91%E6%8E%A7%2F</url>
    <content type="text"><![CDATA[服务器配置1、服务器配置的文件 在数据库集群中，有3个配置文件，分别是：postgresql.conf，pg_hba.conf和pg_ident.conf。其中postgresql.conf为服务器主要的配置文件，pg_hba.conf是客户端认证配置文件，pg_ident.conf用来配置哪些操作系统用户可以映射为数据库用户。 2、连接与认证 3、资源消耗 服务器的运行会消耗一定的资源，通过设置服务器的参数，可以提示服务器的性能。包括内存、自由空间映射、内核资源使用、基于开销的清理延迟和后端写进程。 自由空间映射用于跟踪数据库中未使用空间的位置。不在映射表里面的自由空间是不能重复使用的，通过合理地设置，可以提高磁盘的利用率。 在VACUUM和ANALYZE命令执行过程中，系统维护一个内部的记数器，跟踪所执行的各种I/O操作的开销。 在PostgreSQL中，有一个独立的服务器进程，叫做后端写进程，它唯一的功能就是发出写“脏”共享缓冲区的命令。这么做的目的是让持有用户查询的服务器进程应该很少或者几乎不等待写动作的发生，因为后端写进程会做这件事情。这样的安排同样也减少了检查点造成的性能下降。 4、预写式日志 预写式日志的设置主要包括对预写式日志的基本设置、检查点设置和归档设置等。 5、查询规划 在PostgreSQL中，查询优化器选择查询规划时，有时候并不是最优的方法。数据库管理员可以通过设置配置参数，强制优化器选择一个更好的查询规划。 6、错误报告和日志 数据库管理员也许想知道错误报告和日志记录在什么地方，什么时间开始记录的和记录了什么等等。 7、运行时统计在PostgreSQL中，如果启用了统计搜集，那么生成的数据可以通过pg_stat和pg_statio系统视图查看服务器的统计信息。 8、自动清理 数据库管理员可以通过设置自动清理的缺省行为，从而提高工作效率。 9、客户端连接缺省 数据库管理员可以设置客户端连接时的语句行为、区域和格式化等。 10、锁管理在数据库系统运行的过程中，会产生各种各样的锁。管理员可以通过设置锁管理的相关参数，从而提高服务器的高可用性。 11、版本和平台兼容性PostgreSQL有很多版本，管理员可以设置各个版本之间兼容性。另外，PostgreSQL可以在不同的平台上安装，管理员可以设置各个平台之间兼容性。 监控数据库的活动1、配置统计收集器 PostgreSQL的统计收集器是一个支持收集和汇报服务器活跃性信息的子系统。目前，这个收集器可以给出对表和索引的访问计数，包括磁盘块的数量和独立行的项。PostgreSQL 还可以判断当前其它服务器进程正在执行的命令是什么。这个特性独立于统计收集器子系统，可以单独地被启用或禁用。因为统计收集给查询处理增加了一些开销，所以可以启用或禁用统计收集。这是由配置参数控制的，通常在postgresql.conf 里设置。 2、查看收集到的统计信息PostgreSQL提供了预定义的视图用于显示统计收集的结果。在使用统计观察当前系统活跃性的时候，必须意识到这些信息并不是实时更新的。每个独立的服务器进程只是在准备进入空闲状态的时候才向收集器传送新的块和行访问计数；因此正在处理的查询或者事务并不影响显示出来的总数。另外一个需要着重指出的是，在请求服务器进程显示任何这些统计信息的时候，它首先抓取收集器进程发出的最新报 告，然后就拿这些数据作为所有统计视图和函数的快照，直到它当前的事务结束。因此统计信息在当前事务的持续期间内不会改变。另外，可以使用底层的统计函数制作自定义的视图。这些底层统计访问函数和标准视图里使用的是一样的。 监控磁盘的使用1、监控磁盘的使用量 使用磁盘空间函数 使用VACUUM信息VACUUM命令回收已删除行占据的存储空间。在PostgreSQL的操作中，那些已经被删除或者更新过的行，并没有从它们所属的表中物理删除，这些数据在完成VACUUM之前它们仍然存在。因此有必要周期地运行VACUUM，特别是在经常更新的表上。VACUUM命令可以选择分析一个特定的数据表，如果没有指定数据表，VACUUM处理当前数据库里每个表。具体语法格式如下。 VACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] [ table ] 2、磁盘满导致的失效一个数据库管理员最重要的磁盘监控任务就是确保磁盘不会写满。磁盘写满可能不会导致数据的丢失，但它肯定会导致系统进一步使用的问题。如果WAL文件也在同一个磁盘上(缺省配置就是这样)，则会发生数据库服务器恐慌，并且停止运行。如果不能通过删除其它东西来释放磁盘空间，那么可以通过使用表空间把一些数据库文件移动到其它文件系统上去。PostgreSQL 里的表空间允许数据库管理员在文件系统里定义那些代表数据库对象的文件存放位置。一旦创建了表空间，那么就可以在创建数据库对象的时候引用它。通过使用表空间，管理员可以控制一个PostgreSQL安装的磁盘布局。]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：十六. 高可用、负载均衡和数据复制]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190824_%E9%AB%98%E5%8F%AF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[常见的数据同步解决方案 共享磁盘故障转移 文件系统复制 事务日志 基于语句的复制 异步复制 同步复制 日志传送备用服务器1、日志传送概述 使用日志传送，有以下几点好处。 无需昂贵的软件或硬件即可实现冗余故障转移系统。 备用服务器可以用于其它用途。而不必长期闲置。例如，当辅助数据库因处理进入的日志文件而处于不可访问状态时，可以在备用服务器上运行另一个独立数据库。 一旦设置好，配置成本相对低廉并且易于维护。 有非常可靠的方法用于提供数据库的冗余副本。 实现和维护配置的成本相对低廉。 支持本地位置和远程灾难恢复方案。 预写式日志（WAL）是一种实现事务日志的标准方法。通过在备用服务器上的restore_command，可以使两个服务器协同工作。它只是等候主服务器的下一个可用WAL文件。restore_command在备份服务器的recovery.conf 文件中指定。普通的恢复过程需要来自WAL归档的文件，如果无法获取则报告错误。对于备份过程来说，下一个可用WAL 件通常不能马上获取，所以必须耐心等待直到它出现。通过书写代码可以实现等待并判断下一个WAL文件是否可用的目的。同时必须有触发失效切换的机制，它应当中断restore_command，跳出循环并向备份服务器返回一个”文件未找到”的错误。这将导致备份服务器结束恢复过程并取代已失效的主服务器。 2、设置备用服务器 第一步：安装主服务器和备份服务器并尽可能保持完全相同，包括完全相同的数据库副本和 PostgreSQL版本。第二步：设置从主服务器连续归档WAL到备份服务器上的某个目录。确保主服务器上的 archive_command和 archive_timeout设置恰当。第三步：为主服务器做一个基础备份，然后在备份服务器上还原这个备份。第四步：在备份服务器上依照 WAL 归档启动恢复过程，注意在 recovery.conf 中使用正确的 restore_command 设置。 数据流的复制1、流复制概述 流复制是异步的，所以在数据同步中，会有一个小的延迟。这个延迟远小于基于文件日志传送，通常1秒内足够与负载保持均衡。流复制有以下几个优点。 流复制对于数据库性能的影响更小。 流复制相对于其他复制相比，所需的硬件成本较小。 流复制更加灵活，支持异构数据库对象的同步。 要使用流复制，建立一个基于文件的日志传送备服务器。需要注意以下设置。 将一个基于文件的日志传送备服务器转为流复制备服务器，在recovery.conf文件中设置primary_conninfo 指向主服务器。在主服务器上设置listen_addresses和身份验证选项（设置文件pg_hba.conf），因此备用服务器可以连接到在主服务器的replication数据库。 在系统上支持保持活动的的套接字选项，设置tcp_keepalives_idle，tcp_keepalives_interval和tcp_keepalives_count帮助主机及时发现断开的连接。 设置备用服务器的最大并发连接数。 当启动了备服务器并且正确设置了primary_conninfo，该备服务器在回放所有可用的WAL文件后，将连接到主服务器。如果成功建立了该连接，将在备服务器中看到WAL接收进程，并且在主服务器相应的一个WAL发送进程。 2、身份验证 设置复制的访问权限是很重要的，只有受信任的用户可以读取WAL流，因为很容易从中提取权限信息。备用服务器必须验证作为主服务器的超级用户。所以需要在主服务器上创建一个有SUPERUSER和LOGIN权限的角色 数据的同步复制1、同步复制概述 同步复制可以保证所有的数据交易被转移到一个同步的备用服务器中。在同步复制时，每次提交事务时将等待，直到收到确认提交已被写入到磁盘中，然后在主服务器和备用服务器上记录事务日志。同步复制技术的应用，可以保证主服务器不在线或者崩溃的情况下，任何已提交事务的数据都不会丢失。对于同步复制来 说，事务在返回前需要被写到两个服务器的磁盘上，因此会在响应时间上带来很大的损失。为了缓解这种情况，PostgreSQL除了像其它数据库系统一样提供同步复制功能 外，还额外提供一个可以基于每一次事务提交而做出同步或异步复制的控制功能。这将使应用开发者通过把一些不可丢失的关键数据（比如财务交易）和那些响应时间上要求高的不太关键的数据区分开，来优化系统的性能。 2、同步复制应用案例 步骤1：在主和从服务器上创建replicaton角色为repl：shell&gt;psqlode=#CREATE ROLE repl REPLICATION LOGIN PASSWORD ‘123456’步骤2：在主和从服务器上创建语言plpgsql：node=# use node;node=# create language plpgsql;步骤3：在备用服务器上修改pg_hba.conf配置：host replication replication_role 192.168.1.15/32 md5步骤4：在主服务器上备份数据库：pg_dump node &gt; node_20121120.dmp步骤5：在备用服务器恢复数据库node ：postgres=#create database node;postgres=#\qshell&gt;psql node &lt; node_20121120.dmp ;步骤6：在备用服务器的数据库/export/script目录下创建一个脚本replication.步骤7：启动脚本：./replication start步骤8：在主服务器的数据库上空表public.hxf中添加一条记录：insert into hxf(uid,uname) select 1,’tianyi’;步骤9：在主服务器的数据库查询：node=# select from hxf; uid | uname—–+————- 1 | tianyi(1 row)步骤10：在备用服务器的数据库中查询：node=# select from hxf; uid | uname—–+————- 1 | tianyi(1 row)]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：十五. 性能优化]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190823_%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[优化简介： PostgreSQL优化一方面是找出系统的瓶颈，提高PostgreSQL数据库整体的性能； 另一方面，需要合理的结构设计和参数调整，以提高用户操作响应的速度； 同时还要尽可能的节省系统资源，以便系统可以提供更大负荷的服务。 PostgreSQL数据库优化是多方面的，原则是减少系统的瓶颈，减少资源的占用，增加系统的反应速度。例如： 通过优化文件系统，提高磁盘IO的读写速度； 通过优化操作系统调度策略，提高PostgreSQL的在高负荷情况下负载能力； 优化表结构、索引、查询语句等使查询响应更快。 优化查询1、分析查询语句EXPLAIN 【例15.1】使用EXPLAIN语句来分析一个查询语句，执行如下语句： EXPLAIN ANALYZE SELECT * FROM fruits; 2、索引对查询速度的影响 【例15.2】下面是查询语句中不使用索引和使用索引的对比。首先，分析未使用索引时的查询情况，EXPLAIN语句执行如下： EXPLAIN SELECT * FROM fruits WHERE f_name=&#39;apple&#39;; 然后，在fruits表的f_name字段上加上索引。执行添加索引的语句及结果如下： CREATE INDEX index_name ON fruits(f_name); 现在，再分析上面的查询语句。执行的EXPLAIN语句及结果如下： EXPLAIN ANALYZE SELECT * FROM fruits WHERE f_name=&#39;apple&#39;; 3、优化子查询 子查询可以一次性完成很多逻辑上需要多个步骤才能完成的SQL操作。子查询虽然可以使查询语句很灵活，但执行效率不高。执行子查询时，PostgreSQL需要为内层查询语句的查询结果建立一个临时表。然后外层查询语句从临时表中查询记 录。查询完毕后，再撤销这些临时表。因此，子查询的速度会受到一定的影响。如果查询的数据量比较大，这种影响就会随之增大。 在PostgreSQL中可以使用连接（JOIN）查询来替代子查询。连接查询不需要建立临时表，其速度比子查询要快，如果查询中使用到索引的话，性能会更好。连接之所以更有效率，是因为PostgreSQL不需要在内存中创建临时表来完成查询工作。 优化数据库结构1、将字段很多的表分解成多个表 2、增加中间表 3、增加冗余字段 设计数据库表时尽量遵循范式理论的规约，尽可能少的冗余字 段，让数据库设计看起来精致、优雅。但是，合理的加入冗余字段可以提高查询速度。 4、优化插入记录的速度 删除索引 使用批量插入 删除外键约束 禁止自动提交 使用COPY批量导入 5、分析表的统计信息PostgreSQL中提供了ANALYZE语句收集表内容的统计信息，然后把结果保存在系统表pg_statistic 里。【例15.3】使用ANALYZ来分析fruits表，执行的语句： ANALYZE VERBOSE fruits; 优化PostgreSQL服务器1、优化服务器硬件 配置较大的内存。足够大的内存，是提高PostgreSQL数据库性能的方法之一。内存的速度比磁盘I/0快得多，可以通过增加系统的缓冲区容量，使数据在内存中停留的时间更 长，以减少磁盘I/0。 配置高速磁盘系统，以减少读盘的等待时间，提高响应速度。 合理分布磁盘I/O，把磁盘I/O分散在多个设备上，以减少资源竞争，提高并行操作能力。 配置多处理器，PostgreSQL是多线程的数据库，多处理器可同时执行多个线程。 2、优化PostgreSQL的参数 maintenance_work_mem：在装载大量的数据的时候，临时增大maintenance_work_mem 配置变量可以改进性能。 checkpoint_segments：PostgreSQL里面装载大量的数据可以导致检查点操作比平常更加频繁发生。 effective_cache_size：此参数代表PostgreSQL能够使用的最大缓存。 max_connections： max_connections的目的是防止max_connections * work_mem超出了实际内存大小。 shared_buffers：postgresql通过shared_buffers和内核和磁盘打交道，因此应该尽量大，让更多的数据缓存在shared_buffers 中。 work_mem：postgresql在执行排序操作时，会根据work_mem的大小决定是否将一个大的结果集拆分为几个小的和work_mem查不多大小的临时文件。]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：十四. 数据备份与还原]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190822_%E5%A4%87%E4%BB%BD%E8%BF%98%E5%8E%9F%2F</url>
    <content type="text"><![CDATA[数据备份1、使用pgAdmin 4 备份数据库2、使用pg_dump工具备份数据库 【例14.1】备份test数据库中的tb_emp表和tb_emp2表，输入语句如下： pg_dump -U postgres -t tb_emp -t tb_emp2 -f C:\abc\test_backup2 test 3、使用pg_dumpall工具备份整个服务器的数据 【例14.2】使用pg_dumpall备份所有的数据库，其操作和pg_dump类似，这里不再重述，输入语句如下： pg_dumpall -U postgres -f C:\abc\dball_backup 数据还原1、使用pgAdmin 4 还原数据库 2、使用psql还原数据库 psql是一个以终端为基础的PostgreSQL前端。它允许用户交互地键入查询，把它们发送给PostgreSQL服务器，然后看看查询的结果。另外，输入可以来自一个文件。 对于已经备份的包含CREATE、INSERT语句的文本文 件，可以使用psql导入到数据库中。语法格式为： psql -d test -U postgres -f C:\abc\test_backup 3、使用pg_restore快速还原数据库 pg_restore可以还原由pg_dump创建的备份文件。它将发出重新生成包括数据在内的所有用户定义类型，函数，表，索引和操作符的所有必要的命令。语法格式为： pg_restore -d test -U postgres -C C:\abc\test_backup 数据库迁移1、相同版本的PostgreSQL数据库之间的迁移：可以直接利用pgAdmin操作； 2、不同版本的PostgreSQL数据库之间的迁移 【例14.3】将www.abc.com主机上的PostgreSQL数据库全部迁移到www.bcd.com主机上。在www.abc.com主机上执行的命令如下： pg_dump -U postgres –h www.bac.com -f C:\abc\test1_backup 然后在www.abc.com主机上使用psql还原数据库文件即可。 3、不同数据库之间的迁移 迁移之前，需要了解不同数据的架构，比较他们之间的差异； 数据库迁移可以使用一些工具，如在windows系统下，可以使用Ora2pg实现Oracle数据库和PostgreSQL数据库之间的迁移。]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：十三. PostgreSQL的用户管理]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190821_%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[组角色管理【例13.1】创建一个名称为post2的角色，SQL代码如下： CREATE ROLE post2; 【例13.2】查看系统中的角色，SQL代码如下： SELECT rolname FROM pg_roles; 【例13.3】修改角色post1的名称为post3。SQL语句如下： ALTER ROLE post1 RENAME TO post3; 【例13.4】删除角色post3。SQL语句如下： DROP ROLE post3; 角色的各种权限1、登录 【例13.5】创建角色post4，此角色具有登录权限。SQL语句如下： CREATE ROLE post4 LOGIN; 2超级用户 【例13.6】创建角色post5，此角色具有超级用户权限。SQL语句如下： CREATE ROLE post5 SUPERUSER; 3、创建数据库 【例13.7】创建角色post6，此角色具有创建数据库权限。SQL语句如下： CREATE ROLE post6 CREATEDB; 4、 创建角色角色要想创建角色，必须明确给出该权限（除了超级用户以外）。一旦角色具有CREATEROLE权限，即可更改和删除其他角色，还可以给其它角色赋予或者撤销成员关系。当然，如果想对超级用户进行操作，仅有此权限还不够，必须拥有SUPERUSER权限。创建具有创建角色权限的角色，SQL语法如下： CREATE ROLE name CREATEROLE; 【例13.8】创建角色post7，此角色具有创建数据库权限。SQL语句如下： CREATE ROLE post7 CREATEROLE; 5、口令在客户认证方法要求与数据库建立连接时，需要口令权限。常见的认证方法包括password、md5和crypt。创建具有口令权限的角色，SQL语法如下：CREATE ROLE name 口令认证方法 具体口令【例13.9】创建角色post8，此角色具有口令权限。SQL语句如下： CREATE ROLE post8 PASSWORD &#39;123456&#39;; 账户管理1、创建用户 【例13.10】创建用户名称为postgre02，并具有创建数据库和创建角色的权限，同时登陆密码为“123456789”。SQL语句如下： CREATE USER postgre02 PASSWORD &#39;123456789&#39; CREATEDB CREATEROLE ; 2、删除用户 【例13.11】使用DROP USER删除账户“postgre02”，SQL语句如下： DROP USER postgre02; 3、修改用户密码 【例13.12】将账户“postgre01”的密码修改为“123123”，SQL语句如下： ALTER USER postgre01 PASSWORD &#39;123123&#39;; 组角色和用户角色管理1、对组角色授权 【例13.13】给“post1”角色添加创建数据表和创建角色的权限，SQL语句如下： ALTER ROLE post1 CREATEDB CREATEROLE; 2、对用户授权 【例13.14】给“postgre01”用户添加创建数据表和创建角色的权限，SQL语句如下： ALTER USER postgre01 CREATEDB CREATEROLE; 3、收回组角色权限 【例13.15】将“post1”角色的创建数据表和创建角色权限收回，SQL语句如下： ALTER ROLE post1 NOCREATEDB NOCREATEROLE; 4、收回用户权限 【例13.16】将“postgre01”用户的创建数据表和创建角色权限收回，SQL语句如下： ALTER USER postgre01 NOCREATEDB NOCREATEROLE; 数据库权限管理1、修改数据库的拥有者 【例13.17】将“mytest”数据库的所有者修改为post1。SQL语句如下： ALTER DATABASE mytest OWNER TO post2; 2、增加用户的数据表权限 【例13.18】其中ppo1是一个现有的数据表，postgres是一个现有的用户，允许postgres更新ppo1数据表，用下面的命令更新表的权限： GRANT UPDATE ON ppo1 TO postgres; 如果将上面的语句修改为： GRANT UPDATE ON ppo1 TO PUBLIC; 则表示将数据表ppo1的更新权限赋予系统中的所有角色。如果将上面的语句修改为： GRANT ALL ON ppo1 TO postgres; 则表示把适用于该对象的所有权限都赋予用户postgres。]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：十二. 事务处理]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190819_%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[PostgreSQL提供了多种数据完整性的保证机制，如约束、触发器、约束和锁管理等。 事务管理简介事务是PostgreSQL中的基本工作单元，是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个不可分割的工作单位。 事务的属性： 原子性（Atomic）:事务必须是原子工作单元；对其数据修改，要么全执行，要么全不执行。 一致性（Consistent）:事务在完成时，必须使所有的数据都保持一致状态。 隔离性（Isolated）:由并发事务所做的修改必须与任何其他并发事务所做的修改隔离。 持久性（Durable）:事务完成之后，它对系统的影响是持久性的。 【例12.1】向person表插入3条学生记录，此时发现是不应该插入的，进行回滚操作。 BEGIN; INSERT INTO person VALUES(1003,&#39;路飞&#39;,80,&#39;10456354&#39;); INSERT INTO person VALUES(1004,&#39;张露&#39;,85,&#39;56423424&#39;); INSERT INTO person VALUES(1005,&#39;魏波&#39;,70, &#39;41242774&#39;); ROLLBACK TRANSACTION; COMMIT; 可以看到执行事务前后表中内容没有变化，这是因为事务撤销了对表的插入操作。 PostgreSQL的并发机制PostgreSQL支持多用户共享同一数据库，但是当多个用户对同一个数据库进行修改时会产生并发问题。从而产生下面的问题 脏读： 幻读； 不可重复性读取。 在PostgreSQL中，定义了4个事务隔离级别： 隔离级别 脏读 幻读 不可重复性读取 读未提交 可能 可能 可能 读已提交 不可能 可能 可能 可重复读 不可能 可能 不可能 可串行读 不可能 不可能 不可能 锁机制1、锁的类型：PostgreSQL中提供了3种锁模式，分别为SpinLock、LWLock、RegularLock。 SpinLock(自旋锁)：使用互斥信号，与操作系统和硬件环境比较密切，事务结束时不能自动释放。 LWLock（轻量级锁）：主要提供对共享存储器的数据机构的互斥访问，特点主要是有等待队列的无死锁检测。另外，事务结束时，可以自动释放LWLock锁。LWLock锁分为排他模式和共享模式。 排他模式：用于数据修改操作，如插入，更新和删除； 共享模式：用于读取数据操作，如select操作。 RegulatLock(常规锁)：为一般数据库事务管理所指的锁，主要特点为有等待队列、有死锁检测和能自动释放锁。 2、死锁： 死锁的原因： 请求与保持条件； 非剥夺条件； 循环等待条件； 互斥条件。 可能会造成死锁的资源 锁。 工作线程。 内存。 减少死锁的策略。 【例12.2】有一个现成的表person，判断此表，如果有外键，则在插入数据时使用SHARE（共享锁），事务如下： BEGIN; LOCK TABLE person IN SHARE MODE; SELECT id FROM person WHERE name = &#39;Star Wars: Episode I - The Phantom Menace&#39;; -- 如果记录没有返回则ROLLBACK INSERT INTO person_user_comments VALUES (_id_, &#39;GREAT! I was waiting for it for so long!&#39;); COMMIT; 【例12.3】如果一个表含有主键，则在删除时，进行SHARE ROW EXCLUSIVE（共享行排他锁）操作。事务如下： BEGIN; LOCK TABLE person IN SHARE ROW EXCLUSIVE MODE; DELETE FROM person_user_comments WHERE id IN (SELECT id FROM films WHERE rating &lt; 5); DELETE FROM person WHERE rating &lt; 5; COMMIT]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：十一. 触发器]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190818_%E8%A7%A6%E5%8F%91%E5%99%A8%2F</url>
    <content type="text"><![CDATA[什么是触发器和触发器函数触发器：一个触发器是一种声明，告诉数据库应该在执行特定的操作时执行特定的函数。 触发器函数：是指一个没有参数并且返回trigger类型的函数。 创建触发器【例11.1】创建一个触发器，使得每次该表有新数据insert时，其中的一个时间字段uptime自动变更为当前时间。首先创建一个用于测试的数据表，SQL语句如下： CREATE TABLE timedb (uid INTEGER,gid INTEGER,uptime timestamp with time zone); 创建一个自定义触发器函数，此函数的主要是为了更新当前时间。创建的SQL语句如下： CREATE FUNCTION func_timedb() RETURNS trigger AS $func_timedb$ BEGIN If (TG_OP = &#39;UPDATE&#39;) THEN If NEW.uptime = OLD.uptime Then return null; END IF; END IF; update timedb set uptime = NOW() where uid = NEW.uid and gid = NEW.gid; return null; END; $func_timedb$ LANGUAGE plpgsql; 创建触发器，SQL语句如下： CREATE TRIGGER timedb _updateTime AFTER INSERT ON timedb FOR EACH ROW EXECUTE PROCEDURE func_timedb (); 下面开始检验触发器是否创建成功，插入数据，SQL语句如下： INSERT INTO timedb VALUES(1,3); -- 查询表中的数据，SQL语句如下： SELECT * FROM timedb； 查看和修改触发器可在pgAdmin中操作 触发器的使用【例11.2】创建一个account表，然后创建一个触发器，用于检测表account的列name的插入数据是否为空。如果为空，将弹出错误提示。首先创建用于测试的数据库，包含两个字段id和name，SQL语句如下： CREATE TABLE account( id int, name char(20) ) ; 创建触发器函数，主要为了检测插入的name字段的数据是否为空，SQL语句如下： CREATE FUNCTION account_stam() RETURNS trigger AS $account_stam$ BEGIN IF NEW.name IS NULL THEN RAISE EXCEPTION &#39;name 字段不能为空值&#39;; END IF; END; $account_stam$ LANGUAGE plpgsql; 创建一个BEFORE触发器，SQL语句如下： CREATE TRIGGER account_stamp BEFORE INSERT ON account FOR EACH ROW EXECUTE PROCEDURE account_stam(); 触发器创建后，检测是否成功。插入数据，name字段为空数据，SQL语句如下。 INSERT INTO account VALUES(10); 删除触发器【例11.3】删除一个触发器，代码如下： DROP TRIGGER timedb_updateTime ON timedb; 疑问1：使用触发器时应该注意什么问题？]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL 十. 视图]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190817_%E8%A7%86%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[视图概述1、视图是一个虚拟表，是从数据库中一个或多个表中导出来的表。 2、视图的作用： 简单化，经常使用的查询可以被定义为视图，用户不必为以后的操作每次指定全部的条件； 安全性，通过视图，用户只能查询和修改他们能见到的数据； 逻辑数据独立性，视图可帮助用户屏蔽真实表结构变化带来的影响。 创建视图 【例10.1】在数据t上创建一个名为view_t的视图，代码如下：首先创建基本表并插入数据，语句如下： CREATE TABLE t (quantity INT, price INT); INSERT INTO t VALUES(3, 50); 创建视图语句为： CREATE VIEW view_t AS SELECT quantity, price, quantity *price FROM t; 查看视图语句如下： SELECT * FROM view_t; 默认情况下创建的视图和基本表的字段是一样，也可以通过指定视图字段的名称来创建视图。【例10.2】在t表格上创建一个名为view_t2的视图，代码如下： CREATE VIEW view_t2(qty, price, total ) AS SELECT quantity, price, quantity *price FROM t; -- 查看view_t2视图中的数据代码如下： SELECT * FROM view_t2; 【例10.3】在表student和表stu_info上创建视图stu_glass，代码如下：首先向两个表中插入数据，输入语句如下： INSERT INTO student VALUES(1,&#39;wanglin1&#39;),(2,&#39;gaoli&#39;),(3,&#39;zhanghai&#39;); INSERT INTO stu_info VALUES(1, &#39;wuban&#39;,&#39;henan&#39;),(2,&#39;liuban&#39;,&#39;hebei&#39;),(3,&#39;qiban&#39;,&#39;shandong&#39;); 创建视图stu_glass，SQL语句如下： CREATE VIEW stu_glass (id,name, glass) AS SELECT student.s_id,student.name ,stu_info.glass FROM student ,stu_info WHERE student.s_id=stu_info.s_id; -- 查看stu_glass视图中的数据代码如下： SELECT * FROM stu_glass; 查看视图【例10.4】在views表中查看视图的详细定义，代码如下： SELECT * FROM information_schema.views; 删除视图【例10.5】删除stu_glass视图，代码如下： DROP VIEW IF EXISTS stu_glass;]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL 九. 索引]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190816_%E7%B4%A2%E5%BC%95%2F</url>
    <content type="text"><![CDATA[索引简介1、索引概念：索引是对数据库表中一列或多列的值进行排序的一种结构，使用索引可以提高数据库中特定数据的查询速度。 2、索引的分类： B-tree索引：比较常用，适合处理能够按顺序存储的数据,可以使用create index创建； Hash索引：只能处理简单的等于比较； GiST索引：不是单独的一种索引类型，而是一种架构，可以在这种架构上实现很多不同的索引策略； GIN索引：是反转索引，可以处理包含多个键的值（比如数组） 3、索引的设计原则： 索引并非越多越好； 避免对经常更新的表进行过多的索引； 数据量小的表最好不要使用索引； 当唯一性是某种数据本身的特征时，指定唯一索引。 创建索引1、创建普通索引 【例9.1】在book表中的bookname字段上建立名为bknameidx的普通索引，SQL语句如下： CREATE INDEX bknameidx ON book(bookname); 语句执行完毕之后，将在book表中创建名称为bknameidx的普通索引。 2、创建唯一索引 【例9.2】在book表的bookId字段上建立名称为uniqididx 的唯一索引，SQL语句如下： CREATE UNIQUE INDEX uniqididx ON book ( bookId ); 3、创建单列索引 【例9.3】在book表的comment字段上建立单列索引，SQL语句如下： CREATE INDEX Bkcmtidx ON book(comment); 语句执行完毕之后，将在book表的comment字段上建立一个名为bkcmtidx的单列索引。 4、创建组合索引 【例9.4】在book表的authors和info字段上建立组合索引，SQL语句如下： CREATE INDEX bkauandinfoidx ON book ( authors,info); 重命名索引【例9.5】将上面修改的索引名称重新修改过来，SQL语句如下： ALTER INDEX public.bkauandinfoidxx RENAME TO bkauandinfoidx; 删除索引【例9.6】删除book表中名称为bkauandinfoidx的组合索引，SQL语句如下： DROP INDEX bkauandinfoidx;]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL 八. 查询语句]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190815_%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%2F</url>
    <content type="text"><![CDATA[查询语句首先定义数据表， CREATE TABLE fruits ( f_id char(10) NOT NULL, s_id INT NOT NULL, f_name char(255) NOT NULL, f_price decimal(8,2) NOT NULL, PRIMARY KEY(f_id) ); 为了演示如何使用SELECT语句，需要插入数据，现插入如下数据： INSERT INTO fruits (f_id, s_id, f_name, f_price) VALUES(&#39;a1&#39;, 101,&#39;apple&#39;,5.2), (&#39;b1&#39;,101,&#39;blackberry&#39;, 10.2), (&#39;bs1&#39;,102,&#39;orange&#39;, 11.2), (&#39;bs2&#39;,105,&#39;melon&#39;,8.2), (&#39;t1&#39;,102,&#39;banana&#39;, 10.3), (&#39;t2&#39;,102,&#39;grape&#39;, 5.3), (&#39;o2&#39;,103,&#39;coconut&#39;, 9.2), (&#39;c0&#39;,101,&#39;cherry&#39;, 3.2), (&#39;a2&#39;,103, &#39;apricot&#39;,2.2), (&#39;l2&#39;,104,&#39;lemon&#39;, 6.4), (&#39;b2&#39;,104,&#39;berry&#39;, 8.6), (&#39;m1&#39;,106,&#39;mango&#39;, 15.6), (&#39;m2&#39;,105,&#39;xbabay&#39;, 2.6), (&#39;t4&#39;,107,&#39;xbababa&#39;, 3.6), (&#39;m3&#39;,105,&#39;xxtt&#39;, 11.6), (&#39;b5&#39;,107,&#39;xxxx&#39;, 3.6); 单表查询1、查询所有字段 【例8.1】从fruits表中检索所有字段的数据，SQL语句如下： SELECT * FROM fruits; 2、查询指定字段 【例8.2】查询当前表中f_name列所有水果名称，SQL语句如下： SELECT f_name FROM fruits; 【例8.3】例如，从fruits表中获取f_name和f_price两列，SQL语句如下： SELECT f_name, f_price FROM fruits; 3、查询指定记录 【例8.4】查询价格为10.2元的水果的名称，SQL语句如下： SELECT f_name, f_price FROM fruits WHERE f_price = 10.2; 【例8.5】查找名称为“apple”的水果的价格，SQL语句如下： SELECT f_name, f_price FROM fruits WHERE f_name = &#39;apple&#39;; 【例8.6】查询价格小于10的水果的名称，SQL语句如下： SELECT f_name, f_price FROM fruits WHERE f_price &lt; 10; 4、带IN关键字的查询 【例8.7】查询s_id为101和102的记录，SQL语句如下： SELECT s_id,f_name, f_price FROM fruits WHERE s_id IN (101,102) ORDER BY f_name; 【例8.8】查询所有s_id不等于101也不等于102的记录，SQL语句如下： SELECT s_id,f_name, f_price FROM fruits WHERE s_id NOT IN (101,102) ORDER BY f_name; 5、带between and 的范围查询 【例8.9】查询价格在2.00元到10.5元之间水果名称和价格，SQL语句如下： SELECT f_name, f_price FROM fruits WHERE f_price BETWEEN 2.00 AND 10.20; 【例8.10】查询价格在2.00元到10.5元之外的水果名称和价格，SQL语句如下： SELECT f_name, f_price FROM fruits WHERE f_price NOT BETWEEN 2.00 AND 10.20; 6、带like的字符匹配查询 【例8.11】查找所有以‘b’字母开头的水果，SQL语句如下： SELECT f_id, f_name FROM fruits WHERE f_name LIKE &#39;b%&#39;; 【例8.12】在fruits表中，查询f_name中包含字母‘g’的记录，SQL语句如下： SELECT f_id, f_name FROM fruits WHERE f_name LIKE &#39;%g%&#39;; 7、查询空值 【例8.13】查询customers表中c_email为空的记录的c_id、c_name和c_email字段值，SQL语句如下： SELECT c_id, c_name,c_email FROM customers WHERE c_email IS NULL; 【例8.14】查询customers表中c_email不为空的记录的c_id、c_name和c_email字段值，SQL语句如下： SELECT c_id, c_name,c_email FROM customers WHERE c_email IS NOT NULL; 8、带and的多条件查询 【例8.15】在fruits表中查询s_id = 101，并且f_price大于5的记录价格和名称，SQL语句如下： SELECT s_id, f_price, f_name FROM fruits WHERE s_id = &#39;101&#39; AND f_price &gt;=5; 【例8.16】在fruits表中查询s_id = 101或者102，并且f_price大于5，并且f_name=‘apple’的记录的价格和名称，SQL语句如下： SELECT f_id, f_price, f_name FROM fruits WHERE s_id IN(&#39;101&#39;, &#39;102&#39;) AND f_price &gt;= 5 AND f_name = &#39;apple&#39;; 9、带or的多条件查询 【例8.17】查询s_id=101或者s_id=102的水果供应商的f_price和f_name，SQL语句如下： SELECT s_id,f_name, f_price FROM fruits WHERE s_id = 101 OR s_id = 102; 【例8.18】查询s_id=101或者s_id=102的水果供应商的f_price和f_name，SQL语句如下： SELECT s_id,f_name, f_price FROM fruits WHERE s_id IN(101,102); 10、查询结果不重复 【例8.19】查询fruits表中s_id字段的值，并返回s_id字段值不得重复，SQL语句如下： SELECT DISTINCT s_id FROM fruits; 11、对查询结果排序 【例8.20】查询fruits表的f_name字段值，并对其进行排序，SQL语句如下： SELECT f_name FROM fruits ORDER BY f_name; 【例8.21】查询fruits表中的f_name和f_price字段，先按f_name排序，再按f_price排序，SQL语句如下： SELECT f_name, f_price FROM fruits ORDER BY f_name, f_price; 【例8.22】查询fruits表中的f_name和f_price字段，对结果按f_price降序方式排序，SQL语句如下：(ASC升序排序是默认的排序方式，加不加都可以) SELECT f_name, f_price FROM fruits ORDER BY f_price DESC; 【例8.23】查询fruits表，先按f_price降序排序，再按f_name字段升序排序，SQL语句如下： SELECT f_price, f_name FROM fruits ORDER BY f_price DESC, f_name; 12、分组查询 【例8.24】根据s_id对fruits表中的数据进行分组，SQL语句如下： SELECT s_id, COUNT(*) AS Total FROM fruits GROUP BY s_id; 【例8.25】根据s_id对fruits表中的数据进行分组，并显示水果种类大于1的分组信息，SQL语句如下： SELECT s_id,COUNT(f_name) FROM fruits GROUP BY s_id HAVING COUNT(f_name)&gt;1; 【例8.26】根据s_id对fruits表中的数据进行分组，显示水果种类大于1的分组信息，并按照水果的种类排序，SQL语句如下： SELECT s_id,COUNT(f_name) FROM fruits GROUP BY s_id HAVING COUNT(f_name)&gt;1 ORDER BY COUNT(f_name); 【例8.27】显示fruits表查询结果的前4行。 SELECT * From fruits LIMIT 4; 【例8.28】在fruits表中，使用LIMIT子句，返回从第5个记录开始的，行数长度为3的记录，SQL语句如下： SELECT * From fruits LIMIT 3 OFFSET 4; 使用集合函数查询1、COUNT()函数 COUNT()函数统计数据表中包含的记录行的总数，或者根据查询结果返回的列中包含的数据行数。其使用方法有两种：⑴ COUNT(*) 计算表中总的行数，不管某列有数值或者为空值。⑵ COUNT(字段名)计算指定列下总的行数，计算时将忽略字段值为空值的行。【例8.29】查询customers表中总的行数，SQL语句如下： SELECT COUNT(*) AS cust_num FROM customers; 【例8.30】查询customers表中有电子邮箱的顾客的总数，SQL语句如下： SELECT COUNT(c_email) AS email_num FROM customers; 【例8.31】在fruits表中，使用COUNT()函数统计不同的s_id的水果种类，然后计算每个分组中的总记录数。 SELECT s_id,COUNT(f_name) FROM fruits GROUP BY s_id; 【例8.32】在fruits表中查询s_id=101的水果价格总和。SQL语句如下： SELECT SUM(f_price) AS price_total FROM fruits WHERE s_id=101; 2、SUM()函数 【例8.33】在fruits表中查询不同s_id的水果价格总和。SQL语句如下： SELECT s_id,SUM(f_price) AS price_total FROM fruits GROUP BY s_id; 3、AVG()函数 【例8.34】在fruits表中，查询s_id=103的供应商的水果价格的平均值，SQL语句如下： SELECT AVG(f_price) AS avg_price FROM fruits WHERE s_id = 103; 【例8.35】在fruits表中，查询每一个供应商的水果价格的平均值，SQL语句如下： SELECT s_id,AVG(f_price) AS avg_price FROM fruits GROUP BY s_id; 4、MAX()函数 【例8.36】在fruits表中查找市场上价格最高的水果，SQL语句如下： SELECT MAX(f_price) AS max_price FROM fruits; 【例8.37】在fruits表中查找不同供应商提供的价格最高的水果，SQL语句如下： SELECT s_id, MAX(f_price) AS max_price FROM fruits GROUP BY s_id; 【例8.38】在fruits表中查找f_name的最大值，SQL语句如下： SELECT MAX(f_name) FROM fruits; 5、MIN()函数 【例8.39】在fruits表中查找市场上水果的最低价格，SQL语句如下： SELECT MIN(f_price) AS min_price FROM fruits; 【例8.40】在fruits表中查找不同供应商提供的价格最低的水果，SQL语句如下： SELECT s_id, MIN(f_price) AS min_price FROM fruits GROUP BY s_id; 连接查询1、内连接查询（inner join） 【例8.41】在fruits表和suppliers表之间使用内连接查询。查询之前，在数据库中创建数据表suppliers，SQL语句如下： CREATE TABLE suppliers ( s_id INT PRIMARY KEY, s_name varchar(50) NOT NULL, s_city varchar(50) NOT NULL); 为了演示需要插入数据，可执行以下语句： INSERT INTO suppliers (s_id, s_name, s_city) VALUES(101,&#39;FastFruit Inc&#39;, &#39;Tianjin&#39;), (102,&#39;LT Supplies&#39;, &#39;shanghai&#39;), (103,&#39;ACME&#39;, &#39;beijing&#39;), (104,&#39;FNK Inc&#39;, &#39;zhengzhou&#39;), (105,&#39;Good Set&#39;, &#39;xinjiang&#39;), (106,&#39;Just Eat Ours&#39;, &#39;yunnan&#39;), (107,&#39;JOTO meoukou&#39;, &#39;guangdong&#39;); fruits表和suppliers表中都有相同数据类型的字段s_id，两个表通过s_id字段建立联系。接下来从fruits表中查询f_name、f_price字段，从suppliers表中查询s_id、s_name，SQL语句如下： SELECT suppliers.s_id, s_name,f_name, f_price FROM fruits ,suppliers WHERE fruits.s_id = suppliers.s_id; 【例8.42】在fruits表和suppliers表之间使用INNER JOIN语法进行内连接查询，SQL语句如下： SELECT suppliers.s_id, s_name,f_name, f_price FROM fruits INNER JOIN suppliers ON fruits.s_id = suppliers.s_id; 【例8.43】查询f_id=’a1’的水果供应商提供的其他水果种类，SQL语句如下： SELECT f1.f_id, f1.f_name FROM fruits AS f1, fruits AS f2 WHERE f1.s_id = f2.s_id AND f2.f_id = &#39;a1&#39;; 2、外连接查询 left join(左连接)：返回包括左表的所有记录和右表中连接字段相等的记录；right join(左连接)：返回包括右表的所有记录和左表中连接字段相等的记录； 在做外连接查询的案例之前，在数据库中创建数据表orders，SQL语句如下： CREATE TABLE orders ( o_num INT NULL, o_date DATE NOT NULL, c_id varchar(50) NOT NULL); 为了演示需要插入数据，可执行以下语句： INSERT INTO orders (o_num, o_date, c_id) VALUES (30001,&#39;2008-09-01 00:00:00&#39;, &#39;10001&#39;), (30002,&#39;2008-09-12 00:00:00&#39;, &#39;10003&#39;), (30003,&#39;2008-09-30 00:00:00&#39;, &#39;10004&#39;), (NULL,&#39;2008-10-03 00:00:00&#39;, &#39;10002&#39;), (30004,&#39;2008-10-03 00:00:00&#39;, &#39;NULL&#39;), (30005,&#39;2008-10-08 00:00:00&#39;, &#39;10001&#39;); 【例8.44】在customers表和orders表中，查询所有客户，包括没有订单的客户，SQL语句如下： SELECT customers.c_id, orders.o_num FROM customers LEFT OUTER JOIN orders ON customers.c_id = orders.c_id; 【例8.45】在customers表和orders表中，查询所有订单，包括没有客户的订单，SQL语句如下： SELECT customers.c_id, orders.o_num FROM customers RIGHT OUTER JOIN orders ON customers.c_id = orders.c_id; 3、复合条件连接查询 【例8.46】在customers表和orders表中，使用INNER JOIN语法查询customers表中ID为10001的客户的订单信息，SQL语句如下： SELECT customers.c_id, orders.o_num FROM customers INNER JOIN orders ON customers.c_id = orders.c_id AND customers.c_id =&#39;10001&#39;; 【例8.47】在fruits表和suppliers表之间使用INNER JOIN语法进行内连接查询，并对查询结果排序，SQL语句如下： SELECT suppliers.s_id, s_name,f_name, f_price FROM fruits INNER JOIN suppliers ON fruits.s_id = suppliers.s_id ORDER BY fruits.s_id; 子查询1、带any、some关键字的子查询 下面定义两个表tb1和tb2 CREATE table tbl1 ( num1 INT NOT NULL); CREATE table tbl2 ( num2 INT NOT NULL); 分别向两个表中插入数据， INSERT INTO tbl1 values(1), (5), (13), (27); INSERT INTO tbl2 values(6), (14), (11), (20); ANY关键字接在一个比较操作符的后面，表示与子查询返回的任何值比较为TRUE，则返回TRUE。【例8.48】返回tbl2表的所有num2列，然后将tbl1中的num1的值与之进行比较，只要大于num2的任何值为符合查询条件的结果。 SELECT num1 FROM tbl1 WHERE num1 &gt; ANY (SELECT num2 FROM tbl2); 2、带ALL关键字的子查询 【例8.49】返回tbl1表的中比tbl2表num2 列所有值都大的值，SQL语句如下： SELECT num1 FROM tbl1 WHERE num1 &gt; ALL (SELECT num2 FROM tbl2); 3、带exists关键字的子查询 【例8.50】查询表suppliers表中是否存在s_id=107的供应商，如果存在则查询fruits表中的记录，SQL语句如下： SELECT * FROM fruits WHERE EXISTS (SELECT s_name FROM suppliers WHERE s_id = 107); 【例8.51】查询表suppliers表中是否存在s_id=107的供应商，如果存在则查询fruits表中的f_price大于10.20的记录，SQL语句如下： SELECT * FROM fruits WHERE f_price&gt;10.20 AND EXISTS (SELECT s_name FROM suppliers WHERE s_id = 107); 【例8.52】查询表suppliers表中是否存在s_id=107的供应商，如果不存在则查询fruits表中的记录，SQL语句如下： SELECT * FROM fruits WHERE NOT EXISTS (SELECT s_name FROM suppliers WHERE s_id = 107); 4、带in关键字的子查询 【例8.53】在customers表中查询c_name=“RedHook”的客户ID(c_id)，并根据c_id查询订单号o_num，SQL语句如下： SELECT o_num FROM orders WHERE c_id IN (SELECT c_id FROM customers WHERE c_name=&#39;RedHook&#39;); 【例8.54】与前一个例子语句类似，但是在SELECT语句中使用NOT IN操作符，SQL语句如下： SELECT o_num FROM orders WHERE c_id NOT IN (SELECT c_id FROM customers WHERE c_name=&#39;RedHook&#39;); 5、带比较运算符的子查询（&gt;,&lt;,&lt;=,=,&gt;=,!=） 【例8.55】在suppliers表中查询s_city等于“Tianjin”的供应商s_id，然后在fruits表中查询所有该供应商提供的水果的种类，SQL语句如下： SELECT s_id, f_name FROM fruits WHERE s_id = (SELECT s1.s_id FROM suppliers AS s1 WHERE s1.s_city = &#39;Tianjin&#39;); 该嵌套查询首先在suppliers表中查找s_city等于Tianjin的供应商的s_id，单独执行子查询查看s_id的值，执行下面的操作过程： SELECT s1.s_id FROM suppliers AS s1 WHERE s1.s_city = &#39;Tianjin&#39;; 然后在外层查询时，在fruits表中查找s_id等于101的供应商提供的水果的种类，SQL语句如下： SELECT s_id, f_name FROM fruits WHERE s_id = (SELECT s1.s_id FROM suppliers AS s1 WHERE s1.s_city = &#39;Tianjin&#39;); 【例8.56】在suppliers表中查询s_city等于“Tianjin”的供应商s_id，然后在fruits表中查询所有非该供应商提供的水果的种类，SQL语句如下： SELECT s_id, f_name FROM fruits WHERE s_id &lt;&gt; (SELECT s1.s_id FROM suppliers AS s1 WHERE s1.s_city = &#39;Tianjin&#39;); 合并查询结果利用UNION关键字，可以给出多条select语句，并将它们的结果组合成单个结果集。 【例8.57】查询所有价格小于9的水果的信息，查询s_id等于101和103所有的水果的信息，使用UNION连接查询结果，SQL语句如下： SELECT s_id, f_name, f_price FROM fruits WHERE f_price &lt; 9.0 UNION SELECT s_id, f_name, f_price FROM fruits WHERE s_id IN(101,103); 如前所述，UNION将多个SELECT语句的结果组合成一个结果集合。可以分开查看每个SELECT语句的结果。第1个SELECT语句如下： SELECT s_id, f_name, f_price FROM fruits WHERE f_price &lt; 9.0; 第2个SELECT语句如下： SELECT s_id, f_name, f_price FROM fruits WHERE s_id IN(101,103); 【例8.58】查询所有价格小于9的水果的信息，查询s_id等于101和103所有的水果的信息，使用UNION ALL连接查询结果，SQL语句如下： SELECT s_id, f_name, f_price FROM fruits WHERE f_price &lt; 9.0 UNION ALL SELECT s_id, f_name, f_price FROM fruits WHERE s_id IN(101,103); 为表和字段取别名1、为表取别名 【例8.59】为orders表取别名o，查询订30001订单的下单日期，SQL语句如下： SELECT * FROM orders AS o WHERE o.o_num=30001; 【例8.60】为customers和orders表分别取别名，并进行连接查询，SQL语句如下： SELECT c.c_id, o.o_num FROM customers AS c LEFT OUTER JOIN orders AS o ON c.c_id = o.c_id; 在前面介绍内连接查询时指出自连接是一种特殊的内连接，在连接查询中的两个表都是同一个表，其查询语句如下： SELECT f1.f_id, f1.f_name FROM fruits AS f1, fruits AS f2 WHERE f1.s_id = f2.s_id AND f2.f_id = &#39;a1&#39;; 2、为字段取别名 【例8.61】查询fruits表，为f_name取别名fruit_name，f_price取别名fruit_price，为fruits表取别名f1，查询表中f_price &lt; 8的水果的名称，SQL语句如下： SELECT f1.f_name AS fruit_name, f1.f_price AS fruit_price FROM fruits AS f1 WHERE f1.f_price &lt; 8; 【例8.62】查询suppliers表中字段s_name和s_city，使用CONCAT函数连接这个两个字段值，并取列别名为suppliers_title。如果没有对连接后的值取别名，其显示列名称将会不够直观，SQL语句如下： SELECT CONCAT(RTRIM(s_name) , &#39; (&#39;, RTRIM(s_city), &#39;)&#39;) FROM suppliers ORDER BY s_name; 由结果可以看到，显示结果的列名称为SELECT子句后面的计算字段，实际上计算之后的列是没有名字的，这样的结果让人很不容易理解，如果为字段取一个别名，将会使结果清晰，SQL语句如下， SELECT CONCAT(RTRIM(s_name) , &#39; (&#39;, RTRIM(s_city), &#39;)&#39;) AS suppliers_title FROM suppliers ORDER BY s_name; 使用正则表达式查询PostgreSQL中正则表达式的操作符使用方法如下： ~ 匹配正则表达式，区分大小写； ~* 匹配正则表达式，不区分大小写； !~ 不匹配正则表达式，区分大小写； ！~* 不匹配正则表达式，不区分大小写。 1、查询以特定字符或字符串开头的记录 【例8.63】在fruits表中，查询f_name字段以字母‘b’开头的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;^b&#39;; 【例8.64】在fruits表中，查询f_name字段以“be”开头的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;^be&#39;; 2、查询以特定字符或字符串结尾的记录 【例8.65】在fruits表中，查询f_name字段以字母‘t’结尾的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;t&#39;; fruits表中有3条记录的f_name字段值是以字母‘t’结尾，返回结果有3条记录。【例8.66】在fruits表中，查询f_name字段以字符串“rry”结尾的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;rry&#39;; 3、用符号“.”来替代字符串中任意一个字符 【例8.67】在fruits表中，查询f_name字段值包含字母‘a’与‘g’且两个字母之间只有一个字母的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;a.g&#39;; 星号‘*’匹配前面的字符任意多次，包括0次。加号‘+’匹配前面的字符至少一次。 4、使用“*”或者“+”来匹配多个字符 【例8.68】在fruits表中，查询f_name字段值以字母‘b’开头，且‘b’后面出现字母‘a’的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;^ba*&#39;; 【例8.69】在fruits表中，查询f_name字段值以字母‘b’开头，且‘b’后面出现字母‘a’至少一次的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;^ba+&#39;; 5、匹配指定字符串 【例8.70】在fruits表中，查询f_name字段值包含字符串“on”的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;on&#39;; 【例8.71】在fruits表中，查询f_name字段值包含字符串“on”或者“ap”的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;on|ap&#39;; 【例8.72】在fruits表中，使用LIKE运算符查询f_name字段值为“on”的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name LIKE &#39;on&#39;; 6、匹配指定字符串的任意一个 【例8.73】在fruits表中，查找f_name字段中包含字母‘o’或者‘t’的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;[ot]&#39;; 7、匹配指定字符以外的字符 【例8.74】在fruits表中，查询f_id字段不包含字母a到e或数字1到2的字符的记录，SQL语句如下： SELECT * FROM fruits WHERE f_id !~ &#39;[a-e1-2]&#39;; 8、使用{M}或者{M,N}来指定字符串连续出现的次数 【例8.75】在fruits表中，查询f_name字段值出现字母‘x’至少2次的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;x{2,}&#39;; 【例8.76】在fruits表中，查询f_name字段值出现字符串“ba”最少1次，最多3次的记录，SQL语句如下： SELECT * FROM fruits WHERE f_name ~ &#39;ba{1,3}&#39;; 常见问题及解答]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：七. 插入，更新与删除数据]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190813_%E6%8F%92%E5%85%A5%E6%9B%B4%E6%96%B0%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[插入数据1、为表的所有字段插入数据 执行插入操作之前，使用SELECT语句查看表中的数据： CREATE TABLE person( id INT NOT NULL, name CHAR(40) NOT NULL DEFAULT &#39;&#39;, age INT NOT NULL DEFAULT 0, info CHAR(50) NULL, PRIMARY KEY (id) ); SELECT * FROM person; 【例7.1】在person表中，插入一条新记录，id值为1，name值为Green，age值为21，info值为lawyer，SQL语句如下： INSERT INTO person (id ,name, age , info) VALUES (1,&#39;Green&#39;, 21, &#39;Lawyer&#39;); SELECT * FROM person; 语句执行完毕，查看执行结果： 【例7.2】在person表中，插入一条新记录，id值为2，name值为Suse，age值为22，info值为dancer，SQL语句如下： INSERT INTO person (age ,name, id , info) VALUES (22, &#39;Suse&#39;, 2, &#39;dancer&#39;); SELECT * FROM person; 【例7.3】在person表中，插入一条新记录，SQL语句如下： INSERT INTO person VALUES (3,&#39;Mary&#39;, 24, &#39;Musician&#39;); SELECT * FROM person; 2、为表的指定字段插入数据 【例7.4】在person表中，插入一条新记录，id值为4，name值为laura，age值为25，SQL语句如下： INSERT INTO person (id,name, age ) VALUES (4,&#39;Laura&#39;, 25); SELECT * FROM person; 3、同时插入多条记录 【例7.5】在person表中，在id、name、age和info字段指定插入值，同时插入3条新记录，SQL语句如下： INSERT INTO person(id,name, age, info) VALUES (5,&#39;Evans&#39;,27, &#39;secretary&#39;), (6,&#39;Dale&#39;,22, &#39;cook&#39;), (7,&#39;Edison&#39;,28, &#39;singer&#39;); SELECT * FROM person; 【例7.6】在person表中，不指定插入列表，同时插入2条新记录，SQL语句如下： INSERT INTO person VALUES (8,&#39;Harry&#39;,21, &#39;magician&#39;), (9,&#39;Harriet&#39;,19, &#39;pianist&#39;); SELECT * FROM person; 【例7.7】从person_old表中查询所有的记录，并将其插入到person表中。首先，创建一个名为person_old的数据表，其表结构与person结构相同，SQL语句如下： CREATE TABLE person_old ( id INT NOT NULL, name CHAR(40) NOT NULL DEFAULT &#39;&#39;, age INT NOT NULL DEFAULT 0, info CHAR(50) NULL, PRIMARY KEY (id) ); 向person_old表中添加两条记录： INSERT INTO person_old VALUES (10,&#39;Harry&#39;,20, &#39;student&#39;), (11,&#39;Beckham&#39;,31, &#39;police&#39;); 查询插入的记录： SELECT * FROM person_old; INSERT INTO person(id, name, age, info) SELECT id, name, age, info FROM person_old; -- 语句执行完毕，查看执行结果： SELECT * FROM person; 更新数据【例7.8】在person表中，更新id值为10的记录，将age字段值改为15，将name字段值改为LiMing。更新操作执行前可以使用SELECT语句查看当前的数据： SELECT * FROM person WHERE id=10; 由结果可以看到更新之前，id等于10的记录的name字段值为harry，age字段值为20，下面使用UPDATE语句更新数据，语句执行结果如下： UPDATE person SET age = 15, name=&#39;LiMing&#39; WHERE id = 10; -- 语句执行完毕，查看执行结果： SELECT * FROM person WHERE id=10; 【例7.9】在person表中，更新age值为19到22的记录，将info字段值都改为student。更新操作执行前可以使用SELECT语句查看当前的数据： SELECT * FROM person WHERE age BETWEEN 19 AND 22; 可以看到，这些age字段值在19到22之间的记录的info字段值各不相同。下面使用UPDATE语句更新数据，语句执行结果如下： UPDATE person SET info=&#39;student&#39; WHERE age BETWEEN 19 AND 22; -- 语句执行完毕，查看执行结果： SELECT * FROM person WHERE age BETWEEN 19 AND 22; 删除数据【例7.10】在person表中，删除id等于10的记录，SQL语句如下：执行删除操作前使用SELECT语句查看当前id=10的记录： DELETE FROM person WHERE id = 10; -- 语句执行完毕，查看执行结果： SELECT * FROM person; 【例7.11】在person表中，使用DELETE语句同时删除多条记录，在前面UPDATE语句中将age字段值在19到22之间的记录的info字段值修改为student，在这里删除这些记录。 DELETE FROM person WHERE age BETWEEN 19 AND 22; 【例7.12】删除person表中所有记录。 DELETE FROM person; -- 语句执行完毕，查看执行结果： SELECT * FROM person;]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：六. PostgreSQL函数]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190811_%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[数学函数1、绝对值函数ABS(x)和返回圆周率函数PI() 【例6.1】求2，-3.3和-33的绝对值，输入语句如下： SELECT ABS(2), ABS(-3.3), ABS(-33); 【例6.2】返回圆周率值，输入语句如下： SELECT pi(); 2、平方根函数SQRT(x)和求余函数MOD(x,y) 【例6.3】求9，40和-49的二次平方根，输入语句如下： SELECT SQRT(9), SQRT(40); 【例6.4】对MOD(31,8)，MOD(234, 10)，MOD(45.5,6)进行求余运算，输入语句如下： SELECT MOD(31,8),MOD(234, 10),MOD(45.5,6); 3、获取整数的函数CEIL(x)、CEILING(x)、FLOOR(x) 【例6.5】使用CEIL和CEILING函数返回最小整数，输入语句如下： SELECT CEIL(-3.35),CEILING(3.35); FLOOR(x)返回不大于x的最大整数值，返回值转化为一个BIGINT。【例6.6】使用FLOOR函数返回最大整数，输入语句如下： SELECT FLOOR(-3.35), FLOOR(3.35); 4、四舍五入函数ROUND(x)和ROUND(x,y) 【例6.7】使用ROUND(x)函数对操作数进行四舍五入操作，输入语句如下： SELECT ROUND(-1.14),ROUND(-1.67), ROUND(1.14),ROUND(1.66); 【例6.8】使用ROUND(x,y)函数对操作数进行四舍五入操作，结果保留小数点后面指定y位，输入语句如下： SELECT ROUND(1.38, 1), ROUND(1.38, 0), ROUND(232.38, -1), ROUND (232.38,-2); 5、符号函数SIGN(x) 【例6.9】使用SIGN函数返回参数的符号，输入语句如下： SELECT SIGN(-21),SIGN(0), SIGN(21); 6、幂运算函数POW(x,y)、POWER(x,y)和EXP(x) 【例6.10】使用POW和POWER函数进行乘方运算，输入语句如下： SELECT POW(2,2), POWER(2,2),POW(2,-2), POWER(2,-2); 【例6.11】使用EXP函数计算e的乘方，输入语句如下： SELECT EXP(3),EXP(-3),EXP(0); 7、对数运算函数LOG(x) 【例6.12】使用LOG(x)函数计算自然对数，输入语句如下： SELECT LOG(3); 8、角度与弧度相互转换的函数RADIANS(x)和DEGREES(x) 【例6.13】使用RADIANS将角度转换为弧度，输入语句如下： SELECT RADIANS(90),RADIANS(180); 【例6.14】使用DEGREES将弧度转换为角度，输入语句如下： SELECT DEGREES(PI()), DEGREES(PI() / 2); 9、正弦函数SIN(x)和反正弦函数ASIN(x) 【例6.15】使用SIN函数计算正弦值，输入语句如下： SELECT SIN(1), ROUND(SIN(PI())); 【例6.16】使用ASIN函数计算反正弦值，输入语句如下： SELECT ASIN(0.8414709848078965); 10、余弦函数COS(x)反余弦函数ACOS(x) 【例6.17】使用COS函数计算余弦值，输入语句如下： SELECT COS(0),COS(PI()),COS(1); 【例6.18】使用ACOS计算反余弦值，输入语句如下： SELECT ACOS(1),ACOS(0), ROUND(ACOS(0.5403023058681398)); 11、正切函数、反正切函数和余切函数 【例6.19】使用TAN函数计算正切值，输入语句如下： SELECT TAN(0.3), ROUND(TAN(PI()/4)); 【例6.20】使用ATAN函数计算反正切值，输入语句如下： SELECT ATAN(0.30933624960962325), ATAN(1); 【例6.21】使用COT()函数计算正切值，输入语句如下， SELECT COT(0.3), 1/TAN(0.3),COT(PI() / 4); 字符串函数1、计算字符数的函数char_length(str)和字符串长度(length)的函数 【例6.21】使用CHAR_LENGTH函数计算字符串字符个数，输入语句如下： SELECT CHAR_LENGTH(&#39;date&#39;), CHAR_LENGTH(&#39;egg&#39;); 【例6.23】使用LENGTH函数计算字符串长度，输入语句如下： SELECT LENGTH(&#39;date&#39;), LENGTH(&#39;egg&#39;); 2、合并字符串CONCAT(s1,s2,…),CONCAT_WS(x,s1,s2,…) 【例6.24】使用CONCAT函数连接字符串，输入语句如下： SELECT CONCAT(&#39;PostgreSQL&#39;, &#39;9.15&#39;),CONCAT(&#39;Postgre&#39;,NULL, &#39;SQL&#39;); 【例6.25】使用CONCAT_WS函数连接带分隔符的字符串，输入语句如下： SELECT CONCAT_WS(&#39;-&#39;, &#39;1st&#39;,&#39;2nd&#39;, &#39;3rd&#39;), CONCAT_WS(&#39;*&#39;, &#39;1st&#39;, NULL, &#39;3rd&#39;); 3、获取指定长度的字符串的函数LEFT(s,n)和RIGHT(s,n) 【例6.26】使用LEFT函数返回字符串中左边的字符，输入语句如下： SELECT LEFT(&#39;football&#39;, 5); 【例6.27】使用RIGHT函数返回字符串中右边的字符，输入语句如下： SELECT RIGHT(&#39;football&#39;, 4); 4、填充字符串LPAD(s1,len,s2)和RPAD(s1,len,s2) 【例6.28】使用LPAD函数对字符串进行填充操作，输入语句如下： SELECT LPAD(&#39;hello&#39;,4,&#39;??&#39;), LPAD(&#39;hello&#39;,10,&#39;??&#39;); 【例6.29】使用LPAD函数对字符串进行填充操作，输入语句如下： SELECT RPAD(&#39;hello&#39;,4,&#39;?&#39;), RPAD(&#39;hello&#39;,10,&#39;?&#39;); 5、删除空格的函数LTRIM(s)、RTRIM(s)和TRIM(s) 【例6.30】使用LTRIM函数删除字符串左边的空格，输入语句如下： SELECT &#39;( book )&#39;,CONCAT(&#39;(&#39;,LTRIM(&#39; book &#39;),&#39;)&#39;); 【例6.31】使用LTRIM函数删除字符串右边的空格，输入语句如下： SELECT &#39;( book )&#39;,CONCAT(&#39;(&#39;, RTRIM (&#39; book &#39;),&#39;)&#39;); 【例6.32】使用TRIM函数删除指定字符串两端的空格，输入语句如下： SELECT &#39;( book )&#39;,CONCAT(&#39;(&#39;, TRIM(&#39; book &#39;),&#39;)&#39;); 6、删除指定字符串的函数TRIM(s2 from s) 【例6.33】使用TRIM(s1 FROM s)函数删除字符串中两端指定的字符，输入语句如下： SELECT TRIM(&#39;xy&#39; FROM &#39;xyboxyokxyxy&#39;) ; 7、重复生成字符串的函数REPEAT(s,n) 【例6.34】使用REPEAT函数重复生成相同的字符串，输入语句如下： SELECT REPEAT(&#39;PostgreSQL&#39;, 3); 8、替换函数REPLATE(s,s1,s2) 【例6.35】使用REPLACE函数进行字符串替代操作，输入语句如下： SELECT REPLACE(&#39;xxx.PostgreSQL.com&#39;, &#39;x&#39;, &#39;w&#39;); 9、获取指定子串的函数SUBSTRING(s,n,len) 【例6.36】使用SUBSTRING函数获取指定位置处的子字符串，输入语句如下： SELECT SUBSTRING(&#39;breakfast&#39;,5) AS col1, SUBSTRING(&#39;breakfast&#39;,5,3) AS col2, SUBSTRING(&#39;lunch&#39;, -3) AS col3, 10、匹配子串开始位置的函数POSITION(str1 in str) 【例6.37】使用POSITION函数查找字符串中指定子字符串的开始位置，输入语句如下： SELECT POSITION(&#39;ball&#39; IN &#39;football&#39;); 11、字符串逆序的函数REVERSE(s) 【例6.38】使用REVERSE函数反转字符串，输入语句如下： SELECT REVERSE(&#39;abc&#39;); 日期和时间函数1、获取当前日期的函数和当前时间的函数 【例6.39】使用日期函数获取系统当期日期，输入语句如下： SELECT CURRENT_DATE; 【例6.40】使用时间函数获取系统当期日期(返回时带时区)，输入语句如下： SELECT CURRENT_TIME; 【例6.41】使用时间函数获取系统当期日期(返回时不带时区)，输入语句如下： SELECT LOCALTIME; 2、返回当前日期和时间的函数 【例6.42】使用日期时间函数获取当前系统日期和时间，输入语句如下： SELECT CURRENT_TIMESTAMP,LOCALTIMESTAMP,NOW(); 3、获取指定值的日期 【例6.43】使用EXTRACT函数从月份中提取日期，输入语句如下： SELECT EXTRACT(DAY FROM TIMESTAMP &#39;2012-09-10 10:18:40&#39;); 【例6.44】使用EXTRACT函数从月份中提取月份，输入语句如下： SELECT EXTRACT(MONTH FROM TIMESTAMP &#39;2012-09-10 10:18:40&#39;); 【例6.45】使用EXTRACT函数从月份中提取年份，输入语句如下： SELECT EXTRACT(YEAR FROM TIMESTAMP &#39;2012-09-10 10:18:40&#39;); 【例6.46】使用EXTRACT函数查询指定日期是一年中的第几天，输入语句如下： SELECT EXTRACT(DOY FROM TIMESTAMP &#39;2012-09-10 10:18:40&#39;); 【例6.47】使用EXTRACT函数查询指定日期是一周中的星期几，输入语句如下： SELECT EXTRACT(DOW FROM TIMESTAMP &#39;2012-09-10 10:18:40&#39;); 【例6.48】使用EXTRACT函数查询指定日期是该年的第几季度(1-4)，输入语句如下： SELECT EXTRACT(QUARTER FROM TIMESTAMP &#39;2012-09-10 10:18:40&#39;); 4、日期和时间的运算操作 【例6.49】 计算指定日期加上间隔天数后的结果，输入语句如下： SELECT DATE &#39;2019-09-28&#39; + integer &#39;10&#39;; 【例6.50】 计算指定日期加上间隔小时后的结果，输入语句如下： SELECT DATE &#39;2012-09-28&#39; + interval &#39;3 hour&#39;; 【例6.51】 计算指定日期加上指定时间后的结果，输入语句如下： SELECT DATE &#39;2012-09-28&#39; + time &#39;06:00&#39;; 【例6.52】 计算指定日期和时间加上间隔时间后的结果，输入语句如下： SELECT TIMESTAMP &#39;2012-09-28 02:00:00&#39; + interval &#39;10 hours&#39;; 【例6.53】 计算指定日期之间的间隔天数，输入语句如下： SELECT date &#39;2012-11-01&#39; - date &#39;2012-09-10&#39;; 【例6.54】 计算指定日期减去间隔天数后的结果，输入语句如下： SELECT DATE &#39;2012-09-28&#39; - integer &#39;10&#39;; 【例6.55】 计算整数与天数相乘的结果，输入语句如下： SELECT 15 * interval &#39;2 day&#39;; 【例6.56】 计算整数与秒数相乘的结果，输入语句如下： SELECT 50 * interval &#39;2 second&#39;; 【例6.57】 计算小时数与整数相乘的结果，输入语句如下： SELECT interval &#39;1 hour&#39; / integer &#39;2&#39;; 条件判断函数1、CASE expr WHEN v1 THEN r1 [WHEN v2 THEN r2][ELSE rn] END;意思是如果expr的值等于某个vn，则返回对应位置THEN后面的结果，如果与所有值都不相等，则返回ELSE后面的rn。 【例6.58】使用CASE value WHEN语句执行分支操作，输入语句如下： SELECT CASE 2 WHEN 1 THEN &#39;one&#39; WHEN 2 THEN &#39;two&#39; ELSE &#39;more&#39; END; 2、CASE WHEN v1 THEN r1 [WHEN v2 THEN r2][ELSE rn] END; 【例6.59】使用CASE WHEN语句执行分支操作，输入语句如下： SELECT CASE WHEN 1&lt;0 THEN &#39;true&#39; ELSE &#39;false&#39; END; 系统信息函数1、获取PostgreSQL版本号 【例6.60】查看当前PostgreSQL版本号，输入语句如下： SELECT VERSION(); 2、获取用户名的函数 【例6.61】获取当前登陆用户名称，输入语句如下： SELECT USER, CURRENT_USER; 加密函数1、加密函数MD5(str) 【例6.62】使用MD5函数加密字符串，输入语句如下： SELECT MD5 (&#39;mypwd&#39;); 2、加密函数ENCODE(str,pswd_str) 【例6.63】使用ENCODE加密字符串，输入语句如下： SELECT ENCODE(&#39;secret&#39;,&#39;hex&#39;), LENGTH(ENCODE(&#39;secret&#39;,&#39;hex&#39;)); 3、解密函数DECODE(cypt_str,pswd_str) 【例6.64】使用DECODE函数解密被ENCODE加密的字符串，输入语句如下： SELECT DECODE(ENCODE(&#39;secret&#39;,&#39;hex&#39;),&#39;hex&#39;); 改变数据类型的函数CAST(x, AS type)函数将一个类型的值转换为另一个类型的值。 【例6.65】使用CAST函数进行数据类型的转换，将整数类型100转成两位字符串的类型10，SQL语句如下： SELECT CAST(100 AS CHAR(2)); 常见问题及解答疑问1：如何从日期时间值中获取年、月、日等部分日期或时间值？在PostgreSQL中，日期和时间是以字符串形式存储在数据表中，可以截取字符串，如dt = ‘2020-03-01 12:30:30’,则可以输入left(dt, 4)截取年份，输入mid(dt, 6, 2)截取月份，其他同理。 疑问2：如何计算年龄？年龄通过当前年龄减去出生年份来计算的。例如extract(year form m_birth)返回的结果是出生的年份，然后通过extract(year from current_date)获取当前年份，两者相减就是年龄。]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：五. 数据类型和运算符]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190810_%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6%2F</url>
    <content type="text"><![CDATA[PostgreSQL支持多种数据类型，主要有整数类型、浮点数类型、任意精度数值、日期/时间类型、字符串类型、二进制类型、布尔类型和数组类型等。 PostgreSQL数据类型介绍 1、数值类型：整数类型、浮点数类型、任意精度类型 1.整数类型整数类型包括：SMALLINT、INT(INTEGER)、BIGINT三种，三者在取值空间和存储范围上有所不同，不同的存储空间也决定了不同的查询效率。应根据实际需要选择最适合的类型，以在查询效率和存储空间上有所平衡。 2.浮点数类型实际工作中很多地方需要用到带小数的数值，PostgreSQL使用浮点数来表示小数。浮点数类型有两种：REAL和DOUBLE PRECISION。PostgreSQL也支持使用标准的SQL语法，即：float和float(p)来声明非精确的数值类型，p表示可接受的精度。REAL类型对应float(1)~float(24)，DOUBLE PRECISION对应float(25)~float(53)，未声明精度时将被当作DOUBLE PRECISION处理。 3.任意精度类型NUMERIC表示任意精度类型，PostgreSQL中任意精度类型可存储最多1000位精度的数字并且准确地进行计算，非常适合用于货币金额和其它要求计算准确的数据，但是，NUMERIC类型的运算速度要比整数类型或者浮点数类型要慢很多。使用格式为：NUMERIC(M,N)。其中，M称为精度，表示总位数；N称为标度，表示小数位。M和N决定了NUMERIC的取值范围，当用户数据的精度超出指定精度时，会进行四舍五入处理。 4.序号类型序号类型SERIAL和BIGSERIAL并不是真正的类型， 只是为在表中设置唯一标识做的概念上的便利。在目前的实现中，下面一句话： CREATE TABLE tablename (colname SERIAL); 等价于： CREATE SEQUENCE tablename_colname_seq; CREATE TABLE tablename( colname integer DEFAULT nextval(&#39;tablename_colname_seq&#39;) NOT NULL ); 类型名 SERIAL 和 SERIAL4 是等效的： 两个都创建 INTEGRE 字段。类型名 BIGSERIAL 和 SERIAL8 也一样，只不过它创建一个 BIGINT 字段。 如果你预计在表的生存期中使用的标识数目超过 2^31 ，那么你应该使用 BIGSERIAL。 2、日期时间类型 PostgreSQL保存日期时间格式的数据类型有多种，主要有：TIME、DATE、TIMESTAMP、INTERVAL。日期时间类型输入像字符串类型输入一样，需要加单引号。每种日期时间类型都有合法的取值范围，超出范围时系统会将”零”插入数据记录中。 1.时间类型时间类型是TIME和TIMEwith time zone，默认情况下为不带时区(即:TIME)。不带时区时间格式可接受输入方式有：HH:MM:SS、HH:MM、HHMMSS。带时间格式输入可用系统的NOW()函数。时间、时区输入参考如下。 时间输入：示例 描述04:05:06.789 ISO 860104:05:06 ISO 860104:05 ISO 8601040506 ISO 860104:05 AM 与 04:05 一样；AM 不影响数值04:05 PM 与 16:05一样；输入小时数必须 &lt;= 1204:05:06.789-8 ISO 860104:05:06-08:00 ISO 860104:05-08:00 ISO 8601040506-08 ISO 860104:05:06 PST 用名字声明的时区 时区输入：示例 描述PST 太平洋标准时间(Pacific Standard Time)-8:00 ISO-8601 与 PST 的偏移-800 ISO-8601 与 PST 的偏移-8 ISO-8601 与 PST 的偏移zulu 某军方对 UTC 的缩写z zulu的缩写 2.DATE类型DATE类型用于仅需要日期值时，日期输入格式为：YYYY-MM-DD、YYYYMMDD。输入DATE类型数据时，可以使用字符串或数字类型的数据输入，符合DATE的日期格式即可。可以使用CURRENT_DATE或NOW()插入当前系统时间。 3.TIMESTAMP类型时间戳类型的有效输入由一个日期和时间的联接组成，后面跟着一个可选的时区，一个可选的 AD 或者 BC。时间戳输入格式为：YYYY-MM-DD HH:MM:SS。带时区输入格式为：2019-03-22 4:05:06 -8:00 4.INTERVAL类型 INTERVAL类型输入格式如下：quantity unit [quantity unit…] [direction] quantity 是一个数字或符号； unit 是 second, minute, hour, day, week, month, year, decade, century, millennium, 或这些单位的缩写或复数； direction 可以是 ago 或者为空。符号 @ 是一个可选的东西。不同的单位以及相应正确的符号都是隐含地增加。 3、字符串类型、二进制类型 PostgreSQL支持两种字符型数据：文本字符串和二进制字符串。PostgreSQL提供了三种存储字符串的类型：char、varchar、text。bytea类型用于允许存储二进制字串。 1.char和varchar类型两种类型最多存储用户自定义长度N个字符。超出长度会产生错误，存储字符小于定义长度时，CHAR类型会用空格补满存储空间，VARCHAR类型只存储实际长度。 2.text类型TEXT不是标准的SQL类型，许多数据库系统都实现了这一类型，在PostgreSQL中，TEXT可存储任意长度的字符串。 3.bytea类型PostgreSQL提供了BYTEA类型，用于存储二进制字符串。BYTEA类型数据存储空间为用户实际二进制字符串加4字节。例如向file表file_byte字段插入E’\001’数据，SQL语句如下： INSERT INTO file file_byte VALUES (E&#39;\\001); 4、布尔类型、位串类型 PostgreSQL支持标准的 SQL boolean 数据类型，boolean值只能有两种： ‘真’(‘True’) 或 ‘假’(‘False’)。boolean有两种值外的第三种状态，’未知’(‘Unknow’)，用 SQL空状态表示。位串就是一串 1 和 0 的字符串。它们可以用于存储和视觉化位掩码。 布尔类型boolean类型存储空间为1字节，可接受的”真”值的有效文本输入值有：TRUE、’t’、’true’、’y’、’yes’、’1’。”假”值可接受的有效输入值有：FALSE、’f’、’false’、’n’、’no’、’0’。建议使用与SQL标准兼容的TRUE和FALSE做为boolean类型的输入值。查询时使用字母 t 和 f做为boolean型数据显示。 位串类型有两种类型的SQL位类型：bit(n) 和 bit varying(n)；bit类型的数据必须准确匹配长度n；bit varying类型数据是最大长度为n的变长类型；把一个位串值转换成bit(n)，那么它的右边将被截断或者在右边补齐零，以符合定义的n位长度，不会抛出任何错误。把一个位串数值转换成 bit varying(n)，如果它超过了n位，那么它的右边将被截断。示例：创建包括a(bit)，b(bit varying)两列表test，插入数据后执行查询，SQL语句如下： CREATE TABLE test (a bit(3), b bit varying(5)); INSERT INTO test VALUES (B&#39;101&#39;, B&#39;00&#39;); INSERT INTO test VALUES (B&#39;10&#39;::bit(3), B&#39;101&#39;); SELECT * FROM test; 5、数组类型 PostgreSQL 允许将字段定义成定长或不定长的多维数组，数组类型可以是任何基本类型或用户定义类型(复合类型和域的数组还不支持)。 数据类型定义数组类型定义是通过在数组元素类型名后面国方括号：[]来命名的。PostgreSQL目前的实现并不强制限制数组长度，即：声明长度和未声明长度的数组相同。也不强制数组维数，特定元素类型的数组都被认为是相同的类型，不管他们的大小或者维数。创建数组类型字段示例如下： CREATE TABLE array_tmp( name text, pay_by_quarter integer[], schedule text[][], squares integer[3][3] --指定长度后仍然不会限制长度 ); 数组类型数据插入数组类型数据插入用大括号把值括起来并且用逗号将它们分开。可以在任意数组值周围添加双引号，如果值包含逗号或者花括弧，必须加上双引号输入。数据类型数据插入，还可以使用ARRAY构造器。示例如下： INSERT INTO array_tmp VALUES( &#39;freeoa&#39;, &#39;{1,2,3,4}&#39;, &#39;{{"include {"},{"2value"}}&#39;, &#39;{{111,122},{211, 222}}&#39;); INSERT INTO array_tmp VALUES ( &#39;liuht&#39;, ARRAY[1,2,3,4], ARRAY[[&#39;value 11&#39;, &#39;value 12&#39;], [&#39;value 21&#39;, &#39;value 22&#39;]], ARRAY[[111,122],[211, 222]]); --使用ARRAY构造器 数组类型数据的查询和其他语言一样，PostgreSQL中数组也是通过下标数字的方式进行访问，只是PostgreSQL中数组元素的下标是从1开始n结束，格式如：[n]。对于一维或更多维数组，查询一个数组的部分数据查询格式为：[脚标界上:脚标下界]。 -- 数组下标定位查询及返回结果： SELECT name, schedule FROM array_tmp WHERE schedule[1][1]=&#39;value 11&#39;; -- 查询多维数据的部分数据， -- 如查询单维字段pay_by_quarter的第2,3列数据，及多维列schedule的第1维的1列数据和第2维第一列数据。SQL语句及查询结果如下： SELECT pay_by_quarter[2:3],schedule[1:2][1:1] FROM array_tmp; 6、复合类型 PostgreSQL复合类型描述一行或者一条记录的结构，实际上它只是一个字段名和它们的数据类型的列表。在PostgreSQL中你可以像使用简单数据类型那样使用复合类型。 常见数据类型总结表： 类型名称 存储空间 数据范围 说明 案例 SMALLINT 2字节 -32768~32767 小范围整型 如：例5.1 INT(INTEGER) 4字节 －2147483648〜2147483647 普通整型 BIGINT 8字节 -9223372036854775808〜9223372036854775807 大整数 REAL 4字节 6位十进制数字精度 浮点数类型 如：例5.2 DOUBLE PRECISION 8字节 15位十进制数字精度 双精度浮点数类型 NUMERIC(M,N) 变长 任意 任意精度类型 如：例5.3 SERIAL 4字节 1 ~ +2147483647 自增整数 BIGSERIAL 8字节 1 ~ +9223372036854775807 大范围的自增整数 TIME 8字节 00:00:00 ~ 24:00:00 时间类型(只用于一天内的时间)［无时区］ 如：例5.4和例5.5，5.6 TIME[with time zone] 12字节 00:00:00+1359~24:00:00-1359 时间类型(只用于一天内的时间)［含时区］ 例5.11 DATE 4字节 4713 BC~32767 AD 只用于一天的日期 如：例5.7，5.8，5.9 TIMESTAMP 8字节 4713 BC~5874897 AD 日期和时间［无时区］ 1毫秒/14位 如：例5.10 TIMESTAMP[with time zone] 8字节 4713 BC~5874897 AD 日期和时间［含时区］ INTERVAL 12字节 -178000000年~178000000年 时间间隔(1毫秒/14位) 4字节 YYYY-MM-DD或YYYYMMDD 日期类型 如：例5.7，5.8，5.9 char(n)/character(n) 用户定义 定长，有长度限制 varchar(n)/character varying(n) 用户定义 变长，有长度限制 如：例5.12 text 实际长度 变长，无长度限制 如：例5.13 tytea 4字节加上实际的二进制字串 变长，无长度限制 如：例5.14 boolean 1字节 ‘真’(‘True’) 或 ‘假’(‘False’) 如：例5.15 数据类型案例SQL案例：【例5.1】创建表tmp1，其中字段x，y，z，数据类型依次为SMALLINT、INT、BIGINT,SQL语句如下： CREATE TABLE tmp1 (x SMALLINT, y INT, z BIGINT ); 【例5.2】创建表tmp2，其中字段x，y，z数据类型依次为FLOAT(5)、REAL和DOUBLE PRECISION，SQL语句如下： CREATE TABLE tmp2 (x FLOAT(5), y REAL, z DOUBLE PRECISION ); 【例5.3】创建表tmp3，其中字段x，y数据类型依次为NUMERIC(5,1) 和NUMERIC (5,2)和，向表中插入数据9.12、9.15，SQL语句如下： CREATE TABLE tmp3 ( x NUMERIC (5,1), y NUMERIC (5,2)); 向表中插入数据的SQL语句如下： INSERT INTO tmp3 VALUES(9.12, 9.15); 查看表中的数据的SQL语句,可以看到PostgreSQL对插入的数据9.12进行了四舍五入的处理。【例5.4】创建数据表tmp4，定义数据类型为TIME的字段t，向表中插入值‘10:05:05’，‘23:23’。首先创建表tmp4，SQL语句如下： CREATE TABLE tmp4( t TIME ); 向表中插入数据，SQL语句如下： INSERT INTO tmp4 values(&#39;10:05:05 &#39;), (&#39;23:23&#39;); 【例5.5】表tmp4中插入值‘101112’，SQL语句如下：向表中插入数据，SQL语句如下： INSERT INTO tmp4 values(&#39;101112&#39;); 也可以使用系统日期函数向TIME字段列插入值。【例5.6】向tmp4表中插入系统当前时间，SQL语句如下：由于由时间函数获得的时间是带时区的，所以需要先将字段属性修改为带时区类型的时间： ALTER TABLE tmp4 ALTER COLUMN t TYPE time without time zone; 删除表中的数据： DELETE FROM tmp4; 向表中插入数据，SQL语句如下： INSERT INTO tmp4 values (CURRENT_TIME) ,(NOW()); 【例5.7】创建数据表tmp5，定义数据类型为DATE的字段d，向表中插入“YYYY-MM-DD”和“YYYYMMDD”字符串格式日期，SQL语句如下：首先创建表tmp5： CREATE TABLE tmp5(d DATE); 向表中插入“YYYY-MM-DD“和“YYYYMMDD”格式日期： INSERT INTO tmp5 values(&#39;1998-08-08&#39;),(&#39;19980808&#39;),(&#39;20101010&#39;); 【例5.8】向tmp5表中插入“YY-MM-DD“和“YYMMDD”字符串格式日期，SQL语句如下：首先删除表中的数据： DELETE FROM tmp5; 向表中插入“YY-MM-DD“和“YYMMDD”格式日期： INSERT INTO tmp5 values(&#39;99-09-09&#39;),( &#39;990909&#39;), ( &#39;000101&#39;) ,( &#39;121212&#39;); 【例5.9】向tmp5表中插入系统当前日期，SQL语句如下：首先删除表中的数据： DELETE FROM tmp5; 向表中插入系统当前日期： INSERT INTO tmp5 values(NOW() ); NOW()函数返回日期和时间值，在保存到数据库时，只保留了其日期部分。TIMESTAMP的日期格式为YYYY-MM-DD HH:MM:SS。在存储时需要8个字节，因此在插入数据时，要保证在合法的取值范围内。【例5.10】创建数据表tmp7，定义数据类型为TIMESTAMP的字段ts，向表中插入值 ‘1996-02-02 02:02:02’，NOW()，SQL语句如下：创建数据表和字段： CREATE TABLE tmp7( ts TIMESTAMP); 向表中插入数据： INSERT INTO tmp7 values (&#39;1996-02-02 02:02:02&#39;), ( NOW() ); 【例5.11】创建数据表tmp7h，定义数据类型为TIME的字段th，向表中插入值‘10:05:05’，‘23:23’。首先创建表tmp7h，SQL语句如下： CREATE TABLE tmp7h( t TIME with time zone); 向表中插入数据，SQL语句如下： INSERT INTO tmp7h values(&#39;10:05:05 PST &#39;), (&#39;10:05:05&#39;); 【例5.12】创建tmp8表，定义字段ch和vch数据类型依次为CHARACTER（4）、CHARACTER VARYING（4），向表中插入不同长度的字符串，SQL语句如下：创建表tmp8： CREATE TABLE tmp8( ch CHARACTER (4), vch CHARACTER VARYING (4) ); 输入数据： INSERT INTO tmp8 VALUES(&#39;ab&#39;, &#39;ab&#39;), (&#39;abcd&#39;, &#39;abcd&#39;), (&#39;ab &#39;, &#39;ab &#39;); 查询结果： SELECT concat(&#39;(&#39;, ch, &#39;)&#39;), concat(&#39;(&#39;,vch,&#39;)&#39;) FROM tmp8; 【例5.13】创建tmp9表，定义字段te数据类型依次为TEXT，向表中插入不同长度的字符串，SQL语句如下：创建表tmp9： CREATE TABLE tmp9(te TEXT); 输入数据： INSERT INTO tmp9 VALUES(&#39;ab&#39;),(&#39;abcd&#39;),(&#39;ab &#39;); 查询结果： SELECT concat(&#39;(&#39;, te, &#39;)&#39;) FROM tmp9; 【例5.15】创建表tmp11，定义BYTEA类型的字段b，向表中插入布尔型数据“TRUE”和“FALSE”。首先创建表tmp11，SQL语句如下： CREATE TABLE tmp11( b BOOLEAN ); 插入数据： INSERT INTO tmp11 VALUES(TRUE), (FALSE), (&#39;y&#39;), (&#39;no&#39;), (&#39;0&#39;); 【例5.16】创建表tmp12，定义数组类型的字段bt，向表中插入一些数组数值。首先创建表tmp12，SQL语句如下： CREATE TABLE tmp12( bt int[]); 插入数据： INSERT INTO tmp12 VALUES(&#39;{{1,1,1},{2,2,2},{3,3,3}}&#39;); 常见运算符介绍1、算数运算符：包括加（+），减（-），乘（*），除（/），求余（或模运算，%，返回余数）例5.16】创建表tmp14，定义数据类型为INT的字段num，插入值64，对num值进行算术运算：首先创建表tmp14，输入语句如下： CREATE TABLE tmp14 ( num INT); 向字段num插入数据64： INSERT INTO tmp14 VALUES (64); 接下来，对num值进行加法和减法运算： SELECT num, num+10, num-10, num+5-3, num+36.5 FROM tmp14; 【例5.17】对tmp14表中的num进行乘法，除法运算。 SELECT num, num *2, num /2, num/3, num%3 FROM tmp14; 【例5.18】用0除num。 SELECT num, num / 0, num %0 FROM tmp14; 2、比较运算符： 运算符 作用 案例 = 等于 如：例5.19 &lt;&gt;(!=) 不等于 如：例5.20 &lt;= 小于等于 如：例5.21 &gt;= 大于等于 如：例5.23 &lt; 小于 如：例5.22 &gt; 大于 如：例5.24 LEAST 有两个或多个参数时，返回最小值 如：例5.27 GREATEST 有两个或多个参数时，返回最大值 如：例5.28 BETWEEN…AND… 判断一个值是否在两个值中间 如：例5.25，5.26 IN（NOT IN） 判断一个值是IN列表中的任意一个值 如：例5.29，5.30，5.31 LIKE 通配符匹配 如：例5.32 【例5.19】使用“=”进行相等判断，SQL语句如下： SELECT 1=0, &#39;2&#39;=2, 2=2,&#39;b&#39;=&#39;b&#39;, (1+3) = (2+1),NULL=NULL; 【例5.20】使用‘&lt;&gt;’和‘!=’进行不相等的判断，SQL语句如下： SELECT &#39;good&#39;&lt;&gt;&#39;god&#39;, 1&lt;&gt;2, 4!=4, 5.5!=5, (1+3)!=(2+1),NULL&lt;&gt;NULL; 【例5.21】使用‘&lt;=’进行比较判断，SQL语句如下： SELECT &#39;good&#39;&lt;=&#39;god&#39;, 1&lt;=2, 4&lt;=4, 5.5&lt;=5, (1+3) &lt;= (2+1),NULL&lt;=NULL; 【例5.22】使用‘&lt;’进行比较判断，SQL语句如下： SELECT &#39;good&#39;&lt;&#39;god&#39;, 1&lt;2, 4&lt;4, 5.5&lt;5, (1+3) &lt; (2+1),NULL&lt;NULL; 【例5.23】使用‘&gt;=’进行比较判断，SQL语句如下： SELECT &#39;good&#39;&gt;=&#39;god&#39;, 1&gt;=2, 4&gt;=4, 5.5&gt;=5, (1+3) &gt;= (2+1),NULL&gt;=NULL; 【例5.24】使用‘&gt;’进行比较判断，SQL语句如下： SELECT &#39;good&#39;&gt;&#39;god&#39;, 1&gt;2, 4&gt;4, 5.5&gt;5, (1+3) &gt; (2+1),NULL&gt;NULL; 【例5.25】使用BETWEEN AND 进行值区间判断，输入SQL语句如下： SELECT 4 BETWEEN 2 AND 5, 4BETWEEN 4 AND 6,12 BETWEEN 9 AND 10; 【例5.26】使用BETWEEN AND 进行字符串的比较，输入SQL语句如下： SELECT &#39;x&#39; BETWEEN &#39;f&#39; AND &#39;g&#39;, &#39;b&#39; BETWEEN &#39;a&#39; AND &#39;c&#39;; 【例5.27】使用LEAST运算符进行大小判断，SQL语句如下： SELECT least(2,0), least(20.0,3.0,100.5), least(&#39;a&#39;,&#39;c&#39;,&#39;b&#39;),least(10,NULL); 【例5.28】使用GREATEST运算符进行大小判断，SQL语句如下： SELECT greatest(2,0), greatest(20.0,3.0,100.5), greatest(&#39;a&#39;,&#39;c&#39;,&#39;b&#39;),greatest(10,NULL); 【例5.29】使用NOT IN运算符进行判断，SQL语句如下： SELECT 2 IN (1,3,5,9), &#39;thks&#39; IN (&#39;lius&#39;,&#39;thks&#39;); 例5.30】使用NOT IN运算符进行判断，SQL语句如下： SELECT 2 NOT IN (1,3,5), &#39;thks&#39; NOT IN (&#39;jsi&#39;,&#39;thks&#39;); 【例5.31】存在NULL值时的IN运算，SQL语句如下： SELECT NULL IN (1,3,null),&#39;abc&#39; IN (&#39;abc&#39;, null, &#39;ded&#39;); 【例5.32】使用运算符LIKE进行字符串匹配运算，SQL语句如下： -- %匹配任何数目的字符；_只能匹配一个字符 SELECT &#39;stud&#39; LIKE &#39;stud&#39;, &#39;stud&#39; LIKE &#39;stu_&#39;,&#39;stud&#39; LIKE &#39;%d&#39;,&#39;stud&#39; LIKE &#39;t___&#39;, &#39;s&#39; LIKE NULL; 3、逻辑运算符| 运算符 | 作用 | 案例 || — | — | — || NOT | 逻辑非 | 如：例5.33 || AND | 逻辑与 | 如：例5.34 || OR | 逻辑或 | 如：例5.35 | 【例5.33】分别使用非运算符“NOT”进行逻辑判断，SQL语句如下： SELECT NOT &#39;1&#39;, NOT &#39;y&#39;, NOT &#39;0&#39;, NOT NULL, NOT &#39;n&#39;; 【例5.34】分别使用与运算符“AND”进行逻辑判断，SQL语句如下： SELECT &#39;1&#39;AND &#39;y&#39;,&#39;1&#39;AND &#39;0&#39;,&#39;1&#39;AND NULL, &#39;0&#39;AND NULL; 【例5.35】使用或运算符“OR”进行逻辑判断，SQL语句如下： SELECT &#39;1&#39; OR &#39;t&#39; OR &#39;0&#39;, &#39;1&#39;OR &#39;y&#39;,&#39;1&#39; OR NULL, &#39;0&#39;OR NULL, NULL OR NULL; 常见问题及解答疑问1：PostgreSQL可以存储文件吗？ PostgreSQL中的TEXT字段可以存储数据量较大的文件，可以使用这些数据类型存储图像，声音或者是大容量的文本内容，例如网页或者文档。但是对这些字段的处理会降低数据库的性能，如果不是非必要，可以选择只存储文件的路径。]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：三. 数据库的基本操作]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190808_%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[创建数据库【例3.1】创建一个数据库名称为sample_db，数据库的属性参数采用默认的设置。 CREATE DATABASE sample_db; 修改数据库属性【例3.2】修改test数据库的名字和拥有者，输入语句如下： ALTER DATABASE mytest RENAME TO mytest1; ALTER DATABASE mytest1 OWNER TO postgres1; 删除数据库【例3.3】删除mytest1数据库，输入语句如下： DROP DATABASE mytest1; 综合案例-数据库的创建和删除 数据库的基本操作流程：步骤1：登录数据库。启动pgAdmin 4，输入密码连接服务器。步骤2：创建数据库zoo，执行过程如下。CREATE DATABASE zoo;命令执行后，刷新数据库，即可看到新创建的数据库zoo，表明语句成功执行。步骤3：选择当前数据库为zoo，右击并在弹出的快捷菜单中选择【属性】菜单命令，即可在打开的对话框中查看数据库的属性。步骤4：修改数据库的连接最大值为10，输入以下SQL语句。ALTER DATABASE zoo WITH CONNECTION LIMIT = 10;步骤5：SQL语句执行后，选择当前数据库为zoo，右击并在弹出的快捷菜单中选择【属性】菜单命令，在打开的对话框中选择【定义】选项卡，即可看到连接限制数被修改为10。步骤6：删除数据库zoo，执行SQL语句如下。DROP DATABASE zoo;语句执行完毕，将数据库zoo从系统中删除。 常见问题及解答]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL：二. PostgreSQL 11 的安装与配置]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190807_%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[安装与启动PostgreSQL 11安装与配置可参考官网：https://www.pgadmin.org/ Linux系统下安装Postgresql 11 Linux操作系统的发行版比较多。本章节以常用的Linux系统CentOS 7操作系统为例，讲解如何安装Postgresql 11。步骤1：创建postgres用户。[root@VMTest postgresql11]# useradd -g postgres post123步骤2：下载rpm离线安装包。下载地址如下：https://download.postgresql.org/pub/repos/yum/11/redhat/rhel-7-x86_64/需要下载的安装包如下：postgresql11-11.2-1PGDG.rhel7.x86_64.rpmpostgresql11-libs-11.2-1PGDG.rhel7.x86_64.rpmpostgresql11-server-11.2-1PGDG.rhel7.x86_64.rpm步骤3：使用rpm -ivh安装Postgresql 11的rpm包。[root@VMTest ~]# cd /home/lpf/soft/postgresql11/ #安装包存放路径[root@VMTest ~]# systemctl start postgresql-11 #启动postgresq步骤4：如果要卸载Postgresql 11，则需要先停止Postgresql服务，然后执行以下命令即可：[root@VMTest ~]# rpm -qe postgresql11-libs-11.2-1PGDG.rhel7.x86_64[root@VMTest ~]# rpm -qe postgresql11-11.2-1PGDG.rhel7.x86_64[root@VMTest ~]# rpm -qe postgresql11-server-11.2-1PGDG.rhel7.x86_64步骤5：初始化数据库。[root@VMTest ~]# /usr/pgsql-11/bin/postgresql-11-setup initdbInitializing database … OK步骤6：设置开机启动数据库。[root@VMTest ~]# systemctl enable postgresql-11 #设置开机启动[root@VMTest ~]# systemctl start postgresql-11 #启动postgresq 常见问题及解答]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL介绍]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190806_postgresql%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[数据库基础数据库（DataBase，DB）是一个长期存储在计算机内的、有组织的、有共享的、统一管理的数据集合。它是一个按数据结构来存储和管理数据的计算机软件系统。即数据库包含两层含义：保管数据的“仓库”以及数据管理的方法和技术。 数据库的特点包括： 实现数据共享，减少数据冗余 采用特定的数据类型； 具有较高的数据独立性； 具有统一的数据控制功能。 表：在关系数据库中，数据库表是一系列二维数组的集合，用来存储数据和操作数据的逻辑结构。它由纵向的列和横向的行组成，行被称为记录，是组织数据的单位；列被称为字段，每一列表示记录的一个属性，都有相应的描述信息，如数据类型、数据宽度等。 数据类型：决定了数据在计算机中的存储格式，代表不同的信息类型。常用的数据类型有：整数数据类型，浮点数数据类型，精确小数类型，二进制数据类型，日期/时间数据类型，字符串数据类型。 主键（PRIMARY KEY）又称主码，用于唯一地标识表中得每一条记录。可以定义表中的一列或多列为主键，主键列上没有两行相同的值，也不能为空值。假如，下表给每一个作者分配一个“编号”，该编号作为表数据表的主键，如果出现相同的值，将提示错误，系统不能确定查询的究竟是哪一条记录；如果把作者的“姓名”作为主键，则不能出现重复的名字，这与现实不相符合，因此“姓名”字段不适合做为主键。 什么是开源：PostgreSQL是一个开源数据库管理系统，那么什么是开源呢？开源是开放源码的简称，是被非赢利软件组织（美国的Open Source Initiative协会）注册为认证标记，并对其进行了正式的定义，用于描述那些源码可以被公众使用的软件，并且此软件的使用、修改和发行也不受许可证的限制。这意味着软件在提供的时候，同时提供了源码。开源许可赋予用户使用、修改和重新发布它而不需要付许可费用的权力。 数据库技术构成数据库技术构成： 数据库系统 SQL语言 数据库访问技术 1.数据库系统有3个主要的组成部分。 ⑴ 数据库：用于存储数据的地方。⑵ 数据库管理系统：用于管理数据库的软件。⑶ 数据库应用程序：为了提高数据库系统的处理能力所使用的管理 数据库的软件补充。 2.sql语言对数据库进行查询和修改操作的语言叫做SQL。SQL的含义是结构化查询语言。SQL语言包含4个部分。⑴ 数据定义语言（DDL）：DROP、CREATE、ALTER等语句。⑵ 数据操作语言（DML）：INSERT（插入）、UPDATE（修改）、DELETE（删除）语句。⑶ 数据查询语言（DQL）：SELECT语句。⑷ 数据控制语言（DCL）：GRANT、REVOKE、COMMIT、ROLLBACK等语句。 3.数据库访问技术 ODBC JDBC ADO.NET PDO 什么是PostgreSQL1.客户机-服务器软件服务器是整个应用系统资源的存储与管理中心，多个客户端则各自处理相应的功能，共同实现完整的应用。在客户/服务器结构中，客户端用户的请求被传送到数据库服务器，数据库服务器进行处理后，将结果返回给用户，从而减少了网络数据传输量。用户使用应用程序时，首先启动客户端通过有关命令告知服务器进行连接以完成各种操作，而服务器则按照此请示提供相应的服务。每一个客户端软件的实例都可以向一个服务器或应用程序服务器发出请求。 2.PostgreSQL发展历程PostgreSQL的发展历程可以追溯到1986年，加州大学伯克利分校开发一个名叫Postgres的关系数据库服务器。到了1994年，向Postgres 中增加了SQL语言的解释器，命名为Postgres95，并随后将其源代码发布到互联网上供大家使用，成为一个开放源码的数据库管理系统。到了1996年，Postgres95名称被更改为PostgreSQL，表示它支持查询语言标准，同时版本号也重新从6.0开始。自从版本6.0之后，出现了很多后续发行，在系统中也出现了很多改进。2016年9月29日，PostgreSQL全球开发组发布PostgreSQL 9.6版本，该版本允许用户纵向扩展和横向扩展来提高数据库的查询性能，同时增加了并行查询、同步复制改进、短语搜索等功能，从而使复制、聚合、索引、排序等过程变得更加高效，使其性能和可用性得到极大提高。2018年10月18日，PostgreSQL全球开发组发布PostgreSQL 11版本。 3.PostgreSQL的优势⑴ 价格⑵ 速度⑶ 容易使用⑷ 可移植性⑸ 丰富的接口⑹ 支持查询语言⑺ 相互配合的开源软件较多⑻ 安全性和连接性 网站参考 PostgreSQL中文网：http://www.postgres.cn/v2/home 源码简书：https://www.jianshu.com/p/53fe4d9475e0 个人博客参考：https://postgres.fun/20100802210528.html PostgreSQL Tutorial：https://www.postgresqltutorial.com/ 源码下载：https://git.postgresql.org/gitweb/?p=postgresql.git;a=summary 线上源码：https://doxygen.postgresql.org/ginbtree_8c.html]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PostgreSQL介绍]]></title>
    <url>%2F2019%2F08%2Fdatabase%2FPostgreSql%2F20190809_%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[创建数据表下面的案例是如何添加主键约束，外键约束，唯一约束，非空约束，默认约束等； 1.使用主键约束：有单字段主键，多字段联合主键；【例1】定义数据表tb_emp1，假设表中间没有主键id，为了唯一确定一个员工，可以把name、deptId联合起来做为主键，SQL语句如下： CREATE TABLE tb_emp1 ( name VARCHAR(25), deptId INT, salary FLOAT, PRIMARY KEY(name,deptId) ); 2.使用外键约束：【例2】创建一个部门表tb_dept1，名称不能为空，SQL语句如下： CREATE TABLE tb_dept2 ( id int PRIMARY KEY, name VARCHAR(22) NOT NULL, location VARCHAR(50) ); 定义数据表tb_emp2，让它的键deptId作为外键关联到tb_dept2的主键id，SQL语句为： CREATE TABLE tb_emp2 ( id INT PRIMARY KEY, name VARCHAR(25), deptId INT, salary FLOAT, CONSTRAINT fk_emp_dept2 FOREIGN KEY(deptId) REFERENCES tb_dept1(id) ); 3.使用唯一约束【例3】定义数据表tb_dept2，指定部门的名称唯一，SQL语句如下： CREATE TABLE tb_dept2 ( id INT PRIMARY KEY, name VARCHAR(22) UNIQUE, location VARCHAR(50) ); 在定义完所有列之后指定唯一约束，语法规则如下：[CONSTRAINT &lt;约束名&gt;] UNIQUE(&lt;字段名&gt;)【例4】定义数据表tb_dept3，指定部门的名称唯一，SQL语句如下： CREATE TABLE tb_dept3 ( id INT PRIMARY KEY, name VARCHAR(22), location VARCHAR(50), CONSTRAINT STH UNIQUE(name) ); 4.非空约束和默认约束【例5】定义数据表tb_emp7，指定员工的部门编号默认为1111，SQL语句如下：CREATE TABLE tb_emp7(id INT PRIMARY KEY,name VARCHAR(25) NOT NULL,deptId INT DEFAULT 1111,salary FLOAT,CONSTRAINT fk_emp_dept3 FOREIGN KEY (deptId) REFERENCES tb_dept1(id)); 修改数据表【例4.6】将数据表tb_dept3改名为tb_department3。 ALTER TABLE tb_dept3 RENAME TO tb_department3; 【例4.7】将数据表tb_dept1中name字段的数据类型由VARCHAR(22)的修改成VARCHAR(30)。 ALTER TABLE tb_dept1 ALTER COLUMN name TYPE VARCHAR(30); 【例4.8】将数据表tb_dept1中的location字段名称改为loc，数据类型保持不变，SQL语句如下： ALTER TABLE tb_dept1 RENAME location TO loc; 【例4.9】在数据表tb_dept1中添加一个没有完整性约束的INT类型的字段managerId（部门经理编号），SQL语句如下： ALTER TABLE tb_dept1 ADD COLUMN managerId INT; 【例4.10】在数据表tb_dept1中添加一个不能为空的VARCHAR(12)类型的字段column1，SQL语句如下： ALTER TABLE tb_dept1 ADD COLUMN column1 VARCHAR(12) not null; 删除数据表删除字段的语法格式如下：ALTER TABLE &lt;表名&gt; DROP &lt;字段名&gt;;“字段名”指需要从表中删除的字段的名称。【例1】删除数据表tb_dept1表中的managerid字段。 ALTER TABLE tb_dept1 DROP managerid; 【例2】删除数据表tb_emp9中的外键约束。首先创建表tb_emp9，创建外键deptId关联tb_dept1表的主键id，SQL语句如下： CREATE TABLE tb_emp9 ( id INT PRIMARY KEY, name VARCHAR(25), deptId INT, salary FLOAT, CONSTRAINT fk_emp_dept FOREIGN KEY (deptId) REFERENCES tb_dept1(id) ); ALTER TABLE tb_emp9 DROP CONSTRAINT fk_emp_dept; 【例3】删除数据表tb_dept2，SQL语句如下： DROP TABLE IF EXISTS tb_dept2; 语句执行完毕之后，数据表列表中已经不存在名称为tb_dept2的表，删除操作成功。在数据库中创建两个关联表，首先，创建表tb_dept2，SQL语句如下： CREATE TABLE tb_dept2 ( id INT PRIMARY KEY, name VARCHAR(22), location VARCHAR(50) ); 接下来创建表tb_emp，SQL语句如下： CREATE TABLE tb_emp ( id INT PRIMARY KEY, name VARCHAR(25), deptId INT, salary FLOAT, CONSTRAINT fk_emp_dept FOREIGN KEY (deptId) REFERENCES tb_dept2(id) ); 首先直接删除父表tb_dept2，输入删除语句如下： DROP TABLE tb_dept2; 接下来，解除关联子表tb_emp的外键约束，SQL语句如下： ALTER TABLE tb_emp DROP CONSTRAINT fk_emp_dept; 语句成功执行后，将取消表tb_enp和表tb_dept2之间的关联关系，此时，可以输入删除语句，将原来的父表tb_dept2删除，SQL语句如下： DROP TABLE tb_dept2; PostgreSQL 11新特性-新增带默认值的字段不在重写数据表步骤1：新增测试数据表tt，语句如下： CREATE TABLE tt(id int, name text); 步骤2：插入500万行测试数据，语句如下： INSERT INTO t1 (id,name ) SELECT n, n || &#39;_ALTER TABLE TEST &#39; FROM generate_series (1,5000000) n; 步骤3：查看数据表tt的relfilenode和relpages信息，语句如下： SELECT relname,relfilenode, relpages FROM pg_class WHERE relname=&#39;tt&#39;; 步骤4：新增带默认值的字段ffname，语句如下： ALTER TABLE tt ADD COLUMN ffname text DEFAULT &#39;默认值&#39;; 步骤5：再次查看数据表tt的relfilenode和relpages信息，语句如下： SELECT relname,relfilenode, relpages FROM pg_class WHERE relname=&#39;tt&#39;; 从结果可以看出，relfilenode和relpages的数据并没有发生变化 综合案例-数据表的基本操作步骤1：登录数据库。启动pgAdmin 4，输入密码连接服务器。步骤2：创建数据库company，执行过程如下。 CREATE DATABASE company; 步骤3：创建表offices。创建表offices的语句如下： CREATE TABLE offices ( officeCode INT NOT NULL UNIQUE, city VARCHAR(50) NOT NULL, address VARCHAR(50) NOT NULL, country VARCHAR(50) NOT NULL, postalCode VARCHAR(15) NOT NULL, PRIMARY KEY (officeCode) ); 步骤4 创建表employees。创建表employees的语句如下： CREATE TABLE employees ( employeeNumber INT NOT NULL PRIMARY KEY, lastName VARCHAR(50) NOT NULL, firstName VARCHAR(50) NOT NULL, mobile VARCHAR(25) NOT NULL, officeCode INT NOT NULL, jobTitle VARCHAR(50) NOT NULL, birth DATE, note VARCHAR(255), sex VARCHAR(5), CONSTRAINT office_fk FOREIGN KEY(officeCode) REFERENCES offices(officeCode) ); 步骤5：将表employees的birth字段改名为employee_birth。修改字段名，需要用到ALTER TABLE语句，输入语句如下： ALTER TABLE employees RENAME birth TO employee_birth; 步骤6：修改sex字段，数据类型为CHAR(1)，非空约束。修改字段数据类型，需要用到ALTER TABLE语句，输入语句如下： ALTER TABLE employees ALTER COLUMN sex TYPE CHAR(1); 步骤7：修改sex字段为非空约束。 ALTER TABLE employees ALTER COLUMN sex SET NOT NULL; 步骤8：删除字段note。删除字段，需要用到ALTER TABLE语句，输入语句如下： ALTER TABLE employees DROP note; 步骤9：增加字段名favoriate_activity，数据类型为VARCHAR(100)。增加字段，需要用到ALTER TABLE语句，输入语句如下： ALTER TABLE employees ADD COLUMN favoriate_activity VARCHAR(100); 步骤10：删除表offices。在创建表employees表时候，设置了表的外键，该表关联了其父表的officeCode主键，如前面所述，删除关联表时，要先删除子表employees的外键约束，才能删除父表，因此，必须先删除employees表的外键约束。1）删除employees表的外键约束，输入如下语句： ALTER TABLE employees DROP CONSTRAINT office_fk; 其中office_fk为employees表的外键约束的名称，语句执行成功后，即可删除offices父表。2）删除表offices，输入如下语句： DROP TABLE offices; 步骤11：将表employees名称修改为employees_info。修改数据表名，需要用到ALTER TABLE语句，输入语句如下： ALTER TABLE employees RENAME TO employees_info; 常见问题及解答]]></content>
      <categories>
        <category>数据处理</category>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>数据处理</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-各种查找]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F11_%E7%AE%97%E6%B3%95-%E5%90%84%E7%A7%8D%E6%9F%A5%E6%89%BE%2F</url>
    <content type="text"><![CDATA[查找定义：根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素（或记录）。 平均查找长度（Average Search Length，ASL）：需和指定key进行比较的关键字的个数的期望值，称为查找算法在查找成功时的平均查找长度。 1. 顺序查找说明：顺序查找适合于存储结构为顺序存储或链接存储的线性表。 基本思想：顺序查找也称为线形查找，属于无序查找算法。从数据结构线形表的一端开始，顺序扫描，依次将扫描到的结点关键字与给定值k相比较，若相等则表示查找成功；若扫描结束仍没有找到关键字等于k的结点，表示查找失败。 查找成功时的平均查找长度为： ASL = 1/n(1+2+3+…+n) = (n+1)/2 ; 2. 折半查找说明：针对已排序序列的一种查找方式。并且只适用于顺序存储结构的序列。要求序列中的元素基本不变，在需要做删除和插入操作的时候，会影响检索效率。时间复杂度为O(logN)。 折半查找判定数中，某结点所在的层数就是即将要比较的次数，整个判定树代表的有序表的平均查找长度即为查找每个结点的比较次数之和除以有序表的 长度。 例如：长度为10的有序表的平均查找长度为： ASL=(11+22+34+43)/10=29/10; 折半查找判定数中，查找不成功的次数即为查找相应外结点与内结点的比较次数。整个判定树代表的有序表的平均查找长度。查找失败时的有序表的平均查找长度即为查找每个外结点的比较次数之和除以外结点的个数。 3. 二分查找说明：元素必须是有序的，如果是无序的则要先进行排序操作。 Go面试：实现二分查找（一个例子彻底弄懂）(Golang经典编程案例)]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-各种排序]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F12_%E7%AE%97%E6%B3%95-%E5%90%84%E7%A7%8D%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[冒泡，选择，插入，Shell，快速，堆，合并 1. 冒泡排序：在要排序的一组数中，对当前还未排好序的范围内的全部数，自上而下对相邻的两个数依次进行比较和调整，让较大的数往下沉，较小的往上冒。案例如下： java面试：冒泡排序详解 (Java经典编程案例) Go面试： 实现冒泡排序 (Golang经典编程案例) python面试：实现冒泡排序（python经典编程案例） 2. 选择排序：java面试：选择排序代码实现 (Java经典编程案例) Go面试：实现选择排序 (Golang经典编程案例) python面试：实现选择排序（python经典编程案例） 3. 插入排序：用Go语言 轻松实现插入排序 (Golang经典编程案例) 用Go语言 轻松实现插入排序 (Golang经典编程案例) python面试：实现插入排序（python经典编程案例） 4. 希尔（Shell）排序：希尔排序是1959 年由D.L.Shell 提出来的，相对直接排序有较大的改进。希尔排序又叫缩小增量排序。 基本思想：先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录“基本有序”时，再对全体记录进行依次直接插入排序。 python面试：实现希尔（shell）排序（python经典编程案例） 5. 快速排序：用Go语言 实现快速排序 (Golang经典编程案例) python面试：实现快速排序（python经典编程案例） 6. 堆排序：堆排序是一种树形选择排序，是对直接选择排序的有效改进。 基本思想：堆的定义如下：具有n个元素的序列（k1,k2,…,kn),当且仅当满足时称之为堆。由堆的定义可以看出，堆顶元素（即第一个元素）必为最小项（小顶堆）。若以一维数组存储一个堆，则堆对应一棵完全二叉树，且所有非叶结点的值均不大于(或不小于)其子女的值，根结点（堆顶元素）的值是最小(或最大)的。如： 大顶堆序列：（96, 83,27,38,11,09) 小顶堆序列：（12，36，24，85，47，30，53，91） 7. 归并排序：归并（Merge）排序法：是将两个（或两个以上）有序表合并成一个新的有序表，即把待排序序列分为若干个子序列，每个子序列是有序的。然后再把有序子序列合并为整体有序序列。 python面试：实现归并排序（python经典编程案例）]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-算法思想]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F13_%E7%AE%97%E6%B3%95-%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3%2F</url>
    <content type="text"><![CDATA[1. 穷举暴力破解，n层for循环。列举每一种可能。 穷举问题，看下面一篇文章足够： 算法思想——穷举 (用java语言实现 鸡兔同笼问题，韩信点兵问题等) 2. 递推简单的动态规划，根据递推公式，累加。 经典案例： 斐波那契函数：F（n） = F（n-1）+ F（n-2），随便给一个n，问F（n）为多少。java语言实现：3种思路求兔子小兔子问题（附源码）（斐波那契数列的典型应用） (Java经典编程案例) 3. 递归递归，递推，迭代的区别，以及案例可参考这篇文章：算法思想——迭代 (用java语言实现 迭代相关的6个案例等) 4. 分治分治算法是一种化繁为简的算法思想。分治算法往往应用于计算步骤比较复杂的问题，通过将问题简化而逐步得到结果。分治算法的基本思想是将一个计算复杂的问题分为规模较小，计算简单的小问题求解，然后综合各个小问题，得到最终问题的答案。分治算法的执行过程如下： 对于一个规模为N 的问题，若该问题可以容易地解决（比如说规模&gt;^较小），则直接解决,否则执行下面的步骤。 将该问题分解为” 个规模较小的子问题，这些子问题互相独立，并且原问题形式相同。 递归地解子问题。 然后，将各子问题的解合并得到原问题的解。 5. 概率使用random随机数，数量足够大的时候，得到近似结果。 例题： 计算圆周率π：π = S / R²，根据随机点算出圆的面积，然后通过公式算出π。]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-图]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F14_%E7%AE%97%E6%B3%95-%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[定义：图（Graph）是由顶点的有穷非空集合和顶点之间边的集合组成，通常表示为：G(V,E)，其中，G表示一个图，V是图G中顶点的集合，E是图G中边的集合。 线性表中我们把数据元素叫元素，树中将数据元素叫结点，在图中数据元素，我们则称之为顶点（Vertex）。 线性表可以没有元素，称为空表；树中可以没有节点，称为空树；但是，在图中不允许没有顶点（有穷非空性）。 线性表中的各元素是线性关系，树中的各元素是层次关系，而图中各顶点的关系是用边来表示（边集可以为空）。 图是由结点的有穷集合V和边的集合E组成。其中，为了与树形结构加以区别，在图结构中常常将结点称为顶点，边是顶点的有序偶对，若两个顶点之间存在一条边，就表示这两个顶点具有相邻关系。按照顶点指向的方向可分为无向图和有向图。 图是一种比较复杂的数据结构，在存储数据上有着比较复杂和高效的算法，分别有邻接矩阵 、邻接表、十字链表、邻接多重表、边集数组等存储结构 两种比较常见和重要的图的存储结构：邻接矩阵和邻接表]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-各种树]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F10_%E7%AE%97%E6%B3%95-%E5%90%84%E7%A7%8D%E6%A0%91%2F</url>
    <content type="text"><![CDATA[B树，B+树，B*树，R树的总结B树（英语：B-tree）是一种自平衡的树，能够保持数据有序。这种数据结构能够让查找数据、顺序访问、插入数据及删除的动作，都在对数时间内完成。B树，概括来说是一个一般化的二叉查找树（binary search tree），可以拥有最多2个子节点。与自平衡二叉查找树不同，B树适用于读写相对大的数据块的存储系统，例如磁盘。 根结点至少有两个子女。 每个中间节点都包含k-1个元素和k个孩子，其中 m/2 &lt;= k &lt;= m 每一个叶子节点都包含k-1个元素，其中 m/2 &lt;= k &lt;= m 所有的叶子结点都位于同一层。 每个节点中的元素从小到大排列，节点当中k-1个元素正好是k个孩子包含的元素的值域分划。 如图所示就是一颗符合规范的B树，由于相比于磁盘IO的速度，内存中的耗时几乎可以省略，所以只要树的高度足够低，IO次数足够小，就可以提升查询性能。 B树的增加删除同样遵循自平衡的性质，有旋转和换位。 B树的应用是文件系统及部分非关系型数据库索引。 B+ 树：是一种树数据结构，通常用于关系型数据库（如Mysql）和操作系统的文件系统中。B+ 树的特点是能够保持数据稳定有序，其插入与修改拥有较稳定的对数时间复杂度。B+ 树元素自底向上插入，这与二叉树恰好相反。 在B树基础上，为叶子结点增加链表指针（B树+叶子有序链表），所有关键字都在叶子结点 中出现，非叶子结点作为叶子结点的索引；B+树总是到叶子结点才命中。 b+树的非叶子节点不保存数据，只保存子树的临界值（最大或者最小），所以同样大小的节点，b+树相对于b树能够有更多的分支，使得这棵树更加矮胖，查询时做的IO操作次数也更少。这通常在多数节点在次级存储比如硬盘中的时候出现。通过最大化在每个内部节点内的子节点的数目减少树的高度，平衡操作不经常发生，而且效率增加了。 B*树：是B+树的变体，在B+树的非根和非叶子结点再增加指向兄弟的指针 在B+树基础上，为非叶子结点也增加链表指针，将结点的最低利用率从1/2提高到2/3。 R树是用来做空间数据存储的树状数据结构。例如给地理位置，矩形和多边形这类多维数据建立索引。 R树：的核心思想是聚合距离相近的节点并在树结构的上一层将其表示为这些节点的最小外接矩形（MBR），这个最小外接矩形就成为上一层的一个节点。因为所有节点都在它们的最小外接矩形中，所以跟某个矩形不相交的查询就一定跟这个矩形中的所有节点都不相交。叶子节点上的每个矩形都代表一个对象，节点都是对象的聚合，并且越往上层聚合的对象就越多。也可以把每一层看做是对数据集的近似，叶子节点层是最细粒度的近似，与数据集相似度100%，越往上层越粗糙。 字典树字典树(TrieTree)：，又称单词查找树或键树，是一种树形结构，是一种哈希树的变种。典型应用是用于统计和排序大量的字符串（但不仅限于字符串），所以经常被搜索引擎系统用于文本词频统计。它的优点是：最大限度地减少无谓的字符串比较，查询效率比哈希表高。 TrieTree充分利用字符串与字符串间拥有公共前缀的特性，而这种特性在字符串的检索与词频统计中会发挥重要的作用。 Trie的核心思想是空间换时间。利用字符串的公共前缀来降低查询时间的开销以达到提高效率的目的。 它有3个基本性质： 根节点不包含字符，除根节点外每一个节点都只包含一个字符。 从根节点到某一节点，路径上经过的字符连接起来，为该节点对应的字符串。 每个节点的所有子节点包含的字符都不相同。 红黑树红黑树也是一种自平衡的二叉查找树。 每个结点要么是红的要么是黑的。（红或黑） 根结点是黑的。 （根黑） 每个叶结点（叶结点即指树尾端NIL指针或NULL结点）都是黑的。 （叶黑） 如果一个结点是红的，那么它的两个儿子都是黑的。 （红子黑） 对于任意结点而言，其到叶结点树尾端NIL指针的每条路径都包含相同数目的黑结点。（路径下黑相同） 如图就是一棵典型的红黑树。保证红黑树满足它的基本性质，就是在调整数据结构自平衡。 而红黑树自平衡的调整操作方式就有旋转和变色两种。 红黑树是一种应用很广的数据结构，如在Java集合类中TreeSet和TreeMap的底层，C++STL中set与map，以及linux中虚拟内存的管理。 哈夫曼树哈夫曼树：是一种带权路径长度最短的二叉树，也称为最优二叉树。 一般可以按下面步骤构建： 将所有左，右子树都为空的作为根节点。 在森林中选出两棵根节点的权值最小的树作为一棵新树的左，右子树，且置新树的附加根节点的权值为其左，右子树上根节点的权值之和。注意，左子树的权值应小于右子树的权值。 从森林中删除这两棵树，同时把新树加入到森林中。 重复2，3步骤，直到森林中只有一棵树为止，此树便是哈夫曼树。 大家可能更多听说的是哈夫曼编码，其实就是哈夫曼树的应用。即如何让电文中出现较多的字符采用尽可能短的编码且保证在译码时不出现歧义。]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-树和二叉树]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F09_%E7%AE%97%E6%B3%95-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91%2F</url>
    <content type="text"><![CDATA[树（tree）：是一种抽象数据类型或是实现这种抽象数据类型的数据结构，用来模拟具有树状结构性质的数据集合。它是由n（n&gt;0）个有限节点组成一个具有层次关系的集合。把它叫做“树”是因为它看起来像一棵倒挂的树，也就是说它是根朝上，而叶朝下的。它具有以下的特点： ①每个节点有零个或多个子节点； ②没有父节点的节点称为根节点； ③每一个非根节点有且只有一个父节点； ④除了根节点外，每个子节点可以分为多个不相交的子树； 关于树的术语：度，叶子节点，根节点，父节点，子节点，深度，高度。 二叉树：每个节点最多含有两个子树的树称为二叉树。在二叉树的概念下又衍生出满二叉树和完全二叉树的概念 满二叉树：除最后一层无任何子节点外，每一层上的所有结点都有两个子结点。也可以这样理解，除叶子结点外的所有结点均有两个子结点。节点数达到最大值，所有叶子结点必须在同一层上完全二叉树：若设二叉树的深度为h，除第 h 层外，其它各层 (1～(h-1)层) 的结点数都达到最大个数，第h层所有的结点都连续集中在最左边，这就是完全二叉树。 二叉树的遍历方式： 先序遍历：先根节点-&gt;遍历左子树-&gt;遍历右子树 中序遍历：遍历左子树-&gt;根节点-&gt;遍历右子树 后序遍历：遍历左子树-&gt;遍历右子树-&gt;根节点 深度优先搜索（DFS）与广度优先搜索（BFS）： 实现：bfs＝队列，入队列，出队列 一次访问一条路径；dfs=栈，压栈，出栈 一次访问多条路径（来自知乎） 关系：用DFS解决的问题都可以用BFS解决。DFS易于编写（递归），时间消耗较少但是容易发生爆栈，而BFS可以控制队列的长度。 二叉查找树：是二叉树的衍生概念：（英语：Binary Search Tree），也称为二叉搜索树、有序二叉树（ordered binary tree）或排序二叉树（sorted binary tree），是指一棵空树或者具有下列性质的二叉树： 若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值； 若任意节点的右子树不空，则右子树上所有节点的值均大于它的根节点的值； 任意节点的左、右子树也分别为二叉查找树； 没有键值相等的节点。 &gt; 二叉查找树相比于其他数据结构的优势在于查找、插入的时间复杂度较低为 O ( log ⁡ n ) 。二叉查找树是基础性数据结构，用于构建更为抽象的数据结构，如集合、多重集、关联数组等。 平衡二叉树：（AVL树）当且仅当任何节点的两棵子树的高度差不大于1的二叉树；其中AVL树是最先发明的自平衡二叉查找树，是最原始典型的平衡二叉树。 平衡二叉树是基于二叉查找树的改进。由于在某些极端的情况下（如在插入的序列是有序的时），二叉查找树将退化成近似链或链，此时，其操作的时间复杂度将退化成线性的，即O(n)。所以我们通过自平衡操作（即旋转）构建两个子树高度差不超过1的平衡二叉树。]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-堆]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F08_%E7%AE%97%E6%B3%95-%E5%A0%86%2F</url>
    <content type="text"><![CDATA[堆的定义如下：n个元素的序列{k1,k2,ki,…,kn}当且仅当满足下关系时，称之为堆。(ki &lt;= k2i,ki &lt;= k2i+1)或者(ki &gt;= k2i,ki &gt;= k2i+1), (i = 1,2,3,4…n/2)，满足前者的表达式的成为小顶堆，满足后者表达式的为大顶堆，这两者的结构图可以用完全二叉树排列出来，示例图如下： 因为堆有序的特点，一般用来做数组中的排序，称为堆排序。 堆是一种比较特殊的数据结构，可以被看做一棵树的数组对象，具有以下的性质： 堆中某个节点的值总是不大于或不小于其父节点的值； 堆总是一棵完全二叉树。 将根节点最大的堆叫做最大堆或大根堆，根节点最小的堆叫做最小堆或小根堆。常见的堆有二叉堆、斐波那契堆等。]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-散列表（哈希表）]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F07_%E7%AE%97%E6%B3%95-%E6%95%A3%E5%88%97%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[散列表：（Hash Table，又称为哈希表），是一种线性表的存储结构，是根据关键码和值 (key和value) 直接进行访问的数据结构，通过key和value来映射到集合中的一个位置，这样就可以很快找到集合中的对应元素。哈希表由一个直接寻址表和一个哈希函数组成。哈希函数h(k)将k作为自变量，返回元素的存储下标。 哈希表在应用中也是比较常见的，就如Java中有些集合类就是借鉴了哈希原理构造的，例如HashMap，HashTable等，利用hash表的优势，对于集合的查找元素时非常方便的，然而，因为哈希表是基于数组衍生的数据结构，在添加删除元素方面是比较慢的，所以很多时候需要用到一种数组链表来做，也就是拉链法。拉链法是数组结合链表的一种结构，较早前的hashMap底层的存储就是采用这种结构，直到jdk1.8之后才换成了数组加红黑树的结构。 哈希表的应用 集合与字典：字典与集合都是通过哈希表来实现的，e.g. a={‘name’:’Alex’, ‘age’:18, ‘gender’:’Man’} 。使用哈希表存储字典，通过哈希函数将字典的键映射为下标。假设h(‘name’)=3，h(‘age’)=1，h(‘gender’)=4，则哈希表存储为[None, 18, None, ‘Alex’, ‘Man’]如果发生哈希冲突，则通过拉链法或开放寻址法解决 md5算法：MD5(Message-Digest Algorithm 5)曾经是密码学中常用的哈希函数，可以把任意长度的数据映射为128位的哈希值。 &gt; MD5曾经包含如下特征-—— &gt; 1）同样的消息，其MD5值必定相同； &gt; &gt; 2）可以快速计算出任意给定消息的MD5值； &gt; &gt; 3）除非暴力枚举所有可能的消息，否则不可能从哈希值反推出消息本身； &gt; &gt; 4）两条消息之间即使只有微小的差别，其对应的MD5值也应该是完全不同、完全不相关的； &gt; &gt; 5）不能在有意义的时间内人工地构造两个不同的消息，使其具有相同的MD5值。 &gt; &gt; 应用举例——文件的哈希值 ，算出文件的哈希值，若两个文件的哈希值相同，则可认为这两个文件是相同的。因此： &gt; &gt; 1）用户可以利用它来验证下载的文件是否完整。 &gt; &gt; 2）云存储服务商可以利用它来判断用户要上传的文件是否已经存在于服务器上，从而实现秒传的功能，同时避免存储过多相同的文件副本。 SHA2算法：历史上MD5和SHA-1曾经是使用最为广泛的cryptographic hash function，但是随着密码学的发展，这两个哈希函数的安全性相继受到了各种挑战。因此现在安全性较重要的场合推荐使用SHA-2等新的更安全的哈希函数。SHA-2包含了一系列的哈希函数：SHA-224，SHA-256，SHA-384，SHA-512，SHA-512/224，SHA-512/256，其对应的哈希值长度分别为224,256,384or512位。SHA-2具有与MD5类似的性质（参见MD5算法的特征）。 应用举例：例如，在比特币系统中，所有参与者需要共同解决如下问题：对于一个给定的字符串U，给定的目标哈希值H，需要计算出一个字符串V，使得U+V的哈希值与H的差小于一个给定值D。此时，只能通过暴力枚举V来进行猜测。首先计算出结果的人可获得一定奖金。而某人首先计算成功的概率与其拥有的计算量成正比，所以其获得的奖金的期望值与其拥有的计算量成正比。]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-链表]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F06_%E7%AE%97%E6%B3%95-%E9%93%BE%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[链表：是物理存储单元上非连续的、非顺序的存储结构，数据元素的逻辑顺序是通过链表的指针地址实现，每个元素包含两个结点，一个是存储元素的数据域 (内存空间)，另一个是指向下一个结点地址的指针域。根据指针的指向，链表能形成不同的结构，例如单链表，双向链表，循环链表等。 链表的优点和缺点： 优点：链表是很常用的一种数据结构，不需要初始化容量，可以任意加减元素； 添加或者删除元素时只需要改变前后两个元素结点的指针域指向地址即可，所以添加，删除很快； 缺点： 因为含有大量的指针域，占用空间较大； 查找元素需要遍历链表来查找，非常耗时。 适用场景： 数据量较小，需要频繁增加，删除操作的场景]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-队列]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F05_%E7%AE%97%E6%B3%95-%E9%98%9F%E5%88%97%2F</url>
    <content type="text"><![CDATA[队列：是“先进先出”（FIFO，First InFirst Out）的数据结构，在队尾添加元素，在队头删除元素。 队列的作用：就像售票口前的人们站成的一排一样：第一个进入队列的人将最先买到票，最后排队的人最后才能买到票。 队列通常提供的操作： 入队： 通常命名为push() 出队： 通常命名为pop() 求队列中元素个数 判断队列是否为空 获取队首元素 队列的存储结构：队列与栈一样是一种线性结构，因此以常见的线性表如数组、链表作为底层的数据结构。 在计算机操作系统或网路中，有各种队列在安静地工作着。打印作业在打印队列中等待打印。当敲击键盘时，也有一个存储键盘键入内容的队列，如果我们敲击了一个键，而计算机又暂时在做其他事情，敲击的内容不会丢失，它会排在队列中等待，直到计算机有时间来读取它，利用队列保证了键入内容在处理时其顺序不会改变 栈的插入和删除数据项的命名方法很标准，成为push和pop，队列的方法至今也没有一个标准化的方法，插入可以称作put、add或enque等，删除可以叫作delete、get、remove或deque等]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-栈]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F04_%E7%AE%97%E6%B3%95-%E6%A0%88%2F</url>
    <content type="text"><![CDATA[栈中的元素都是后进先出（Last In First Out, LIFO）.用列表可以实现一个栈类。 栈可以在函数调用时存储断点，做递归时也需要用栈。]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-线性表]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F03_%E7%AE%97%E6%B3%95-%E7%BA%BF%E6%80%A7%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[线性表：是n个数据特性相同的元素的组成有限序列，是最基本且常用的一种线性结构(线性表，栈，队列，串和数组都是线性结构），同时也是其他数据结构的基础。 对于非空的线性表或者线性结构的特点： （1）存在唯一的一个被称作“第一个”的数据元素； （2）存在唯一的一个被称作“最后一个”的数据元素； （3）除第一个外，结构中的每个数据元素均只有一个前驱； （4）除最后一个外，结构中的每个数据元素均只有一个后继； 基本操作如下： 线性表的置空操作clear()：将一个已经存在的线性表置为空表。 线性表判空操作isEmpty()：判断线性表是否为空，若为空，则返回true；否则，返回为false。 求线性表的长度操作length()：求线性表中的数据元素的个数并返回其值。 取元素操作get(i)：读取并返回线性表中的第i个数据元素的值。其中i的取值范围为0≤i≤length()-1。 插入操作insert(i,x)：在线性表的第i个数据元素之前插入一个值为x的数据元素。其中i的取值范围为0≤i≤length()。当i=0时，在表头插入x；当i=length()时，在表尾插入x。 删除操作remove(i)：删除并返回线性表中第i个数据元素。其中i的取值范围为0≤i≤length()-1。 查找操作indexOf(x)：返回线性表中首次出现的指定的数据元素的位序号，若线性表中不包含此数据元素，则返回-1。 public interface IList { // 线性表置空操作 public void clear(); // 判断线性表是否为空操作 public boolean isEmpty(); // 获取线性表中元素的长度操作 public int length(); // 获取指定位置上面的元素操作 public Object get(int i); // 在指定位置上面插入元素的操作 public void insert(int i, Object x); // 删除指定位置上面的元素的操作 public void remove(int i); // 查找指定元素的位置首次出现的位置操作 public int indexOf(Object x); // 显示线性表中的内容操作 public void display(); }]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法-数组]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F02_%E7%AE%97%E6%B3%95-%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[数组的特点 适合查询，但是删除和修改有点慢 数据结构不仅是数据的容器，还要提供对数据的操作方法，比如检索、插入、删除、排序等 1. 无序数组无序数组的优点：插入快，如果知道下标，可以很快的存取 无序数组的缺点：查找慢，删除慢，大小固定。 2. 有序数组有序数组的优点：查找效率高 有序数组的缺点：删除和插入慢，大小固定]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法概述和总结]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F01_%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[1.什么是数据结构和算法数据结构，就是一组数据的存储结构。算法，就是操作数据的一组方法。数据结构是为算法服务的，算法要作用在特定的数据结构之上。 2.为什么要学习数据结构和算法？（1）对个人：数据结构和算法是程序员的必修课程之一，能帮助我们写出性能更优更好的代码。算法，是一种解决问题的思路和方法，也可以运用到生活的各个方面。长期来看，大脑思考能力是个人最重要的核心竞争力，而算法能帮助我们有效的训练大脑的思考能力。 （2）应用层面原因：在计算机科学和互联网迅猛发展下，需要计算的数据量越来越庞大，但是计算机的计算能力是有限的，这么大量的数据计算，需要越来越多的计算机，需要越来越长的计算时间，注重效率的我们需要尽可能的提高计算效率。其中重要的一项，就是使用合适的数据结构和算法。选用合适的数据结构和算法，特别是在处理数量非常庞大的数据的时候，可以极大提高计算效率。 3.怎么样衡量数据结构和算法需要引入一个衡量的标准（metric）— 时间复杂度和空间复杂度。学习数据结构和算法的基石，就是要学会‘复杂度分析’。知道怎样去分析复杂度，才能做出正确的判断，在特定的场景下选用合适的正确的算法。而不是盲目的死记硬背，机械操作。 4.常见数据结构和算法常见数据结构：： 线性：数组 (Array)、栈 (Stack)、队列 (Queue)、链表 (Linked List)、块状数组（数组+链表） 树： 堆(heap)、二叉搜索树(binary search tree)、Merkle Tree(Hash Tree)、B-/B+ Tree、AVL树、红黑树、二叉树、哈夫曼树 图 (Graph) 散列表 (Hash) 常见算法： 基础：枚举，递归，分治，模拟，贪心，动态规划，剪枝，回溯 排序：冒泡、快速、直接选择和堆、直接插入和希尔排序、归并排序 查找：顺序查找、二分查找、索引查找、二叉排序树、哈希查找 图算法：深度优先遍历与广度优先遍历， 最短路径，最小生成树，拓扑排序 编写算法的步骤是什么？数据输入：提出问题并确定输入的数据类型；数据处理：确定进行怎样的计算以获得所需要的结果；结果输出：了解预期结果，对实际结果进行验证 算法的特点是什么？精度：它清楚的定义了单一的起点和一个或多个定义明确的重点；有效性：它由有效的原语组成，这些原语可以由使用它的人或者机器理解；指定输入/输出：算法必须接受输入，还必须生成输出；有限性：执行有限步骤后，算法停止；唯一性：每个步骤的结果都是唯一的。]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习数据结构和算法的经验]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%E7%9A%84%E7%BB%8F%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[学习数据结构和算法的经验有时候我们埋头苦学，天真的以为照着书多敲代码就可以掌握知识点；其实并不然，在学习中往往出现照着书上敲代码，但敲完了并不知道那是干嘛的情况。这就是一些初学者很大的误区。所以当我们拿到代码时，可以先跟着作者思路走一遍，上手敲代码之前最好先在草稿纸上把代码一行行分析一遍，看看是不是作者的思路。往往书上的代码不会很长，而且里面会有一些编程技巧值得学习。最后再按照思路来编程，这时候你会发现一些前面两个步骤中没注意的问题。这些对我们的思维方式都有很大帮助。 数据结构虽然解决的是数据存储问题，但是在使用的层面上，我们不仅仅时因为存储数据而使用。更重要的时当我们使用某些特殊的数据结构存储数据后，将可以帮助我们更加高效的解决某些算法问题，甚至对于某些问题来说，如果某有这些数据结构我们根本无从解决！ 1、记住数据结构，记住算法思想（是什么）我觉得这个是数据结构与算法学习最基础的部分。学完之后，你至少得能给人说明白，什么是”堆栈“，什么是”平衡二叉树“等等等吧。我之所以说”记住“，是希望这些能够形成长久记忆，存储到你的”硬盘“里，而不仅仅在学习的时候过了一遍你的”内存“。还有一个问题，什么才叫”记住数据结构“。我觉得，第一步，数据结构最直观的东西你得记住吧（如标题背景图，来自数据结构和算法动态可视(Chinese)）。这种直观的记忆可能在不知不觉中就完成了，但为了更好的记住，还需去刻意记忆和偶尔的复习。第二步，你得记忆该数据结构的定义与性质与特点等等等吧。例如，学习哈夫曼树的时候。哈夫曼树的定义：WPL（带权路径长度）最小的二叉树；哈夫曼树的特点：（1）没有度为１的结点（2）ｎ个叶子结点的哈夫曼树共有２ｎ－１个结点（3）哈夫曼树的任意非叶节点的左右子树交换后仍是哈夫曼树。关于”数据结构“，需要记忆的内容也需要自己在其中慢慢领悟。 至于”记住算法思想“，举个例子，思考我们如何构造一个”哈夫曼树“。当然，在知道它的定义后，我们可以自己去设计一个算法。如果，自己可以想出来，恭喜你。如果自己没想到，再看到先人的解决办法后，不是仅仅“惊叹”一声，更要去理解，去记住它。 2、用编程语言去实现某一数据结构上的算法（怎么办）很多时候，理解一个算法很容易，很容易在纸上去模拟一个算法的实现过程。但，具体实现，则是另一回事。一定得先自己思考，然后再去看书中给的编程语言实现。在我看来，这一过程已经不属于“数据结构与算法”的内容了。而是你综合素质的体现，如何真正理解问题和用编程技巧实现，很考验自己。这一过程，很难靠记忆。而在不断敲代码的过程中去体会一些直觉上的东西。如何用递归解决问题，如何使用循环，如何使用”哨兵”等等等等。当然，敲完后需要去思考总结，看看能不能总结出一些”小套路“并记住。 3、”记住“特定情景下，利用某一特定的数据结构，去解决问题每介绍一种数据结构，浙大数据结构与算法的MOOC课程都会有一个实际问题来作为“引子”，回答了“这种数据结构为什么会出现”。有的是为了实现特定的操作，有的是为了时间和空间上（大部分考虑的是时间复杂性）效率的更高（所以，没事的时候，分析一下算法的时间复杂性）。这些东西，我们也须理解记忆。每一数据结构都有其特性，去解决某一类问题，我们需要去记忆，去感悟。 最后，在学习过程中,如何形成一个属于自己的知识体系（准备在“印象笔记”中单开一个“数据结构与算法”的笔记本）；如何去“记住”（记好笔记，多多复习）；在学习过程中，遇到挫折，产生挫败感该如何处理（这个是必然会发生的，总有难以理解不会的地方）；如何进行心态方面的调整（欲速则不达,不过也有”敏捷学习“的概念）。]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法网站资料收藏]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E7%AE%97%E6%B3%95%2F00_%E7%AE%97%E6%B3%95%E7%BD%91%E7%AB%99%E8%B5%84%E6%96%99%2F</url>
    <content type="text"><![CDATA[必备网站收藏 https://visualgo.net/en 可视化学习网站 https://algs4.cs.princeton.edu/home/ 算法官网 https://www.zhihu.com/question/21628833 知乎贴 学习进阶之路00 数据结构和算法——深度好文：学习数据结构的经验 01 数据结构和算法——概述和总结 02 数据结构和算法——数组 03 数据结构和算法——线性表 04 数据结构和算法——栈 05 数据结构和算法——队列 06 数据结构和算法——链表 07 数据结构和算法——散列表（哈希表） 08 数据结构和算法——堆 09 数据结构和算法——树和二叉树 10 数据结构和算法——字典树（这是一种高效的树形结构，但值得单独说明） 11 数据结构和算法——红黑树 12 数据结构和算法——哈夫曼树（Huffman Tree） 13 数据结构和算法——B树，B+树，B*树，R树的总结 14 数据结构和算法——图 15 数据结构和算法——基本算法思想及代码实现（穷举，递推，递归，分治，概率） 16 数据结构和算法——排序算法总结及代码实现（冒泡，选择，插入，Shell，快速，堆，归并） 17 数据结构和算法——查找算法总结及代码实现（顺序，折半，二分查找等） 速记导图图1： 图2: 数据结构：是指相互之间存在一种或多种特定关系的数据元素的集合用计算机存储、组织数据的方式。数据结构分别为逻辑结构、（存储）物理结构和数据的运算三个部分。 图3： 图4：]]></content>
      <categories>
        <category>python</category>
        <category>python算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python编码规范]]></title>
    <url>%2F2019%2F07%2Fpython%2Fpython%E4%BC%98%E5%8C%96%2Fpython%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[标签（空格分隔）： python PEP8 代码 规范 在日常工作中，编写python代码时，大家有可能因为IDE的不同或者是没有遵循python的pep8规范而导致每个人的格式都不尽相同，导致其他人阅读起来比较吃力。但是有时候代码规范也并不是建议使用的，最主要的是风格一致性，每个组内的代码风格统一起来才是最重要的，根据自己的判断选择是否遵循PEP8。ps: 许多项目有自己的编码规范，在出现规范冲突时，项目自身的规范优先。 接下来我们只挑一些在工作中频繁遇到规范进行示例，为减少大家阅读时间，以 推荐 和 糟糕 来说明。 Code lay-out 代码布局Indentation 缩进每一级缩进使用4个空格。 推荐: # 与左括号对齐 foo = long_function_name(var_one, var_two, var_three, var_four) # 用更多的缩进来与其他行区分 def long_function_name( var_one, var_two, var_three, var_four): print(var_one) # 挂行缩进应该再换一行 foo = long_function_name( var_one, var_two, var_three, var_four) # 与内容对齐 my_list = [ 1, 2, 3, 4, 5, 6, ] # 与第一行第一个字符对齐 my_list = [ 1, 2, 3, 4, 5, 6, ] 糟糕: # 没有使用垂直对齐时，禁止把参数放在第一行 foo = long_function_name(var_one, var_two, var_three, var_four) # 当缩进没有与其他行区分时，要增加缩进 def long_function_name( var_one, var_two, var_three, var_four): print(var_one) my_list = [1, 2, 3, 4, 5, 6] Maximum Line Length 行的最大长度所有行限制的最大字符数为79。 Blank Lines 空行推荐: # 类与类之间前后用两个空行隔开 Class A:... Class B:... # 类中函数与函数之间前后用一个空行隔开 Class C: def c_a(self):... def c_b(self):... # 函数与函数之间前后用两个空行隔开 def a_run():... def b_run():... # 在函数中使用空行来区分逻辑段（谨慎使用）。 def c_run(): # 逻辑A ... ... # 逻辑B ... ... Imports 导入推荐: 导入应该按照以下顺序分组： 标准库导入 相关第三方库导入 本地应用/库特定导入 同时在每一组导入之间加入空行。 # 官方标准库导入 import os import sys # 第三方库 import arrow import requests # 导入本地库 import app # 以from导入标准库 from datetime import datetime # 以from导入第三方库 from ldap3 import Server # 以from导入本地库 from app import DB from . import create_app # 处理绝对路径过长时可以以相对路径进行替换 糟糕: # 在import中导入多个库 import sys, os Whitespace in Expressions and Statements 表达式和语句中的空格二元运算符中的空格： 推荐: i = i + 1 submitted += 1 x = x*2 - 1 hypot2 = x*x + y*y c = (a+b) * (a-b) 糟糕: i=i+1 submitted +=1 x = x * 2 - 1 hypot2 = x * x + y * y c = (a + b) * (a - b) 关键字参数或者默认参数值： 推荐: def complex(real, imag=0.0): return magic(r=real, i=imag) 糟糕: def complex(real, imag = 0.0): return magic(r = real, i = imag) Comments 注释当更新代码时，一定要记得同步更新注释，否则使阅读的人会陷入更糟糕的近况。 Documentation Strings 文档字符串推荐: &quot;&quot;&quot;Return a foobang Optional plotz says to frobnicate the bizbaz first. &quot;&quot;&quot; Function Annotation 函数或方法注释大家在写函数或者方法时，往往会漏掉当前方法或函数的作用，其实这个还是很重要的，这样往往不需要阅读你的逻辑就可以知道你准备干什么 推荐: &quot;&quot;&quot; def oa_notice_template(project, api, account, cpu, mem): &quot;&quot;&quot; 压测申请模板 :param project: 项目名称 :param api: 接口名称 :param account: 申请人 :param cpu: cpu核数 :param mem: 内存大小 :return: &quot;&quot;&quot; &quot;&quot;&quot; Other Recommendations 其他建议在编写代码时，阅读者追寻编写人时往往很困难，或者此文件具体是做什么的。这个时候我们稍微添加一些个人信息注释就很好做到追源了。 推荐: &quot;&quot;&quot; @Description: 接口测试上传 @Author : duanfei @Time : 2020/5/9 11:51 下午 @Site : @File : http_test.py &quot;&quot;&quot; import os ... Naming Conventions 命名规范命名规范很重要，很多时候你的命名能够大致的解释了变量、函数、类是用来做什么的。所以在命名的时候一定要选择贴近的词义，让阅读者可以理解 Package and Module Names 包名和模块名模块应该用简短全小写的名字，如果为了提升可读性，下划线也是可以用的。Python包名也应该使用简短全小写的名字，但不建议用下划线。 Class Names 类名类名一般使用单词首字母大写的约定 推荐: class CheckFunc:... 糟糕: # 首字符需大写，同时类名中无需带下划线 class check_func:... # 全部大写，同时类名中无需带下划线 class CHECK_FUNC:... Function Names 函数名函数名应该小写，如果想提高可读性可以用下划线分隔。 推荐: def check_func():... Variable Names 变量名一定要靠近变量的意思，不要使用一些意义不明的参数，如：i，j，k，特别注意永远不要使用字母‘l’（小写的L），‘O’（大写的O），或者‘I’（大写的I）作为单字符变量名。 糟糕: l = [] i = 0 xxx = [for i in xx] Constants 常量常量一般默认全部为大写, 同时一定要表明好注释 推荐: TOTAL = 10 # 订单总页数 # 最大溢出量 MAX_OVERFLOW = 1000 Exception Names 异常名因为异常一般都是类，所有类的命名方法在这里也适用。 推荐: class ErrorInvalidArgument(ApiError): &quot;&quot;&quot; 参数缺失或错误 &quot;&quot;&quot; code = 401001 code_name = &#39;Invalid_Argument&#39; message = &#39;invalid argument.&#39; zh_message = &#39;参数缺失或错误&#39; Programming Recommendations 编程建议关于异常处理： 推荐: try: value = collection[key] except KeyError: return key_not_found(key) else: return handle_value(value) 糟糕: try: return handle_value(collection[key]) except KeyError: return key_not_found(key) 关于返回结果处理： 不管在任何时候返回结果都需要保持一致。 推荐: def foo(x): if x &gt;= 0: return math.sqrt(x) else: return None def bar(x): if x &lt; 0: return None return math.sqrt(x) 糟糕: def foo(x): if x &gt;= 0: return math.sqrt(x) def bar(x): if x &lt; 0: return return math.sqrt(x) 关于True、Fakse的判断： 不要用 == 去和True或者False比较 推荐: if greeting: ... 糟糕: if greeting == True: ... if greeting is True: ... 附录 PEP8 规范链接： 官方链接、中文翻译 ==================================================规范—新手村（孙晓飞） 一. 基本常识 相信现代编译器的bug是很难遇到的也就是说，当你的程序出现bug的时候，最后去怀疑编译器和系统（windows除外） mr要有意义最大也是最重要的原因是——在采用squash合入master的时候，mr的title会作为这次merge的commit信息，没有意义的mr==没有意义的commit。那么，为什么commit要有意义呢……去面壁吧，不说这个问题了…… 不明白的代码，不要乱用！不明白的代码，不要乱用！ 不明白的代码，不要乱用！ OK我说了三遍了 不要有过多输出尤其是你开发的是一个包会被别人调用的情况下，因为别人连关都关不掉 没有经过profile过的程序做瓶颈优化都是耍流氓profile的方法参见：（假装有东西，等写完放过来） 万恶之源 有的人说重复代码是万恶之源，有的人说过早的重构（或优化）是万恶之源 这两种说法虽然是矛盾的，但是都说出了部分的真相——我个人的偏好是： if 存在重复代码 { if 不需要使用interface(go和java里的interface，python里的抽象类，c++里的模板)就可以解决{ do 干他！ } else { if 处于项目早期 { 项目优先 } else { do 干他！ } } } else { print(“大侠再见”) } 尊重IDE最重要的是尊重编译器的warning 代码不要给其他人造成心智负担包括但不仅限于： merge后的分支需要删除，无论本地还是远端，都要删除不要用注释代码的方式保留老代码；注释要有意义使用正确的变量名（Python）使用variable annotation 减少中文的使用包括但不仅限于，中文文档、CSDN、百度搜索等等 PyCharm 的doc string采用google style 减少语言原生http request的使用，改用成熟的包我们后面会有越来越多的调用其他service的情况，请使用更加成熟更加上层的包（例如go的gorequests、resty或者python的requests），尽量减少原生http包的使用 原因包括但不仅限于： 原生的http包是为了底层应用的，而我们是上层应用，不需要那么底层，就好像我们的web service不会手动从底层写一样 更加方便，许多的设置更加人性 不需要处理字符转义、文件读写等各种细节问题 长时间离开工位请关闭屏幕尤其是每天走之前，请记得对自己的电脑锁屏，避免不必要的麻烦 不然的话会在群里看到自己要请大家喝奶茶的消息 :) 程序是很少骗人的，如果出现了本地和远端或者服务器和docker运行结果不一致的情况，请先保证【环境一致】二. 学会提问将这一点单独拿出来讲是因为它很重要！！！！ 问别人错误之前，先看错误提示，如果根据错误提示能找到的答案，不要问 google是个好东西，很多error可以搜索得到 优先使用英文文档 三. 强制使用termius （windows用户强制，会折腾microsoft terminal的请忽略我）source tree （mac和windows）ShannonWIKIPyCharm的save action插件，在save的时候选择reformat以及optimizeGoLand的File Watchers里启用go fmt每个项目都要要设置line seperator为Unix模式，也就是使用\n。windows用户要尤其注意。除非你厉害，否则不要用vim或者emacs，人类发明很多工具是有理由的 四. 严格禁止使用IDE做VCS绝对路径，之前提过了 五. 一些代码规范 关于文件路径规定一下： 除了config文件，项目中绝对不准使用绝对路径！！！！！！！在任何地方，都不允许使用linux的相对路径，也就是”../“这种形式解释一下正确做法： 项目中，数据分为两种：一种是不需要外部传入的数据，这类数据的路径一定是相对于项目根目录的路径的，具体做法是用Python的函数获取项目的路径，然后其他素有路径都是相对于这个录几个的；另一种是外部挂载的数据，一般是是大数据或者敏感数据，这类是将路径写在config中，然后将config忽略来做到的 不允许绝对路径，不允许赤裸裸的相对路径！！！！！！！！！！！！！！！ 参数过多时 python代码，如果参数过多需要换行，建议采用这种形式： function( para_1, para_2, … ) 而不是： function(para_1, para_2, …) 更不能： function(para_1, para_2 ) 不要乱用字典各位，很严肃的提醒，字典（python里的dict，go、C++、java里的map）这种数据结构，适用于存储key-value结构，而且是key不定的情况，如果key是确定的，最好声明一个类来存储，否则代码维护性极差，我们之前已经吃过亏了，不要再吃亏了。因此，以后如果key是确定的情况，严禁使用字典作为传参手段，尤其是python，不要把编程语言的字典当成json来用。 git的开发规范 从master上，新建分支，然后做修改，commit，push，远端merge后，checkout到master，然后拉取远端，然后进入下一轮开发。严禁在master上做修改，然后checkout到新分支，然后提交！！！！]]></content>
      <categories>
        <category>python</category>
        <category>python优化</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爬取百度图片并把图片存到本地]]></title>
    <url>%2F2019%2F07%2Fspider%2Fcases%2F%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E7%88%AC%E8%99%AB%2F</url>
    <content type="text"><![CDATA[爬取百度图片并把图片存到本地： import re import requests from urllib import error from bs4 import BeautifulSoup import os num = 0 numPicture = 0 file = &#39;&#39; List = [] def Find(url): global List print(&#39;正在检测图片总数，请稍等.....&#39;) t = 0 i = 1 s = 0 while t &lt; 1000: Url = url + str(t) try: Result = requests.get(Url, timeout=7) except BaseException: t = t + 60 continue else: result = Result.text pic_url = re.findall(&#39;&quot;objURL&quot;:&quot;(.*?)&quot;,&#39;, result, re.S) # 先利用正则表达式找到图片url s += len(pic_url) if len(pic_url) == 0: break else: List.append(pic_url) t = t + 60 return s def recommend(url): Re = [] try: html = requests.get(url) except error.HTTPError as e: return else: html.encoding = &#39;utf-8&#39; bsObj = BeautifulSoup(html.text, &#39;html.parser&#39;) div = bsObj.find(&#39;div&#39;, id=&#39;topRS&#39;) if div is not None: listA = div.findAll(&#39;a&#39;) for i in listA: if i is not None: Re.append(i.get_text()) return Re def dowmloadPicture(html, keyword): global num # t =0 pic_url = re.findall(&#39;&quot;objURL&quot;:&quot;(.*?)&quot;,&#39;, html, re.S) # 先利用正则表达式找到图片url print(&#39;找到关键词:&#39; + keyword + &#39;的图片，即将开始下载图片...&#39;) for each in pic_url: print(&#39;正在下载第&#39; + str(num + 1) + &#39;张图片，图片地址:&#39; + str(each)) try: if each is not None: pic = requests.get(each, timeout=7) else: continue except BaseException: print(&#39;错误，当前图片无法下载&#39;) continue else: string = file + r&#39;\\&#39; + keyword + &#39;_&#39; + str(num) + &#39;.jpg&#39; fp = open(string, &#39;wb&#39;) fp.write(pic.content) fp.close() num += 1 if num &gt;= numPicture: return if __name__ == &#39;__main__&#39;: # 主函数入口 word = input(&quot;请输入搜索关键词(可以是人名，地名等): &quot;) # 比如百度图片上搜索：苹果 # add = &#39;http://image.baidu.com/search/flip?tn=baiduimage&amp;ie=utf-8&amp;word=%e8%8b%b9%e6%9e%9c&amp;pn=120&#39; url = &#39;http://image.baidu.com/search/flip?tn=baiduimage&amp;ie=utf-8&amp;word=&#39; + word + &#39;&amp;pn=&#39; tot = Find(url) Recommend = recommend(url) # 记录相关推荐 print(&#39;经过检测{}类图片共有{}张&#39;.format(word, tot)) numPicture = int(input(&#39;请输入想要下载的图片数量： &#39;)) file = input(&#39;请建立一个存储图片的文件夹，输入文件夹名称即可：&#39;) y = os.path.exists(file) if y == 1: print(&#39;该文件已存在，请重新输入&#39;) file = input(&#39;请建立一个存储图片的文件夹，)输入文件夹名称即可&#39;) os.mkdir(file) else: os.mkdir(file) t = 0 tmp = url while t &lt; numPicture: try: url = tmp + str(t) result = requests.get(url, timeout=10) print(url) except error.HTTPError as e: print(&#39;网络错误，请调整网络后重试&#39;) t = t + 60 else: dowmloadPicture(result.text, word) t = t + 60 print(&#39;当前搜索结束，感谢使用&#39;) print(&#39;猜你喜欢&#39;) for re in Recommend: print(re, end=&#39; &#39;) 执行结果如下，比如搜索杨树： 存到本地的效果如下图： 共勉，(๑•̀ㅂ•́)و✧加油]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[绕口令]]></title>
    <url>%2F2019%2F07%2Fothers%2Freading%2F%E7%BB%95%E5%8F%A3%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[1. 【导语】一遍绕口令，让我们感受到那些文字中无穷的乐趣。一起加油吧，在这些文字中获得快乐，获得精彩。无忧考网为大家准备了《英语绕口令带翻译》，一起来练练吧！ Money the best friend of the masses, the support of the classes, the aim of the lasses, the ruin of the asses. 金钱——民众的挚友，各阶层人士的支柱，姑娘们追求的目标，愚人毁灭的根苗。 All Al’s sly allies lie. All al’s sly allies lie. All al’s sly allies lie. 所有阿尔巴尼亚的狡猾盟邦都说谎。 Ava ate eighty eggs. Ava ate eighty eggs. Ava ate eighty eggs. 爱娃吃了八十个蛋。 As snug as a bug in a rug. 舒服得像地毯里的甲虫. “What ails Alex?” Asks Alice. “What ails Alex?” Asks Alice. “What ails Alex?” Asks Alice. “是什么烦扰了亚历克斯？”爱丽丝问。 rows as arty as Artie’s archery arrows? 阿奇和奥黛丽的箭和阿蒂的箭一样是假冒的艺术品吗？ If assist a sister-assistant, will the sister’s sister-assistant assist me. 如果我帮助一个女助手,那个姐妹的女助手会帮助我吗。 the little addled adder added ads. 臭腐了的小奎蛇贴在广告上。 Avery’s army’s armory. 埃弗里的军章. The cuckoo comes in April, and stays the month of May; sings a song AT midsummer, and then goes away 布谷鸟,四月来,五月在,仲夏唱支歌,然后就飞走. Are there auks in the Arctic or are not there auks in the Arctic And if there are auks in the Arctic, Are they auctioning arks 北极有海雀抑或北极没有海雀，如果北极有海雀,它们在拍卖方舟吗? Dry august and warm doth harvest no harm 八月干热却利于收获。 Ada made a ‘Gator hate her, so the ‘Gator ate her. 埃达惹得一个名叫加特的人恨她，于是加特把她吃了。 Since this wristwatch got all washed, oh,how it jumps and jerks! 由于这块手表已经洗了，瞧它一跳一跳的！ I wish I had not washed this wristwatch. 我希望我没有洗这块手表就好啦。 Two tiny tigers take two taxis to town. 两只小老虎乘两辆出租车去镇上。 While we were walking, we were watching window washers wash Washington’s windows with warm washing water. 当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。 The boy shows the ball to the doll. The little boy shows the little ball to the little doll. 一个男孩把球拿给洋娃娃看。一个小男孩把小球拿给小洋娃娃看。 Twixt six thick thumbs stick six thick sticks. 特威克斯特六只粗大的拇指夹着六根粗粗的棍子 If you understand , say ‘’understand’’. If you don’t understand, say ‘’don’t understand’’.But if you understand and say ‘’don’t understand’’. how do I understand that you understand . Understand? 如果你知道就说“知道”， 如果你不知道就说“不知道”；如果你知道却说“不知道”， 我怎么知道你知道，知道吗？ Betty bought a cunning stunning stunt kite. 贝蒂买了一个巧妙的特技风筝。 Billy Smith’s fish-sauce shop seldom sells shellfish. 比利史密斯的鱼酱店很少卖贝类。 Bake big batches of bitter brown bread. 烘烤几大炉苦味的棕色面包。 A twister of twists once twisted a twist. 龙卷风跌宕起伏的一次扭曲的一个转折。 Mike likes to write by the nice bright light at night. 迈克喜欢在夜晚明亮的灯光写。 The man with fair hair dare not repair their chairs there because there is a bear there. 金发男子不敢在那修他们的椅子因为有只熊在那儿。 Good cookies could be cooked by a good cook if a good cook could cook good cookies. 好的曲奇饼出自好的厨师如果这个厨师可以烤出好的曲奇饼。 She sells sea shlls on the seashore .The seashells she sells are seashells ,she is sure. 她在海边卖贝壳。她确定，她卖的贝类是贝壳。 A bitter biting bittern bit a better brother bittern, and the bitter better bittern bit the bitter bittern back. And the bitter bittern, bitten, by the better bitten bittern, said: “I’m a bitter biter bit, alack! 最牛的英语绕口令:一只沮丧而尖刻的麻鹊咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鹊对它的兄弟说：“我是一只充满怨恨的麻鹊！我害人终害己了！ How much wood would a woodchuck chuck if a woodchuck could chuck wood? 如果一只美洲旱獭会扔木头,那么会扔多少木头呢? Ann sent Andy ten hens and Andy sent Ann ten pens。 安给安迪送了10只母鸡，安迪给安送了10支钢笔。 Canners can can what they can can but can not can things can’t be canned。 罐头工人能够把他们能做成罐头的东西制成罐头，但是不能把无法制成罐头的东西制成罐头。 Good cookies could be cooked by a good cook if a good cook could cook good cookies。 如果一位好的厨师能做出美味小甜品的话，那么好吃的小甜品是能够由这位厨师制作出来的。 Jenny and Jimmy went to Jamaica and Germany in January, but Joan and John went to Jordan and Japan in June and July。 詹妮和吉米一月去了牙买加和德国，而琼和约翰在六、七月去了约旦和日本。 A cricket critically cricked at a critical cricket match, and so this cricket quitted the cricket match quickly。 一只蟋蟀在一场关键性斗蟋比赛中发生严重的痉挛，于是这只蟋蟀很快退出了比赛。 Bill’s big brother is building a beautiful building between two big brick blocks 比尔的哥哥正在两座大砖房之间建造一座漂亮的房子。 A flea and a fly were trapped in a flue, and they tried to flee for their life. The flea said to the fly “let’’s flee!” and the fly said to the flea”Let’s fly!.Finally both the flea and fly managed to flee through a flaw in the flue。 一只跳蚤和一只苍蝇被诱进了一根管子里，它们努力逃命。跳蚤对苍蝇说：“让我们逃吧!”苍蝇对跳蚤说：“让咱们飞吧!”最后，两个都设法通过那管子的一个裂隙逃走了。 Peter Piper picked a peck of picket prepared by his parents and put them in a big paper plate。 彼得·派博把他伯父母腌制的泡菜辣椒取出许多，并且将它们放在一个大纸盘里。 There are thirty thousand feathers on that thrush’s throat。 那只画眉鸟的颈前就长着三万根羽毛。 How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 Ann and Andy’s anniversary is in April. 安和安迪的周年纪念日在四月。 A loyal warrior will rarely worry why we rule. 一个忠诚战士很少会担心我们的规则。 A big black bug bit a big black bear. Where’s the big black bear the big black bug bit? 大黑虫咬大黑熊,被大黑虫咬的大黑熊在那里呢? There was a fisherman named Fisher who fished for some fish in a fissure。 Till a fish with a grin,pulled the fisherman in. Now they’re fishing in the fissure for Fisher。 有一个叫费希尔的渔夫，在一个裂缝钓了些鱼。 有一条露齿笑的鱼，把渔夫拉进来，现在它们在裂缝里帮费希尔钓鱼。 I know. You know. I know that you know. I know that you know that I know. 我知道。你知道。我知道你知道。我知道你知道我知道。 2. 【导语】简短的英语绕口令，在我们锻炼大脑的同时，提升我们的英语学习吧。以下是无忧考网为大家准备的，希望对大家有帮助。 1、Greek grapes.希腊葡萄。 2、Inchworm’s itching蠕动的瘙痒 3、Flash message! 闪烁的信息。 4、Knapsack straps.背包带子。 5、Black bugs’ blood.黑虫的血。 6、Cheap ship trip便宜的海上旅程。 7、Ed had edited it.埃已将它编辑了。 8、Are our oars oak? 我们的桨是橡树吗？ 9、Good blood, bad blood.好血，坏血。 10、Real wristwatch straps.真正的表带。 11、Chop shops stock chops.印章店备有印章。 12、Freshly fried fresh flesh.鲜炸鲜肉。 13、Freshly-fried flying fish.鲜炸飞鱼。 14、Dust is a disk’s worst enemy.尘埃是磁盘的敌人。 15、A noisy noise annoys an oyster.嘈吵的噪音惹恼牡蛎。 16、Diligence dismisseth despondency.勤奋能驱除沮丧。 17、Do drop in at the Dewdrop Inn.到露珠旅馆要进内一坐。 18、Brad’s big black bath brush broke.布拉德的大浴刷子断了。 19、Flee from fog to fight flu fast.避开浓雾，感冒会快点痊愈。 20、Will will not write a real willWill.不会写真实的遗嘱。 21、Girl gargoyle, guy gargoyle.女孩造型的滴水嘴，男孩造型的滴水嘴。 22、I wish you were a fish in my dish.我巴不得你是我碟中的鱼。 23、Crisp crusts crackle crunchily.松脆的面包皮被嚼得嘎吱嘎吱地响。 24、Double bubble gum bubbles double.双重的泡泡糖能吹双重的泡泡。 25、Listen to the local yokel yodel.听听那个本地土包子唱的岳得尔调。 26、Betty better butter Brad’s bread.贝蒂替布拉德的面包涂牛油了！ 27、Give MrSnipa’s wife’s knife a swipe把史立巴先生的太太的刀子抹净。 28、Friendly Frank flips fine flapjacks友善的法兰克用手捻着美味的饼干。 29、I washed all the wheels and the works.我把所有轮子和车间都洗了。 30、Lily ladles little Letty’s lentil soup.莉莉替小历蒂盛小扁豆汤。 1、A bloke’s back bike brake block broke一个家伙的脚踏车后制动器坏了。 2、Cedar shingles should be shaved and saved.雪松盖板应刨好和妥为保全。 3、I wish I had not washed this wristwatch.我希望我没有洗这块手表就好啦。 4、A box of biscuits, a batch of mixed biscuits.一盒饼干，一炉杂饼干。 5、Kris Kringle carefully crunched on candy canes.克里斯克理高小心地嚼甘蔗。 6、Fred fed Ted bread, and Ted fed Fred bread.弗雷德喂特德吃面包，特德喂弗雷德吃面包。 7、Betty beat a bit of butter to make a better batter.贝蒂搅拌一些牛油，令脆浆更可口。 8、I scream, you scream, we all scream for ice-cream!我叫喊，你叫喊，我们都喊着要冰淇淋！ 9、I correctly recollect Rebecca MacGregor’s reckoning.我准确地记起丽贝卡麦格拉歌的账单。 10、Gertie’s great-grandma grew aghast at Gertie’s grammar格蒂的曾祖母被格蒂的文法吓呆了。 11、A tidy tiger tied a tie tighter to tidy her tiny tail.一只老虎将领带系紧，清洁它的尾巴。 12、Just think, that sphinx has a sphincter that stinks!试想想，那个狮身人面像的括约肌发臭了！ 13、Bright blows the broom on the brook’s bare brown banks.布赖特吹动在小溪旁棕色的土地上的扫帚。 14、Give papa a cup of proper coffee in a copper coffee cup.给爸爸一杯用铜制咖啡杯盛着的正统咖啡。 15、Cheryl’s chilly cheap chip shop sells Cheryl’s cheap chips.雪露的便宜辣椒薯条店卖便宜的薯条。 16、Xmas wrecks perplex and vex.X-ray checks clear chests.圣诞节使人困惑又使人恼火。X光照出清楚的胸透照片。 17、Betty and Bob brought back blue balloons from the big bazaar.贝蒂和鲍勃在大型的义卖市场买了蓝汽球回来。 18、If Stu chews shoes, should Stu choose the shoes he chews? 如史调咀嚼鞋子，史调应否选择他正在咀嚼的鞋子呢？ 19、Since this wristwatch got all washed, oh,how it jumps and jerks! 由于这块手表已经洗了，瞧它一跳一跳的！ 20、A big black bug bit a big black bear, made the big black bear bleed blood大黑虫咬大黑熊，大黑熊流血了！ 21、Don’t pamper damp scamp tramps that camp under ramp lamps.不要纵容那些在斜坡上的街灯下栖身、湿着身子的、顽皮的流浪街童。 22、How much dew would a dewdrop drop if a dewdrop could drop dew? 如果一颗露珠会掉下露水，那么一颗露珠会掉下多少露水呢？ 23、I slit a sheet, a sheet I slitUpon the slitted sheet, I sit.我撕开了一张纸，那张纸给我撕开了。在撕开了的纸上，我坐下了。 24、He thrusts his fists against the posts and still insists he sees the ghosts.他用拳头猛力推打柱子，而且声称他见鬼。 25、Knife and a fork, bottle and a cork, that is the way you spell New York.刀子和叉子，瓶子和木塞，这是你拼写纽约的方法。 26、A snow-white swan swam swiftly to catch a slowly-swimming snake in a lake.湖中一只雪白的天鹅快速地游动着去追赶一条慢慢游动的蛇。 27、I saw Esau kissing KateI saw Esau, he saw me, and she saw I saw Esau.我看见埃素吻凯特。我看见埃素，埃素看见我，而凯特也看见我看见埃素。 28、The driver was drunk and drove the doctors car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 29、A pleasant place to place a plaice is a place where a plaice is pleased to be placed.放置鲽的地方是鲽愿意被放置的地方。 30、Give me the gift of a grip top sock: a drip-drape, ship-shape, tip-top sock送我一对有紧袜带的袜子：悬挂状的、船形的、品质一流的袜子。3. 大黑虫咬大黑熊，大黑熊流血了! 2.A bloke’s back bike brake block broke。 一个家伙的脚踏车后制动器坏了。 3.A bitter biting bittern bit a better brother bittern, and the bitter better bittern bit the bitter bittern back. And the bitter bittern, bitten, by the better bitten bittern, said: “I’m a bitter biter bit, alack!” 一只沮丧而尖刻的麻鹊咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鹊对它的兄弟说：“我是一只充满怨恨的麻鹊!我害人终害己了!” 4. How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 5. The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 6. Whether the weather be fine or whether the weather be not.Whether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not. 无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。 7. Peter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked? 彼德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿? 8. I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much. 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 9. Amid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts. 雾蒙蒙，冰霜冻， 手腕儿空空，话儿涌， 只见他猛所拳头往柱子上砸， 直说自己把鬼碰。 10. Badmin was able to beat Bill at billiards, but Bill always beat Badmin badly at badminton. 巴德明在台球上能够打败比尔，但是打羽毛球比尔常常大败巴德明。 11. Betty beat a bit of butter to make a better butter. 贝蒂敲打一小块黄油要做一块更好的奶油面。 12. Rita repeated what Reardon recited when Reardon read the remarks. 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13. Few free fruit flies fly from flames. 没有几只果蝇从火焰中飞过去。 14. Fifty-five flags freely flutter from the floating frigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 15. There is no need to light a night light on a light night like tonight. for a bright night light is just like a slight light. 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 17. A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together. 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 18. How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢? 19. Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See. 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 20. If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite. 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。21. Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already. 特德昨天给弗莱德送去了十只母鸡，所以弗莱德的新鲜面包已经准备好了。 22. A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net. 一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口。 23. A flea and a fly flew up in a flue. Said the flea, “Let us fly!” Said the fly, “Let us flee!” So they flew through a flaw in the flue。 一只跳蚤和一只苍蝇飞进烟道里。跳蚤说：“让我们飞吧!”苍蝇说：“让我们逃跑吧!”就这样，它们就飞越了烟道里的一条裂纹。 24.A writer named Wright was instructing his little son how to write Wright right. He said:” It is not right to write Wright as ‘rite’-try to write Wright aright! (一个名叫赖特的作家正在指导他年幼的儿子怎样把赖特写对。他说：“把赖特写成‘仪式’是不对的-要把赖特写正确!”) 25.Ann sent Andy ten hens and Andy sent Ann ten pens。 (安给安迪送了10只母鸡，安迪给安送了10支钢笔。) 26. Canners can can what they can can but can not can things can’t be canned。 (罐头工人能够把他们能做成罐头的东西制成罐头，但是不能把无法制成罐头的东西制成罐头。) 27.Good cookies could be cooked by a good cook if a good cook could cook good cookies。 (如果一位好的厨师能做出美味小甜品的话，那么好吃的小甜品是能够由这位厨师制作出来的。) 28. Jenny and Jimmy went to Jamaica and Germany in January, but Joan and John went to Jordan and Japan in June and July。 (詹妮和吉米一月去了牙买加和德国，而琼和约翰在六、七月去了约旦和日本。) 29.A cricket critically cricked at a critical cricket match, and so this cricket quitted the cricket match quickly。 (一只蟋蟀在一场关键性斗蟋比赛中发生严重的痉挛，于是这只蟋蟀很快退出了比赛。) 30. A tutor who tooted a flute tried to tutor two tooters to toot. Said the two to their tutor, “Is it harder to toot or to tutor two tooters to toot?” 一个吹笛的导师尝试教两个吹笛者吹笛。那两个学吹笛的问导师：“吹笛难，还是教两个学吹笛的人吹笛难呢?”31.There are thirty thousand feathers on that thrush’s throat。 (那只画眉鸟的颈前就长着三万根羽毛。) 32. A flea and a fly were trapped in a flue, and they tried to flee for their life. The flea said to the fly “let’’s flee!” and the fly said to the flea”Let’s fly!.Finally both the flea and fly managed to flee through a flaw in the flue。 (一只跳蚤和一只苍蝇被诱进了一根管子里，它们努力逃命。跳蚤对苍蝇说：“让我们逃吧!”苍蝇对跳蚤说：“让咱们飞吧!”最后，两个都设法通过那管子的一个裂隙逃走了。) 33. Peter Piper picked a peck of picket prepared by his parents and put them in a big paper plate。 (彼得·派博把他伯父母腌制的泡菜辣椒取出许多，并且将它们放在一个大纸盘里。) 34.Can you can a can as a canner can can a can? 你能够像罐头工人一样装罐头吗? 35.I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish. 我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。 36.I scream, you scream, we all scream for ice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋! 37.Franc’s father is frying French fries for his five fire-fighter friends after they finished a fire-fighting in a factory. 在结束对一家工厂的灭火战斗以后，弗兰克的父亲在为他的五个消防队员朋友炸制法式土豆(炸薯条) 38.Bill’s big brother is building a beautiful building between two big brick blocks (比尔的哥哥正在两座大砖房之间建造一座漂亮的房子。) 39.How much dew would a dewdrop drop if a dewdrop could drop dew? 如果一颗露珠会掉下露水，那么一颗露珠会掉下多少露水呢? 40.A snow-white swan swam swiftly to catch a slowly-swimming snake in a lake。 湖中一只雪白的天鹅快速地游动着去追赶一条慢慢游动的蛇。4. 2.no need to light a night light on a light night like tonight. 3.the thirty-three thieves thought that they thrilled the throne throughout thursday. 4.you know new york, you need new york. you know you need unique new york. 5.a big black bug bit a big black bear and made the big black bear bleed blood. 6.fresh fried fish, fish fresh fried, fried fish fresh, fish fried fresh.• 7.peter piper picked a peck of pickled peppers,a peck of pickled peppers peter piper picked.if peter piper picked a peck of pickled peppers. where’s the peck of pickled peppers peter piper picked? 8.how many good cookies could a good cook cook if a good cook could cook as many good cookies as a good cook could cook? 9.how much wood would a woodchuck chuck if a wooodchuck could chuck wood? a woodchuck would chuck all the wood a woodchuck could chuck if a woodchuck could chuck wood. 10.great greek grape growers grow great greek grapes, but the greeks do not eat the grapes the great greek grape growers grow.5. 2、Inchworm’s itching蠕动的瘙痒3、Flash message! 闪烁的信息。4、Knapsack straps.背包带子。5、Black bugs’ blood.黑虫的血。6、Cheap ship trip便宜的海上旅程。7、Ed had edited it.埃已将它编辑了。8、Are our oars oak? 我们的桨是橡树吗？9、Good blood, bad blood.好血，坏血。10、Real wristwatch straps.真正的表带。11、Chop shops stock chops.印章店备有印章。12、Freshly fried fresh flesh.鲜炸鲜肉。13、Freshly-fried flying fish.鲜炸飞鱼。14、Dust is a disk’s worst enemy.尘埃是磁盘的敌人。15、A noisy noise annoys an oyster.嘈吵的噪音惹恼牡蛎。16、Diligence dismisseth despondency.勤奋能驱除沮丧。17、Do drop in at the Dewdrop Inn.到露珠旅馆要进内一坐。18、Brad’s big black bath brush broke.布拉德的大浴刷子断了。19、Flee from fog to fight flu fast.避开浓雾，感冒会快点痊愈。20、Will will not write a real willWill.不会写真实的遗嘱。6. 2、Cedar shingles should be shaved and saved.雪松盖板应刨好和妥为保全。3、I wish I had not washed this wristwatch.我希望我没有洗这块手表就好啦。4、A box of biscuits, a batch of mixed biscuits.一盒饼干，一炉杂饼干。5、Kris Kringle carefully crunched on candy canes.克里斯克理高小心地嚼甘蔗。6、Fred fed Ted bread, and Ted fed Fred bread.弗雷德喂特德吃面包，特德喂弗雷德吃面包。7、Betty beat a bit of butter to make a better batter.贝蒂搅拌一些牛油，令脆浆更可口。8、I scream, you scream, we all scream for ice-cream!我叫喊，你叫喊，我们都喊着要冰淇淋！9、I correctly recollect Rebecca MacGregor’s reckoning.我准确地记起丽贝卡麦格拉歌的账单。10、Gertie’s great-grandma grew aghast at Gertie’s grammar格蒂的曾祖母被格蒂的文法吓呆了。11、A tidy tiger tied a tie tighter to tidy her tiny tail.一只老虎将领带系紧，清洁它的尾巴。12、Just think, that sphinx has a sphincter that stinks!试想想，那个狮身人面像的括约肌发臭了！13、Bright blows the broom on the brook’s bare brown banks.布赖特吹动在小溪旁棕色的土地上的扫帚。14、Give papa a cup of proper coffee in a copper coffee cup.给爸爸一杯用铜制咖啡杯盛着的正统咖啡。15、Cheryl’s chilly cheap chip shop sells Cheryl’s cheap chips.雪露的便宜辣椒薯条店卖便宜的薯条。16、Xmas wrecks perplex and vex.X-ray checks clear chests.圣诞节使人困惑又使人恼火。X光照出清楚的胸透照片。17、Betty and Bob brought back blue balloons from the big bazaar.贝蒂和鲍勃在大型的义卖市场买了蓝汽球回来。18、If Stu chews shoes, should Stu choose the shoes he chews? 如史调咀嚼鞋子，史调应否选择他正在咀嚼的鞋子呢？19、Since this wristwatch got all washed, oh,how it jumps and jerks! 由于这块手表已经洗了，瞧它一跳一跳的！20、A big black bug bit a big black bear, made the big black bear bleed blood大黑虫咬大黑熊，大黑熊流血了！21、Don’t pamper damp scamp tramps that camp under ramp lamps.不要纵容那些在斜坡上的街灯下栖身、湿着身子的、顽皮的流浪街童。22、How much dew would a dewdrop drop if a dewdrop could drop dew? 如果一颗露珠会掉下露水，那么一颗露珠会掉下多少露水呢？23、I slit a sheet, a sheet I slitUpon the slitted sheet, I sit.我撕开了一张纸，那张纸给我撕开了。在撕开了的纸上，我坐下了。24、He thrusts his fists against the posts and still insists he sees the ghosts.他用拳头猛力推打柱子，而且声称他见鬼。25、Knife and a fork, bottle and a cork, that is the way you spell New York.刀子和叉子，瓶子和木塞，这是你拼写纽约的方法。26、A snow-white swan swam swiftly to catch a slowly-swimming snake in a lake.湖中一只雪白的天鹅快速地游动着去追赶一条慢慢游动的蛇。27、I saw Esau kissing KateI saw Esau, he saw me, and she saw I saw Esau.我看见埃素吻凯特。我看见埃素，埃素看见我，而凯特也看见我看见埃素。28、The driver was drunk and drove the doctors car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。29、A pleasant place to place a plaice is a place where a plaice is pleased to be placed.放置鲽的地方是鲽愿意被放置的地方。30、Give me the gift of a grip top sock: a drip-drape, ship-shape, tip-top sock送我一对有紧袜带的袜子：悬挂状的、船形的、品质一流的袜子。31、Sandy sniffed sweet smelling sunflower seeds while sitting beside a swift stream.桑迪坐在湍急的小溪边尽情地品味着葵花子的香味。32、If you notice this notice you will notice that this notice is not worth noticing.你看到这张告示，你会发现这张告示是不直得留意的。33、A lusty lady loved a lawyer and longed to lure him from his laboratory.一个精力充沛的女士爱上了一位律师，她渴望诱惑律师离开实验室，投入她的怀抱。34、A big black bug bit a big black bear.Where’s the big black bear the big black bug bit? 大黑虫咬大黑熊，被大黑虫咬的大黑熊在那里呢？35、I thought a thoughtBut the thought I thought wasn’t the thought I thought I thought.我思考一个问题。可是，我所思考的问题并不是我认为自己正在思考的问题。36、A skunk sat on a stumpThe skunk thought the stump stunk, and the stump thought the skunk stunk.一只臭鼬坐在树墩上，臭鼬认为树墩发臭，而树墩又认为臭鼬发臭。37、Can you imagine an imaginary menagerie manager imagining managing an imaginary menagerie? 你可以想象一个虚构的野生动物园经理幻想自己管理一个虚构的野生动物园吗？38、Fuzzy wuzzy was a bearFuzzy wuzzy had no hairFuzzy wuzzy wasn’t fuzzyWas he? 毛茸茸、软绵绵的是玩具熊。毛茸茸、软绵绵，一根头发也没有。毛茸茸、软绵绵的玩具熊并不毛茸茸，是吗？39、The Wright rightly writes about the righting of the Rights rights to have rites on the right,right? 那工人政党正确写出了有关纠正右翼有坐在右边的礼仪权的建议，对吗？40、While we were walking, we were watching window washers wash Washington’s windows with warm washing water.当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。41、Wally Wrinkle wriggles his white,wrinkled wigWyatt wondered why the wom wires were not wrapped right.Wally Wrinkle扭动着他皱皱的白色假发。Wyatt对这些旧的线没有被包好感到惊讶。42、Brisk brave brigadiers brandished broad bright blades, blunderbusses, and bludgeons – balancing them badly.敏捷而勇敢的陆军旅长们挥舞着锋利的刀剑、大口径前膛枪和大头短棒——身体差点失去平衡。43、There is no need to light a night light on a light night like tonight.for a bright night light is just like a slight light.像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。44、I cannot bear to see a bear bear down upon a hareWhen bare of hair he strips the hare, Right there I cry, Forbear! 我实在不忍心看着大熊一步一步向野兔逼近。当大熊差不多将野兔所有的毛发拔掉，我大叫：自制啊！45、A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together.一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。46、I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish.我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。47、A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net.一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口7. 1、Greek grapes.希腊葡萄。2、Inchworm’s itching蠕动的瘙痒3、Flash message! 闪烁的信息。4、Knapsack straps.背包带子。5、Black bugs’ blood.黑虫的血。6、Cheap ship trip便宜的海上旅程。7、Ed had edited it.埃已将它编辑了。8、Are our oars oak? 我们的桨是橡树吗？9、Good blood, bad blood.好血，坏血。10、Real wristwatch straps.真正的表带。11、Chop shops stock chops.印章店备有印章。12、Freshly fried fresh flesh.鲜炸鲜肉。13、Freshly-fried flying fish.鲜炸飞鱼。14、Dust is a disk’s worst enemy.尘埃是磁盘的敌人。15、A noisy noise annoys an oyster.嘈吵的噪音惹恼牡蛎。16、Diligence dismisseth despondency.勤奋能驱除沮丧。17、Do drop in at the Dewdrop Inn.到露珠旅馆要进内一坐。18、Brad’s big black bath brush broke.布拉德的大浴刷子断了。19、Flee from fog to fight flu fast.避开浓雾，感冒会快点痊愈。20、Will will not write a real willWill.不会写真实的遗嘱。21、Girl gargoyle, guy gargoyle.女孩造型的滴水嘴，男孩造型的滴水嘴。22、I wish you were a fish in my dish.我巴不得你是我碟中的鱼。23、Crisp crusts crackle crunchily.松脆的面包皮被嚼得嘎吱嘎吱地响。24、Double bubble gum bubbles double.双重的泡泡糖能吹双重的泡泡。25、Listen to the local yokel yodel.听听那个本地土包子唱的岳得尔调。26、Betty better butter Brad’s bread.贝蒂替布拉德的面包涂牛油了！27、Give MrSnipa’s wife’s knife a swipe把史立巴先生的太太的刀子抹净。28、Friendly Frank flips fine flapjacks友善的法兰克用手捻着美味的饼干。29、I washed all the wheels and the works.我把所有轮子和车间都洗了。30、Lily ladles little Letty’s lentil soup.莉莉替小历蒂盛小扁豆汤。8. 2、I know. You know. I know that you know. I know that you know that I know.我知道。你知道。我知道你知道。我知道你知道我知道。3、If assist a sister-assistant, will the sister’s sister-assistant assist me.如果我帮助一个女助手，那个姐妹的女助手会帮助我吗。4、The driver was drunk and drove the doctor’s car directly into the deep ditch.这个司机喝醉了，他把医生的车开进了一个大深沟里。5、“What ails Alex?” Asks Alice. “What ails Alex?” Asks Alice. “What ails Alex?” Asks Alice.“是什么烦扰了亚历克斯？”爱丽丝问。6、give me the gift of a grip top sock: a drip-drape, ship-shape, and tip-top sock. 给我一双有禁袜带的袜子：悬挂状的，船行的，品质一流的袜子。7、The boy shows the ball to the doll.The little boy shows the little ball to the little doll. 一个男孩把球拿给洋娃娃看。一个小男孩把小球拿给小洋娃娃看。8、The cuckoo comes in April, and stays the month of May; sings a song AT midsummer, and then goes away布谷鸟，四月来，五月在，仲夏唱支歌，然后就飞走。9、while we were walking, we were watching window washers’ wash washington’s windows with warm washing water. 当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。10、susan shines shoes and socks; she ceased shining shoes and socks for shoes and socks shock susan. susan把鞋子和袜子擦亮，她停止了将鞋子和袜子擦亮，因为鞋子和袜子把susan吓坏了。11、i never felt a piece of felt which felt as fine as that felt felt, when first i felt that felt hat’s felt. 在我了解到那个毡帽的手感后，再也没有觉得哪个毛毡的手感和那次感觉得一样好了。12、Money the best friend of the masses, the support of the classes, the aim of the lasses, the ruin of the asses.金钱——民众的挚友，各阶层人士的支柱，姑娘们追求的目标，愚人毁灭的根苗。13、sarah saw a shot-silk sash shop full of shot-silk sashes as the sunshine shone on the side of the shot-silk sash shop. 萨拉看到闪光丝饰品店挂满了闪光丝饰品，好象太阳在店边上发出刺眼的光芒。14、Are there auks in the Arctic or are not there auks in the Arctic And if there are auks in the Arctic, Are they auctioning arks北极有海雀抑或北极没有海雀，如果北极有海雀，它们在拍卖方舟吗？15、Amid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts.雾蒙蒙，冰霜冻， 手腕儿空空，话儿涌， 只见他猛所拳头往柱子上砸， 直说自己把鬼碰。16、How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies.如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢？一个好的厨师能做出和其它好厨师一样多的小甜饼。17、the weather be hot.We’ll weather the weather whether we like it or not.无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。18、There was a fisherman named Fisher who fished for some fish in a fissure。Till a fish with a grin,pulled the fisherman in. Now they’re fishing in the fissure for Fisher。有一个叫费希尔的渔夫，在一个裂缝钓了些鱼。有一条露齿笑的鱼，把渔夫拉进来，现在它们在裂缝里帮费希尔钓鱼。19、Peter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked?彼德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿？20、I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much.我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。21、If you understand , say ‘’understand’’. If you don’t understand, say ‘’don’t understand’’.But if you understand and say ‘’don’t understand’’. how do I understand that you understand . Understand? 如果你知道就说“知道”， 如果你不知道就说“不知道”；如果你知道却说“不知道”， 我怎么知道你知道，知道吗？22、A bitter biting bittern bit a better brother bittern, and the bitter better bittern bit the bitter bittern back. And the bitter bittern, bitten, by the better bitten bittern, said: “I’m a bitter biter bit, alack!”一只沮丧而尖刻的麻鹊咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鹊对它的兄弟说：“我是一只充满怨恨的麻鹊！我害人终害己了！”23、Bobby Bippy bought a bat.Bobby Bippy bought a ball.With his bat Bob banged the ball.Banged it bump against the wall.But so boldly Bobby banged it.That he burst his rubber ball.“Boo!” cried Bobby.Bad luck ball ,Bad luck Bobby, bad luck ball.Now to drown his many troubles.Bobby Bippy’s blowing bubbles. 鲍勃比皮买了一个球拍，鲍勃比皮买个一个球。鲍勃用他的球拍击球。把球猛的打到了墙上。但是鲍勃用的力气太大了。以至于把球打爆了。“波！”鲍勃哭了。倒霉的球，倒霉的鲍勃，倒霉的球。现在，为了解决他的麻烦。鲍勃波比使用了鼓风球。9. 2、chop shops stock chops. 印章店备有印章。3、As snug as a bug in a rug.舒服得像地毯里的甲虫。4、Was it a bar or a bat I saw?我看到的是酒吧还是蝙蝠？5、He never saw a saw saw a saw。他从来没见过一把锯子锯另一把锯子。6、the little addled adder added ads.臭腐了的小奎蛇贴在广告上。7、Dry august and warm doth harvest no harm.八月干热却利于收获。8、A bloke’s back bike brake block broke。一个家伙的脚踏车后制动器坏了。9、Bake big batches of bitter brown bread. 烘烤几大炉苦味的棕色面包。10、Ann and Andy’s anniversary is in April. 安和安迪的周年纪念日在四月。11、I wish I had not washed this wristwatch.我希望我没有洗这块手表就好啦。12、Two tiny tigers take two taxis to town. 两只小老虎乘两辆出租车去镇上。13、Betty bought a cunning stunning stunt kite.贝蒂买了一个巧妙的特技风筝。14、A twister of twists once twisted a twist.龙卷风跌宕起伏的一次扭曲的一个转折。15、six shimmering sharks sharply striking shins. 六条闪亮的鲨鱼吸引人的胫骨。16、The quick brown fox jumps over a lazy dog。那只敏捷的棕色狐狸跳过了一只懒惰的狗。17、A loyal warrior will rarely worry why we rule.一个忠诚战士很少会担心我们的规则。18、Never trouble trouble till trouble troubles you。麻烦没来找你，就别去自找麻烦。19、rows as arty as Artie’s archery arrows?阿奇和奥黛丽的箭和阿蒂的箭一样是假冒的艺术品吗？20、thieves seize skis. the blue bluebird blinks. 小偷抓住了滑雪板。 蓝色的知更鸟在眨眼。21、Twixt six thick thumbs stick six thick sticks.特威克斯特六只粗大的拇指夹着六根粗粗的棍子。12、Two tiny tigers take two taxis to town. 两只小老虎乘两辆出租车去镇上。13、Betty bought a cunning stunning stunt kite.贝蒂买了一个巧妙的特技风筝。14、A twister of twists once twisted a twist.龙卷风跌宕起伏的一次扭曲的一个转折。15、six shimmering sharks sharply striking shins. 六条闪亮的鲨鱼吸引人的胫骨。16、The quick brown fox jumps over a lazy dog。那只敏捷的棕色狐狸跳过了一只懒惰的狗。17、A loyal warrior will rarely worry why we rule.一个忠诚战士很少会担心我们的规则。18、Never trouble trouble till trouble troubles you。麻烦没来找你，就别去自找麻烦。19、rows as arty as Artie’s archery arrows?阿奇和奥黛丽的箭和阿蒂的箭一样是假冒的艺术品吗？20、thieves seize skis. the blue bluebird blinks. 小偷抓住了滑雪板。 蓝色的知更鸟在眨眼。21、Twixt six thick thumbs stick six thick sticks.特威克斯特六只粗大的拇指夹着六根粗粗的棍子。28、betty and bob brought back blue balloons from the big bazaar. betty和bob从大杂货店市场上买了蓝气球。29、A big black bug bit a big black bear, made the big black bear bleed blood。大黑虫咬大黑熊，大黑熊流血了！30、what a shame such a shapely sash should such shabby stitches show? 这幺有形的腰带却用这幺破旧的缝线，多丢人啊。10. 2、The driver was drunk and drove the doctor’s car directly into the deep ditch.3、give me the gift of a grip top sock: a drip-drape, ship-shape, and tip-top sock.4、How many sheets could a sheet slitter slit if a sheet slitter could slit sheets?5、she sells seashells on the seashore. the seashells she sells are seashore seashells.6、that black lad was very sad because his dad had died in a bad accident in a factory.7、the thirty-three thieves thought that they thrilled the throne throughout thursday.8、If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite.9、Badmin was able to beat Bill at billiards, but Bill always beat Badmin badly at badminton.10、susan shines shoes and socks; she ceased shining shoes and socks for shoes and socks shock susan.11、Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See.12、i never felt a piece of felt which felt as fine as that felt felt, when first i felt that felt hat’s felt.13、while we were walking, we were watching window washers’ wash washington’s windows with warm washing water.14、how many good cookies could a good cook cook if a good cook could cook as many good cookies as a good cook could cook?15、sarah saw a shot-silk sash shop full of shot-silk sashes as the sunshine shone on the side of the shot-silk sash shop.16、A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together.17、Franc’s father is frying French fries for his five fire-fighter friends after they finished a fire-fighting in a factory.43、I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish.18、There is no need to light a night light on a light night like tonight. for a bright night light is just like a slight light.19、A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net.20、Amid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts.21、How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies.22、Whether the weather be fine or whether the weather be not.Whether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not.23、I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much.24、Peter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked?11. 2、if a wooodchuck could chuck wood?3、brad’s big black bath brush broke.4、how much wood would a woodchuck chuck5、Few free fruit flies fly from flames.6、bake big batches of bitter brown bread.7、ann and andy’s anniversary is in april.8、Can you can a can as a canner can can a can?9、six shimmering sharks sharply striking shins.10、thieves seize skis. the blue bluebird blinks.11、I scream, you scream, we all scream for ice-cream!12、Betty beat a bit of butter to make a better butter.13、ten tiny tigers tied ten tiny ties on their tiny tails.14、don’t pamper damp scamp tramps that camp under ramp lamps.15、Fifty-five flags freely flutter from the floating frigate.16、a woodchuck would chuck all the wood a woodchuck could chuck17、betty and bob brought back blue balloons from the big bazaar.18、no need to light a night light on a light night like tonight.19、the eggs he sells everyday are better than everybody else sells.20、Rita repeated what Reardon recited when Reardon read the remarks.21、a noise annoys an oyster, but a noisy noise annoys an oyster more!22、what a shame such a shapely sash should such shabby stitches show?23、fresh fried fish, fish fresh fried, fried fish fresh, fish fried fresh.24、you know new york, you need new york.you know you need unique new york.25、Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already.12. 2、Ruby Rugby’s brother bought and brought her back some rubber baby-buggy bumpers.鲁比勒比的哥哥买了一些四轮婴儿手推车。3、I saw Esau kissing Kate. I saw Esau, he saw me, and she saw I saw Esau.我看见埃素吻凯特。我看见埃素，埃素看见我，而凯特也看见我看见埃素。4、I thought a thought. But the thought I thought wasn’t the thought I thought I thought.我思考一个问题。可是，我所思考的问题并不是我认为自己正在思考的问题。5、Can you imagine an imaginary menagerie manager imagining managing an imaginary menagerie？你可以想象一个虚构的野生动物园经理幻想自己管理一个虚构的野生动物园吗？6、Pick a partner and practice passing, for if you pass proficiently, perhaps you’ll play professionally.选择一位队员练习传球，如果你能熟练地传球，你或许会成为一位专业球员。7、One smart fellow, he felt smart. Two smart fellows, they felt smart. Three smart fellows, they all felt smart.一个醒目的家伙，自觉十分醒目。两个醒目的家伙，两个也觉得自己很醒目。三个醒目的家伙，三个都觉得自己很醒目。8、I cannot bear to see a bear bear down upon a hare. When bare of hair he strips the hare, Right there I cry, “Forbear！”我实在不忍心看着大熊一步一步向野兔逼近。当大熊差不多将野兔所有的毛发拔掉，我大叫：「自制啊！」9、Of all the felt I ever felt, I never felt a piece of felt which felt as fine as that felt felt, when first I felt that felt hat’s felt.在我所触摸过的毡子中，我从未触摸过一块如此舒适的毡子，直至我试过这顶毡帽为止。10、I am not the pheasant plucker, I’m the pheasant plucker’s mate. I am only plucking pheasants ‘cause the pheasant plucker’s running late.我不是拔雉野鸡毛的人，我是他的助手。我在拔雉野鸡的毛，因为拔雉野鸡毛的人赶不及将雉野鸡毛拔掉。11、A flea and a fly flew up in a flue. Said the flea, “Let us fly！”Said the fly, “Let us flee！”So they flew through a flaw in the flue.一只跳蚤和一只苍蝇飞进烟道里。跳蚤说：“让我们飞吧！”苍蝇说：“让我们逃跑吧！”就这样，牠们就飞越了烟道里的一条裂纹。12、Moses supposes his toeses are roses, but moses supposes erroneously. For moses, he knowses his toeses aren’t roses as moses supposes his toeses to be！慕实施假设他的脚趾是玫瑰，可是，慕实施的假设错了。慕实施知道他的脚趾并不是玫瑰，因为他只是假设它们是玫瑰。13、Once upon a barren moor there dwelt a bear, also a boar. The bear could not bear the boar. The boar thought the bear a bore. At last the bear could bear no more of that boar that bored him on the moor, and so one morn he bored the boar - that boar will bore the bear no more.从前，在一个贫瘠的荒野里住了一只熊和一只公野猪。熊忍不了公野猪，公野猪又觉得熊是一只令人讨厌的东西。最后，那只熊忍不了那只令牠沉闷极了的公野猪，因此，在一个早上，那只熊把公野猪闷透了，自此以后，公野猪不再令熊沉闷了。13. 2、The cat catchers can’t catch caught cats.捉猫的人捉不到被捉住的猫。3、Cedar shingles should be shaved and saved.雪松盖板应刨好和妥为保全。4、A box of biscuits, a batch of mixed biscuits.一盒饼干，一炉杂饼干。5、The sixth sick sheik’s sixth sheep’s sick.第六个患病的酋长的第六只羊患病了。6、The soldiers shouldered shooters on their shoulders.士兵们用肩膀顶着发射装置。7、The bleak breeze blights the bright blue blossom.寒冷的微风把鲜蓝色的花丛吹得枯萎了！8、I correctly recollect Rebecca MacGregor’s reckoning.我准确地记起丽贝卡麦格拉歌的账单。9、Red lorry, yellow lorry, red lorry, yellow lorry.红的卡车、黄的卡车；红的卡车、黄的卡车。10、Cheryl’s chilly cheap chip shop sells Cheryl’s cheap chips.雪露的便宜辣椒薯条店卖便宜的薯条。11、The crow flew over the river with a lump of raw liver.那只乌鸦口里含着一块生的肝脏飞到河的另一边。12、Thank the other three brothers of their father’s mother’s brother’s side.谢谢舅公的另外三个兄弟。13、A big black bug bit a big black bear, made the big black bear bleed blood.大黑虫咬大黑熊，大黑熊流血了！14、Don’t pamper damp scamp tramps that camp under ramp lamps.不要纵容那些在斜坡上的街灯下栖身、湿着身子的、顽皮的流浪街童。15、I slit a sheet, a sheet I slit. Upon the slitted sheet, I sit.我撕开了一张纸，那张纸给我撕开了。在撕开了的纸上，我坐下了。14. 2、Mix, Miss Mix！觅斯，觅斯小姐！3、Cheap ship trip.便宜的海上旅程。4、Please pay promptly.请准时缴款。5、Pacific Lithograph.太平洋的平面印刷画。6、A laurel-crowned clown！戴桂冠的小丑。7、Chop shops stock chops.印章店备有印章。8、Real weird rear wheels.真正怪异的后轮胎。9、Preshrunk silk shirts.预先收缩了的丝质衬衣。10、Moose noshing much mush.慕思吃了很多玉米粥。1、Peggy Babcock.佩吉巴比确奇。2、Mix, Miss Mix！觅斯，觅斯小姐！3、Cheap ship trip.便宜的海上旅程。4、Please pay promptly.请准时缴款。5、Pacific Lithograph.太平洋的平面印刷画。6、A laurel-crowned clown！戴桂冠的小丑。7、Chop shops stock chops.印章店备有印章。8、Real weird rear wheels.真正怪异的后轮胎。9、Preshrunk silk shirts.预先收缩了的丝质衬衣。10、Moose noshing much mush.慕思吃了很多玉米粥。11、The epitome of femininity.女子气质的缩影。12、Quick kiss. Quicker kiss.快快的吻，更快的吻。13、Plague-bearing prairie dogs.感染瘟疫的草原犬鼠。14、Robin Redbreast’s bad breath.罗宾伟百斯的口气。15、The blue bluebird blinks.那只蓝色的知更鸟眨着眼睛。16、Mrs. Smith’s Fish Sauce Shop.史密夫太太的鱼酱店。17、Dust is a disk’s worst enemy.尘埃是磁盘的敌人。18、Diligence dismisseth despondency.勤奋能驱除沮丧。19、Do drop in at the Dewdrop Inn.到露珠旅馆要进内一坐。20、The sun shines on shop signs.阳光照落在商店的招牌上。21、I wish you were a fish in my dish.我巴不得你是我碟中的鱼。22、Crisp crusts crackle crunchily.松脆的面包皮被嚼得嘎吱嘎吱地响。23、Double bubble gum bubbles double.双重的泡泡糖能吹双重的泡泡。24、The ochre ogre ogled the poker.那只红褐色的吃人巨妖色迷迷地盯着拨火棒。25、A bloke’s back bike brake block broke.一个家伙的脚踏车后制动器坏了。15. 2、 I saw a saw that could not saw any other saw I ever saw. 3、 The sixth sick sheik’s sixth sheep’s sick. 4、 A good cook could cook as many cookies as a good cook who could cook cookies. 5、 Black bug bit a big black bear. But where is the big black bear that the big black bug bit? 6、 A big bug bit the little beetle but the little beetle bit the big bug back. 7、 I’m not the fig plucker,but the fig plucker’s son. But I’ll pluck figs until the fig plucker comes. 8、 If one doctor doctors anther doctor, does the doctor who doctors the doctor doctors the doctor the way the doctor is doctoring doctors? Or does the doctor doctor the way the doctor who doctors doctors? 9、 If a sledding snail went down a slippery slide, would a sail or slide down the slide? 10、 Betty bought butter but the butter was bitter, so Betty bought better butter to make the bitter butter better.16. 2、Amidst the mists and coldest frosts, with stoutest wrists and loudest boasts, he thrusts his fist against the posts and still insists he sees the ghosts.在满布薄雾，严寒期最冻的那天，他用最结实的手腕和最自夸的话用拳头猛力推打柱子，而且声称他见鬼。3、How many cookies could a good cook cook if a good cook could cook cookies?A good cook could cook as much cookies as a good cook who could cook cookies.如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢？一个好的厨师能做出和其它好厨师一样多的小甜饼。4、Whether the weather be fine or whether the weather be notWhether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not.无论是晴天或是阴天；无论是冷或是暖；不管喜欢与否，我们都要经受风雨。5、Underwood would wear underwear if Underwood knew where his underwear was.Underwood’s underwear was in Durwood’s woods.Underwood went into Durwood’s woods and got his underwear.Underwood.如果知道他的内衣在那里的话，他就会把它穿上。6、If one doctor doctors anther doctor, does the doctor who doctors the doctor doctors the doctor the way the doctor is doctoring doctors? Or does the doctor doctor the way the doctor who doctors doctors如果一位医生给另一位医生看病，给医生看病的医生会按照医生给医生看病的方式给那位医生看病吗？或是医生按照医生看病的医生的方式给那位医生看病？7、How much wood would a woodchuck chuck if a woodchuck could chuck wood? He would chuck, he would, as much as he could, and chuck as much wood as a woodchuck would if a woodchuck could chuck wood.假如一只美洲旱獭能够扔掉木头，它可扔掉多少木头呢？它会扔掉，它会，尽全力把木头扔掉。假如一只美洲旱獭能够扔掉木头，它会尽全力扔掉一只美洲旱獭能扔的木头。8、A bitter biting bittern bit a better brother bittern, and the bitter better bittern bit the bitter biter backAnd the bitter bittern, bitten, by the better bitten bittern, said: I’m a bitter biter bit, alack! 一只沮丧而尖刻的麻鳽咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鳽对它的兄弟说：我是一只充满怨恨的麻鳽！我害人终害己了！9、A tree toad loved a she-toad who lived up in a treeHe was a two-toed tree toad but a three-toed toad was sheThe two-toed tree toad tried to win the three-toed she-toad’s heart, for the two-toed tree toad loved the ground that the three-toed tree toad trodBut the two-toed tree toad tried in vainHe couldn’t please her whimFrom her tree toad bower with her three-toed power the she-toad vetoed him.一只树蟾蜍爱上另一只住在树上的蟾蜍女郎。它是一只二趾的蟾蜍，而蟾蜍女郎是三趾的。那只二趾的树蟾蜍尝试夺取三趾蟾蜍女郎的方心，因为二趾蟾蜍喜欢三趾蟾蜍女郎所踩踏的土地。可是，二趾蟾蜍徒劳无功。它不能满足三趾蟾蜍女郎的心意。在三趾蟾蜍女郎的卧室，三趾蟾蜍女郎用它的三趾能力将二趾蟾蜍的念头打消了。17. 2、I saw Esau kissing KateI saw Esau, he saw me, and she saw I saw Esau.我看见埃素吻凯特。我看见埃素，埃素看见我，而凯特也看见我看见埃素。3、The driver was drunk and drove the doctors car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。4、A pleasant place to place a plaice is a place where a plaice is pleased to be placed.放置鲽的地方是鲽愿意被放置的地方。5、Give me the gift of a grip top sock: a drip-drape, ship-shape, tip-top sock送我一对有紧袜带的袜子：悬挂状的、船形的、品质一流的袜子。6、Sandy sniffed sweet smelling sunflower seeds while sitting beside a swift stream.桑迪坐在湍急的小溪边尽情地品味着葵花子的香味。7、If you notice this notice you will notice that this notice is not worth noticing.你看到这张告示，你会发现这张告示是不直得留意的。8、A lusty lady loved a lawyer and longed to lure him from his laboratory.一个精力充沛的女士爱上了一位律师，她渴望诱惑律师离开实验室，投入她的怀抱。9、A big black bug bit a big black bear.Where’s the big black bear the big black bug bit? 大黑虫咬大黑熊，被大黑虫咬的大黑熊在那里呢？10、I thought a thoughtBut the thought I thought wasn’t the thought I thought I thought.我思考一个问题。可是，我所思考的问题并不是我认为自己正在思考的问题。11、A skunk sat on a stumpThe skunk thought the stump stunk, and the stump thought the skunk stunk.一只臭鼬坐在树墩上，臭鼬认为树墩发臭，而树墩又认为臭鼬发臭。12、Can you imagine an imaginary menagerie manager imagining managing an imaginary menagerie? 你可以想象一个虚构的野生动物园经理幻想自己管理一个虚构的野生动物园吗？13、Fuzzy wuzzy was a bearFuzzy wuzzy had no hairFuzzy wuzzy wasn’t fuzzyWas he? 毛茸茸、软绵绵的是玩具熊。毛茸茸、软绵绵，一根头发也没有。毛茸茸、软绵绵的玩具熊并不毛茸茸，是吗？14、The Wright rightly writes about the righting of the Rights rights to have rites on the right,right? 那工人政党正确写出了有关纠正右翼有坐在右边的礼仪权的建议，对吗？15、While we were walking, we were watching window washers wash Washington’s windows with warm washing water.当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。16、Wally Wrinkle wriggles his white,wrinkled wigWyatt wondered why the wom wires were not wrapped right.Wally Wrinkle扭动着他皱皱的白色假发。Wyatt对这些旧的线没有被包好感到惊讶。17、Brisk brave brigadiers brandished broad bright blades, blunderbusses, and bludgeons – balancing them badly.敏捷而勇敢的陆军旅长们挥舞着锋利的刀剑、大口径前膛枪和大头短棒——身体差点失去平衡。18、There is no need to light a night light on a light night like tonight.for a bright night light is just like a slight light.像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。19、I cannot bear to see a bear bear down upon a hareWhen bare of hair he strips the hare, Right there I cry, Forbear! 我实在不忍心看着大熊一步一步向野兔逼近。当大熊差不多将野兔所有的毛发拔掉，我大叫：自制啊！20、A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together.一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。21、I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish.我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。22、A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net.一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口23、I am not the pheasant plucker, I’m the pheasant plucker’s mateI am only plucking pheasants ‘cause the pheasant plucker’s running lat.我不是拔雉野鸡毛的人，我是他的助手。我在拔雉野鸡的毛，因为拔雉野鸡毛的人赶不及将雉野鸡毛拔掉。18. 2、Kris Kringle carefully crunched on candy canes.克里斯克理高小心地嚼甘蔗。3、Fred fed Ted bread, and Ted fed Fred bread.弗雷德喂特德吃面包，特德喂弗雷德吃面包。4、Betty beat a bit of butter to make a better batter.贝蒂搅拌一些牛油，令脆浆更可口。5、I scream, you scream, we all scream for ice-cream!我叫喊，你叫喊，我们都喊着要冰淇淋！6、I correctly recollect Rebecca MacGregor’s reckoning.我准确地记起丽贝卡麦格拉歌的账单。7、Gertie’s great-grandma grew aghast at Gertie’s grammar格蒂的曾祖母被格蒂的文法吓呆了。8、A tidy tiger tied a tie tighter to tidy her tiny tail.一只老虎将领带系紧，清洁它的尾巴。9、Just think, that sphinx has a sphincter that stinks!试想想，那个狮身人面像的括约肌发臭了！10、Bright blows the broom on the brook’s bare brown banks.布赖特吹动在小溪旁棕色的土地上的扫帚。11、Give papa a cup of proper coffee in a copper coffee cup.给爸爸一杯用铜制咖啡杯盛着的正统咖啡。12、Cheryl’s chilly cheap chip shop sells Cheryl’s cheap chips.雪露的便宜辣椒薯条店卖便宜的薯条。13、Xmas wrecks perplex and vex.X-ray checks clear chests.圣诞节使人困惑又使人恼火。X光照出清楚的胸透照片。14、Betty and Bob brought back blue balloons from the big bazaar.贝蒂和鲍勃在大型的义卖市场买了蓝汽球回来。15、If Stu chews shoes, should Stu choose the shoes he chews? 如史调咀嚼鞋子，史调应否选择他正在咀嚼的鞋子呢？16、Since this wristwatch got all washed, oh,how it jumps and jerks! 由于这块手表已经洗了，瞧它一跳一跳的！17、A big black bug bit a big black bear, made the big black bear bleed blood大黑虫咬大黑熊，大黑熊流血了！18、Don’t pamper damp scamp tramps that camp under ramp lamps.不要纵容那些在斜坡上的街灯下栖身、湿着身子的、顽皮的流浪街童。19、How much dew would a dewdrop drop if a dewdrop could drop dew? 如果一颗露珠会掉下露水，那么一颗露珠会掉下多少露水呢？20、I slit a sheet, a sheet I slitUpon the slitted sheet, I sit.我撕开了一张纸，那张纸给我撕开了。在撕开了的纸上，我坐下了。21、He thrusts his fists against the posts and still insists he sees the ghosts.他用拳头猛力推打柱子，而且声称他见鬼。22、Knife and a fork, bottle and a cork, that is the way you spell New York.刀子和叉子，瓶子和木塞，这是你拼写纽约的方法。19. 1、Greek grapes.希腊葡萄。2、Inchworm’s itching蠕动的瘙痒3、Flash message! 闪烁的信息。4、Knapsack straps.背包带子。5、Black bugs’ blood.黑虫的血。6、Cheap ship trip便宜的海上旅程。7、Ed had edited it.埃已将它编辑了。8、Are our oars oak? 我们的桨是橡树吗？9、Good blood, bad blood.好血，坏血。10、Real wristwatch straps.真正的表带。11、Chop shops stock chops.印章店备有印章。12、Freshly fried fresh flesh.鲜炸鲜肉。13、Freshly-fried flying fish.鲜炸飞鱼。14、Dust is a disk’s worst enemy.尘埃是磁盘的敌人。15、A noisy noise annoys an oyster.嘈吵的噪音惹恼牡蛎。16、Diligence dismisseth despondency.勤奋能驱除沮丧。17、Do drop in at the Dewdrop Inn.到露珠旅馆要进内一坐。18、Brad’s big black bath brush broke.布拉德的大浴刷子断了。19、Flee from fog to fight flu fast.避开浓雾，感冒会快点痊愈。20、Will will not write a real willWill.不会写真实的遗嘱。21、Girl gargoyle, guy gargoyle.女孩造型的滴水嘴，男孩造型的滴水嘴。22、I wish you were a fish in my dish.我巴不得你是我碟中的鱼。23、Crisp crusts crackle crunchily.松脆的面包皮被嚼得嘎吱嘎吱地响。24、Double bubble gum bubbles double.双重的泡泡糖能吹双重的泡泡。25、Listen to the local yokel yodel.听听那个本地土包子唱的岳得尔调。26、Betty better butter Brad’s bread.贝蒂替布拉德的面包涂牛油了！27、Give MrSnipa’s wife’s knife a swipe把史立巴先生的太太的刀子抹净。28、Friendly Frank flips fine flapjacks友善的法兰克用手捻着美味的饼干。29、I washed all the wheels and the works.我把所有轮子和车间都洗了。30、Lily ladles little Letty’s lentil soup.莉莉替小历蒂盛小扁豆汤。31、A bloke’s back bike brake block broke一个家伙的脚踏车后制动器坏了。32、Cedar shingles should be shaved and saved.雪松盖板应刨好和妥为保全。33、I wish I had not washed this wristwatch.我希望我没有洗这块手表就好啦。20. 英语绕口令带翻译。give me the gift of a grip top sock: a drip-drape, ship-shape, and tip-top sock. 给我一双有禁袜带的袜子：悬挂状的，船行的，品质一流的袜子。betty and bob brought back blue balloons from the big bazaar. betty和bob从大杂货店市场上买了蓝气球。susan shines shoes and socks; she ceased shining shoes and socks for shoes and socks shock susan. susan把鞋子和袜子擦亮，她停止了将鞋子和袜子擦亮，因为鞋子和袜子把susan吓坏了。sarah saw a shot-silk sash shop full of shot-silk sashes as the sunshine shone on the side of the shot-silk sash shop. 萨拉看到闪光丝饰品店挂满了闪光丝饰品，好象太阳在店边上发出刺眼的光芒。chop shops stock chops. 印章店备有印章。brad’s big black bath brush broke. brad’s的黑色大浴刷断了。six shimmering sharks sharply striking shins. 六条闪亮的鲨鱼吸引人的胫骨。don’t pamper damp scamp tramps that camp under ramp lamps. 不要纵容那些斜坡的街灯下露营的湿着身子的流浪街童。i never felt a piece of felt which felt as fine as that felt felt, when first i felt that felt hat‘s felt. 在我了解到那个毡帽的手感后，再也没有觉得哪个毛毡的手感和那次感觉得一样好了。what a shame such a shapely sash should such shabby stitches show? 这幺有形的腰带却用这幺破旧的缝线，多丢人啊。thieves seize skis. the blue bluebird blinks. 小偷抓住了滑雪板。 蓝色的知更鸟在眨眼。英语绕口令(tongue twister)带翻译The man with fair hair dare not repair their chairs there because there is a bear there. 金发男子不敢在那修他们的椅子因为有只熊在那儿。Good cookies could be cooked by a good cook if a good cook could cook good cookies. 好的曲奇饼出自好的厨师如果这个厨师可以烤出好的曲奇饼。She sells sea shlls on the seashore .The seashells she sells are seashells ,she is sure. 她在海边卖贝壳。她确定，她卖的贝类是贝壳。A bitter biting bittern bit a better brother bittern, and the bitter better bittern bit the bitter bittern back. And the bitter bittern, bitten, by the better bitten bittern, said: “I’m a bitter biter bit, alack! 最牛的英语绕口令:一只沮丧而尖刻的麻鹊咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鹊对它的兄弟说：“我是一只充满怨恨的麻鹊！我害人终害己了！How much wood would a woodchuck chuck if a woodchuck could chuck wood? 如果一只美洲旱獭会扔木头,那么会扔多少木头呢?Ann sent Andy ten hens and Andy sent Ann ten pens。 安给安迪送了10只母鸡，安迪给安送了10支钢笔。Canners can can what they can can but can not can things can’t be canned。 罐头工人能够把他们能做成罐头的东西制成罐头，但是不能把无法制成罐头的东西制成罐头。Good cookies could be cooked by a good cook if a good cook could cook good cookies。 如果一位好的厨师能做出美味小甜品的话，那么好吃的小甜品是能够由这位厨师制作出来的。Jenny and Jimmy went to Jamaica and Germany in January, but Joan and John went to Jordan and Japan in June and July。 詹妮和吉米一月去了牙买加和德国，而琼和约翰在六、七月去了约旦和日本。A cricket critically cricked at a critical cricket match, and so this cricket quitted the cricket match quickly。 一只蟋蟀在一场关键性斗蟋比赛中发生严重的痉挛，于是这只蟋蟀很快退出了比赛。Bill’s big brother is building a beautiful building between two big brick blocks 比尔的哥哥正在两座大砖房之间建造一座漂亮的房子。A flea and a fly were trapped in a flue, and they tried to flee for their life. The flea said to the fly “let’’s flee!” and the fly said to the flea”Let’s fly!.Finally both the flea and fly managed to flee through a flaw in the flue。 一只跳蚤和一只苍蝇被诱进了一根管子里，它们努力逃命。跳蚤对苍蝇说：“让我们逃吧!”苍蝇对跳蚤说：“让咱们飞吧!”最后，两个都设法通过那管子的一个裂隙逃走了，绕口令《英语绕口令带翻译》(http://www.unjs.com)。Peter Piper picked a peck of picket prepared by his parents and put them in a big paper plate。 彼得·派博把他伯父母腌制的泡菜辣椒取出许多，并且将它们放在一个大纸盘里。There are thirty thousand feathers on that thrush’s throat。 那只画眉鸟的颈前就长着三万根羽毛。How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。I scream, you scream, we all scream for ice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋!I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish. 我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。Can you imagine an imaginary menagerie manager imagining managing an imaginary menagerie? 你可以想象一个虚构的野生动物园经理幻想自己管理一个虚构的野生动物园吗？Two little funny birds, Sitting on a wall; One named Peter, The other named Paul. Fly away, Peter! Fly away, Paul! Come back, Peter! Come back, Paul! Two little funny birds, Sitting on a wall; One named Peter, The other named Paul. 两只小鸟墙上坐， 一只叫彼得，一只叫保罗。 飞走了彼得，飞走了保罗， 飞回来了彼得，飞回来了保罗。 两只小鸟墙上坐， 一只叫彼得，一只叫保罗。I scream, you scream, we all scream for icecream! 我叫喊，你叫喊，我们都喊着要冰淇淋！How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢？ 一个好的厨师能做出和其它好厨师一样多的小甜饼。The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。Whether the weather be fine or whether the weather be not. Whether the weather be cold or whether the weather be hot. We’ll weather the weather whether we like it or not. 无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。Peter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers. Where’s the peck of pickled peppers Peter Piper picked? 彼德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿？I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much。 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。 如果这种想法是我曾经想到的想法，我就不会想那么多了。Amid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts. 雾蒙蒙，冰霜冻， 手腕儿空空，话儿涌， 只见他猛所拳头往柱子上砸， 直说自己把鬼碰。A tidy tiger tied a tie tighter to tidy her tiny tail。 一只老虎将领带系紧，清洁它的尾巴。A bloke’s back bike brake block broke。 一个家伙的脚踏车后制动器坏了。A big black bug bit a big black bear, made the big black bear bleed blood。 大黑虫咬大黑熊，大黑熊流血了！How much dew would a dewdrop drop if a dewdrop could drop dew? 如果一颗露珠会掉下露水，那么一颗露珠会掉下多少露水呢？英语绕口令大全：英语绕口令带翻译 1. A big black bug bit a big black bear, made the big black bear bleed blood。 大黑虫咬大黑熊，大黑熊流血了!21. 1.Abigblackbugbitabigblackbear,madethebigblackbearbleedblood。 大黑虫咬大黑熊，大黑熊流血了! 2.Abloke’sbackbikebrakeblockbroke。 一个家伙的脚踏车后制动器坏了。 3.Abitterbitingbitternbitabetterbrotherbittern,andthebitterbetterbitternbitthebitterbitternback.Andthebitterbittern,bitten,bythebetterbittenbittern,said:“I’mabitterbiterbit,alack!” 一只沮丧而尖刻的麻鹊咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鹊对它的兄弟说：“我是一只充满怨恨的麻鹊!我害人终害己了!” 4.Howmanycookiescouldagoodcookcookifagoodcookcouldcookcookies?Agoodcookcouldcookasmuchcookiesasagoodcookwhocouldcookcookies. 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 5.Thedriverwasdrunkanddrovethedoctor’scardirectlyintothedeepditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 6.Whethertheweatherbefineorwhethertheweatherbenot.Whethertheweatherbecoldorwhethertheweatherbehot.We’llweathertheweatherwhetherwelikeitornot. 无论是晴天或是阴天。无论是冷或是暖，不管喜欢与否，我们都要经受风霜雨露。 7.PeterPiperpickedapeckofpickledpeppers.ApeckofpickledpeppersPeterPiperpicked.IfPeterPiperpickedapeckofpickledpeppers,Where’sthepeckofpickledpeppersPeterPiperpicked? 彼德派柏捏起一撮泡菜。彼德派柏捏起的是一撮泡菜。那么彼德派捏起的泡菜在哪儿? 8.Ithoughtathought.ButthethoughtIthoughtwasn’tthethoughtIthoughtIthought.IfthethoughtIthoughtIthoughthadbeenthethoughtIthought,Iwouldn’thavethoughtsomuch. 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 9.Amidthemistsandcoldestfrosts,Withbarestwristsandstoutestboasts,Hethrustshisfistsagainsttheposts,Andstillinsistsheseestheghosts. 雾蒙蒙，冰霜冻，手腕儿空空，话儿涌，只见他猛所拳头往柱子上砸，直说自己把鬼碰。 10.BadminwasabletobeatBillatbilliards,butBillalwaysbeatBadminbadlyatbadminton. 巴德明在台球上能够打败比尔，但是打羽毛球比尔常常大败巴德明。 11.Bettybeatabitofbuttertomakeabetterbutter. 贝蒂敲打一小块黄油要做一块更好的奶油面。 12.RitarepeatedwhatReardonrecitedwhenReardonreadtheremarks. 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13.Fewfreefruitfliesflyfromflames. 没有几只果蝇从火焰中飞过去。 14.Fifty-fiveflagsfreelyflutterfromthefloatingfrigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 15.Thereisnoneedtolightanightlightonalightnightliketonight.forabrightnightlightisjustlikeaslightlight. 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 17.Apleasantpeasantkeepsapleasantpheasantandboththepeasantandthepheasantarehavingapleasanttimetogether. 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 18.Howmanysheetscouldasheetslitterslitifasheetslittercouldslitsheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢? 19.Mr.SeeownedasawandMr.Soarownedaseesaw.NowSee’ssawsawedSoar’sseesawbeforeSoarsawSee. 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 20.Ifyou’rekeenonstunningkitesandcunningstunts,buyacunningstunningstuntkite. 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。 21.TedsentFredtenhensyesterdaysoFred’sfreshbreadisreadyalready. 特德昨天给弗莱德送去了十只母鸡，所以弗莱德的新鲜面包已经准备好了。 22.AFinnishfishernamedFisherfailedtofishanyfishoneFridayafternoonandfinallyhefoundoutabigfissureinhisfishingnet. 一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口。 23.Afleaandaflyflewupinaflue.Saidtheflea,“Letusfly!”Saidthefly,“Letusflee!”Sotheyflewthroughaflawintheflue。 一只跳蚤和一只苍蝇飞进烟道里。跳蚤说：“让我们飞吧!”苍蝇说：“让我们逃跑吧!”就这样，它们就飞越了烟道里的一条裂纹。 24.AwriternamedWrightwasinstructinghislittlesonhowtowriteWrightright.Hesaid:”ItisnotrighttowriteWrightas’rite’-trytowriteWrightaright! (一个名叫赖特的作家正在指导他年幼的儿子怎样把赖特写对。他说：“把赖特写成‘仪式’是不对的-要把赖特写正确!”) 25.AnnsentAndytenhensandAndysentAnntenpens。 (安给安迪送了10只母鸡，安迪给安送了10支钢笔。) 26.Cannerscancanwhattheycancanbutcannotcanthingscan’tbecanned。 (罐头工人能够把他们能做成罐头的东西制成罐头，但是不能把无法制成罐头的东西制成罐头。) 27.Goodcookiescouldbecookedbyagoodcookifagoodcookcouldcookgoodcookies。 (如果一位好的厨师能做出美味小甜品的话，那么好吃的小甜品是能够由这位厨师制作出来的。) 28.JennyandJimmywenttoJamaicaandGermanyinJanuary,butJoanandJohnwenttoJordanandJapaninJuneandJuly。 (詹妮和吉米一月去了牙买加和德国，而琼和约翰在六、七月去了约旦和日本。) 29.Acricketcriticallycrickedatacriticalcricketmatch,andsothiscricketquittedthecricketmatchquickly。 (一只蟋蟀在一场关键性斗蟋比赛中发生严重的痉挛，于是这只蟋蟀很快退出了比赛。) 30.Atutorwhotootedaflutetriedtotutortwotooterstotoot.Saidthetwototheirtutor,“Isithardertotootortotutortwotooterstotoot?” 一个吹笛的导师尝试教两个吹笛者吹笛。那两个学吹笛的问导师：“吹笛难，还是教两个学吹笛的人吹笛难呢?” 31.Therearethirtythousandfeathersonthatthrush’sthroat。 (那只画眉鸟的颈前就长着三万根羽毛。) 32.Afleaandaflyweretrappedinaflue,andtheytriedtofleefortheirlife.Thefleasaidtothefly”let’’sflee!”andtheflysaidtotheflea”Let’sfly!.Finallyboththefleaandflymanagedtofleethroughaflawintheflue。 (一只跳蚤和一只苍蝇被诱进了一根管子里，它们努力逃命。跳蚤对苍蝇说：“让我们逃吧!”苍蝇对跳蚤说：“让咱们飞吧!”最后，两个都设法通过那管子的一个裂隙逃走了。) 33.PeterPiperpickedapeckofpicketpreparedbyhisparentsandputtheminabigpaperplate。 (彼得·派博把他伯父母腌制的泡菜辣椒取出许多，并且将它们放在一个大纸盘里。) 34.Canyoucanacanasacannercancanacan? 你能够像罐头工人一样装罐头吗? 35.Iwishtowishthewishyouwishtowish,butifyouwishthewishthewitchwishes,Iwon’twishthewishyouwishtowish. 我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。 36.Iscream,youscream,weallscreamforice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋! 37.Franc’sfatherisfryingFrenchfriesforhisfivefire-fighterfriendsaftertheyfinishedafire-fightinginafactory. 在结束对一家工厂的灭火战斗以后，弗兰克的父亲在为他的五个消防队员朋友炸制法式土豆(炸薯条) 38.Bill’sbigbrotherisbuildingabeautifulbuildingbetweentwobigbrickblocks (比尔的哥哥正在两座大砖房之间建造一座漂亮的房子。) 39.Howmuchdewwouldadewdropdropifadewdropcoulddropdew? 如果一颗露珠会掉下露水，那么一颗露珠会掉下多少露水呢? 40.Asnow-whiteswanswamswiftlytocatchaslowly-swimmingsnakeinalake。 湖中一只雪白的天鹅快速地游动着去追赶一条慢慢游动的蛇。 41.Askunksatonastump.Theskunkthoughtthestumpstunk,andthestumpthoughttheskunkstunk。 一只臭鼬坐在树墩上，臭鼬认为树墩发臭，而树墩又认为臭鼬发臭。 42.Sandysniffedsweetsmellingsunflowerseedswhilesittingbesideaswiftstream。 桑迪坐在湍急的小溪边尽情地品味着葵花子的香味。 43.Apleasantpeasantkeepsapleasantpheasantandboththepeasantandthepheasantarehavingapleasanttimetogether。 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 44.AllIwantisapropercupofcoffeemadeinapropercoppercoffeepot,youcanbelieveitornot,butIjustwantacupofcoffeeinapropercoffeepot.Tincoffeepotsorironcoffeepotsareofnousetome.IfIcan’thaveapropercupofcoffeeinapropercoppercoffeepot,I’llhaveacupoftea! 我只想要一杯用真正铜制的咖啡壶煮的正统咖啡。信不信由你，我只想要一杯用真正铜制的咖啡壶煮的正统咖啡。锡制的咖啡壶和铁制的咖啡壶对我而言也是没用的。假如我不能要一杯用真正铜制的咖啡壶煮的正统咖啡，那我就要一杯茶吧!22. 1、A box of biscuits, a batch of mixed biscuits. 一盒饼干，一炉杂饼干。 2、Never trouble about trouble,until troubles troubles you. 从不自找麻烦,直到麻烦来麻烦你。 Can you can a can as a canner can can a can? 你能够像罐头工人一样装罐头吗? 3、bloke’s back bike brake block broke. 一个家伙的脚踏车后制动器坏了。 4、Knife and a fork, bottle and a cork, that is the way you spell New York. 刀子和叉子，瓶子和木塞，这是你拼写纽约的方法。 5、If you notice this notice you will notice that this notice is not worth noticing. 若你看到这张告示，你会发现这张告示是不直得留意的。 6、I thought a thought. But the thought I thought wasn’t the thought I thought I thought. 我思考一个问题。可是，我所思考的问题并不是我认为自己正在思考的问题。 7、A tidy tiger tied a tie tighter to tidy her tiny tail. 一只老虎将领带系紧，清洁它的尾巴。 8、Lily ladles little Letty’s lentil soup. 莉莉替小历蒂盛小扁豆汤。 9、A big black bug bit a big black bear, made the big black bear bleed blood. 大黑虫咬大黑熊，大黑熊流血了! 10、Give papa a cup of proper coffee in a copper coffee cup. 给爸爸一杯用铜制咖啡杯盛着的正统咖啡。 11、How much wood would a woodchuck chuck if a woodchuck could chuck wood? He would chuck, he would, as much as he could, and chuck as much wood as a woodchuck would if a woodchuck could chuck wood. 假如一只美洲旱獭能够扔掉木头，它可扔掉多少木头呢?它会扔掉，它会，尽全力把木头扔掉。假如一只美洲旱獭能够扔掉木头，它会尽全力扔掉一只美洲旱獭能扔的木头。 12、Fred fed Ted bread, and Ted fed Fred bread. 弗雷德喂特德吃面包，特德喂弗雷德吃面包。 13、Flee from fog to fight flu fast. 避开浓雾，感冒会快点痊愈。 14、Gertie’s great-grandma grew aghast at Gertie’s grammar. 格蒂的曾祖母被格蒂的文法吓呆了。 15、I saw Esau kissing Kate. I saw Esau, he saw me, and she saw I saw Esau. 我看见埃素吻凯特。我看见埃素，埃素看见我，而凯特也看见我看见埃素。 16、If Stu chews shoes, should Stu choose the shoes he chews? 假如史调咀嚼鞋子，史调应否选择他正在咀嚼的鞋子呢? 17、While we were walking, we were watching window washers wash Washington’s windows with warm washing water. 我们散步的时候，看到窗户清洁工正在用温水清洁华盛顿家的窗户。 18、Can you can a can as a canner can can a can. 你能像装罐工装的罐子一样,装一个罐子吗? 19、A tidy tiger tied a tie tighter to tidy her tiny tail。 一只老虎将领带系紧，清洁它的尾巴。 20、A flea and a fly flew up in a flue. Said the flea, “Let us fly!” Said the fly, “Let us flee!” So they flew through a flaw in the flue。 一只跳蚤和一只苍蝇飞进烟道里。跳蚤说：“让我们飞吧!”苍蝇说：“让我们逃跑吧!”就这样，它们就飞越了烟道里的一条裂纹。 21、The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 22、How much dew would a dewdrop drop if a dewdrop could drop dew? 如果一颗露珠会掉下露水，那么一颗露珠会掉下多少露水呢? 23、Will will not write a real will. Will不会写真实的遗嘱。 24、A laurel-crowned clown! 戴桂冠的小丑。 25、A snow-white swan swam swiftly to catch a slowly-swimming snake in a lake。 湖中一只雪白的天鹅快速地游动着去追赶一条慢慢游动的蛇。 26、A skunk sat on a stump. The skunk thought the stump stunk, and the stump thought the skunk stunk。 一只臭鼬坐在树墩上，臭鼬认为树墩发臭，而树墩又认为臭鼬发臭。 27、A tutor who tooted a flute tried to tutor two tooters to toot. Said the two to their tutor, “Is it harder to toot or to tutor two tooters to toot?” 一个吹笛的导师尝试教两个吹笛者吹笛。那两个学吹笛的问导师：“吹笛难，还是教两个学吹笛的人吹笛难呢?” 28、Sandy sniffed sweet smelling sunflower seeds while sitting beside a swift stream。 桑迪坐在湍急的小溪边尽情地品味着葵花子的香味。 29.Whether the weather be fine or whether the weather be not. Whether the weather be cold or whether the weather be hot. We’ll weather the weather whether we like it or not. 无论是晴天或是阴天;无论是冷或是暖;不管喜欢与否，我们都要经受风雨。 30、I scream, you scream, we all scream for ice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋! 31. I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish. 我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。 32. I scream, you scream, we all scream for ice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋! 33. How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 34. The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 35. Whether the weather be fine or whether the weather be not. Whether the weather be cold or whether the weather be hot. We’ll weather the weather whether we like it or not. 无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。23. 1、Greek grapes.希腊葡萄。 2、Inchworm’s itching蠕动的瘙痒 3、Flash message! 闪烁的信息。 4、Knapsack straps.背包带子。 5、Black bugs’ blood.黑虫的血。 6、Cheap ship trip便宜的海上旅程。 7、Ed had edited it.埃已将它编辑了。 8、Are our oars oak? 我们的桨是橡树吗? 9、Good blood, bad blood.好血，坏血。 10、Real wristwatch straps.真正的表带。 11、Chop shops stock chops.印章店备有印章。 12、Freshly fried fresh flesh.鲜炸鲜肉。 13、Freshly-fried flying fish.鲜炸飞鱼。 14、Dust is a disk’s worst enemy.尘埃是磁盘的敌人。 15、A noisy noise annoys an oyster.嘈吵的噪音惹恼牡蛎。 16、Diligence dismisseth despondency.勤奋能驱除沮丧。 17、Do drop in at the Dewdrop Inn.到露珠旅馆要进内一坐。 18、Brad’s big black bath brush broke.布拉德的大浴刷子断了。 19、Flee from fog to fight flu fast.避开浓雾，感冒会快点痊愈。 20、Will will not write a real willWill.不会写真实的遗嘱。 21、Girl gargoyle, guy gargoyle.女孩造型的滴水嘴，男孩造型的滴水嘴。 22、I wish you were a fish in my dish.我巴不得你是我碟中的鱼。 23、Crisp crusts crackle crunchily.松脆的面包皮被嚼得嘎吱嘎吱地响。 24、Double bubble gum bubbles double.双重的泡泡糖能吹双重的泡泡。 25、Listen to the local yokel yodel.听听那个本地土包子唱的岳得尔调。 26、Betty better butter Brad’s bread.贝蒂替布拉德的面包涂牛油了! 27、Give MrSnipa’s wife’s knife a swipe把史立巴先生的太太的刀子抹净。 28、Friendly Frank flips fine flapjacks友善的法兰克用手捻着美味的饼干。 29、I washed all the wheels and the works.我把所有轮子和车间都洗了。 30、Lily ladles little Letty’s lentil soup.莉莉替小历蒂盛小扁豆汤。 31、A bloke’s back bike brake block broke一个家伙的脚踏车后制动器坏了。 32、Cedar shingles should be shaved and saved.雪松盖板应刨好和妥为保全。 33、I wish I had not washed this wristwatch.我希望我没有洗这块手表就好啦。 34、A box of biscuits, a batch of mixed biscuits.一盒饼干，一炉杂饼干。 35、Kris Kringle carefully crunched on candy canes.克里斯克理高小心地嚼甘蔗。24. She sells seashells on the seashore. And the shells she sells are seashells, I am sure. ‘cause if she sells shell at the seashore, The shells sells are seashells, for sure. A big black bug bit the back of a big black bear. The big black bear bit back the big black bug. Robert Rolly rolled a round roll round. If Robert Rolly rolled a round roll round, Where is the round roll, Robert Rolly rolled around? Ann sent Andy ten hens and Andy sent Ann ten pens. Cat, Cat, catch that fat rat. Sally always suffers from sea-sickness when she is at sea. Surely the sun shall shine soon. The hunter and his huge horse hide behind in house. Peter Piper picked a peck of pickled peppers. Jack had a rat; Sam had a cat. Sam’s cat ate Jack’s rat. Jack asked Sam to pay for his rat. Sam said, “I’ll give you my cat for your rate.” Good morning to all who walk, Good morning to all who crawl; Good morning to all who soar, Or swim, good morning, I call. To broad and to small to short and to tall; Good morning, good morning to all. The little addled adder added ads. All Al’s sly allies lie. John, where had had “had had’, had had “had had’ had had his master’s approval. A big bug hit a bold bald bear and the bold bald bear bled blood badly. Blake the baker bakers black bread. Betty Block blows big black bubbles. A bachelor botched a batch of badly baked biscuits. Bess is the best backward blue-blowing bugler in the Boston brass band. Brught bloom the blossoms on the brook’s bare brown banks. A cup of proper coffee in a copper coffee cup. You cross a cross across a cross, or stick a cross across a cross. If you must cross a coarse cross cow across a crowded-cow crossing.25. 1. Can you can a can as a canner can can a can? 你能够像罐头工人一样装罐头吗? 2. I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish。 我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。 3. I scream, you scream, we all scream for ice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋! 4. How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies。 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 5. The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 6. Whether the weather be fine or whether the weather be not。 Whether the weather be cold or whether the weather be hot。 We’ll weather the weather whether we like it or not。 无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。 7. Peter Piper picked a peck of pickled peppers。 A peck of pickled peppers Peter Piper picked。 If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked? 彼德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿? 8. I thought a thought. But the thought I thought wasn’t the thought I thought I thought。 If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much。 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 9. Amid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts。 雾蒙蒙，冰霜冻， 手腕儿空空，话儿涌， 只见他猛所拳头往柱子上砸， 直说自己把鬼碰。 10. Badmin was able to beat Bill at billiards, but Bill always beat Badmin badly at badminton。 巴德明在台球上能够打败比尔，但是打羽毛球比尔常常大败巴德明。 11. Betty beat a bit of butter to make a better batter。 贝蒂敲打一小块黄油要做一块更好的奶油面。 12. Rita repeated what Reardon recited when Reardon read the remarks。 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13. Few free fruit flies fly from flames。 没有几只果蝇从火焰中飞过去。 14. Fifty-five flags freely flutter from the floating frigate。 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 15. There is no need to light a night light on a light night like tonight。 for a bright night light is just like a slight light。 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 17. A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together。 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 18. How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢? 19. Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See。 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 20. If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite。 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。 21. Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already。 特德昨天给弗莱德送去了十只母鸡，所以弗莱德的新鲜面包已经准备好了。 22. A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net。 一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口。 23. Franc’s father is frying French fries for his five fire-fighter friends after they finished a fire-fighting in a factory。 在结束对一家工厂的灭火战斗以后，弗兰克的父亲在为他的五个消防队员朋友炸制法式土豆(炸薯条)26. 【导语】绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。《简短的儿童普通话趣味绕口令》是无忧考网为大家准备的，希望对大家有帮助。 1、四和十：四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿，谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 2、小牛赔油：小牛放学去打球，踢倒老刘一瓶油，小回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛不油。 3、算算看：老杜和老顾，齐走富裕路。老杜养了兔，老顾养了鹿。老顾给老杜十只兔，两家平等同只数;老顾给老杜十只鹿，顾家是杜家一半数。请问老杜养了多少兔，再问老顾养了多少鹿。给你一个简单的。 4、白老八：白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 5、酸枣子：山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 6、司小四和史小世：司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 7、老六放牛：柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 8、六十六头牛：六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 9、天上七颗星：天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。连念七遍就聪明。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 10、喇嘛和哑巴：打南边来了个喇嘛，手里提拉着五斤鳎目。打北边来了个哑巴，腰里别着个喇叭。南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 1、三哥三嫂子，请借给我三斗三升酸枣子，等我明年树上摘了新枣子，再把借的这三斗三升酸枣子，如数还您三哥三嫂子。 2、天津和北京，两座兄弟城。津京两字韵，不是一个音。津字前鼻韵，京字后鼻音。请你仔细听，发音要分清。 3、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 4、华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 5、南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。? 6、说你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别胡炖乱炖假充会炖看炖坏了我的炖冻豆腐。 7、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 8、清早起来雨稀稀，王七上街去买席，骑着毛驴跑得急，捎带卖蛋又贩梨。一跑跑到小桥西，毛驴一下失了蹄，打了蛋，撒了梨，跑了驴，急的王七眼泪滴，又哭鸡蛋又骂驴。 9、北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 10、小琳琳，爱银铃，琳琳用劲摇银铃，银铃的铃声真好听。风吹银铃叮铃铃，小琳以为铃失灵，银铃笑琳琳真是不机灵!27. 【导语】绕口令又称急口令、吃口令、拗口令等。是一种中国传统的语言游戏，由于它是将若干双声、叠词词汇或发音相同、相近的语、词有意集中在一起，组成简单、有趣的语韵，要求快速念出，所以读起来使人感到节奏感强，妙趣横生。以下是无忧考网为大家准备的，希望对大家有帮助。 四和十 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿，谁说四十是”细席”，他的舌头没用力;谁说十四是”适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 兜装豆 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 两只鹅 河边两只鹅，一同过了河;白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 四个头 天上有日头，地下有石头，嘴里有舌头，瓶口有塞头。天上是日头不是石头，地下是石头不是日头，嘴里是舌头不是塞头，瓶中是塞头不是舌头。 一个人 这边一个人，挑了一挑瓶。那边一个人，担了一挑盆。瓶碰烂了盆，盆碰烂了瓶。卖瓶买盆来赔盆，卖盆买瓶来赔瓶。瓶不能赔盆，盆不能赔瓶。 一场空 抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 学捏梨 盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏泥，比比，真梨、假梨差不离。 《糊灯笼》 红红糊红粉灯笼，给军属送光荣灯;芬芬糊粉红灯笼，给军属送灯光荣;红红糊完红粉灯笼，糊粉红灯笼;芬芬糊完粉红灯笼，糊红粉灯笼。 《灰损肥》 一堆肥，一堆灰，肥混灰，灰损肥，不要肥混灰，防止灰损肥。 《算算看》 老杜和老顾，齐走富裕路。老杜养了兔，老顾养了鹿。老顾给老杜十只兔，两家平等同只数;老顾给老杜十只鹿，顾家是杜家一半数。请问老杜养了多少兔，再问老顾养了多少鹿。给你一个简单的. 〔蚕和蝉〕 这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 〔捉兔〕 一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，了鹰，跑了兔。打翻醋，醋湿布。 〔小猪〕 小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。28. 绕口令是中国民间语言游戏，将声母、韵母或声调极易混同的字，组成反复、重叠、绕口、拗口的句子，要求一口气急速念出。以下是无忧考网为大家准备的，快来练习一下吧。 1、打南边来了个哑巴，腰里别了个喇叭；打北边来了个喇嘛，手里提了个獭犸。提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭；别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭；还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸,哑巴嘀嘀哒哒吹喇叭。 2、哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河。哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、瓜棚挂瓜，瓜挂瓜棚。风刮瓜，瓜碰棚。风刮棚，棚碰瓜。 5、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰??”黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰化肥会挥发灰化肥会化灰，黑化肥不会化灰。 6、金瓜瓜，银瓜瓜，瓜棚上面结满瓜，瓜瓜落下来，打着小娃娃，娃娃叫妈妈，娃娃怪瓜瓜，瓜瓜笑娃娃。 7、蓝衣布履刘兰柳，布履蓝衣柳半刘，兰柳拉犁来犁地，半刘播种来拉耧。 8、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 9、老齐欲想去卖鱼，巧遇老吕去牵驴，老齐要用老吕的驴去驮鱼，老吕说老齐要用我老吕的驴驮鱼就得给我鱼，要不给我鱼就别用我老吕的驴去驮鱼，二人争来争去都误了去赶集。 10、老鼠遇老虎，老虎咬老鼠。老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 1、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 2、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 3、一道黑，两道黑，三四五六七道黑，*道黑十道黑。我买了个烟袋乌木杆儿，我是掐着它的两头那么一道黑。二姑娘描眉去演戏，照着她的镜子那么两道黑。粉皮儿墙，写川字儿，横瞧竖瞧三道黑。象牙桌子乌木腿儿，把它放着在那炕上那么四道黑。我买了个母鸡不下蛋，把它圈在那个笼里捂到（五道）黑。挺好的骡子不吃草，把它拉到在那街上遛到（六道）黑。买了头小驴儿不拉磨，背上它的鞍韂骑（七）到（道）黑。姐俩南洼去割麦，丢了她的镰刀拔到（八道）黑。月窠儿的小孩儿子得了病，团几个艾球灸到（九道）黑。卖瓜籽的打瞌睡，哗啦啦啦撒了。 4、那么一大堆，他的扫帚簸箕不凑手，那么一个一个拾到（十道）黑。 5、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 6、张伯伯，李伯伯，饽饽铺里买饽饽，张伯伯买了个饽饽大，李伯伯买了个大饽饽。拿回家里喂婆婆，婆婆又去比饽饽也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 7、这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、东海鱼仓多鱼群聚，大鱼小鱼鱼游鱼碰鱼捕鱼为业的人吕玉撒网去网鱼，还没捕纯粹国雨雨珠打鱼，鱼遇雨，吕玉雨中忙网鱼。 10、东有嘀嘟寺，山有嘀嘟寺，有个嘀嘟爷，上山去祈福。手提嘀嘟油，腰里别葫芦，嘴念嘀嘟经，三步一叩首。面见嘀嘟佛，佛爷开慈目，大经念三遭，小经唱六度。嘀嘀嘟嘟，嘀嘟嘀嘟，嘀嘀嘟嘟，嘀嘟嘀嘟。嘀嘟梦醒嘀嘟屋，睁眼不见嘀嘟寺，嘀嘟母鸡叫咕咕，嘀嘟老猪打呼噜。29. 中国话博大精深，绕口令也是中国文化的一种，秀出你的好舌头跟朋友比比，谁能最快念出下面的绕口令吧。以下是无忧考网为大家准备的，希望对大家有帮助。 1、峰顶有藤棚，棚上挂铜瓶。风吹藤棚棚碰瓶，风吹铜瓶瓶碰棚。 2、峰上有蜂，峰上凤飞蜂螫凤：风中有凤，风中蜂飞凤斗蜂。不知到底是峰上蜂螫凤，还是风中凤斗蜂。 3、款项花，十八朵，大姨妈，来接我，猪拿柴，狗使柴燃烧，猫儿烧饭笑死我。 4、老方背着个黄市招，老黄背着个方市招，老方要拿老黄的方市招，老黄要拿老方的黄市招，老黄老方不相让，方市招碰破了黄市招，黄市招碰破了方市招。 5、老舅进城看小六，小六高兴买油又买肉。买完了油和，老六就要走，老板说“：你给了油钱，没给肉钱。”老板娘说“：你给了肉钱没给油钱。”老六说“：我给了油钱也给了肉钱。” 6、梁上两对倒吊鸟,泥里两对鸟倒吊,可怜梁上两对倒吊鸟,惦记泥里两对鸟倒吊,可怜泥里两对鸟倒吊,也惦记梁上两对倒吊鸟。 7、按时绿,按时住,按时透春绿,按时透春住。 8、粗出气种谷，出气粗喂猪。粗出气种的谷，谷穗长得长又粗。出气粗喂的猪，身子长得胖乎乎。出气粗的胖乎乎的大肥猪，偷吃了粗出气又长又粗的品种谷。粗出气用锄打出气粗胖乎乎的大肥猪，出气粗家胖乎乎的大肥猪，再也不吃粗出气家的又长又粗的品种谷。 9、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子。 10、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰。 11、花猫跌进了花袍，猫要撕袍，袍来裹猫。不知是花猫撕破花袍，还是花袍裹住了花猫。 12、家后有座庙,天天猫来尿,不知是庙尿猫,还是猫尿庙。 13、牛郎恋刘娘,刘娘念牛郎,牛郎年年恋刘娘,刘娘年年念牛郎,郎恋娘来娘念郎,念娘恋娘念郎恋郎,念恋娘郎。 14、山前有个严圆眼,山后有个圆眼严,两人上山来比眼,不知是严圆眼的眼圆,还是圆眼严的眼圆。30. 绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。以下是无忧考网为大家准备的，希望对大家有帮助。 小妞妞掉了扣扣， 让妈妈拿新扣扣。 小妞妞钉新扣扣， 新扣扣拿在手里， 钉线顺着扣眼走。 打个结儿钉完扣， 自己学会钉扣扣， 妈妈夸她好妞妞。 壁上挂只鼓，鼓里挂只虎， 虎爬破了鼓，拿块布来补， 是布补虎，还是布补鼓。 咬牛奶，喝面包， 夹着火车上皮包。 东西街，南北走， 出门看见人咬狗。 拿起狗来打砖头， 又怕砖头咬我手。 弯弯的月亮小小的船。 小小的船儿两头尖， 我在小小的船里坐， 只看见闪闪的星星， 蓝蓝的天。 拉大锯扯大锯拉大锯， 扯大锯，姥姥家， 唱大戏，接闺女， 接女婿，小外孙子也要去。 摇啊摇,摇啊摇，摇到外婆桥。 外婆叫我好宝宝， 糖一包，果一包， 少吃滋味多， 多吃滋味少。 那边划来一艘船， 这边漂去一张床， 船床河中互相撞， 不知船撞床，还是床撞船。 军车运来一堆裙， 一色军用绿色裙。 军训*一大群， 换下花裙换绿裙。 鹅呀鹅，鹅追鹅， 鹅呀鹅，鹅过河。 鹅追鹅，鹅过河， 鹅过河，鹅追鹅。 小鹅过河追大鹅， 我也过河去赶鹅， 赶着大鹅小鹅过小河。 白庙外蹲一只白猫， 白庙里有一顶白帽。 白庙外的白猫看见了白帽， 叼着白庙里的白帽跑出了白庙。 巴老爷有八十八颗芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八颗芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八颗芭蕉树， 巴老爷在八十八棵树边哭。31. 【导语】绕口令又称急口令、吃口令、拗口令等。是一种中国传统的语言游戏，由于它是将若干双声、叠词词汇或发音相同、相近的语、词有意集中在一起，组成简单、有趣的语韵，要求快速念出，所以读起来使人感到节奏感强，妙趣横生。以下是无忧考网为大家准备的，快来练练吧~ 1、一朵粉红大荷花，趴着一只活，八朵粉红大荷花，趴着八只活。 2、一面小花鼓，鼓上画老虎。妈妈用布来补。到底是布补鼓，还是布补虎。 3、树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 4、桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 5、多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。说要小果果，外婆乐呵呵。 6、青葡萄，紫葡萄，青葡萄没籽葡萄紫，吃葡萄不吐葡萄皮，不吃葡萄倒吐葡萄皮。 7、树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 8、小妞妞围个圆兜兜，牛头沟边看豆豆，忽听泡前喊抓牛，妞妞怕牛牛踩着豆豆紧抓住牛牛不松手。 9、小华举花小花画，小花画画看小华，小华问小花，画上画了啥？小花举画答小华，画中有花有小华。 10、瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 11、六叔和六舅好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 12、盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏着梨，比比，真梨、假梨差不离。 13、八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 14、山上一只虎，林中一只鹿，路边一头猪，草里一只兔，还有一只鼠。数一数，一二三四五，虎鹿猪兔鼠。 15、颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 16、河边两只鹅，一同过了河；白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 17、小猪找锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 18、郭老伯、骆第伯、毕老伯、柏老伯，郭骆毕柏四老伯，约着城北买菱角，买菱角阁上剥，菱角壳戳了四老伯了脚。 19、小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 20、小华和胖娃，两人种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花，小华教胖娃种花，胖娃教小华种瓜。 1、有个小孩叫巧巧，巧巧有个哥哥叫摇摇。摇摇划船带巧巧，巧巧要去看姥姥。姥姥站在桥头笑，欢迎巧巧和摇摇。 2、三娘在山止放三只山羊，三只山羊翻过山梁三娘翻过山梁去找三只山羊。三只山羊躲在杉树旁，三娘找到三只山羊。 3、华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 4、天上满天星，地上满山灯，满天星亮了满天庭，满山灯接满天星。星映灯，灯映星，分不清是灯还是星，是星还是灯。 5、四是四，十是十，十四是十四，四十是四十，莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说和四。 6、老顾大顾和小顾，扛锄植树走出屋，漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 7、妈妈爱栽花，爸爸爱种瓜；妈妈载桃花，爸爸种西瓜；桃花红，红桃花，娃娃脸上笑哈哈；爸爸给我吃西瓜，娃娃心里乐开花。 8、南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 9、我从伯伯门前过，看见伯爹伯妈前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 10、小溪流水哗啦啦，小华手拿簸萁去小溪里捞虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 11、一块土粗布，一条粗布裤，哥哥屋里补布裤，飞针走线自己做。粗布裤上补粗布，土粗布补布裤，哥哥穿上粗布裤，艰苦朴素牢记住。 12、小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破了小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跑离了小毛。 13、三月三，小三去登山。上山又下山，下山又上山。登了三次山，跑了三里三。出了一身汗，湿了三件衫。小三山上大声喊：“离天只有三尺三！” 14、一位爷爷她姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下兔，上前去追鹰和兔，飞了鹰，跑了兔。打翻醋，醋湿布。 15、哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅，不知是鹅过河，还是河渡鹅。 16、九十九头牛，驮着九十九个篓。每篓装着九十九斤油。牛背油篓扭着走，油篓磨坏篓漏油，九十九斤一个篓，还剩六十六斤油。你说漏了几十几斤油？ 17、白猫黑鼻子，黑猫白鼻子；黑猫的白鼻子，碰破了白猫的黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子；黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 18、北边来了一个瘸子，背着一捆橛子，南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 19、一个半罐是半罐，两个半罐是一罐；三个半罐是一半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三；七个、八个、九个半罐，请你算算是多少罐。 20、小妞妞，叫小秋，梳着两个小抓鬏，小胖胖，叫小牛，穿着一个小兜兜。小秋帮着小牛记扣扣，小牛帮小秋剥豆豆，小秋、小牛手拉手，一块儿玩，一块儿走。32. 1、《采蘑菇》 黑兔和白兔， 上山采蘑菇， 小猴和小鹿， 一齐来帮助， 猴和兔，兔和鹿， 高高兴兴采蘑菇。 2、《扣纽扣》 小牛扣扣使劲揪， 小妞扣扣对准扣眼扣， 小牛和小妞， 谁学会了扣纽扣？ 3、《气球换皮球》 小齐吹气球，小于玩皮球。 小齐要拿气球换小于的皮球， 小于不拿皮球换小齐的气球。 4、《蛙和瓜》 绿青蛙，叫呱呱， 蹦到地里看西瓜。 西瓜夸蛙唱得好， 蛙夸西瓜长得大。 5、《吃菱角》 吃菱角，剥菱壳， 菱角丢在北壁角。 不吃菱角不剥壳， 菱角不丢北壁角。 6、《葱和松》 东院想栽葱， 西院想栽松。 是东院栽葱， 还是西院栽松。 7、《数星星》 天上小星星， 地上小青青。 青青看星星， 星星亮晶晶。 青青数星星， 星星数不清。 8、《布谷鸟》 布谷鸟， 叫布谷， 布谷布谷， 忙忙碌碌， 赶快布谷。 9、《水连天》 天连水，水连天。 水天一色望无边。 蓝蓝的天似绿水， 绿绿的水如蓝天。 10、《分果果》 多多和哥哥， 坐下分果果。 哥哥让多多， 多多让哥哥， 外婆乐呵呵。 1、《妞妞和牛牛》 东头有个李家妞， 西头有头刘家牛， 刘家牛要吃李家豆， 李家妞赶走刘家牛。 2、《喂蝈蝈》 哥哥喂蝈蝈， 蝈蝈要果果， 哥哥给果果， 蝈蝈叫哥哥。 3、《看电视》 对门田老四， 喜欢看电视。 电视里演戏， 戏里有田老师。 4、《华华和爸爸》 画画的是华华， 画的是爸爸， 华华爱画爸爸爱花， 爸爸爱华华画的画。 5、《橡皮泥》 丽丽有盒橡皮泥， 揉好泥儿捏个梨， 捏好梨儿捏狐狸， 捏了狐狸还有泥。 6、《玩沙》 两个娃娃玩沙， 一个在沙上搭塔， 一个沙下挖沙， 7、《分果果》 国国和哥哥， 树下分果果。 哥哥给国国大果果， 国国把大个给哥哥。 哥哥让国国， 国国让哥哥。 都说自己要小个， 外婆见了乐呵呵。 8、《小礼和小丽》 小礼家有梨， 小丽家有李。 小礼帮小丽摘李， 小丽帮小礼摘梨。 9、《数狮子》 公园有四排石狮子， 每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子？ 10、《阿牛放牛》 有个孩子叫阿牛， 阿牛上山放老牛， 老牛哞哞叫阿牛， 阿牛回家骑老牛。33. 《扣纽扣》小牛扣扣使劲揪，小妞扣扣对准扣眼扣，小牛和小妞，谁学会了扣纽扣?《气球换皮球》小齐吹气球，小于玩皮球。小齐要拿气球换小于的皮球， 小于不拿皮球换小齐的气球。 《采蘑菇》 黑兔和白兔， 上山采蘑菇， 小猴和小鹿， 一齐来帮助， 猴和兔，兔和鹿， 高高兴兴采蘑菇。 《蛙和瓜》 绿青蛙，叫呱呱， 蹦到地里看西瓜。 西瓜夸蛙唱得好， 蛙夸西瓜长得大。 《阿牛放牛》 有个孩子叫阿牛， 阿牛上山放老牛， 老牛哞哞叫阿牛， 阿牛回家骑老牛。 《布谷鸟》 布谷鸟， 叫布谷， 布谷布谷， 忙忙碌碌， 赶快布谷。 《吃菱角》 吃菱角，剥菱壳， 菱角丢在北壁角。 不吃菱角不剥壳， 菱角不丢北壁角。 《葱和松》 东院想栽葱， 西院想栽松。 是东院栽葱， 还是西院栽松。 《数星星》 天上小星星， 地上小青青。 青青看星星， 星星亮晶晶。 青青数星星， 星星数不清。 《水连天》 天连水，水连天。 水天一色望无边。 蓝蓝的天似绿水， 绿绿的水如蓝天。 《看电视》 对门田老四， 喜欢看电视。 电视里演戏， 戏里有田老师。 《分果果》 多多和哥哥， 坐下分果果。 哥哥让多多， 多多让哥哥， 外婆乐呵呵。34. 【导语】小孩子的头脑虽然灵活，然而太过复杂的东西灌输给他们，一时也让他们难以吸收。如果换做是简单的，相信他们会轻而易举的学会。就像适合儿童绕口令，容易理解，又念起来朗朗上口，同时充满了乐趣。以下是无忧考网为大家准备的，适合儿童练，你也可以学一学哦~ 1、管得宽说我非要管管潘不管。 2、长虫围着砖堆转，转完砖堆钻砖堆。 3、这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 5、倒草倒掉稻，草倒稻也倒。倒草别倒稻，倒稻别倒草。 6、苦读古书懂古通古熟古，不读古书不懂古不通古糊涂古。 7、瓜棚挂瓜，瓜挂瓜棚。风刮瓜，瓜碰棚。风刮棚，棚碰瓜。 8、马大哈，牵匹马，拉马去驮瓦。瓦磕马胯破，马胯磕破瓦。 9、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。 10、东庙有面鼓，西山有只虎。敲动鼓，惊动虎。鼓面敲破，剥虎皮补鼓。 1、爸爸搬白布，伯伯摆白布。爸爸不摆白布搬白布，伯伯不搬白布摆白布。 2、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 3、锅眉灰黑，黑锅眉灰。锅眉灰描眉眉黑灰黑，锅眉灰不描眉灰黑盾不黑。 4、金钱花，十八朵，大姨妈，来接我，猪拿柴，狗烧火，猫儿煮饭笑死我！ 5、男演员穿蓝，女演员穿棉，蓝是棉，棉是蓝。 6、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 7、七加一，再减一，加完减完等于几？七加一，再减一，加完减完还是七。 8、老鼠遇老虎，老虎咬老鼠。老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 9、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 10、墙上挂面鼓，鼓上画老虎，老虎抓破鼓，拿块布来补。不知是布补鼓，还是布补虎？ 1、妈骑马去买瓦，马慢妈骂马。马怕妈妈骂，马快妈不骂马。马听妈妈话，妈妈不骂马。 2、描只花猫，花猫花毛。描只黑猫，黑猫黑毛。描只白猫，白猫白毛。描只灰猫，灰猫灰毛。 3、朱家有个金柱子，曲家有个金锯子。曲家的主人，抱住了朱家的举人，金锯子锯断了金柱子。 4、你会炖我的冻豆腐，就来炖我的冻豆腐，你不会炖我的冻豆腐，别胡炖乱炖炖坏了我的冻豆腐。 5、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰。 6、红饭碗，黄饭碗，红饭碗盛满饭碗，黄饭碗盛半饭碗；黄饭碗添半饭碗，就像红饭碗一样满饭碗。 7、嘴说腿，腿说嘴，嘴说腿爱跑腿，腿说嘴爱卖嘴。光动嘴不动腿，光动腿不动嘴，不如不长腿和嘴。 8、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知是黑豆放黑斗，还是黑斗放黑豆？ 9、天连水，水连天，水天无边波涟涟，蓝蓝的在似绿水，绿绿的水似蓝天，到底是天连水，还是水连天？ 10、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 1、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？ 2、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 3、大海底下有石油，打井采汩石油流，输油管道流石油，采油运油别漏油，漏了石油污染海，鱼虾海鸟不停留。 4、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 5、莉莉拿个梨，去找小弟弟。弟弟看见梨，扔掉手中泥。莉莉教弟弟，洗掉手中泥。弟弟拿起梨，谢谢小莉莉。 6、麻野雀，尾巴长，娶了媳妇忘了娘。把娘背到山沟里，媳妇请到炕头上。仨烧饼，俩麻糖，媳妇媳妇你尝尝。 7、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？ 8、树上有只小桃子，树下有只小猴子。风吹桃树哗哗响，树上掉下小桃子。桃子打着小猴子，猴子吃掉小桃子。 9、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。 10、乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑；乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 1、粗树粗，秃树秃。粗树说粗树树粗树不秃，秃树说秃树树秃树不粗。粗树说粗树比秃树粗，秃树说秃树比粗树秃。 2、小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 3、老屋老，老屋污，老屋经雨老屋涝：老屋老，老屋孤，老屋经风老屋秃。老屋涝，老屋秃，涝、老、污、秃是老屋。 4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗？ 5、伯伯养了一群大白鹅，哥哥喂了三只小白鸽，伯伯教哥哥训鸽，哥哥帮伯伯放鹅。白鹅白鸽长得好，乐坏了伯伯和哥哥。 6、东海鱼仓多鱼群聚，大鱼小鱼鱼游鱼碰鱼。渔民吕玉撒网去捕鱼，还没捕完天下雨。雨珠打鱼，鱼遇雨，吕玉雨中忙捕鱼。 7、南南有个篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 8、小凤提着圆灯笼，小龙提着方灯笼。小凤的圆灯笼上画着龙，小龙的方灯笼上画着凤，小凤要拿圆龙灯笼换小龙的方凤灯笼。 9、在乎你的我只在乎我在乎的你是否在乎在乎你的我，我在乎的你是否和在乎你的我在乎我在乎的你一样在乎在乎你的我一样！ 10、一楼住着管得宽，二楼住着潘不管。潘不管乱倒垃圾一大片，还说弄脏楼道他不管。管得宽要管潘不管，潘不管不让管得宽管。 1、化肥会挥发；黑化肥发灰，灰化肥发黑；黑化肥发灰会挥发；灰化肥挥发会发黑；黑化肥发灰挥发会花飞；灰化肥挥发发黑会飞花。 2、石榴树上结红桃，杨柳树上结辣椒，吹着鼓，打着号，木头沉到底，石头水上漂，小鸡叼了秃老鹰，老鼠抓住大花猫，你说好笑不好笑。 3、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 4、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 5、小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跪离了小毛。 6、哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河。哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 7、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 8、绿葡萄又甜又酸，紫葡萄又酸又甜。绿葡萄说：绿葡萄比紫葡萄酸，紫葡萄说：紫锻萄比绿葡萄甜。不知你是爱吃绿葡萄的酸，还是爱吃紫葡萄的甜？ 9、老方扛着个黄幌子，老黄扛着个方幌子，老方要拿老黄的方幌子，老黄要拿老方的黄幌子，老黄老方不相让，方幌子碰破了黄幌子，黄幌子碰破了方幌子。 00、捡颗小石子，在地上画个方格子，画好方格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。 1、麻家爷爷挑着一对麻叉口，走到麻家婆婆的家门口。麻家婆婆的一对麻花狗，咬破了麻家爷爷的麻叉口，麻家婆婆拿来麻针、麻线，来补麻家爷爷的麻叉口。 2、一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 3、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 4、小柳柳望着牛儿游，小溪流，流呀流，流到村头柳树沟。柳树沟里一头牛，沟边坐着小柳柳，柳柳望着牛儿游，乐得身儿晃悠悠。柳柳从小爱劳动，人人都夸好妞妞。 5、爷爷让奶奶一同来下棋，奶奶让爷爷—同去看戏。爷爷奶奶争来争去，小喜和小齐出个好主意。小喜和爷爷下棋，小齐和奶奶看戏，爷爷、奶奶、小喜、小齐笑嘻嘻。 6、施家丝店卖丝线，买线进了丝线店。花了四个钱，买四条细丝线；花了十四个钱，又十四条细丝线；花四十个钱，买四十条细丝线；花四十四个饯，买四十四条纲丝线。 7、刘小牛去打油，买了油，往回走；油瓶满，往外流，多给了半斤油，急坏了刘小牛。多的油，不能留，回到商店大退油；叔叔摸摸小牛头，阿姨拉拉小牛手，齐声夸资刘小牛。 8、老齐欲想去卖鱼，巧遇老吕去牵驴，老齐要用老吕的驴去驮鱼，老吕说老齐要用我老吕的驴驮鱼就得给我鱼，要不给我鱼就别用我老吕的驴去驮鱼，二人争来争去都误了去赶集。 9、小槐树，结樱桃，杨柳树上结辣椒。吹着鼓，打着号，抬着大车扛着轿。苍蝇踏死驴，蚂蚁踩塌桥。葫芦沉了底，石头水上漂。小鸡叼个饿老雕，老鼠拉个大狸猫。你说好笑不好笑？ 10、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 1、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 2、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 3、姥姥有个宝宝，宝宝有位姥姥，姥姥疼爱宝宝，宝宝喜爱姥姥。姥姥天天抱宝宝，宝宝天天亲姥姥，姥姥老，走不好，抱着宝宝摔—胶，跌了姥姥，摔了宝宝，宝宝连忙扶姥姥，姥姥赶快抱宝宝。 4、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 5、婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 6、古铜钱，挂门帘；门帘高，买铡刀；铡刀快，切青菜；青菜青，买张弓；弓没弦，买只船；船没头，买头牛；牛没爪，买匹马；马没鞍，买只鸢；鸢没肚，买只兔；兔没蹄，买只鸡；鸡不叫，狗不咬，都叫狸花猫偷着吃了。 7、石小四和史肖石石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石 8、山里有个寺，山外有个市，三十三，四十四。三十三的在寺里练写字，四十四的到市里去办事。三十三的用了四十四小时，四十四的走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 9、南面来了个瘸子，腰里别着个橛子，北边来了个矬子，肩上挑着担茄子。别橛子的瘸子要用橛子换挑茄子的矬子的茄子，挑茄子的矬子不给别橛子的瘸子茄子。别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子，挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 10、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。35. 1.儿童绕口令《大鱼小鱼》 大渠养大鱼， 小渠养小鱼， 大渠大鱼吃小鱼， 小渠小鱼怕大鱼。 有一天，下大雨， 小渠流进大渠水， 小渠里有大鱼， 大渠里没小鱼。 2.儿童绕口令《气球换皮球》 小齐吹气球，小于玩皮球。 小齐要拿气球换小于的皮球， 小于不拿皮球换小齐的气球。 3.儿童绕口令《采蘑菇》 黑兔和白兔， 上山采蘑菇， 小猴和小鹿， 一齐来帮助， 猴和兔，兔和鹿， 高高兴兴采蘑菇。 4.儿童绕口令《蛙和瓜》 绿青蛙，叫呱呱， 蹦到地里看西瓜。 西瓜夸蛙唱得好， 蛙夸西瓜长得大。 5.儿童绕口令《阿牛放牛》 有个孩子叫阿牛， 阿牛上山放老牛， 老牛哞哞叫阿牛， 阿牛回家骑老牛。 6.儿童绕口令《拔萝卜》 出八十八二十八, 八个小孩儿把萝卜拔， 你也拔，我也拔， 看谁拔得多，看谁拔得大。 你拔得不多个儿不小， 我拔得不少个儿不大。 一个萝卜一个坑儿， 算算多少用车拉， 一个加俩，俩加仨， 七十二个加十八? 拿个算盘打一打， 一百差俩九十八。 7.儿童绕口令《布谷鸟》 布谷鸟， 叫布谷， 布谷布谷， 忙忙碌碌， 赶快布谷。 8.儿童绕口令《吃菱角》 吃菱角，剥菱壳， 菱角丢在北壁角。 不吃菱角不剥壳， 菱角不丢北壁角。 9.儿童绕口令《葱和松》 东院想栽葱， 西院想栽松。 是东院栽葱， 还是西院栽松。 10.儿童绕口令《数星星》 天上小星星， 地上小青青。 青青看星星， 星星亮晶晶。 青青数星星， 星星数不清。 1.儿童绕口令《水连天》 天连水，水连天。 水天一色望无边。 蓝蓝的天似绿水， 绿绿的水如蓝天。 2.儿童绕口令《看电视》 对门田老四， 喜欢看电视。 电视里演戏， 戏里有田老师。 3.儿童绕口令《分果果》 多多和哥哥， 坐下分果果。 哥哥让多多， 多多让哥哥， 外婆乐呵呵。 4.儿童绕口令《妞妞和牛牛》 东头有个李家妞， 西头有头刘家牛， 刘家牛要吃李家豆， 李家妞赶走刘家牛。 5.儿童绕口令《喂蝈蝈》 哥哥喂蝈蝈， 蝈蝈要果果， 哥哥给果果， 蝈蝈叫哥哥。 6.儿童绕口令《华华和爸爸》 画画的是华华， 画的是爸爸， 华华爱画爸爸爱花， 爸爸爱华华画的画。 7.儿童绕口令《小礼和小丽》 小礼家有梨， 小丽家有李。 小礼帮小丽摘李， 小丽帮小礼摘梨。 8.儿童绕口令《橡皮泥》 丽丽有盒橡皮泥， 揉好泥儿捏个梨， 捏好梨儿捏狐狸， 捏了狐狸还有泥。 9.儿童绕口令《玩沙》 两个娃娃玩沙， 一个在沙上搭塔， 一个沙下挖沙。 10.儿童绕口令《分果果》 国国和哥哥， 树下分果果。 哥哥给国国大果果， 国国把大个给哥哥。 哥哥让国国， 国国让哥哥。 都说自己要小个， 外婆见了乐呵呵。36. 1.顺南边来了个喇嘛，手里提了五斤塌目，顺北边来了个哑巴，腰里别着个喇叭，提了塌目的喇嘛要拿五斤塌目去换北边哑巴腰里别着的喇叭，别着的喇叭的哑巴不愿意拿喇叭去换提了塌目喇嘛他的塌目，提了塌目的喇嘛就急了，拿起了五斤塌目打了别着的喇叭哑巴一塌目，别着的喇叭的哑巴也急了，顺腰里摘下喇叭，打了提了塌目喇嘛一喇叭，也不知道喇嘛的塌目打了别着的喇叭的哑巴一塌目，还是别着的喇叭的哑巴打了提了塌目的喇嘛一喇叭，喇嘛回家炖塌目，哑巴回家吹喇叭。 2.瘪玻璃棍儿比鼓玻璃棍瘪 鼓玻璃棍儿比瘪玻璃棍鼓 3.山前住着个崔粗腿，山后边住着个崔腿粗，俩人山前来比腿，也不知崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的粗腿。 山前住着个严圆眼，山后边住着个严眼圆，俩人山前来比眼，也不知严圆眼比严眼圆的眼圆，还是严眼圆比严圆眼的圆眼。 4.说你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别胡炖乱炖假充会炖看炖坏了我的炖冻豆腐。 5.出南门，面正南，有一个面铺面冲南，面铺门口挂着一个蓝布棉门帘，摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧面铺还是面冲南。 6.字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 7.说我诌我不诌，闲来没事我溜溜舌头，这个绕口令儿最难唱，咱们唱的是前门楼子九丈九，四门三桥五牌楼，出了便门往东走，离城四十到通州，通州倒有个六十六条胡同口，在里边住着一位六十六岁的刘老六，六十六岁刘老头，六十六岁六老刘，老哥仨盖了那六十六座好高楼，楼上有六十六篓桂花油，篓上蒙着六十六匹鹅缎绸，绸上绣着六十六个狮子滚绣球，在楼外头栽了那六十六根儿柏木轴，轴上拴着六十六头大青牛，在牛上边蹲着六十六个大马猴，刘老六，六老刘，刘老头，这么老哥仨倒坐在门口啃骨头，南边来了一条狗好眼熟，好像那大大妈家大大妈的眉子大大眼睛大大鼻子大大耳朵大大口大大鳌头狮子狗，北边又来一条狗好眼熟，好像那二大妈家二大大眉子二大眼睛二大鼻子二大耳朵二大口二大鳌头狮子狗，这两条狗抢骨头，顺南头跑到北头，碰倒了六十六座好高楼，碰洒了六十六篓桂花油，油了六十六匹鹅缎绸，脏了六十六个狮子滚绣球，在楼外头打 倒了六十六根儿柏木轴，打惊了六十六头大青牛，打跑了六十六个大马猴，刘老六，六老刘，刘老头，这么老哥仨打死了狗，又盖起来六十六座好高楼，收起来六十六篓桂花油，洗干净六十六匹鹅缎绸，洗净了六十六个狮子滚绣球，在楼外头栽起来六十六根儿柏木轴，牵回来六十六头大青牛，逮回来六十六个大马猴，刘老六，六老刘，刘老头，这么老哥仨又看见南边来个气不休，手里拿着土坯头去打着狗的头，也不知气不休的土坯头打了狗的头，还是狗的头碰坏气不休的土坯头，打北边来了个秃妞妞，手里拿着个油篓口去套狗的头，也不知秃妞妞的油篓口套了狗的头，还是狗的头钻了秃妞妞的油篓口，狗啃油篓篓油漏，狗不啃油篓篓不漏油。 8.闲暇云游四大部洲，人的心好比是长江水似流，君子人相交是淡淡如水，小人交友蜜里调油，淡淡如水长来往，蜜里调油不到头，交朋友总学桃园三结义，莫学那孙膑庞涓结下冤仇，唱的是，天也愁地也愁，山也愁这个水也是愁，君也愁臣也愁，爹也愁这个娘也是愁，老的也是愁，少的也是愁，恶也愁善也愁，穷也愁这个富也愁，鸭子也愁鹅也愁，这个牛愁马愁一十八也愁，天愁不下那甘露雨，地愁五谷不丰收，山愁本是条了谷子坎，这个水愁本是流不到头，君愁愁的刀兵动，臣愁愁的把官丢，老愁愁的本是没有人管，少愁愁的本是白了他的头，恶愁愁的本是恶贯满，善愁愁的本是修不到头，穷愁愁的本是没有钱使，富愁愁的贼人把他偷，鸭子愁的扁了他的嘴，这个鹅也愁愁来愁去脑瓜门愁出一个奔了头，马愁备鞍行千里，这个牛愁愁的冷风嗖，嗖来嗖去把牛嗖老，送到汤锅里面宰老牛，牛皮蒙鼓千钉钉，送在城里头钟鼓楼，牛肉推在长街上卖，肝肚肠子作个饶头，牛骨头就把麻将牌来做，零零碎碎把色子扣，二对着五这个三了对着四，幺了对着六这个幺不幺六不六，咒骂色子邪骨头，说我诹我就诹，听我没事我捋捋舌头。37. 【导语】以下是无忧考网为大家精心整理的《》，供您查阅。 高高山上一条藤高高山上一条藤，藤条头上挂铜铃，风吹藤动铜铃动，风停藤停铜铃停。四数字四和十、十和四，四十和四十，十四和十四。说好四个数字，全靠舌头和牙齿。谁说四十是细席，他的舌头没用力；谁说十四是实世，他的舌头没伸直。认真学，常练习，十、四、十四、四十、四十四。拔萝卜出八十八二十八，八个小孩儿把萝卜拔，你也拔，我也拔，看谁拔得多，看谁拔得大。你拔得不多个儿不小，我拔得不少个儿不大。一个萝卜一个坑儿，算算多少用车拉，一个加俩，俩加仨，七十二个加十八，拿个算盘打一打，一百差俩九十八。38. 【导语】孩子在学习说话时，可以教一些顺口的绕口令，让孩子当做学习说话的方法，并且提高孩子的记忆力！ 小妞妞掉了扣扣， 让妈妈拿新扣扣。 小妞妞钉新扣扣， 新扣扣拿在手里， 钉线顺着扣眼走。 打个结儿钉完扣， 自己学会钉扣扣， 妈妈夸她好妞妞。 壁上挂只鼓，鼓里挂只虎， 虎爬破了鼓，拿块布来补， 是布补虎，还是布补鼓。 咬牛奶，喝面包， 夹着火车上皮包。 东西街，南北走， 出门看见人咬狗。 拿起狗来打砖头， 又怕砖头咬我手。 弯弯的月亮小小的船。 小小的船儿两头尖， 我在小小的船里坐， 只看见闪闪的星星， 蓝蓝的天。 拉大锯扯大锯拉大锯， 扯大锯，姥姥家， 唱大戏，接闺女， 接女婿，小外孙子也要去。 摇啊摇,摇啊摇，摇到外婆桥。 外婆叫我好宝宝， 糖一包，果一包， 少吃滋味多， 多吃滋味少。 那边划来一艘船， 这边漂去一张床， 船床河中互相撞， 不知船撞床，还是床撞船。 军车运来一堆裙， 一色军用绿色裙。 军训女生一大群， 换下花裙换绿裙。 鹅呀鹅，鹅追鹅， 鹅呀鹅，鹅过河。 鹅追鹅，鹅过河， 鹅过河，鹅追鹅。 小鹅过河追大鹅， 我也过河去赶鹅， 赶着大鹅小鹅过小河。 白庙外蹲一只白猫， 白庙里有一顶白帽。 白庙外的白猫看见了白帽， 叼着白庙里的白帽跑出了白庙。 巴老爷有八十八颗芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八颗芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八颗芭蕉树， 巴老爷在八十八棵树边哭。39. 1、尊崇自然、敬畏生命 2、实验证明，中火烧水最省气 3、保护一片绿地，撑起一片蓝天 4、追求绿色时尚，走向绿色文明 5、大手小手齐动手，共创环保模范城 6、蓝天之下你我他，优美环境靠大家 7、没事多出去走走，“宅”是很费电的 8、人法地、地法天、天法德、道法自然 9、请相信，痴迷皮草那不过是一种反祖冲动 10、开短会也是一种节约-照明、空调、音响等等 11、买电器看节能指标，这是最简单不过的方法了 12、少用纸巾，重拾手帕，保护森林，低碳生活 13、定期清洗空调，不仅为了健康，还可以省不少电 14、植树为你排放的二氧化碳埋单，排多少，吸多少 15、等期检查轮胎气压，气量过低或过足都会增加油耗 16、过量肉食至少伤害三个对象：动物，你自己和地球 17、烘干真的很必要吗？还是多让你的衣服晒晒太阳吧 18、随身常备筷子或勺子，已经是环保人士的一种标签 19、洗衣机开强档比开弱档更省电，还能延长机器寿命 20、如果堵车的队伍太长，还是先熄了火，安心等会儿吧 21、如果只用电脑听音乐，显示器仅可以调暗，或者干脆关掉 22、绿化不仅是去郊区种树，在家种些花草一样可以，还无须开车 23、每张纸都双面打印，相当于保留下半片原本将被砍掉的森林 24、关掉不用的电脑程序，减少硬盘工作量，既省电也维护你的电脑 25、建立节省档案，把每月消耗的水电煤气也记记账，做到心中有数 26、衣服多选棉质、亚麻和丝绸，不仅环保、时尚，而且优雅、耐穿 27、非必要的话，尽量买本地、当季产品，运输和包装常常比生产更耗能 28、跟老公交司机学习如何省油：少用急刹，把油门松了，靠惯性滑过去 29、认为把水龙头开到才能把蔬菜盘碗洗得更干净，那只是心理作用 30、可以理直气壮地说，衣服攒够一桶再洗不是因为懒，而是为了节约水电 31、想避开车来说，骑自行车上下班的人一不担心油价涨，二不担心体重涨 32、其实利用太阳能这种环保能源最简单的方式，就是尽量把工作放在白天做 33、考虑到坐公交为世界环境做的贡献，至少可以抵消一部分开私家车带来的优越感 34、未必红木和真皮才能体现居家品味；建议使用竹制家具，因为竹子比树木长得快 35、其实空调外机都是按照防水要求设计的，给它穿外套，只会降低散热效果，当然费电 36、把一个孩子从婴儿期养到学龄前，花费确实不少，部分玩具、衣物、书籍用二手的就好 37、完美的浴室未必一定要有浴缸；已经安了，未必每次都用；已经用了，请用积水来冲洗马桶 38、没必要一进门就把全部照明打开，人类发明电灯至今不过130年，之前的几千年也过得好好的 39、如果你知道西方一些海洋博物馆里展出中国生产的鱼翅罐头，还会有这么好的食欲吃鱼翅捞饭么 40、尽量少使用一次性牙刷、一次性塑料袋、一次性水杯……因为制造他们所使用的石油也是一次性的 41、如果热水用得多，不妨让热水器始终通电保湿，因为保湿一天所用的电，比一箱凉水烧到相同温度还要低 42、洗衣粉出泡多少与洗净能力之间无必然联系，而低泡洗衣粉可以比高泡洗衣粉少漂洗几次，省水省电省时间 43、婚礼仪式不是你憋足28年劲甩出的面子，更不是家底积累的PK。如今简约、低碳才更是甜蜜文明的附件值 44、随手关灯、开关、拔插头，这是第一步，也是个人修养的表现；不坐电梯爬楼梯，省下大家的电，换自己的健康 45、科学地勤俭节约是优良传统；剩菜冷却后，用保鲜膜包好再送进冰箱；热汽不仅增加冰箱做功，还会结霜，双重费电40. 1、管得宽说我非要管管潘不管。 2、长虫围着砖堆转，转完砖堆钻砖堆。 3、这是蚕，那是蝉， 蚕常在叶里藏，蝉常在林里唱。 4、大刀对单刀，单刀对大刀， 大刀斗单刀，单刀夺大刀。 5、倒草倒掉稻，草倒稻也倒。 倒草别倒稻，倒稻别倒草。 6、苦读古书懂古通古熟古， 不读古书不懂古不通古糊涂古。 7、瓜棚挂瓜，瓜挂瓜棚。 风刮瓜，瓜碰棚。风刮棚，棚碰瓜。 8、马大哈，牵匹马，拉马去驮瓦。 瓦磕马胯破，马胯磕破瓦。 9、三山屹四水，四水绕三山； 三山四水春常在，四水三山四时春。 10、东庙有面鼓，西山有只虎。 敲动鼓，惊动虎。鼓面敲破，剥虎皮补鼓。 11、爸爸搬白布，伯伯摆白布。 爸爸不摆白布搬白布，伯伯不搬白布摆白布。 12、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。 隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 13、锅眉灰黑，黑锅眉灰。 锅眉灰描眉眉黑灰黑，锅眉灰不描眉灰黑盾不黑。 14、金钱花，十八朵，大姨妈， 来接我，猪拿柴，狗烧火，猫儿煮饭笑死我！ 15、男演员穿蓝制服，女演员穿棉制服， 蓝制服是棉制服，棉制服是蓝制服。 16、你也勤来我也勤，生产同心土变金。 工人农民亲兄弟，心心相印团结紧。 17、七加一，再减一，加完减完等于几？ 七加一，再减一，加完减完还是七。 18、老鼠遇老虎，老虎咬老鼠。 老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 19、字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 20、墙上挂面鼓，鼓上画老虎， 老虎抓破鼓，拿块布来补。 不知是布补鼓，还是布补虎？ 21、妈骑马去买瓦，马慢妈骂马。 马怕妈妈骂，马快妈不骂马。 马听妈妈话，妈妈不骂马。 22、描只花猫，花猫花毛。 描只黑猫，黑猫黑毛。 描只白猫，白猫白毛。 描只灰猫，灰猫灰毛。 23、朱家有个金柱子，曲家有个金锯子。 曲家的主人，抱住了朱家的举人， 金锯子锯断了金柱子。 24、你会炖我的冻豆腐，就来炖我的冻豆腐， 你不会炖我的冻豆腐，别胡炖乱炖炖坏了我的冻豆腐。 25、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞； 灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰。 26、红饭碗，黄饭碗，红饭碗盛满饭碗， 黄饭碗盛半饭碗；黄饭碗添半饭碗，就像红饭碗一样满饭碗。 27、嘴说腿，腿说嘴，嘴说腿爱跑腿， 腿说嘴爱卖嘴。光动嘴不动腿， 光动腿不动嘴，不如不长腿和嘴。 28、黑豆放在黑斗里，黑斗里边放黑豆， 黑豆放黑斗，黑斗放黑豆， 不知是黑豆放黑斗，还是黑斗放黑豆？ 29、天连水，水连天，水天无边波涟涟， 蓝蓝的在似绿水，绿绿的水似蓝天， 到底是天连水，还是水连天？ 30、小郭画了朵红花，小葛画了朵黄花， 小郭想拿他的红花换小葛的黄花， 小葛把他的黄花换了小郭的红花。 31、山前有个严圆眼，山后有个严眼圆， 二人山前来比眼，不知是严圆眼的眼圆， 还是严眼圆比严圆眼的眼圆？ 32、师部司令部指示：四团十连石连长带四十人在十日四时 四十四分按时到达师部司令部，师长召开誓师大会。 33、大海底下有石油，打井采汩石油流， 输油管道流石油，采油运油别漏油， 漏了石油污染海，鱼虾海鸟不停留。 34、老罗拉了一车梨，老李拉了一车栗。 老罗人称大力罗，老李人称李大力。 老罗拉梨做梨酒，老李拉栗去换梨。 35、莉莉拿个梨，去找小弟弟。 弟弟看见梨，扔掉手中泥。 莉莉教弟弟，洗掉手中泥。 弟弟拿起梨，谢谢小莉莉。 36、麻野雀，尾巴长，娶了媳妇忘了娘。 把娘背到山沟里，媳妇请到炕头上。 仨烧饼，俩麻糖，媳妇媳妇你尝尝。 37、坡上立着一只鹅，坡下就是一条河。 宽宽的河，肥肥的鹅，鹅要过河， 河要渡鹅不知是鹅过河，还是河渡鹅？ 38、树上有只小桃子，树下有只小猴子。 风吹桃树哗哗响，树上掉下小桃子。 桃子打着小猴子，猴子吃掉小桃子。 39、有个面铺门朝南，门上挂着蓝布棉门帘， 摘了蓝布棉门帘，面铺门朝南； 挂上蓝布棉门帘，面铺还是门朝南。 40、乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑； 乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 41、粗树粗，秃树秃。粗树说粗树树粗树不秃， 秃树说秃树树秃树不粗。粗树说粗树比秃树粗，秃树说秃树比粗树秃。 42、小花猫爱画画，先画一朵腊梅花， 又画一个小喇叭，带着腊梅花，吹着小喇叭， 回家去见妈妈，妈妈见了笑哈哈。 43、老屋老，老屋污，老屋经雨老屋涝： 老屋老，老屋孤，老屋经风老屋秃。老屋涝， 老屋秃，涝、老、污、秃是老屋。 44、山前有个崔粗腿，山后有个崔腿粗。 二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗？ 45、伯伯养了一群大白鹅，哥哥喂了三只小白鸽， 伯伯教哥哥训鸽，哥哥帮伯伯放鹅。 白鹅白鸽长得好，乐坏了伯伯和哥哥。 46、东海鱼仓多鱼群聚，大鱼小鱼鱼游鱼碰鱼。 渔民吕玉撒网去捕鱼，还没捕完天下雨。 雨珠打鱼，鱼遇雨，吕玉雨中忙捕鱼。 47、南南有个篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘， 盘盘打了碗碗，碗碗撒了饭饭。 48、小凤提着圆灯笼，小龙提着方灯笼。 小凤的圆灯笼上画着龙，小龙的方灯笼上画着凤， 小凤要拿圆龙灯笼换小龙的方凤灯笼。 49、在乎你的我只在乎我在乎的你是否在乎在乎你的我， 我在乎的你是否和在乎你的我在乎我在乎的你一样在乎在乎你的我一样！ 50、一楼住着管得宽，二楼住着潘不管。 潘不管乱倒垃圾一大片，还说弄脏楼道他不管。 管得宽要管潘不管，潘不管不让管得宽管。41. 2、东头有个李家妞，西头有头刘家牛，刘家牛要吃李家豆，李家妞赶走刘家牛。3、多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。说要小果果，外婆乐呵呵。4、天上小星星，地上小青青。青青看星星，星星亮晶晶。青青数星星，星星数不清。5、小齐吹气球，小于玩皮球。小齐要拿气球换小于的皮球，小于不拿皮球换小齐的气球。6、长长藤，开花花，娃娃爱花不去掐，瓜藤开花花结瓜，要吃瓜，不掐花，娃娃爱花也爱瓜。7、好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。8、黑兔和白兔，上山采蘑菇，小猴和小鹿，一齐来帮助，猴和兔，兔和鹿，高高兴兴采蘑菇。9、树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。10、一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。11、一块粗土布，一条粗布裤。哥哥拿布又拿裤，飞针走线来扎布，扎过布，再缝裤，裤子破了用布补。12、瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。13、八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。14、颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。15、上一山，下一山，跑了三里三米三，登了一座大高山，山高海拔三百三。上了山，大声喊：我比山高三尺三。42. 1、两个娃娃玩沙，一个在沙上搭塔，一个沙下挖沙。 2、布谷鸟，叫布谷，布谷布谷，忙忙碌碌，赶快布谷。 3、哥哥喂蝈蝈，蝈蝈要果果，哥哥给果果，蝈蝈叫哥哥。 4、东院想栽葱，西院想栽松。是东院栽葱，还是西院栽松。 5、对门田老四，喜欢看电视。电视里演戏，戏里有田老师。 6、小礼家有梨，小丽家有李。小礼帮小丽摘李，小丽帮小礼摘梨。 7、白兔是白肚，黑兔是黑肚。白兔白肚不是黑肚，黑兔黑肚不是白肚。 8、画画的是华华，画的是爸爸，华华爱画爸爸爱花，爸爸爱华华画的画。 9、吃菱角，剥菱壳，菱角丢在北壁角。不吃菱角不剥壳，菱角不丢北壁角。 10、丽丽有盒橡皮泥，揉好泥儿捏个梨，捏好梨儿捏狐狸，捏了狐狸还有泥。 11、绿青蛙，叫呱呱，蹦到地里看西瓜。西瓜夸蛙唱得好，蛙夸西瓜长得大。 12、天连水，水连天。水天一色望无边。蓝蓝的天似绿水，绿绿的水如蓝天。 13、小牛扣扣使劲揪，小妞扣扣对准扣眼扣，小牛和小妞，谁学会了扣纽扣？ 14、一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。 15、有个孩子叫阿牛，阿牛上山放老牛，老牛哞哞叫阿牛，阿牛回家骑老牛。43. 1、小江拿着一包糖，小方提着一只缸， 上楼梯，脚一滑，打翻了小江手中糖。 小方慌忙来帮忙，拾起糖，装进缸， 缸里装着一包糖。小江小方端起缸，吃了糖，把楼上。 2、九月九，九个酒迷喝醉酒。 九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。 九个酒迷端起酒，咕咚、咕咚又九口。 九杯酒，酒九口，喝罢九个酒迷醉了酒。 3、张家有个小英子，王家有个小柱子， 张家的小英子，自己穿衣洗袜子， 天天扫地擦桌子，王家的小柱子， 捡到一只皮夹子，还给后院大婶子。 小英了，小柱子，他们都是好孩子。 4、小牛放学去打球，踢倒老刘一瓶油， 小牛回家取来油，向老刘道歉又赔油， 老刘不要小牛还油，小牛硬要把油还给老刘， 老刘夸小牛，小牛直摇头， 你猜老刘让小牛还油，还是不让小牛还油。 5、东边来了一只小山羊，西边来了一只大灰狼， 一起走到小桥上，小山羊不让大灰狼， 大灰狼不让小山羊，小山羊叫大灰狼让小山羊， 大灰狼叫小山羊让大灰狼，羊不让， 狼不让羊，扑通一起掉到河中央。 6、公园有四排石狮子，每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子？ 7、天上七颗星，地上七块冰， 树上七只鹰，梁上七根钉， 台上七盏灯。呼噜呼噜扇灭七盏灯， 哎哟哎哟拔掉七根钉，呀嘘呀嘘赶走七只鹰， 抬起一脚踢碎七块冰，飞来乌云盖没一颗星。一连念七遍就聪明。 8、东边来个小朋友叫小松，手里拿着一捆葱。 西边来个小朋友叫小丛，手里拿着小闹钟。 小松手里葱捆提松，掉在地上一些葱。 小丛忙放闹钟去拾葱，帮助小松捆紧葱。 小松夸小丛像雷锋，小丛说小松爱劳动。 9、葵花、蓖麻胖娃小筐手中拿， 来到园中收葵花；小华小篮身上挎， 一同走进园中收蓖麻。胖娃种的葵花花盘大， 小华种的蓖麻密麻麻。小华去帮胖娃摘葵花， 胖娃去帮小华收葵花。小华和胖娃， 收了葵花、蓖麻献国家。 10、出八十八二十八，八个小孩儿把萝卜拔， 你也拔，我也拔，看谁拔得多， 看谁拔得大。你拔得不多个儿不小， 我拔得不少个儿不大。一个萝卜一个坑儿， 算算多少用车拉，一个加俩，俩加仨， 七十二个加十八？拿个算盘打一打，一百差俩九十八。44. 1、四是四，十是十，十四是十四， 四十是四十，莫把四字说成十，休将十字说成四。 若要分清四十和十四，经常练说十和四。 2、老顾大顾和小顾，扛锄植树走出屋， 漫天大雾罩峡谷，雾像灰布满路铺， 大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 3、妈妈爱栽花，爸爸爱种瓜； 妈妈载桃花，爸爸种西瓜； 桃花红，红桃花，娃娃脸上笑哈哈； 爸爸给我吃西瓜，娃娃心里乐开花。 4、南南有个篮篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘， 盘盘打了碗碗，碗碗撒了饭饭。 5、我从伯伯门前过，看见伯爹伯妈前种着白果树， 白果树上站着百十百个白斑鸠， 我就拣了百十百块白石头，打那百十百个白斑鸠。 6、大渠养大鱼，小渠养小鱼， 大渠大鱼吃小鱼，小渠小鱼怕大鱼。 有一天，下大雨，小渠流进大渠水， 小渠里有大鱼，大渠里没小鱼。 7、国国和哥哥，树下分果果。 哥哥给国国大果果，国国把大个给哥哥。 哥哥让国国，国国让哥哥。 都说自己要小个，外婆见了乐呵呵。 8、小溪流水哗啦啦，小华手拿簸萁去小溪里捞虾， 一捞捞起一只大河虾和半簸萁烂泥沙。 虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 9、小毛抱着花猫，花猫用爪抓小毛， 小毛用手拍花猫，花猫抓破了小毛， 小毛打疼了花猫，小毛哭，花猫叫， 小毛松开了花猫，花猫跑离了小毛。 10、一位爷爷他姓顾，上街打醋又买布。 买了布，打了醋，回头看见鹰抓兔。 放下布，搁下醋，上前去追鹰和兔， 飞了鹰，跑了兔。打翻醋，醋湿布。 11、白猫黑鼻子，黑猫白鼻子； 黑猫的白鼻子，碰破了白猫的黑鼻子， 白猫的黑鼻子破了，剥了秕谷壳儿补鼻子； 黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 12、北边来了一个瘸子，背着一捆橛子， 南边来了一个瘸子，背着一筐茄子。 背橛子的瘸子打了背茄子的瘸子一橛子。 背茄子的瘸子打了背橛子的瘸子一茄子。 13、一个半罐是半罐，两个半罐是一罐； 三个半罐是一半，四个半罐是两罐； 五个半罐是两罐半，六个半罐是三； 七个、八个、九个半罐，请你算算是多少罐。 14、有个好孩子，拿张画图纸， 来到石院子，学画石狮子。 一天来画一次石狮子，十天来画十次石狮子。 次次画石狮子，天天画石狮子，死狮子画成了活狮子。 15、小妞妞，叫小秋，梳着两个小抓鬏， 小胖胖，叫小牛，穿着一个小兜兜。 小秋帮着小牛记扣扣，小牛帮小秋剥豆豆， 小秋、小牛手拉手，一块儿玩，一块儿走。45. 1、长长藤，开花花， 娃娃爱花不去掐，瓜藤开花花结瓜， 要吃瓜，不掐花，娃娃爱花也爱瓜。 2、好六叔和好六舅，借给六斗六升绿绿豆。 打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 3、黑兔和白兔，上山采蘑菇， 小猴和小鹿，一齐来帮助，猴和兔， 兔和鹿，高高兴兴采蘑菇。 4、树上卧只猴，树下蹲条狗。 猴跳下来撞了狗，狗翻起来咬住猴， 不知是猴咬狗，还是狗咬猴。 5、一葫芦酒九两六，一葫芦油六两九。 六两九的油，要换九两六的酒， 九两六的酒，不换六两九的油。 6、一块粗土布，一条粗布裤。 哥哥拿布又拿裤，飞针走线来扎布， 扎过布，再缝裤，裤子破了用布补。 7、瓜藤开花像喇叭，娃娃爱花不去掐。 瓜藤开花瓜花结花，没花就没瓜。 吃瓜要爱花，娃娃爱花也爱瓜。 8、八只小白兔，住在八棱八角八座屋。 八个小孩要逮八只小白兔，吓得小白兔， 不敢再住八棱八角八座屋。 9、颠倒话，话颠倒，石榴树上结辣椒。 东西大路南北走，碰见兔子去咬狗。 拿住狗，打砖头，砖头咬住我的手。 10、上一山，下一山，跑了三里三米三， 登了一座大高山，山高海拔三百三。 上了山，大声喊：我比山高三尺三。 11、小猪找锄头，吭哧吭哧走。 小鸟唱枝头，小猪扭头瞅， 锄头撞石头，石头砸猪头。 小猪怨锄头，锄头怨猪头。 12、郭老伯、骆第伯、毕老伯、柏老伯， 郭骆毕柏四老伯，约着城北买菱角， 买菱角阁上剥，菱角壳戳了四老伯了脚。 13、小花猫爱画画，先画一朵腊梅花， 又画一个小喇叭，带着腊梅花， 吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 14、小华和胖娃，两人种花又种瓜， 小华会种花不会种瓜，胖娃会种瓜不会种花， 小华教胖娃种花，胖娃教小华种瓜。 15、华华有两朵红花，红红有两朵黄花， 华华想要黄花，红红想要红花， 华华送给红红一朵红花，红红送给华华一朵黄花。46. 1、两个娃娃玩沙，一个在沙上搭塔，一个沙下挖沙。 2、布谷鸟，叫布谷，布谷布谷， 忙忙碌碌，赶快布谷。 3、哥哥喂蝈蝈，蝈蝈要果果， 哥哥给果果，蝈蝈叫哥哥。 4、东院想栽葱，西院想栽松。 是东院栽葱，还是西院栽松。 5、对门田老四，喜欢看电视。 电视里演戏，戏里有田老师。 6、小礼家有梨，小丽家有李。 小礼帮小丽摘李，小丽帮小礼摘梨。 7、白兔是白肚，黑兔是黑肚。 白兔白肚不是黑肚，黑兔黑肚不是白肚。 8、画画的是华华，画的是爸爸， 华华爱画爸爸爱花，爸爸爱华华画的画。 9、吃菱角，剥菱壳，菱角丢在北壁角。 不吃菱角不剥壳，菱角不丢北壁角。 10、丽丽有盒橡皮泥，揉好泥儿捏个梨， 捏好梨儿捏狐狸，捏了狐狸还有泥。 11、绿青蛙，叫呱呱，蹦到地里看西瓜。 西瓜夸蛙唱得好，蛙夸西瓜长得大。 12、天连水，水连天。水天一色望无边。 蓝蓝的天似绿水，绿绿的水如蓝天。 13、小牛扣扣使劲揪，小妞扣扣对准扣眼扣， 小牛和小妞，谁学会了扣纽扣？ 14、一朵粉红大荷花，趴着一只活蛤蟆， 八朵粉红大荷花，趴着八只活蛤蟆。 15、有个孩子叫阿牛，阿牛上山放老牛， 老牛哞哞叫阿牛，阿牛回家骑老牛。 16、树上一只鸟，地上一只猫。 地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 17、东头有个李家妞，西头有头刘家牛， 刘家牛要吃李家豆，李家妞赶走刘家牛。 18、多多和哥哥，坐下分果果。 哥哥让多多，多多让哥哥。 说要小果果，外婆乐呵呵。 19、天上小星星，地上小青青。 青青看星星，星星亮晶晶。 青青数星星，星星数不清。 20、小齐吹气球，小于玩皮球。 小齐要拿气球换小于的皮球， 小于不拿皮球换小齐的气球。47. （一）《布和裤》 一块粗土布， 一条粗布裤。 哥哥拿布又拿裤， 飞针走线来扎布， 扎过布，再缝裤， 裤子破了用布补。 （二）《酒换油》 一葫芦酒九两六， 一葫芦油六两九。 六两九的油， 要换九两六的酒， 九两六的酒， 不换六两九的油。 （三）《分果果》 国国和哥哥， 树下分果果。 哥哥给国国大果果， 国国把大个给哥哥。 哥哥让国国， 国国让哥哥。 都说自己要小个， 外婆见了乐呵呵。 （四）《数狮子》 公园有四排石狮子， 每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子？ （五）《拔萝卜》 出八十八二十八, 八个小孩儿把萝卜拔， 你也拔，我也拔， 看谁拔得多，看谁拔得大。 你拔得不多个儿不小， 我拔得不少个儿不大。 一个萝卜一个坑儿， 算算多少用车拉， 一个加俩，俩加仨， 七十二个加十八？ 拿个算盘打一打， 一百差俩九十八。 （六）《九个酒迷喝醉酒》 九月九， 九个酒迷喝醉酒。 九个酒杯九杯酒， 九个酒迷喝九口。 喝罢九口酒， 又倒九杯酒。 九个酒迷端起酒， “咕咚、咕咚”又九口。 九杯酒， 酒九口， 喝罢九个酒迷醉了酒。 （七）《糖和缸》 小江拿着一包糖， 小方提着一只缸， 上楼梯，脚一滑， 打翻了小江手中糖。 小方慌忙来帮忙， 拾起糖，装进缸， 缸里装着一包糖。 小江小方端起缸， 吃了糖，把楼上。 （八）《上山下山》 上一山，下一山， 跑了三里三米三， 登了一座大高山， 山高海拔三百三。 上了山，大声喊： 我比山高三尺三。 （九）《大鱼小鱼》 大渠养大鱼， 小渠养小鱼， 大渠大鱼吃小鱼， 小渠小鱼怕大鱼。 有一天，下大雨， 小渠流进大渠水， 小渠里有大鱼， 大渠里没小鱼。48. （一）《玩沙》 两个娃娃玩沙， 一个在沙上搭塔， 一个沙下挖沙。 （二）《气球换皮球》 小齐吹气球，小于玩皮球。 小齐要拿气球换小于的皮球， 小于不拿皮球换小齐的气球。 （三）《扣纽扣》 小牛扣扣使劲揪， 小妞扣扣对准扣眼扣， 小牛和小妞， 谁学会了扣纽扣？ （四）《蛙和瓜》 绿青蛙，叫呱呱， 蹦到地里看西瓜。 西瓜夸蛙唱得好， 蛙夸西瓜长得大。 （五）《阿牛放牛》 有个孩子叫阿牛， 阿牛上山放老牛， 老牛哞哞叫阿牛， 阿牛回家骑老牛。 （六）《布谷鸟》 布谷鸟， 叫布谷， 布谷布谷， 忙忙碌碌， 赶快布谷。 （七）《吃菱角》 吃菱角，剥菱壳， 菱角丢在北壁角。 不吃菱角不剥壳， 菱角不丢北壁角。 （八）《葱和松》 东院想栽葱， 西院想栽松。 是东院栽葱， 还是西院栽松。 （九）《水连天》 天连水，水连天。 水天一色望无边。 蓝蓝的天似绿水， 绿绿的水如蓝天。 （十）《看电视》 对门田老四， 喜欢看电视。 电视里演戏， 戏里有田老师。 （十一）《分果果》 多多和哥哥， 坐下分果果。 哥哥让多多， 多多让哥哥， 外婆乐呵呵。 （十二）《妞妞和牛牛》 东头有个李家妞， 西头有头刘家牛， 刘家牛要吃李家豆， 李家妞赶走刘家牛。49. 1.牛驮油 九十九头牛， 驮着九十九个篓。 每篓装着九十九斤油。 牛背油篓扭着走， 油篓磨坏篓漏油， 九十九斤一个篓， 还剩六十六斤油。 你说漏了几十几斤油？ 2.盆和瓶 桌上放个盆， 盆里有个瓶， 砰砰啪啪， 啪啪砰砰， 不知是瓶碰盆， 还是盆碰瓶。 3.看姥姥 有个小孩叫巧巧， 巧巧有个哥哥叫摇摇。 摇摇划船带巧巧， 巧巧要去看姥姥。 姥姥站在桥头笑， 欢迎巧巧和摇摇。 4.画画 小华举花小花画， 小花画画看小华， 小华问小花， 画上画了啥？ 小花举画答小华， 画中有花有小华。 5.看豆豆 小妞妞围个圆兜兜， 牛头沟边看豆豆， 忽听泡前喊抓牛， 妞妞怕牛牛踩着豆豆， 紧抓住牛牛不松手。 6.是灯还是星星 天上满天星， 地上满山灯， 满天星亮了满天庭， 满山灯接满天星。 星映灯，灯映星， 分不清是灯还是星， 是星还是灯。 7.学捏梨 盘里放着一个梨， 桌上放块橡皮泥。 小丽用泥学捏梨， 眼看着梨手捏着梨， 比比，真梨、假梨差不离。 8.三娘找山羊 三娘在山止放三只山羊， 三只山羊翻过山梁， 三娘翻过山梁去找三只山羊。 三只山羊躲在杉树旁， 三娘找到三只山羊。 9.吃葡萄 青葡萄，紫葡萄， 青葡萄没籽葡萄紫， 吃葡萄不吐葡萄皮， 不吃葡萄倒吐葡萄皮。 10.两只鹅 河边两只鹅，一同过了河； 白鹅去拾草，黑鹅来搭窝。 冬天北风刮，草窝真暖和， 住在草窝里，哦哦唱支歌。 11.补裤 一块土粗布，一条粗布裤， 哥哥屋里补布裤，飞针走线自己做。 粗布裤上补粗布，土粗布补布裤， 哥哥穿上粗布裤，艰苦朴素牢记住。 12.数数 山上一只虎， 林中一只鹿， 路边一头猪， 草里一只兔， 还有一只鼠。 数一数， 一二三四五， 虎鹿猪兔鼠。 13.小花鼓 一面小花鼓， 鼓上画老虎。 妈妈用布来补。 到底是布补鼓， 还是布补虎。 14.数青蛙 一只青蛙一张嘴，两只眼睛四条腿，扑通一声跳下水。 两只青蛙两张嘴，四只眼睛八条腿，扑通扑通两声跳下水。 三只青蛙三张嘴，六只眼睛十二条腿，扑通扑通扑通三声跳下水。 四只青蛙四张嘴，八只眼睛十六条腿，扑通扑通扑通扑通四声跳下水。50. 1.收葵花 葵花、蓖麻胖娃小筐手中拿，来到园中收葵花； 小华小篮身上挎，一同走进园中收蓖麻。 胖娃种的葵花花盘大，小华种的蓖麻密麻麻。 小华去帮胖娃摘葵花，胖娃去帮小华收葵花。 小华和胖娃，收了葵花、蓖麻献国家。 2.荷花和蛤蟆 一朵粉红大荷花， 趴着一只活蛤蟆， 八朵粉红大荷花， 趴着八只活蛤蟆。 3.看花和吃瓜 妈妈爱栽花，爸爸爱种瓜； 妈妈载桃花，爸爸种西瓜； 桃花红，红桃花， 娃娃脸上笑哈哈； 爸爸给我吃西瓜， 娃娃心里乐开花。 4.花和瓜 瓜藤开花像喇叭， 娃娃爱花不去掐。 瓜藤开花瓜花结花， 没花就没瓜。 吃瓜要爱花， 娃娃爱花也爱瓜。 5.石榴树上结辣椒 颠倒话，话颠倒， 石榴树上结辣椒。 东西大路南北走， 碰见兔子去咬狗。 拿住狗，打砖头， 砖头咬住我的手。 6.多少罐 一个半罐是半罐， 两个半罐是一罐； 三个半罐是一半， 四个半罐是两罐； 五个半罐是两罐半， 六个半罐是三； 七个、八个、九个半罐， 请你算算是多少罐。 7.登山 三月三，小三去登山。 上山又下山，下山又上山。 登了三次山，跑了三里三。 出了一身汗，湿了三件衫。 小三山上大声喊：离天只有三尺三！ 8.连念七遍就聪明 天上七颗星， 地上七块冰， 树上七只鹰， 梁上七根钉， 台上七盏灯。 呼噜呼噜扇灭七盏灯， 哎哟哎哟拔掉七根钉， 呀嘘呀嘘赶走七只鹰， 抬起一脚踢碎七块冰， 飞来乌云盖没一颗星。 一连念七遍就聪明。 9.八座屋 八只小白兔， 住在八棱八角八座屋。 八个小孩要逮八只小白兔， 吓得小白兔， 不敢再住八棱八角八座屋。 10.拔萝卜 出八十八二十八， 八个小孩把萝卜拔， 你也拔，我也拔， 看谁拔得多，看谁拔得大。 你拔得不多个儿不小， 我拔得不少个儿不大。 一个萝卜一个坑儿， 算算多少用车拉， 一个加俩，俩加仨， 七十二个加十八， 拿个算盘打一打， 一百差俩九十八。51. 1.羊和狼 东边来了一只小山羊， 西边来了一只大灰狼， 一起走到小桥上， 小山羊不让大灰狼， 大灰狼不让小山羊， 小山羊叫大灰狼让小山羊， 大灰狼叫小山羊让大灰狼， 羊不让，狼不让羊， 扑通一起掉到河中央。 2.分果果 多多和哥哥，坐下分果果。 哥哥让多多，多多让哥哥。 说要小果果，外婆乐呵呵。 3.南南有个篮 南南有个篮篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘， 盘盘打了碗碗，碗碗撒了饭饭。 4.瘸子 北边来了一个瘸子，背着一捆橛子， 南边来了一个瘸子，背着一筐茄子。 背橛子的瘸子打了背茄子的瘸子一橛子。 背茄子的瘸子打了背橛子的瘸子一茄子。 5.小华和胖娃 小华和胖娃， 两人种花又种瓜， 小华会种花不会种瓜， 胖娃会种瓜不会种花， 小华教胖娃种花， 胖娃教小华种瓜。 6.白家伯伯 北贫坡上白空有个伯伯， 家里养着一百八十八只白鹅， 门口种着一百八十八棵白果， 树上住着一百八十八只八哥。 八哥在白果树上吃白果， 白鹅气得直叫：我饿！我饿！ 7.小牛赔油 小牛放学去打球，踢倒老刘一瓶油， 小牛回家取来油，向老刘道歉又赔油， 老刘不要小牛还油，小牛硬要把油还给老刘， 老刘夸小牛，小牛直摇头， 你猜老刘让小牛还油，还是不让小牛还油。 8.送花 华华有两朵红花，红红有两朵黄花， 华华想想要黄花，红红想要红花， 华华送给红红一朵红花， 红红送给华华一朵黄花。 9.好孩子 张家有个小英子，王家有个小柱子， 张家的小英子，自己穿衣洗袜子，天天扫地擦桌子， 王家的小柱子，捡到一只皮夹子，还给后院大婶子。 小英了，小柱子，他们都是好孩子。 10.老伯 郭老伯、骆第伯、毕老伯、柏老伯， 郭骆毕柏四老伯，约着城北买菱角， 买菱角阁上剥，菱角壳戳了四老伯了脚。 11.捞虾 小溪流水哗啦啦，小华手拿簸萁去小溪里捞虾， 一捞捞起一只大河虾和半簸萁烂泥沙。 虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 12.六叔和六舅 好六叔和好六舅， 借给六斗六升绿绿豆。 打罢秋，接住豆， 再还六叔六舅六斗六升绿绿豆。 13.小秋和小牛 小妞妞，叫小秋，梳着两个小抓鬏， 小胖胖，叫小牛，穿着一个小兜兜。 小秋帮着小牛记扣扣，小牛帮小秋剥豆豆， 小秋、小牛手拉手，一块儿玩，一块儿走。 14.植树 老顾大顾和小顾， 扛锄植树走出屋， 漫天大雾罩峡谷， 雾像灰布满路铺， 大顾关注喊小顾。 老顾扛锄又提树， 雾里植树尽义务。 15.白果树 我从伯伯门前过， 看见伯爹伯妈前种着白果树， 白果树上站着百十百个白斑鸠， 我就拣了百十百块白石头， 打那百十百个白斑鸠。 16.一捆葱 东边来个小朋友叫小松，手里拿着一捆葱。 西边来个小朋友叫小丛，手里拿着小闹钟。 小松手里葱捆提松，掉在地上一些葱。 小丛忙放闹钟去拾葱，帮助小松捆紧葱。 小松夸小丛像雷锋，小丛说小松爱劳动。52. 1.十和四 四是四，十是十， 十四是十四，四十是四十， 莫把四字说成十，休将十字说成四。 若要分清四十和十四，经常练说十和四。 2.捉兔 一位爷爷他姓顾，上街打醋又买布。 买了布，打了醋，回头看见鹰抓兔。 放下布，搁下醋，上前去追鹰和兔， 飞了鹰，跑了兔。打翻醋，醋湿布。 3.小毛与花猫 小毛抱着花猫， 花猫用爪抓小毛， 小毛用手拍花猫， 花猫抓破了小毛， 小毛打疼了花猫， 小毛哭，花猫叫， 小毛松开了花猫， 花猫跑离了小毛。 4.小花猫 小花猫爱画画， 先画一朵腊梅花， 又画一个小喇叭， 带着腊梅花， 吹着小喇叭， 回家去见妈妈， 妈妈见了笑哈哈。 5.鸟和猫 树上一只鸟， 地上一只猫。 地上的猫想咬树上的鸟， 树上的鸟想啄猫的毛。 6.猫鼻子 白猫黑鼻子，黑猫白鼻子； 黑猫的白鼻子，碰破了白猫的黑鼻子， 白猫的黑鼻子破了，剥了秕谷壳儿补鼻子； 黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 7.狗与猴 树上卧只猴，树下蹲条狗。 猴跳下来撞了狗， 狗翻起来咬住猴， 不知是猴咬狗，还是狗咬猴。 8.鹅过河 哥哥弟弟坡前坐， 坡上卧着一只鹅， 坡下流着一条河， 哥哥说：宽宽的河。 弟弟说：白白的鹅。 鹅要过河，河要渡鹅， 不知是鹅过河，还是河渡鹅。 9.小猪 小猪找锄头，吭哧吭哧走。 小鸟唱枝头，小猪扭头瞅， 锄头撞石头，石头砸猪头。 小猪怨锄头，锄头怨猪头。 10.画狮子 有个好孩子，拿张画图纸， 来到石院子，学画石狮子。 一天来画一次石狮子， 十天来画十次石狮子。 次次画石狮子，天天画石狮子， 死狮子画成了活狮子。53. 【导语】绕口令是一种简单且富有趣味性的语言游戏，重重叠叠的词汇，语韵相近的单词汇聚在一起考验舌头与唇齿之间的默契！ 白兔是白肚， 黑兔是黑肚。 白兔白肚不是黑肚， 黑兔黑肚不是白肚。 长长藤，开花花， 娃娃爱花不去掐， 瓜藤开花花结瓜， 要吃瓜，不掐花， 娃娃爱花也爱瓜。 （ 一块粗土布， 一条粗布裤。 哥哥拿布又拿裤， 飞针走线来扎布， 扎过布，再缝裤， 裤子破了用布补。 一葫芦酒九两六， 一葫芦油六两九。 六两九的油， 要换九两六的酒， 九两六的酒， 不换六两九的油。 国国和哥哥， 树下分果果。 哥哥给国国大果果， 国国把大个给哥哥。 哥哥让国国， 国国让哥哥。 都说自己要小个， 外婆见了乐呵呵。 公园有四排石狮子， 每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子？ 出八十八二十八, 八个小孩儿把萝卜拔， 你也拔，我也拔， 看谁拔得多，看谁拔得大。 你拔得不多个儿不小， 我拔得不少个儿不大。 一个萝卜一个坑儿， 算算多少用车拉， 一个加俩，俩加仨， 七十二个加十八？ 拿个算盘打一打， 一百差俩九十八。 九月九， 九个酒迷喝醉酒。 九个酒杯九杯酒， 九个酒迷喝九口。 喝罢九口酒， 又倒九杯酒。 九个酒迷端起酒， “咕咚、咕咚”又九口。 九杯酒， 酒九口， 喝罢九个酒迷醉了酒。 小江拿着一包糖， 小方提着一只缸， 上楼梯，脚一滑， 打翻了小江手中糖。 小方慌忙来帮忙， 拾起糖，装进缸， 缸里装着一包糖。 小江小方端起缸， 吃了糖，把楼上。 上一山，下一山， 跑了三里三米三， 登了一座大高山， 山高海拔三百三。 上了山，大声喊： 我比山高三尺三。 大渠养大鱼， 小渠养小鱼， 大渠大鱼吃小鱼， 小渠小鱼怕大鱼。 有一天，下大雨， 小渠流进大渠水， 小渠里有大鱼， 大渠里没小鱼。54. 【导语】绕口令是一种简单且富有趣味性的语言游戏，重重叠叠的词汇，语韵相近的单词汇聚在一起考验舌头与唇齿之间的默契！ 对门田老四， 喜欢看电视。 电视里演戏， 戏里有田老师。 多多和哥哥， 坐下分果果。 哥哥让多多， 多多让哥哥， 外婆乐呵呵。 东头有个李家妞， 西头有头刘家牛， 刘家牛要吃李家豆， 李家妞赶走刘家牛。 （ 哥哥喂蝈蝈， 蝈蝈要果果， 哥哥给果果， 蝈蝈叫哥哥。 （ 画画的是华华， 画的是爸爸， 华华爱画爸爸爱花， 爸爸爱华华画的画。 小礼家有梨， 小丽家有李。 小礼帮小丽摘李， 小丽帮小礼摘梨。 丽丽有盒橡皮泥， 揉好泥儿捏个梨， 捏好梨儿捏狐狸， 捏了狐狸还有泥。 天上小星星， 地上小青青。 青青看星星， 星星亮晶晶。 青青数星星， 星星数不清。 （ 蜻蜓青，青浮萍， 青萍上面停蜻蜓， 蜻蜓青萍分不清。 别把蜻蜓当青萍， 别把青萍当蜻蜓。 （ 黑兔和白兔， 上山采蘑菇， 小猴和小鹿， 一齐来帮助， 猴和兔，兔和鹿， 高高兴兴采蘑菇。55. 【导语】绕口令是一种简单且富有趣味性的语言游戏，重重叠叠的词汇，语韵相近的单词汇聚在一起考验舌头与唇齿之间的默契！ 两个娃娃玩沙， 一个在沙上搭塔， 一个沙下挖沙。 （ 小齐吹气球，小于玩皮球。 小齐要拿气球换小于的皮球， 小于不拿皮球换小齐的气球。 （ 小牛扣扣使劲揪， 小妞扣扣对准扣眼扣， 小牛和小妞， 谁学会了扣纽扣？ 绿青蛙，叫呱呱， 蹦到地里看西瓜。 西瓜夸蛙唱得好， 蛙夸西瓜长得大。 有个孩子叫阿牛， 阿牛上山放老牛， 老牛哞哞叫阿牛， 阿牛回家骑老牛。 布谷鸟， 叫布谷， 布谷布谷， 忙忙碌碌， 赶快布谷。 吃菱角，剥菱壳， 菱角丢在北壁角。 不吃菱角不剥壳， 菱角不丢北壁角。 东院想栽葱， 西院想栽松。 是东院栽葱， 还是西院栽松。 天连水，水连天。 水天一色望无边。 蓝蓝的天似绿水， 绿绿的水如蓝天。56. 【导语】绕口令多是诙谐而活泼，节奏感较强，富有音乐效果。有的用方言朗读更具有浓郁乡土特色。以下是无忧考网为大家准备的，希望对大家有帮助。 有个小孩叫小杜 上街打醋又买布 买了布 打了醋 回头看见鹰抓兔 放下布 搁下醋 上前去追鹰和兔 飞了鹰 跑了兔 洒了醋 湿了布 罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 老齐欲想去卖鱼，巧遇老吕去牵驴，老齐要用老吕的驴去驮鱼，老吕说老齐要用我老吕的驴驮鱼就得给我鱼，要不给我鱼就别用我老吕的驴去驮鱼，二人争来争去都误了去赶集。 老鼠遇老虎，老虎咬老鼠。老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 一道黑，两道黑，三四五六七道黑，*道黑十道黑。我买了个烟袋乌木杆儿，我是掐着它的两头那么一道黑。二姑娘描眉去演戏，照着她的镜子那么两道黑。粉皮儿墙，写川字儿，横瞧竖瞧三道黑。象牙桌子乌木腿儿，把它放着在那炕上那么四道黑。我买了个母鸡不下蛋，把它圈在那个笼里捂到(五道)黑。挺好的骡子不吃草，把它拉到在那街上遛到(六道)黑。买了头小驴儿不拉磨，背上它的鞍韂骑(七)到(道)黑。姐俩南洼去割麦，丢了她的镰刀拔到(八道)黑。月窠儿的小孩儿子得了病，团几个艾球灸到(九道)黑。卖瓜籽的打瞌睡，哗啦啦啦撒了 那么一大堆，他的扫帚簸箕不凑手，那么一个一个拾到(十道)黑。 一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 张伯伯，李伯伯，饽饽铺里买饽饽，张伯伯买了个饽饽大，李伯伯买了个大饽饽。拿回家里喂婆婆，婆婆又去比饽饽也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。57. 【导语】一遍绕口令，让我们感受到那些文字中无穷的乐趣。一起加油吧，在这些文字中获得快乐，获得精彩。以下是无忧考网为大家准备的，希望对大家有帮助。 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发；灰化肥发挥会发黑 黑化肥挥发发灰会挥发；灰化肥挥发发黑会发挥 黑灰化肥会挥发发灰黑化肥挥发； 灰黑化肥会挥发发黑灰化肥发挥。 黑灰化肥会挥发发灰黑化肥黑灰挥发化为灰； 灰黑化肥会挥发发黑灰化肥灰黑发挥化为黑。 黑化黑灰化肥黑灰会挥发发灰黑化肥黑灰化肥挥发； 灰化灰黑化肥灰黑会发挥发黑灰化肥灰黑化肥发挥。 捉兔 一位爷爷她姓顾，上街打醋又买布。 买了布，打了醋，回头看见鹰抓兔。 放下布，搁下兔，上前去追鹰和兔， 飞了鹰，跑了兔。打翻醋，醋湿布。 小毛与花猫 小毛抱着花猫，花猫用爪抓小毛， 小毛用手拍花猫，花猫抓破了小毛， 小毛打疼了花猫，小毛哭，花猫叫， 小毛松开了花猫，花猫跑离了小毛。 小花猫 小花猫爱画画，先画一朵腊梅花， 又画一个小喇叭，带着腊梅花， 吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 鸟和猫 树上一只鸟，地上一只猫。 地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 猫鼻子 白猫黑鼻子，黑猫白鼻子； 黑猫的白鼻子，碰破了白猫的黑鼻子， 白猫的黑鼻子破了，剥了秕谷壳儿补鼻子； 黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 狗与猴 树上卧只猴，树下蹲条狗。 猴跳下来撞了狗，狗翻起来咬住猴， 不知是猴咬狗，还是狗咬猴。 小猪 小猪找锄头，吭哧吭哧走。 小鸟唱枝头，小猪扭头瞅， 锄头撞石头，石头砸猪头。 小猪怨锄头，锄头怨猪头。 四和十 四是四，十是十，十四是十四，四十和四十。 要想说好四十，得靠舌头和牙齿。 得靠四十是“细席”，谁的舌头没用力； 谁说四十是“事拾”谁的舌头没伸直。 认真听，常练习，十四，四十，四十四。 妞妞和牛牛 牛牛要吃河边柳，妞妞护柳要赶牛。 牛牛扭头瞅妞妞，妞妞要扭牛牛，牛牛要顶妞妞。 妞妞拾起小石头，吓得牛占扭头溜。 骑木马 红马驮着小白娃 白马驮着小红娃 红娃骑着白马催红马 白娃骑着红马追白马 两匹马儿追着跑 两个娃娃乐哈哈 画狮子 有个好孩子，拿张画图纸，来到石院子，学画石狮子。 一天来画一次石狮子，十天来画十次石狮子。 次次画石狮子，天天画石狮子，死狮子画成了“活狮子”。 羊和狼 东边来了一只小山羊，西边来了一只大灰狼， 一起走到小桥上，小山羊不让大灰狼，大灰狼不让小山羊， 小山羊叫大灰狼让小山羊，大灰狼叫小山羊让大灰狼，羊不让狼， 狼不让羊，扑通一起掉到河中央。 分果果 多多和哥哥，坐下分果果。 哥哥让多多，多多让哥哥。 说要小果果，外婆乐呵呵。 南南有个篮 南南有个篮篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘， 盘盘打了碗碗，碗碗撒了饭饭。58. 中国话博大精深，绕口令也是中国文化的一种，秀出你的好舌头跟朋友比比，谁能最快念出下面的绕口令吧。以下是无忧考网为大家精心整理的《经典绕口令》，快来练练吧~ 1、大花碗里扣个大花活。 2、妹照镜子头梳手，门外口袋把驴驮。 3、妈妈种麻，我去放马，马吃了麻，妈妈骂马。 4、还了山当腰三哥三嫂子，两个三斗三升酸枣子。 5、山下三小子，又找山上三老子，借三斗三升酸枣子。 6、老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 7、山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 8、山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子。 9、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 10、河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 11、任命是任命，人名是人名，任命人名不能错，错了人名错任命。 12、给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 13、山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 14、高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 15、一朵粉红大荷花，趴着一只活，八朵粉红大荷花，趴着八只活*。 16、树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 17、一只皮鞋，一只蒲鞋，皮鞋补蒲鞋，蒲鞋补皮鞋，皮鞋、蒲鞋，蒲鞋、皮鞋…… 18、桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 19、壁上挂只鼓，鼓里挂只虎，虎爬破了鼓，拿块布来补，是布补虎，还是布补鼓。 20、多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。 1、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 2、好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 3、树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 4、王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。 5、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 6、一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 7、瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 8、八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 9、白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 10、扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。 11、北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 12、颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 13、小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 14、小华和胖娃，两人种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花，小华教胖娃种花，胖娃教小华种瓜。 15、郭老伯、骆老伯，毕老伯、柏老伯，郭骆毕柏四老伯，约着城北买菱角，买得菱角阁上剥，菱角壳戳了四老伯的脚。 16、炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快？还是锤锤快比锤快锤锤得快？ 17、华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 18、毛毛有一顶红帽，猫猫有一身灰毛。毛毛要猫猫的灰毛，猫猫要毛毛的红帽。毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。 19、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 20、老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。59. 1、楼后有柳九十九，九十九人编柳篓。九十九个人，九十九棵柳，九十九棵柳编九十九个柳条篓。 2、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 3、老鼠遇老虎，老虎咬老鼠。老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 4、小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跪离了小毛。 5、苦读古书懂古通古熟古，不读古书不懂古不通古糊涂古。 6、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 7、倒草倒掉稻，草倒稻也倒。倒草别倒稻，倒稻别倒草。 8、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰。 9、老屋老，老屋污，老屋经雨老屋涝：老屋老，老屋孤，老屋经风老屋秃。老屋涝，老屋秃，涝、老、污、秃是老屋。 10、乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑；乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 11、麻家爷爷挑着一对麻叉口，走到麻家婆婆的家门口。麻家婆婆的一对麻花狗，咬破了麻家爷爷的麻叉口，麻家婆婆拿来麻针、麻线，来补麻家爷爷的麻叉口。 12、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 13、伯伯养了一群大白鹅，哥哥喂了三只小白鸽，伯伯教哥哥训鸽，哥哥帮伯伯放鹅。白鹅白鸽长得好，乐坏了伯伯和哥哥。 14、一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 15、手艺学不会，材料用得费，正是会的不费，费的不会。 16、施家丝店卖丝线，买线进了丝线店。花了四个钱，买四条细丝线；花了十四个钱，又十四条细丝线；花四十个钱，买四十条细丝线；花四十四个饯，买四十四条纲丝线。 17、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 18、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。 19、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？ 20、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？ 1、一楼住着管得宽，二楼住着潘不管。潘不管乱倒垃圾一大片，还说弄脏楼道他不管。管得宽要管潘不管，潘不管不让管得宽管。 2、东庙有面鼓，西山有只虎。敲动鼓，惊动虎。鼓面敲破，剥虎皮补鼓。 3、瓜棚挂瓜，瓜挂瓜棚。风刮瓜，瓜碰棚。风刮棚，棚碰瓜。 4、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 5、刘小牛去打油，买了油，往回走；油瓶满，往外流，多给了半斤油，急坏了刘小牛。多的油，不能留，回到商店大退油；叔叔摸摸小牛头，阿姨拉拉小牛手，齐声夸资刘小牛。 6、爷爷让奶奶一同来下棋，奶奶让爷爷—同去看戏。爷爷奶奶争来争去，小喜和小齐出个好主意。小喜和爷爷下棋，小齐和奶奶看戏，爷爷、奶奶、小喜、小齐笑嘻嘻。 7、捡颗小石子，在地上画个方格子，画好方格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。 8、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 9、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 10、张伯伯，李伯伯，饽饽铺里买饽饽，张伯伯买了个饽饽大，李伯伯买了个大饽饽。拿回家里喂婆婆，婆婆又去比饽饽也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 11、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 12、金瓜瓜，银瓜瓜，瓜棚上面结满瓜，瓜瓜落下来，打着小娃娃，娃娃叫妈妈，娃娃怪瓜瓜，瓜瓜笑娃娃。哥哥喂蝈蝈，蝈蝈要果果；哥哥给果果，蝈蝈叫咯咯。 13、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 14、大海底下有石油，打井采汩石油流，输油管道流石油，采油运油别漏油，漏了石油污染海，鱼虾海鸟不停留。 15、山前有只虎，山下有只猴。虎撵猴，猴斗虎；虎撵不上猴，猴斗不了虎。 16、灰化肥发黑，黑化肥发灰。灰化肥挥发会发黑，黑化肥挥发会发灰，灰化肥发黑挥发会发灰，黑化肥发灰挥发会发黑。 17、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 18、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知是黑豆放黑斗，还是黑斗放黑豆？ 19、东海鱼仓多鱼群聚，大鱼小鱼鱼游鱼碰鱼。渔民吕玉撒网去捕鱼，还没捕完天下雨。雨珠打鱼，鱼遇雨，吕玉雨中忙捕鱼。 20、七加一，再减一，加完减完等于几？七加一，再减一，加完减完还是七。60. 1.时事学习看报纸，报纸登的是时事，常看报纸要多思，心里装着天下事。 2.杂志社，出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那植树造林、治理沼泽、栽种花草、生产手册，种种杂志数十册。 3.红砖堆、青砖堆，砖堆旁边蝴蝶追，蝴蝶绕着砖堆飞，飞来飞去蝴蝶钻砖堆。 4.石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神粮食;施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施、史四老师。 5.三月三，小三练登山。上山又下山，下山又上山。登了三次山，跑了三里三，出了一身汗，湿了三件衫。小三站在山上大声喊：“这里离天只有三尺三!” 6.三哥三嫂子，请借给我三斗三升酸枣子，等我明年树上摘了新枣子，再把借的这三斗三升酸枣子，如数还您三哥三嫂子。 7.四是四，十是十，十四是十四，四十是四十，谁能说准四十、十四、四十四，谁来试一试。 8.三山撑四水，四水绕三山，三山四水春常在，四水三山总是春。 9.通信不能念成同姓，同姓不能说成通信。同姓的可以互相通信，通信的不—定同姓。 10.任命是任命，人名是人名，任命人名不能错，错了人名就错了任命。 1.天津和北京，两座兄弟城。津京两字韵，不是一个音。津字前鼻韵，京字后鼻音。请你仔细听，发音要分清。 2.陈是陈，程是程，姓陈不能说成姓程，姓程也不能说成姓陈。禾旁是程，耳朵是陈。程陈不分，就会认错人。 3.人寻铃声去找铃，铃声紧跟人不停，到底是人寻铃，还是铃寻人。 4.风吹灰飞，灰飞花上花堆灰。风吹花灰灰飞去，灰在风里飞又飞。 5.笼子里有三凤，黄凤红凤粉红凤。忽然黄凤啄红凤，红凤反嘴啄黄凤，粉红凤帮啄黄凤。你说是红凤啄黄凤，还是黄凤啄红凤。 6.丰丰和芳芳，上街买混纺。红混纺，粉混纺，黄混纺，灰混纺。红花混纺做裙子，粉花混纺做衣裳。穿上衣裳多漂亮，丰丰和芳芳乐得喜洋洋。 7.河上是坡，坡下是河。坡上立着一只鹅，鹅低头望着一条河，宽宽的河，肥肥的鹅，鹅过河，河渡鹅。河坡飞来丹顶鹤，鹤望河与鹅，小鹤笑呵呵，不知鹅过河还是河渡鹅。 8.一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 9.白庙外蹲着一只猫，白庙里有一顶白帽。白庙外的白猫看见了白帽，叼着白庙里的白帽跑出了白庙。 10.风吹灰飞，灰飞花上花堆灰。风吹花灰灰飞去，灰在风里飞又飞。 11.对门儿有堵白粉墙，白粉墙上画凤凰。先画一只粉黄粉黄的黄凤凰，再画一只绯红绯红的红凤凰。黄凤凰看红凤凰，红凤凰看黄凤凰。黄凤凰，红凤凰，两只都像活凤凰。 12.白石塔，白石搭，白石搭白塔，白塔白石搭。搭好白石塔，白塔高又大。 13.老龙恼怒闹老农，老农恼怒闹老龙，农怒龙恼农更怒，龙恼农怒龙怕农。 14.牛拉碾子碾牛料，碾了牛料留牛料。 15.四是四，十是十，十四是十四，四十是四十。谁说十四是四十，或说四十是十四，轻者造成误会，重者误了大事。 16.山前有四十四只石狮子，山后有四十四棵野柿子，结了四百四十四个涩柿子。涩柿子涩不到山前的四十四只石狮子，石狮子也吃不到山后的四百四十四个涩柿子。 17.清早起来雨稀稀，王七上街去买席，骑着毛驴跑得急，捎带卖蛋又贩梨。一跑跑到小桥西，毛驴一下失了蹄，打了蛋，撒了梨，跑了驴，急的王七眼泪滴，又哭鸡蛋又骂驴。 18.老李去卖鱼，老吕去牵驴。老李要用老吕的驴去驮鱼，老吕说老李要用我的驴去驮鱼，就得给鱼。要不给我鱼，就别想用我老吕的驴去驮鱼。二人争来又争去，都误了去赶集。 19.打南来了个瘸子，手里托着个碟子，碟子里装着茄子，地下钉着个橛子，绊倒了瘸子，撒了碟子里的茄子，气得瘸子，撇了碟子，拔了橛子，踩了茄子。 20.忽听门外人咬狗，拿起门来开开手，拾起狗来打砖头，又被砖头咬了手。从来不说颠倒话，口袋驮着骡子走。61. 1.狗与猴 树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 2.四和十 四和十十和四十四和四十四十和十四说好四和十得靠舌头和牙齿谁说四十是细席他 的舌头没用力谁说十四是适时他的舌头4.没伸直认真学常练习十四、四十、四十四 3.牛和柳 河边一棵柳，柳下一头牛，牛要去顶柳，柳条缠牛头。 4.松和钟 丛岭种青松,青松挂铜钟， 风行松动铜铃鸣，风停松静钟声停。 5.帆船 帆船翻，翻帆船，竖起桅杆撑开帆。 风吹帆,，帆引船，帆船顺风转海湾。 6.打铁 张打铁，李打铁，打把刀，送姐姐。 姐姐留我歇，我不歇，我在张家学打铁。 7.实事求是 知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道说知道。 实事求是一定要做到，这才是不折不扣的真知道。 8.牛皮好绷鼓 手里起泡泡，泡里出青草， 青草好饲草，牛皮好绷鼓， 绷来鼓，急鼓鼓，十八夜里敲铜鼓。 9.河里有只船 河里有只船船上挂白帆风吹帆张船向前无风帆落停下船 10.兜装豆 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 11.颠倒歌 咬牛奶，喝面包，夹着火车上皮包。东西街，南北走，出门看见人咬狗。拿起狗来打砖头，又怕砖头咬我手。 1.河里有只船 河里有只船， 船上挂白帆， 风吹帆张船向前， 无风帆落停下船。 2.汤烫塔 老唐端蛋汤， 踏凳登宝塔， 只因凳太滑， 汤洒汤烫塔。 3.蚕和蝉 这是蚕， 那是蝉， 蚕常在叶里藏， 蝉常在林里唱。 4.捉兔 一位爷爷他姓顾， 上街打醋又买布。 买了布，打了醋， 回头看见鹰抓兔。 放下布，搁下醋， 上前去追鹰和兔， 飞了鹰，跑了兔。 打翻醋，醋湿布。62. 1、大花碗里扣个大花活蛤 蟆。 2、妹照镜子头梳手，门外口袋把驴驮。 3、妈妈种麻，我去放马，马吃了麻，妈妈骂马。 4、还了山当腰三哥三嫂子，两个三斗三升酸枣子。 5、山下三小子，又找山上三老子，借三斗三升酸枣子。 6、老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 7、山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 8、山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子。 9、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 10、河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 11、任命是任命，人名是人名，任命人名不能错，错了人名错任命。 12、给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 13、山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 14、高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 15、一朵粉红大荷花，趴着一只活蛤 蟆，八朵粉红大荷花，趴着八只活蛤 蟆。 16、树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 17、一只皮鞋，一只蒲鞋，皮鞋补蒲鞋，蒲鞋补皮鞋，皮鞋、蒲鞋，蒲鞋、皮鞋…… 18、桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 19、壁上挂只鼓，鼓里挂只虎，虎爬破了鼓，拿块布来补，是布补虎，还是布补鼓。 20、多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。 1、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 2、好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 3、树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 4、王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。 5、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 6、一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 7、瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 8、八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 9、白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 10、扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。 11、北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 12、颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 13、小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 14、小华和胖娃，两人种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花，小华教胖娃种花，胖娃教小华种瓜。 15、郭老伯、骆老伯，毕老伯、柏老伯，郭骆毕柏四老伯，约着城北买菱角，买得菱角阁上剥，菱角壳戳了四老伯的脚。 16、炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快?还是锤锤快比锤快锤锤得快? 17、华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 18、毛毛有一顶红帽，猫猫有一身灰毛。毛毛要猫猫的灰毛，猫猫要毛毛的红帽。毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。 19、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 20、老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 1、妈妈爱栽花，爸爸爱种瓜;妈妈栽桃花，爸爸种西瓜;桃花红，红桃花，娃娃脸上笑哈哈;爸爸给我吃西瓜，娃娃心里乐开花。 2、南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 3、路边八村八里铺，八户夫妇都姓傅。八户傅，傅八户，八户夫妇做豆腐。傅户做豆腐，夫妇卖豆腐。傅户卖豆腐，八户傅户富。 4、锅树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 5、蒋家砌了一垛墙，杨家养了一只羊，杨家羊，撞塌了蒋家的墙，蒋家的墙，压死了杨家的羊，蒋家要杨家赔墙，杨家要蒋家赔羊。 6、板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 7、哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅，还是河渡鹅。 8、我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 9、小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 10、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。63. 【导语】绕口令又称急口令、吃口令、拗口令等。是一种中国传统的语言游戏，由于它是将若干双声、叠词词汇或发音相同、相近的语、词有意集中在一起，组成简单、有趣的语韵，要求快速念出，所以读起来使人感到节奏感强，妙趣横生。以下是无忧考网为大家准备的，供您借鉴。 1、任命、人名： 任命是任命， 人名是人名， 任命人名不能错， 错了人名错任命。 2、六叔和六舅： 好六叔和好六舅， 借给六斗 六升绿绿豆。 打罢秋，接住豆， 再还六叔六舅六斗六升绿绿豆。 3、王婆夸瓜又夸花： 王婆卖瓜又卖花， 一边卖来一边夸， 又夸花，又夸瓜， 夸瓜大，大夸花， 瓜大，花好，笑哈哈。 4、九个酒迷喝醉酒： 九月九，九个酒迷喝醉酒。 九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。 九个酒迷端起酒，“咕咚、咕咚”又九口。 九杯酒，酒九口，喝罢九个酒迷醉了酒。 5、胡苏夫和吴夫苏： 胡庄有个胡苏夫， 吴庄有个吴夫苏。 胡庄的胡苏夫爱读诗书， 吴庄的吴夫苏爱读古书， 胡苏夫的书屋摆满了诗书， 吴夫苏的书屋放满了古书。 1、酒换油： 一葫芦酒九两六， 一葫芦油六两九。 六两九的油， 要换九两六的酒， 九两六的酒， 不换六两九的油。 2、多少罐： 一个半罐是半罐， 两个半罐是一罐; 三个半罐是一罐半， 四个半罐是两罐; 五个半罐是两罐半， 六个半罐是三满罐; 七个、八个、九个半罐， 请你算算是多少罐。 3、两个排： 营房里出来两个排， 直奔正北菜园来， 一排浇波菜，二排砍白菜。 剩下八百八十八棵大白菜没有掰。 一排浇完了波菜， 又把八百八十八棵大白菜掰下来; 二排砍完白菜， 把一排掰下来的八百八十八棵大白菜背回来。 4、补皮裤： 出西门走七步， 扒鸡皮补皮裤， 不知是皮裤补鸡皮， 还是鸡皮补皮裤? 5、蜂和蜜： 蜜蜂酿蜂蜜， 蜂蜜养蜜蜂。 蜜养蜜蜂蜂酿蜜， 蜂酿蜂蜜蜜养蜂。64. 绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。无忧考网为大家准备的这些经典好玩的绕口令快来练练吧。 1汤上塔，塔滑汤，汤烫塔。 2隔着窗户撕字纸，撕了字纸吃柿子。 3抱着灰鸡上飞机，飞机起飞，灰鸡要飞。 4吃葡萄不吐葡萄皮，不吃葡萄倒吐葡萄皮。 5手艺学不会，材料用得费，正是会的不费，费的不会。 6尖尖山上放紫藤，紫藤四面挂铜铃，风吹藤动铜铃响，风住藤定定铜铃。 7桥东有一家丁家，桥西也有一家丁家。有一天，桥东丁家说桥西丁家的冬瓜好，桥西丁家说桥东丁家的西瓜好，不知是桥东丁家的西瓜好？还是桥西丁家的东瓜好? 8蒋家羊，杨家墙，蒋家羊撞倒了杨家墙，杨家墙压死了蒋家羊，杨家要蒋家赔墙，蒋家要杨家赔羊。 9一个跛子，牵着驴子;一个驼子，拉着车子；一个瞎子，抱着孩子。跛子的驴子，撞着驼子的车子；驼子的车子，碰倒瞎子的孩子;瞎子要打驼子，驼子要打跛子。 10东边大婆婆之家有一只白鼻头大白猫。西边二婆婆家也有一只白鼻头大白猫。一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打，也不晓得东边大婆婆家的白鼻头大白猫赢的呢？还是西边二婆婆家的白鼻头大白猫赢的？ 11六合县有个六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，堆在六十六间楼，栽了六十六株垂杨柳，养了六十六头牛，扣在六十六株垂杨柳。遇了一阵狂风起，吹倒了六十六间楼，翻了六十六篓油，断了六十六株垂杨柳，打死了六十六头牛，急煞了六合县的六十六岁的陆老头。 12(注意！以下是台语的绕口令)有一个姓布，手提一块布，叁步做二步，走到双叉路，当钱一千五。又到双叉路，为看做头路。担着一担醋，顶街下街来卖醋。卖呀卖，卖到蕃薯路，看着一只免，赶紧放落醋，去追兔，掠看兔，更找无布，气看竟落裤，用裤来包兔。这只兔真不识礼数，给我咬破裤，咬到烂糊糊，真可恶，出手要掠，慢半步。赶紧放落醋，去追兔，追前追后追归哺，追一下无突好，推倒醋，啊，裤又更咬到烂糊糊，醋泼落地，沉落土，兔仔走到内山路，真真气死彼个姓布。 13一，一是个一；一二，二一，还是个一；一二叁，叁二一，二一，还是个一；一二叁四，四叁二一，叁二一，二一，还是个一；一二叁四五，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六七，七六五四叁二一，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六七八，八七六五四叁二一，七六五四叁二一，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六七，九八七六五四叁二一，八七六五四叁二一，七六五四叁二一，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六七十，十九八七六五四叁二一，九八七六五四叁二一，八七六五四叁二一，七六五四叁二一，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一。65. 1、八百标兵奔北坡，炮兵并排北边跑， 炮兵怕把标兵碰，标兵怕碰炮兵炮。（双唇） 2、巴老爷有八十八棵芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。（锻炼唇力） 3、门口吊刀，刀倒吊着。……（反复说，锻炼舌的顶力） 4、山前有个催粗腿，山后有个催腿粗， 俩人山前来比腿，不知是催粗腿比催腿粗的腿粗， 还是催腿粗比催粗腿的腿粗。 5、粉红墙上画凤凰，凤凰画在粉红墙。红凤凰、粉凤凰，红粉凤凰花凤凰。 6、玲珑塔，塔玲珑，玲珑宝塔第七层。七张高桌二十八条腿，七个和尚七本经，七个铙钹七口磬，七个木鱼七盏灯。七个金钟，二十八两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 7、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 8、蹦葫芦棒会打鼓，棒葫芦蹦会念经。随风倒他会扫地，这倒随风他会点灯。 9、谁要是数不过来玲珑塔，叫他一夜罚跪，到天明。 10、老师傅叫他们换上了一换，不知道换成换不成。 1、高高山上到有一位老僧，身穿着衲头几千层。 2、八个徒弟，学会了八中艺，八仙过海，各显其能： 3、早招租，晚招租，总找周邹郑曾朱。 4、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 5、长虫围着砖堆转，转完砖堆钻砖堆。 6、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 7、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 10、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。66. 【八十八岁公公】 八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿 【教练和主力】 蓝教练是女教练， 吕教练是男教练， 蓝教练不是男教练， 吕教练不是女教练。 蓝南是男篮主力， 吕楠是女篮主力， 吕教练在男篮训练蓝南， 蓝教练在女篮训练吕楠。 【捉壁虎】 李虎捉壁虎， 本是虎捉虎， 李虎满屋转， 壁虎不敢咬李虎， 李虎也捉不住壁虎。 【南南有个篮篮】 南南有个篮篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘， 盘盘打了碗碗，碗碗撒了饭饭。 【小三登山】 三月三，小三去登山； 上山又下山，下山又上山； 登了三次山，跑了三里三； 出了一身汗，湿了三件衫； 小三山上大声喊，离天只有三尺三。 【玻璃杯和白开水】 玻璃杯倒进白开水， 白开水倒进玻璃杯。 玻璃杯倒进白开水就成了装白开水的玻璃杯。 装白开水的玻璃杯倒进白开水， 白开水倒进装白开水的玻璃杯。 小华和胖娃 小华和胖娃，两人种花又种瓜， 小华会种花不会种瓜， 胖娃会种瓜不会种花， 小华教胖娃种花， 胖娃教小华种瓜。 本文来自献祝福网 【比锤】 炉东有个锤快锤， 炉西有个锤锤快， 两人炉前来比赛， 不知是锤快锤比锤锤快锤得快？ 还是锤锤快比锤快锤锤得快？ 【换斑竹】 斑竹林里头有干斑竹， 包谷林里头有干包谷。 潘家三虎走进包谷林， 掰了一担干包谷， 回家路过斑竹林， 换了三根干斑竹。 【斗放豆】 黑豆放在黑斗里， 黑斗里边放黑豆， 黑豆放黑斗， 黑斗放黑豆， 不知黑豆放黑斗， 还是黑斗放黑豆。 石榴树上结辣椒 颠倒话，话颠倒， 石榴树上结辣椒。 东西大路南北走， 碰见兔子去咬狗。 拿住狗，打砖头， 砖头咬住我的手。 【碰碰车】 碰碰车，车碰碰， 坐着朋朋和平平。 平平开车碰朋朋， 朋朋开车碰平平， 不知是平平碰朋朋， 还是朋朋碰平平。 【小猪】 小猪扛锄头， 吭哧吭哧走。 小鸟唱枝头， 小猪扭头瞅， 锄头撞石头， 石头砸猪头。 小猪怨锄头， 锄头怨猪头。 【捉兔】 一位爷爷他姓顾， 上街打醋又买布。 买了布，打了醋， 回头看见鹰抓兔。 放下布，搁下醋， 上前去追鹰和兔， 飞了鹰，跑了兔。 打翻醋，醋湿布。 【窝和锅】 树上一个窝， 树下一口锅， 窝掉下来打着锅， 窝和锅都破， 锅要窝赔锅， 窝要锅赔窝， 闹了半天， 不知该锅赔窝， 还是窝赔锅。67. 一、绕口令(喷口)练习 (一)基础篇1.出南门奔正南，有一个面铺面向南，面铺门口挂个蓝布棉门帘，摘了蓝布棉门帘，面铺还是面向南，挂上蓝布棉门帘，瞧了瞧，面铺还是面向南。 2.河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 3.一颗星，孤零零，两颗星，放光明。三四五六许多星，照得满天亮晶晶。 4.大米饭喷喷香，我们大家都来尝。吃得快吃得饱，不把饭粒掉桌上。 5.母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。 6.排排坐，吃果果，你一个，我一个。小华没有来，给他留一个。 7.排排好，排排好，小狗小猫做早操。花鹿姐姐喊口令，一二三四做得好。 8.这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 9.出西门走七步，拾到鸡皮补皮裤。是鸡皮补皮裤，不是鸡皮不必补皮裤。 10.我家有个肥净白净八斤鸡，飞到张家后院里。张家院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。我拿他的肥净白净八斤狗赔了我的肥净白净八斤鸡。 11.扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 12.打南边来了个白胡子老头，手里头拄着根崩白的白拐棒棍。 13.吃葡萄不吐葡萄皮，不吃葡萄倒吐葡萄皮。 14.八百标兵奔北坡，炮兵并排北边跑，标兵怕把炮兵碰，炮兵怕碰标兵炮。 (二)提高篇 1.正月里，正月正，姐妹二人去逛灯，大姐名叫粉红女，二姐名叫女粉红。粉红女身穿一件粉红袄，女粉红身穿一件袄粉红。粉红女怀抱一瓶粉红酒，女粉红怀抱一瓶酒粉红。姐妹找了个无人处，推杯换盏饮刘伶。女粉红喝了粉红女的粉红酒，粉红女喝了女粉红的酒粉红，粉红女喝了一个酩酊醉，女粉红喝了一个醉酩酊。女粉红揪着粉红女就打，粉红女揪着女粉红就拧。女粉红撕了粉红女的粉红袄，粉红女就撕了女粉红的袄粉红。姐妹打罢落下手，自己买线自己缝。粉红女买了一条粉红线，女粉红买了一条线粉红。粉红女是反缝缝缝粉红袄，女粉红是缝反缝缝袄粉红。 2.会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐。 3.你会糊我的粉红活佛龛来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪！ 4.打南边来个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子茄子，砸了瘸子碟子，瘸子毛腰拾茄子。 北边来个醉老爷子，腰里掖着烟袋别子，过来要买瘸子茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知老爷子的烟袋别子打了瘸子茄子，也不知瘸子橛子打了老爷子烟袋别子。 5.车上有个盆，盆里有个瓶，乓乓乓，乒乒乒，不知是瓶碰盆，还是盆碰瓶。 6.男演员穿蓝制服，女演员穿棉制服，蓝制服是棉制服，棉制服是蓝制服。男演员穿蓝棉制服，女演员穿棉蓝制服。 7.老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 8.小良放羊遇见狼，狼想吃羊怕小良。小良打狼救小羊，狼死羊活靠小良。68. 1汤上塔，塔滑汤，汤烫塔。 2隔着窗户撕字纸，撕了字纸吃柿子。 3抱着灰鸡上飞机，飞机起飞，灰鸡要飞。 4吃葡萄不吐葡萄皮，不吃葡萄倒吐葡萄皮。 5手艺学不会，材料用得费，正是会的不费，费的不会。 6尖尖山上放紫藤，紫藤四面挂铜铃，风吹藤动铜铃响，风住藤定定铜铃。 7桥东有一家丁家，桥西也有一家丁家。有一天，桥东丁家说桥西丁家的冬瓜好，桥西丁家说桥东丁家的西瓜好，不知是桥东丁家的西瓜好？还是桥西丁家的东瓜好? 8蒋家羊，杨家墙，蒋家羊撞倒了杨家墙，杨家墙压死了蒋家羊，杨家要蒋家赔墙，蒋家要杨家赔羊。 9一个跛子，牵着驴子;一个驼子，拉着车子；一个瞎子，抱着孩子。跛子的驴子，撞着驼子的车子；驼子的车子，碰倒瞎子的孩子;瞎子要打驼子，驼子要打跛子。 10东边大婆婆之家有一只白鼻头大白猫。西边二婆婆家也有一只白鼻头大白猫。一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打，也不晓得东边大婆婆家的白鼻头大白猫赢的呢？还是西边二婆婆家的白鼻头大白猫赢的？ 11六合县有个六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，堆在六十六间楼，栽了六十六株垂杨柳，养了六十六头牛，扣在六十六株垂杨柳。遇了一阵狂风起，吹倒了六十六间楼，翻了六十六篓油，断了六十六株垂杨柳，打死了六十六头牛，急煞了六合县的六十六岁的陆老头。 12(注意！以下是台语的绕口令)有一个姓布，手提一块布，叁步做二步，走到双叉路，当钱一千五。又到双叉路，为看做头路。担着一担醋，顶街下街来卖醋。卖呀卖，卖到蕃薯路，看着一只免，赶紧放落醋，去追兔，掠看兔，更找无布，气看竟落裤，用裤来包兔。这只兔真不识礼数，给我咬破裤，咬到烂糊糊，真可恶，出手要掠，慢半步。赶紧放落醋，去追兔，追前追后追归哺，追一下无突好，推倒醋，啊，裤又更咬到烂糊糊，醋泼落地，沉落土，兔仔走到内山路，真真气死彼个姓布。 13一，一是个一；一二，二一，还是个一；一二叁，叁二一，二一，还是个一；一二叁四，四叁二一，叁二一，二一，还是个一；一二叁四五，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六七，七六五四叁二一，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六七八，八七六五四叁二一，七六五四叁二一，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六七八九，九八七六五四叁二一，八七六五四叁二一，七六五四叁二一，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一；一二叁四五六七八九十，十九八七六五四叁二一，九八七六五四叁二一，八七六五四叁二一，七六五四叁二一，六五四叁二一，五四叁二一，四叁二一，叁二一，二一，还是个一。 14盆里有个瓢，风吹瓢摆摇，不知是瓢碰盆，还是盆碰瓢。 15墙上一个洞，壁上一个缝，割块鸡皮补壁缝，不知是壁缝补鸡皮？还是鸡皮补壁缝？ 16房子里有箱子，箱子里有匣子，匣子里有盒子，盒子里有镯子；镯子外有盒子，盒子外有匣子，匣子外有箱子，箱子外有房子。 17家后有座庙，天天猫来尿，不知是庙尿猫，还是猫尿庙。 18楼上一块破瓦，楼下一匹骡马，破瓦落下来打了骡马，骡马跳起来踩了破瓦。天上一颗星，地上一个人，星照人，人瞧星，星照不清人，人瞧不清星。 19龚先生东方走来肩了一棵松，翁先生西方走来拿了一只钟。龚先生的松撞破了翁先生的钟，翁先生扭住了龚先生的一棵松。龚先生要翁先生放了他的松，翁先生要龚先生赔了他的钟。龚先生不肯赔还翁先生的钟，翁先生不肯放还龚先生的松。 20房胡子，黄胡子，新年到了写福字；不知道房胡子的福字写得好？还是黄胡子的福字写得好？ 21梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦记泥里的两对鸟倒吊；可怜泥里的两对鸟倒吊，也惦记梁上的两对倒吊鸟。 22山前有个严圆眼，山后有个圆眼严，两人上山来比眼，不知是严圆眼的眼圆？还是圆眼严的眼圆？ 23蒋家羊，杨家墙，蒋家羊撞倒了杨家墙，杨家墙压死了蒋家羊，杨家要蒋家赔墙，蒋家要杨家赔羊。 24高高山上一条藤，藤条头上挂铜铃，风吹藤动铜铃动，风静藤停铜铃静 25一个驼子骑匹骡子，碰到婆子，挑担茄子，驼子个骡子践到婆子个茄子，婆子拖驼子下骡子，要驼子赔婆子个茄子。 26墙上一个瓶，墙下一个盆，瓶落下来打破了盆的底，盆翻转来打破了瓶的嘴，瓶要盆赔瓶的嘴，盆要瓶赔盆的底。 27吃葡萄不吐葡葡皮，不吃葡萄倒吐葡萄皮。 28石狮寺有四十四只石狮子，四十四只石狮子吃四十四枝湿紫柿子。 29和尚端汤上塔，塔滑汤汤烫塔；和尚端塔上汤，汤滑塔塔烫汤。 30你会炖我的冻豆腐，就来炖我的冻豆腐，你不会炖我的冻豆腐，别胡炖八炖我的冻豆腐. 南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗；还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 喇嘛与哑巴 打南边来了个哑巴，腰里别了个喇叭； 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸,哑巴嘀嘀哒哒吹喇叭 牛郎恋刘娘,刘娘念牛郎,牛郎牛年恋刘娘,刘娘年年念牛郎,郎恋娘来娘恋郎,念娘恋娘念郎恋郎,念恋娘郎,绕不晕你算我白忙69. 最经典最简单绕口令：苍鹭常落长渚唱 长清黄，长渚苍， 苍鹭常落长渚唱。 苍鹭常唱长渚苍， 苍鹭常唱长渚黄。 冬吃萝卜夏吃瓜 冬吃萝卜夏吃瓜， 二八月里吃蚂虾。 最经典最简单绕口令：涛涛吃桃 姥姥买了一包桃， 涛涛笑着伸手掏。 姥姥说，涛涛、涛涛好涛涛， 桃上有毛别掏桃， 刷掉毛，洗净桃， 再让涛涛来吃桃。 最经典最简单绕口令：扁婆娘背扁背斗找扁豆 扁婆娘背的扁背斗， 扁坡上找扁豆， 会拔拔上多半扁背斗扁豆子， 不会拔拔上少半扁背斗扁豆子。 扁扁娃娃在扁扁洼里背扁扁豆子 扁扁娃娃在扁扁洼里背扁扁豆子， 会背的背着一扁扁背篼扁豆子， 不会背的背半扁扁背篼扁豆子。70. 《六叔和六舅》 好六叔和好六舅， 借给六斗 六升绿绿豆。 打罢秋，接住豆， 再还六叔六舅六斗六升绿绿豆。 《王婆夸瓜又夸花》 王婆卖瓜又卖花， 一边卖来一边夸， 又夸花，又夸瓜， 夸瓜大，大夸花， 瓜大，花好，笑哈哈。 《九个酒迷喝醉酒》 九月九，九个酒迷喝醉酒。 九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。 九个酒迷端起酒，“咕咚、咕咚”又九口。 九杯酒，酒九口，喝罢九个酒迷醉了酒。71. 1、四和十，十和四，十四和四十，四十和十四。 说好四和十得靠舌头和牙齿谁说四十是“细席”， 他的舌头没用力；谁说十四是“适时”， 他的舌头没伸直。认真学，常练习，十四、四十、四十四。 2、公园有四排石狮子，每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子？ 3、东边来了一只小山羊，西边来了一只大灰狼， 一起走到小桥上，小山羊不让大灰狼， 大灰狼不让小山羊，小山羊叫大灰狼让小山羊， 大灰狼叫小山羊让大灰狼，羊不让狼， 狼不让羊，扑通一起掉到河中央。 4、东边来个小朋友叫小松，手里拿着一捆葱。 西边来个小朋友叫小丛，手里拿着小闹钟。 小松手里葱捆得松，掉在地上一些葱。 小丛忙放闹钟去拾葱，帮助小松捆紧葱。 小松夸小丛像雷锋，小丛说小松爱劳动。 5、葵花、蓖麻胖娃小筐手中拿，来到园中收葵花； 小华小篮身上挎，一同进园收蓖麻。 胖娃种的葵花花盘大，小华种的蓖麻密麻麻。 小华去帮胖娃摘葵花，胖娃去帮小华收蓖麻。 小华和胖娃，收了葵花、蓖麻献国家。 6、营房里出来两个排，直奔正北菜园来， 一排浇波菜，二排砍白菜。 剩下八百八十八棵大白菜没有掰。 一排浇完了波菜，又把八百八十八棵大白菜掰下来； 二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 7、白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 8、出八十八二十八，八个小孩儿把萝卜拔， 你也拔，我也拔，看谁拔得多， 看谁拔得大。你拔得不多个儿不小， 我拔得不少个儿不大。一个萝卜一个坑儿， 算算多少用车拉，一个加俩，俩加仨， 七十二个加十八，拿个算盘打一打，一百差俩九十八。 9、八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 10、六十六岁的陆老头，盖了六十六间楼， 买了六十六篓油，养了六十六头牛， 栽了六十六棵垂杨柳。六十六篓油， 堆在六十六间楼；六十六头牛， 扣在六十六棵垂杨柳。忽然一阵狂风起， 吹倒了六十六间楼，翻倒了六十六篓油， 折断了六十六棵垂杨柳，砸死了六十六头牛， 急煞了六十六岁的陆老头。 11、打南边来了个哑巴，腰里别了个喇叭； 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸；哑巴嘀嘀哒哒吹喇叭。 12、司小四和史小世，四月十四日十四时四十上集市， 司小四买了四十四斤四两西红柿， 史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 13、柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴； 来了侯老六，拉了六头牛；来了仇老六， 提了六篓油；来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六， 住上刘老六的六号楼，半夜里，牛抵猴， 猴斗牛，撞倒了仇老六的油， 油坏了尤老六的绸。牛老六帮仇老六收起油， 侯老六帮尤老六洗掉绸上油， 拴好牛，看好猴，一同上楼去喝酒。 14、南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗， 咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗， 也咬了他大大伯家的大搭拉尾巴耳朵狗一口。 不知是他大大伯家的大搭拉尾巴耳朵狗， 先咬了他大伯家的二搭拉尾巴耳朵狗； 还是他二大伯家的二搭拉尾巴耳朵狗， 先咬了他大大伯家的大搭拉尾巴耳朵狗。72. 2、我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。3、小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。4、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。5、小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破了小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跑离了小毛。6、青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。7、三月三，小三去登山。上山又下山，下山又上山。登了三次山，跑了三里三。出了一身汗，湿了三件衫。小三山上大声喊：“离天只有三尺三！”8、太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地上石头滚上坡。江里骆驼会下蛋，山上鲤鱼搭成窝。腊月炎热直流汗，六月寒冷打哆嗦。9、一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，飞了鹰，跑了兔。打翻醋，醋湿布。10、白猫黑鼻子，黑猫白鼻子；黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子；黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。11、九十九头牛，驮着九十九个篓。每篓装着九十九斤油。牛背油篓扭着走，油篓磨坏篓漏油，九十九斤一个篓，还剩六十六斤油。你说漏了几十几斤油？12、北边来了一个瘸子，背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。13、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。14、墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。15、天上一颗星，地下一块冰， 屋上一只鹰，墙上一排钉。抬头不见天上的星，乒乓乒乓踏碎地下的冰，啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。16、小妞妞，叫小秋，梳着两个小抓鬏，小胖胖，叫小牛，穿着一个小兜兜。小秋帮着小牛记扣扣，小牛帮小秋剥豆豆，小秋、小牛手拉手，一块儿玩，一块儿走。17、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了“活狮子”。18、一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。19、北贫坡上白家有个伯伯，家里养着一百八十八只白鹅，门口种着一百八十八棵白果，树上住着一百八十八只八哥。八哥在白果树上吃白果，白鹅气得直叫：我饿！我饿！20、黑化肥发灰，灰化肥发黑。黑化肥发黑不发灰，灰化肥发灰不发黑。南边来个老爷子，手里拿碟子，碟子里装茄子，一下碰上了橛子。打了碟子，洒了茄子，摔坏了老爷子。21、红房子，会搭蓝房子的红红，愿帮会搭红房子的蓝蓝搭蓝房子。22、九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。23、张家有个小英子，王家有个小柱子。张家的小英子，自己穿衣洗袜子，天天扫地擦桌子，王家的小柱子，捡到一只皮夹子，还给后院大婶子。小英子，小柱子，他们都是好孩子。24、天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。25、东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。73. 1、树上卧只猴，树下蹲条狗。猴跳下来撞了狗， 狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 2、王婆卖瓜又卖花，一边卖来一边夸， 又夸花，又夸瓜，夸瓜大， 大夸花，瓜大，花好，笑哈哈。 3、黑豆放在黑斗里，黑斗里边放黑豆， 黑豆放黑斗，黑斗放黑豆， 不知黑豆放黑斗，还是黑斗放黑豆。 4、一葫芦酒九两六，一葫芦油六两九。 六两九的油，要换九两六的酒， 九两六的酒，不换六两九的油。 5、瓜藤开花像喇叭，娃娃爱花不去掐。 瓜藤开花瓜花结花，没花就没瓜。 吃瓜要爱花，娃娃爱花也爱瓜。 6、八只小白兔，住在八棱八角八座屋。 八个小孩要逮八只小白兔，吓得小白兔， 不敢再住八棱八角八座屋。 7、白石白又滑，搬来白石搭白塔。 白石塔，白石塔，白石搭石塔， 白塔白石搭。搭好白石塔，白塔白又滑。 8、扁担长，板凳宽，板凳没有扁担长 ，扁担没有板凳宽。扁担要绑在板凳上， 板凳偏不让扁担绑在板凳上。 9、北风吹摇路边树，小陆上前把树护。 一个木竿路旁竖，一根绳子拴捆住。 树有木竿做支柱，木竿支树树稳固。 10、颠倒话，话颠倒，石榴树上结辣椒。 东西大路南北走，碰见兔子去咬狗。 拿住狗，打砖头，砖头咬住我的手。 11、小花猫爱画画，先画一朵腊梅花， 又画一个小喇叭，带着腊梅花， 吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 12、小华和胖娃，两人种花又种瓜， 小华会种花不会种瓜，胖娃会种瓜不会种花， 小华教胖娃种花，胖娃教小华种瓜。 13、郭老伯、骆老伯，毕老伯、柏老伯， 郭骆毕柏四老伯，约着城北买菱角， 买得菱角阁上剥，菱角壳戳了四老伯的脚。 14、炉东有个锤快锤，炉西有个锤锤快， 两人炉前来比赛，不知是锤快锤比锤锤快锤得快？ 还是锤锤快比锤快锤锤得快？ 15、华华有两朵红花，红红有两朵黄花， 华华想要黄花，红红想要红花， 华华送给红红一朵红花，红红送给华华一朵黄花。 16、毛毛有一顶红帽，猫猫有一身灰毛。 毛毛要猫猫的灰毛，猫猫要毛毛的红帽。 毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。 17、四是四，十是十，十四是十四， 四十是四十。莫把四字说成十， 休将十字说成四。若要分清四十和十四，经常练说十和四。 18、老顾大顾和小顾，扛锄植树走出屋。 漫天大雾罩峡谷，雾像灰布满路铺， 大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 19、妈妈爱栽花，爸爸爱种瓜； 妈妈栽桃花，爸爸种西瓜； 桃花红，红桃花，娃娃脸上笑哈哈； 爸爸给我吃西瓜，娃娃心里乐开花。 20、南南有个篮篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘， 盘盘打了碗碗，碗碗撒了饭饭。 21、路边八村八里铺，八户夫妇都姓傅。 八户傅，傅八户，八户夫妇做豆腐。 傅户做豆腐，夫妇卖豆腐。 傅户卖豆腐，八户傅户富。 22、锅树上一个窝，树下一口锅， 窝掉下来打着锅，窝和锅都破， 锅要窝赔锅，窝要锅赔窝， 闹了半天，不知该锅赔窝，还是窝赔锅。 23、蒋家砌了一垛墙，杨家养了一只羊， 杨家羊，撞塌了蒋家的墙， 蒋家的墙，压死了杨家的羊， 蒋家要杨家赔墙，杨家要蒋家赔羊。 24、板凳宽，扁担长， 板凳比扁担宽，扁担比板凳长， 扁担要绑在板凳上，板凳不让扁担绑在板凳上， 扁担偏要板凳让扁担绑在板凳上。74. 1、大花碗里扣个大花活蛤蟆。 2、妹照镜子头梳手，门外口袋把驴驮。 3、妈妈种麻，我去放马， 马吃了麻，妈妈骂马。 4、还了山当腰三哥三嫂子， 两个三斗三升酸枣子。 5、山下三小子，又找山上三老子， 借三斗三升酸枣子。 6、老唐端蛋汤，踏凳登宝塔， 只因凳太滑，汤洒汤烫塔。 7、山当腰三哥三嫂子， 借给山下三小子三斗三升酸枣子。 8、山下三小子，找山当腰三哥三嫂子， 借三斗三升酸枣子。 9、山上住着三老子，山下住着三小子， 山腰住着三哥三嫂子。 10、河里有只船，船上挂白帆， 风吹帆张船向前，无风帆落停下船。 11、任命是任命，人名是人名， 任命人名不能错，错了人名错任命。 12、给山下三小子借了三斗三升酸枣子。 过年山下三小子打下酸枣子， 13、山上三老子，还没有三斗三升酸枣子， 只好到山当腰找三哥三嫂子， 14、高高山上一条藤，藤条头上挂铜铃。 风吹藤动铜铃动，风停藤停铜铃停。 15、一朵粉红大荷花，趴着一只活蛤蟆， 八朵粉红大荷花，趴着八只活蛤蟆。 16、树上一只鸟，地上一只猫。 地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 17、一只皮鞋，一只蒲鞋，皮鞋补蒲鞋， 蒲鞋补皮鞋，皮鞋、蒲鞋，蒲鞋、皮鞋…… 18、桌上放个盆，盆里有个瓶，砰砰啪啪， 啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 19、壁上挂只鼓，鼓里挂只虎，虎爬破了鼓， 拿块布来补，是布补虎，还是布补鼓。 20、多多和哥哥，坐下分果果。哥哥让多多， 多多让哥哥。都说要小个，外婆乐呵呵。 21、兜里装豆，豆装满兜，兜破漏豆。 倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 22、好六叔和好六舅，借给六斗六升绿绿豆。 打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。75. 【导语】绕口令是十分经典的文字游戏项目，今天无忧考网跟大家分享一些非常经典的绕口令，希望对大家有所帮助，下面我们一起来看看吧！ 奋发商店卖混纺，有红混纺，黄混纺， 粉红混纺，花混纺，纷繁的混纺让大娘着了慌。 仿佛进了混纺的大世界，眼也花，手也忙。 吩咐女儿快快挑混纺。 这天天下雨，体育局穿绿雨衣的女小吕，去找穿绿运动衣的女老李。 穿绿雨衣的女小吕，没找到穿绿运动衣的女老李， 穿绿运动衣的女老李，也没见着穿绿雨衣的女小吕。 滚花龙缸盛滚龙虾汤，虾汤鲜，花缸掀。 莎莎告诉佳佳，又去告诉花花，妈妈下班乏了，不要惊吵妈妈。 咱们外边玩耍，手帕反眼蒙毒害，玩玩“过桥摸瞎“。 莎莎拉着佳佳，佳佳拉着花花。 磙下压个棍，棍上压个磙。 磙压棍滚，棍滚磙滚。 化肥会挥发，黑化肥发灰，灰化肥发黑， 黑化肥发灰会挥发，灰化肥挥发会发黑， 黑化肥发灰挥发会花飞，灰化肥挥发发黑会飞花。 上一山，下一山，跑了三里三米三， 登了一座大高山，山高海拔三百三。 上了山，大声喊：我比山高三尺三。 一条小渠，住着一条小鱼，小鱼想游出小渠， 小渠笑小鱼，小鱼小鱼你太心急，长大才能游出来。 老伯伯卖墨，老婆婆卖馍，老婆婆卖馍买墨，老伯伯卖墨买馍。 墨换馍老伯伯有馍，馍换墨老婆婆有墨。 潮州城里有座飞英塔，飞过一只喜鹊擦一擦。 弗晓的是喜鹊来擦塔？ 还是塔来擦喜鹊？ 一葫芦酒九两六，一葫芦油六两九。 六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 月亮走，我也走，我给月亮提竹篓， 竹篓里面装豆豆，送给月亮上的小猴猴，小猴吃了豆豆长肉肉。 小花和小华，一同种庄稼。 小华种棉花，小花种西瓜。 小华的棉花开了花，小花的西瓜结了瓜。 小花找小华，商量瓜换花。 小花用瓜换了花，小华用花换了瓜。 八百标兵奔北坡，炮兵并排北边跑。 炮兵怕把标兵碰，标兵怕碰炮兵炮。 水中映着彩霞，水面游着花鸭。 霞是五彩霞，鸭是麻花鸭。 麻花鸭游进五彩霞，五彩霞网住麻花鸭。 乐坏了鸭，拍碎了霞，不清是鸭还是霞。 墙上一根钉，强作钉上挂条绳，滑落绳下瓶，打碎瓶下灯，砸破灯下盆。 瓶打灯，灯打盆，盆骂灯，灯骂瓶，瓶骂绳， 绳骂钉，钉怪绳，绳怪瓶，瓶怪灯，灯怪盆， 叮叮当当当当叮，乒乒乓乓乓乓乒。 石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词，年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词，忙递给年十四的石小四， 年十四的石小四见了好报纸，忙递给年四十的史肖石 张果老，张果老，张果老的门前有棵白核枣， 白的多，红的少，看的多，买的少，凭你说得快，一口气说不完一百个枣。 一个枣，两个枣，三个枣……一百个枣。76. 【导语】绕口令是十分经典的文字游戏项目，今天无忧考网跟大家分享一些非常经典的绕口令，希望对大家有所帮助，下面我们一起来看看吧！ 小鸭下水洼，水洼有水花， 水花陪小鸭抓小虾，小虾躲着小鸭抓。 我家有个肥净白净八斤鸡 我家有个肥净白净八斤鸡，飞到张家后院里。 张家院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。 我拿他的肥净白净八斤狗赔了我的肥净白净八斤鸡。 四个孩子上果市，拿着四个小篮子。 花了硬币四毛四，买了十个小柿子。 四个孩子出果市，拾了四十小石子。 到了家里吃柿子，吃完柿子玩石子。 坡上长菠萝，坡下玩陀螺。 坡上掉菠萝，菠萝砸陀螺。 砸破陀螺补陀螺，顶破菠萝剥菠萝。 老外打歪一棵树，歪树倒在小外身上。 小外骂老外不是好老外，老外说小外不是好小外。 小溪流水哗啦啦，小华手拿簸箕去小溪里捞河虾， 一捞捞起一只大河虾和半簸箕烂泥沙。 虾儿跳水响哗哗，小花簸箕里只剩泥沙没有虾。 葵花、蓖麻胖娃小筐手中拿，来到园中收葵花； 小华小篮身上挎，一同进园收蓖麻。 胖娃种的葵花花盘大，小华种的蓖麻密麻麻。 小华去帮胖娃摘葵花，胖娃去帮小华收蓖麻。 小华和胖娃，收了葵花、蓖麻献国家。 男演员、女演员，同台演戏说方言。 男演员说吴方言，女演员说闽南言。 男演员远东劲族飞行员，女演员演鲁迅著作研究员。 研究员、飞行员； 吴方言、闽南言。 你说男演员演得全不全？ 九月九，九个酒迷喝醉酒。 九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。 九个酒迷端起酒，“咕咚、咕咚”又九口。 九杯酒，酒九口，喝罢九个酒迷醉了酒。 墙头上有八十八个毕卜虫格洞，八十八个毕卜虫格洞里有八十八个毕卜虫； 剥过格八十八个毕卜虫格皮，糊过格八十八个毕卜虫格洞。 抬头看，满天星，低头看，一道坑。 坑里看，栽满葱，葱上看，冻着冰。 屋里看，点着灯，墙上看，钉的钉。 钉上看，挂的弓，弓上看，卧的鹰。 寒冬天，刮大风，刮散了，满天星。 荡呀荡，荡秋千，小妹妹，站上边，迎着风儿荡得快。 使劲荡，一二三，荡得高，荡得远，象只蝴蝶飞上天。 小手绢，擦鼻涕，天天和我在一起。 十字路口指示灯，红黄绿色分得清。 绿灯行，红灯停。 红灯停，绿灯行。 小鱼入鱼网鱼网捕鱼鱼难逃，大雁过雁塔雁塔留雁雁不留。 男旅客穿着蓝上装，女旅客穿着呢大衣， 男旅客扶着拎篮子的老大娘，女旅客搀着拿笼子的小男孩儿。 蜻蜓青，青浮萍，青萍上面停蜻蜓，蜻蜓青萍分不清。 别把蜻蜓当青萍，别把青萍当蜻蜓。 南面来了个瘸子，腰里别着个橛子，北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子，挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子，挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。77. 【导语】绕口令是十分经典的文字游戏项目，今天无忧考网跟大家分享一些特经典的绕口令，希望对大家有所帮助! 山前住的颜圆眼，山后住的颜眼圆， 二人山前来比眼，也不知道颜圆眼比颜眼圆的圆眼， 也不知道颜眼圆比颜圆眼的眼圆。 清早起来雨稀稀，王七上街去买席。 骑着毛驴跑得急，捎带卖蛋又贩梨。 一跑跑到小桥西，毛驴一下跌了蹄。 打了蛋，撒了梨，跑了驴， 急得王七眼泪滴，又哭鸡蛋又骂驴。 尤大嫂去买肉，冉大妈去买油， 尤大嫂买肉不买油，冉大妈买油不买肉。 俩人集上碰了头，尤大嫂请冉大妈到家吃炖肉， 冉大妈请尤大嫂去她家喝蜂蜜白糖加香油。 白鸡下黑蛋，黑鸡下白蛋。 白鸡下黑蛋鸡白蛋黑，黑鸡下白蛋鸡黑蛋白 小江拿着一包糖，小方提着一只缸，上楼梯， 脚一滑，打翻了小江手中糖。 小方慌忙来帮忙，拾起糖，装进缸，缸里装着一包糖。 小江小方端起缸，吃了糖，把楼上。 九月九，九个酒迷喝醉酒。 九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。 九个酒迷端起酒，“咕咚、咕咚”又九口。 九杯酒，酒九口，喝罢九个酒迷醉了酒。 童子打桐子，桐子落，童子乐； 丫头啃鸭头，鸭头咸，丫头嫌。 三娘在山上放三只山羊，三只山羊翻过山梁， 三娘翻过山梁去找三只山羊，三只山羊躲在杉树旁，三娘找到三只山羊。 山前有个严圆眼，山后有个杨眼圆，二人山前山后来比眼； 不知严圆眼比杨眼圆的眼圆，还是杨眼圆比严圆眼的眼圆。 巴老爷有八十八棵芭蕉树，来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 龚先生东方走来肩了一棵松，翁先生西方走来拿了一只钟。 龚先生的松撞破了翁先生的钟，翁先生扭住了龚先生的一棵松。 龚先生要翁先生放了他的松，翁先生要龚先生赔了他的钟。 龚先生不肯赔还翁先生的钟，翁先生不肯放还龚先生的松。 六只红花碗里，合个六只活的绿蛤吧。 掀开红花碗，六只绿蛤吧，跳到六个红花碗。 树上一只鸟，地上一只猫。 地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 清早上街走，走到周家大门口，门里跳出一只大黄狗，朝我哇啦哇啦吼。 我拾起石头打黄狗，黄狗跳上来就咬我的手。 也不知我手里的石头打没打着周家的大黄狗，周家的大黄狗咬没咬着我的手？ 房子里有箱子，箱子里有匣子，匣子里有盒子，盒子里有镯子； 镯子外有盒子，盒子外有匣子，匣子外有箱子，箱子外有房子。 荸荠有皮，皮上有泥。 洗掉荸荠皮上的泥，削去荸荠外面的皮， 小丽、小艺和小奇，欢欢喜喜吃荸荠。 长鞭杆把，短鞭杆把，长鞭杆把比短鞭杆把长半杆把， 短鞭杆把比长鞭杆把短半把。 树上有只雕，地上有只猫，地上的猫想叼走树上的雕， 树上的雕啄猫身上的毛，雕吓走了猫，猫赶飞了雕。 颗颗豆子进石磨，磨成豆腐送哥哥，哥哥说我的生产虽然小，可是小小的生产贡献多。 78. 【导语】绕口令是十分经典的文字游戏项目，今天无忧考网跟大家分享一些经典的绕口令，希望对大家有所帮助! 走如风，站如松，坐如钟，睡如弓。 风、松、钟、弓，弓、钟、松、风，连念七遍口齿清。 牺息消心象； 檐楹溢艳阳，帘栊兰露落，邻里柳林凉， 高阁过空谷，孤竿隔古岗，潭庭月淡荡，仿佛复芬芳。 狗咬狗，狗被狗咬狗就吼， 狗吼把咬狗的狗轰走，狗再也不敢狗咬狗。 唧唧鸡，鸡唧唧。 几鸡挤挤集机脊。 机极疾，鸡饥极，鸡冀己技击及鲫。 鸡既济蓟畿，鸡计疾机激几鲫。 机极疾，鲫极悸，急急挤集矶级际。 继即鲫迹极寂寂。 继即几鸡既饥即唧唧。 大妹和小妹，一起去收麦。 大妹割小麦，小妹割大麦。 大妹帮小妹挑大麦，小妹帮大妹捆小麦。 大妹小妹收完麦，高高兴兴去打麦。 大妹打小麦啪啪噼，小妹打大麦噼噼啪。 斑竹林里头有干斑竹，包谷林里头有干包谷。 潘家三虎走进包谷林，掰了一担干包谷， 回家路过斑竹林，换了三根干斑竹。 过国过果郭国过国国果国过郭国国国国国过果国 卜家卜小五，种了五亩谷。 跑来一群鼠，在地里吃谷。 小五忙割谷，顾不得捉鼠。 小五想捉鼠，就顾不得割谷。 忙坏了卜小五，没捉住老鼠，还糟蹋了很多谷。 胡图用笔画葫芦，葫芦画得真糊涂，糊涂不能算葫芦， 要画葫芦不糊涂，胡图决心不糊涂，画出一只大葫芦。 猜中指，打十五，不打不打二十五，猜到了， 一盘肉，猜不到，吃豆腐，猫儿回来憩猪油。 白兔是白肚，黑兔是黑肚。 白兔白肚不是黑肚，黑兔黑肚不是白肚。 一块土粗布，一条粗布裤，哥哥屋里补布裤，飞针走线自己做。 粗布裤上补粗布，土粗布补粗布裤，哥哥穿上粗布裤，艰苦朴素牢记住 丛岭种青松，青松挂铜钟，风行松动铜铃鸣，风停松静钟声停。 公园里面碰碰船，坐着兰兰和南南，南南开船碰兰兰，兰兰开船躲南南。 兰兰南南碰一起，乐坏了南南和兰兰。 哥哥过河捉个鸽，回家割鸽来请客，客人吃鸽称鸽肉，哥哥请客乐呵呵。 坡上长菠萝，坡下玩陀螺。 坡上掉菠萝，菠萝砸陀螺。 砸破陀螺补陀螺，顶破菠萝剥菠萝。79. 【导语】绕口令是十分经典的文字游戏项目，今天无忧考网跟大家分享一些经典的绕口令，希望对大家有所帮助! 清早起来雨稀稀，王七上街去买席。 骑着毛驴跑得急，捎带卖蛋又贩梨。 一跑跑到小桥西，毛驴一下跌了蹄。 打了蛋，撒了梨，跑了驴，急得王七眼泪滴，又哭鸡蛋又骂驴。 正月里，正月正，姐妹二人去逛灯，大姐名叫粉红女，二姐名叫女粉红。 粉红女身穿一件粉红袄，女粉红身穿一件袄粉红。 粉红女怀抱一瓶粉红酒，女粉红怀抱一瓶酒粉红。 姐妹找了个无人处，推杯换盏饮刘伶。 女粉红喝了粉红女的粉红酒，粉红女喝了女粉红的酒粉红， 粉红女喝了一个酩酊醉，女粉红喝了一个醉酩酊。 女粉红揪着粉红女就打，粉红女揪着女粉红就拧。 女粉红撕了粉红女的粉红袄，粉红女就撕了女粉红的袄粉红。 姐妹打罢落下手，自己买线自己缝。 粉红女买了一条粉红线，女粉红买了一条线粉红。 粉红女是反缝缝缝粉红袄，女粉红是缝反缝缝袄粉红。 半辫蒜掰半篮蒜瓣。 半辫蒜掰半篮蒜瓣。 半辫蒜掰半篮蒜瓣。 半辫蒜掰半篮蒜瓣。 半辫蒜掰半篮蒜瓣。 一个大嫂子，一个大小子。 大嫂子跟大小子比包饺子，看是大嫂子包的饺子好， 还是大小子包的饺子好，再看大嫂子包的饺子少，还是大小子包的饺子少。 大嫂子包的饺子又小又好又不少，大小子包的饺子又小又少又不好。 小王的姜撞翻老杨的缸，老杨的缸碰倒小王的姜。 小王放下姜去扶老杨的缸，老杨放下缸去帮小王装姜。 山东门，走八步，碰着两个老汉比腿粗。 一个叫崔粗腿，一个叫崔腿粗，不知崔粗腿的腿比崔腿粗的腿粗？ 还是崔腿粗的腿比崔粗腿的腿粗？ 大海底下有石油，打井采汩石油流，输油管道流石油， 采油运油别漏油，漏了石油污染海，鱼虾海鸟不停留。 乌鸦站在黑猪脊上说黑猪黑，黑猪说乌鸦比黑猪还要黑， 乌鸦说它身比黑猪黑，嘴不黑，黑猪听罢笑得嘿嘿嘿。 天连水，水连天，水天一色望无边， 兰兰的天似绿水，绿绿的水如蓝天。 爹爹送我一块绸，姆姆送我一头牛， 哥哥送我一把白纸扇，嫂嫂送我一个小丫头。 穿了绸，骑了牛，白纸扇，遮日头，后面跟了一个小丫头。 从南来了个秃丫头胳膊上挎着个破笆斗， 里头有堆羊骨头，伸手拿骨头，送在口里啃骨头。 地下有块破砖头，绊倒了秃丫头，撒了羊骨头。 到底是天连水，还是水连天？ 张家有个小英子，王家有个小柱子。 张家的小英子，自己穿衣洗袜子，天天扫地擦桌子， 王家的小柱子，捡到一只皮夹子，还给后院大婶子。 小英子，小柱子，他们都是好孩子。 杰杰和姐姐，花园里面捉蝴蝶。 杰杰去捉花中蝶，姐姐去捉叶上蝶。 爷爷是瘸子，夜里去摘茄子，路上有个橛子， 绊住爷爷的鞋子，跌倒爷爷这个瘸子，砸坏爷爷的茄子， 爷爷去摸茄子，一摸摸到橛子，爷爷这个瘸子，拔了橛子去摸茄子。80. 【导语】绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。以下是无忧考网为大家准备的，希望对大家有帮助。 红凤凰粉凤凰 红凤凰粉凤凰， 红粉凤凰粉红凤凰。 红凤凰粉凤凰， 红粉凤凰粉红凤凰! 出南门往正南， 有一个面铺面向南， 面铺门口挂个蓝市棉门帘， 摘了蓝布棉门帘， 面铺还是面向南， 挂上蓝布棉门帘， 瞧了瞧， 面铺还是面向南。 猪吃我屎，我猪吃屎， 猪吃我屎，我猪吃屎， 猪吃我屎，我猪吃屎， 猪吃我屎，我吃猪屎! 截着墙头扔草帽， 也不知草帽套老头儿， 也不知老头儿套草帽。 敦敦葫芦丫丫葫芦 好汉一口气说不了八八六十四个葫芦 一个葫芦两个葫芦三个葫芦四个葫芦…… 一直说到六十四个葫芦 一面小花鼓 鼓上画只虎 宝宝敲破鼓 妈妈拿布布 不知是布布鼓 还是布补虎 炕头一只鸡 炕稍一块坯 不知是鸡碰了坯 还是坯碰了鸡 ①粉红墙上画凤凰，凤凰画在粉红墙。 红凤凰、粉凤凰，红粉凤凰、花凤凰。红凤凰，黄凤凰，红粉凤凰，粉红凤凰，花粉花凤凰。 ②七巷一个漆匠，西巷一个锡匠。 七巷漆匠用了西巷锡匠的锡，西巷锡匠拿了七巷漆匠的漆，七巷漆匠气西巷锡匠用了漆，西巷锡匠讥七巷漆匠拿了锡。 《化肥会挥发》 1、化肥会挥发。 2、黑化肥发灰，灰化肥发黑。 3、黑化肥发灰会挥发;灰化肥挥发会发黑。 4、黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花。 5、黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花。 6、黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰。 7、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。 《扁担长，板凳宽》 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上,板凳偏不让扁担绑在板凳上。长扁担,短扁担,长扁担比短扁担长半扁担;短扁担比长扁担短半扁担.长扁担捆在短板凳上,短扁担捆在长板凳上;长板凳不能捆比短扁担长半扁担的长扁担,短板凳也不能捆比长扁担短半扁担的短扁担。 《石室诗士施氏》 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。(一代语言大师赵元任先生的作品) 《喇嘛和哑巴》 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)?目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。 也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。81. 八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗， 咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗， 也咬了他大大伯家的大搭拉尾巴耳朵狗一口。 不知是他大大伯家的大搭拉尾巴耳朵狗， 先咬了他二大伯家的二搭拉尾巴耳朵狗； 还是他二大伯家的二搭拉尾巴耳朵狗， 先咬了他大大伯家的大搭拉尾巴耳朵狗。 轻率找三个工具，比如三个杯子吧， 你敲第一个时让你的伴侣说”忘”， 敲第二个说”情”，第三个说”水”， 美其名曰试验你伴侣的反映速率， 频频然后，不断的敲第一个， 你的伴侣如果随着说 “忘，忘，忘，忘，汪，汪，汪，汪，汪，……”呵呵，效验就出来了。 乌鸦站在黑猪背上说黑猪黑， 黑猪说乌鸦比黑猪还要黑； 乌鸦说它身比黑猪黑嘴不黑， 黑猪听罢笑得嘿嘿嘿嘿。 一个半罐是半罐，两个半罐是一罐； 三个半罐是一罐半，四个半罐是两罐； 五个半罐是两罐半，六个半罐是三满罐； 七个、八个、九个半罐，请你算算是多少罐。 一个伴侣，让他先说3遍”耗子”， 然后再说3遍”鼠老”，待他说完”耗子， 耗子，耗子，鼠老，鼠老，鼠老”然后， 当即问他”猫最怕啥子”，几乎可以保证他会答”耗子”。 在乎你的我只在乎我在乎的你是否在乎在乎你的我， 我在乎的你是否和在乎你的我在乎我在乎的你一样在乎在乎你的我一样！ 找一个mm，说是试验她的英文能力。 由你说一个单词，mm说这个单词的第二个字母。 开始时轻率说几个，接着好戏开始。82. 1、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。 2、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。 3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 4、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 5、牛郎恋刘娘，刘娘恋牛郎，牛郎年年念刘娘，刘娘年年恋牛郎，郎念娘来娘恋郎。 6、楼后有柳九十九，九十九人编柳篓。九十九个人，九十九棵柳，九十九棵柳编九十九个柳条篓。 7、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 8、乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑；乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 9、灰化肥发黑，黑化肥发灰。灰化肥挥发会发黑，黑化肥挥发会发灰，灰化肥发黑挥发会发灰，黑化肥发灰挥发会发黑。 10、在乎你的我只在乎我在乎的你是否在乎在乎你的我，我在乎的你是否和在乎你的我在乎我在乎的你一样在乎在乎你的我一样！ 11、找一个mm，说是试验她的英文能力。由你说一个单词，mm说这个单词的第二个字母。开始时轻率说几个，接着好戏开始。 12、南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 13、刘留牵牛过宽沟，牛背驮着一个篓，篓里装满一篓豆。沟宽牛蹦篓滚沟，篓滚沟，撒了豆。捡豆、捡豆装篓、装篓上沟、上沟牵牛朝前走。 14、牛郎恋刘娘刘娘恋牛郎牛郎年年念刘娘刘娘年年恋牛郎郎念娘来娘恋郎任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 15、施史氏嗜狮，誓食十狮。是时，十狮适市，氏视十狮，十狮逝。氏拾十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏视十狮：是十石狮尸！ 16、男演员说吴方言，女演员说闽南言。男演员远东劲族飞行员，女演员演鲁迅着作研究员。研究员、飞行员；吴方言、闽南言。你说男演员演得全不全？ 17、八老头门前有八棵芭蕉树，八只八哥要在芭蕉树上住。八老头恼八老头怒。八老头做了八个泥球要打八只八哥，不让八只八哥在八老头门前八颗芭蕉树上住。 18、金瓜瓜，银瓜瓜，瓜棚上面结满瓜，瓜瓜落下来，打着小娃娃，娃娃叫妈妈，娃娃怪瓜瓜，瓜瓜笑娃娃。哥哥喂蝈蝈，蝈蝈要果果；哥哥给果果，蝈蝈叫咯咯。 19、一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 20、一个伴侣，让他先说3遍“耗子”，然后再说3遍“鼠老”，待他说完“耗子，耗子，耗子，鼠老，鼠老，鼠老”然后，当即问他“猫最怕啥子”，几乎可以保证他会答“耗子”。 21、马大妈的儿子叫马大哈，马大哈的妈妈叫马大妈。马大妈让马大哈买麻花，马大哈给马大妈买西瓜。马大妈叫马大哈割芝麻，马大哈给马大妈摘棉花。马大妈告诉马大哈，以后不能再马大哈，马大哈不改马大哈，马大妈就不要马大哈。 22、轻率找三个工具，比如三个杯子吧，你敲第一个时让你的伴侣说“忘”，敲第二个说“情”，第三个说“水”，美其名曰试验你伴侣的反映速率，频频然后，不断的敲第一个，你的伴侣如果随着说“忘，忘，忘，忘，汪，汪，汪，汪，汪……”呵呵，效验就出来了。 23、南面来了个瘸子，腰里别着个橛子，北边来了个矬子，肩上挑着担茄子。别橛子的瘸子要用橛子换挑茄子的矬子的茄子，挑茄子的矬子不给别橛子的瘸子茄子。别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子，挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 24、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 25、六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼；六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 26、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵着六只猴；来了侯老六，拉了六头牛；来了仇老六，担了六篓油；来了尤老六，背了四匹绸。牛老六、侯老六、仇老六、尤六，住上刘老六住的六号楼。半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。仇老六拉起牛老六要赔油，尤老六拉着侯老六要赔绸，牛老六怨侯老六的牛，侯老六怨牛老六的猴。 27、南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口；他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗；还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 28、麻雀蛋，溜溜滚，张家哥哥去买粉。买的粉，不会搽，张家哥哥去买麻。买的麻，不会搓，张家哥哥去买锅。买的锅，不会捂，张家哥哥去买鼓。买的鼓，不会敲，张家哥哥去买刀。买的刀，不会切，张家哥哥去买铁。买的铁，不会打，张家哥哥去买马。买的马，不会骑，张家哥哥去买犁。买的犁，不会耕，张家哥哥去买针。买的针，不会做，张家哥哥去买扣。买的扣，不会织，张家哥哥去买尺，买的尺，不会量，张家哥哥去买秤。买的秤，不会称，称条鲤鱼十八斤。83. 1、化肥会挥发；黑化肥发灰，灰化肥发黑； 黑化肥发灰会挥发；灰化肥挥发会发黑； 黑化肥发灰挥发会花飞；灰化肥挥发发黑会飞花。 2、石榴树上结红桃，杨柳树上结辣椒， 吹着鼓，打着号，木头沉到底， 石头水上漂，小鸡叼了秃老鹰， 老鼠抓住大花猫，你说好笑不好笑。 3、梁上两对倒吊鸟，泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 4、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子， 四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 5、小毛抱着花猫，花猫用爪抓小毛， 小毛用手拍花猫，花猫抓破小毛， 小毛打疼了花猫，小毛哭，花猫叫， 小毛松开了花猫，花猫跪离了小毛。 6、哥哥弟弟坡前坐，坡上卧着一只鹅， 坡下流着一条河。哥哥说：宽宽的河， 弟弟说：白白的鹅。鹅要过河，河要渡鹅。 不知是鹅过河，还是河渡鹅。 7、紫瓷盘，盛鱼翅，一盘熟鱼翅， 一盘生鱼翅。迟小池拿了一把瓷汤匙， 要吃清蒸美鱼翅。一口鱼翅刚到嘴， 鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 8、绿葡萄又甜又酸，紫葡萄又酸又甜。 绿葡萄说：绿葡萄比紫葡萄酸， 紫葡萄说：紫锻萄比绿葡萄甜。 不知你是爱吃绿葡萄的酸，还是爱吃紫葡萄的甜？ 9、老方扛着个黄幌子，老黄扛着个方幌子， 老方要拿老黄的方幌子，老黄要拿老方的黄幌子， 老黄老方不相让，方幌子碰破了黄幌子，黄幌子碰破了方幌子。 10、捡颗小石子，在地上画个方格子， 画好方格子造房子，画个大方格子造个大房子， 画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。 11、麻家爷爷挑着一对麻叉口，走到麻家婆婆的家门口。 麻家婆婆的一对麻花狗，咬破了麻家爷爷的麻叉口， 麻家婆婆拿来麻针、麻线，来补麻家爷爷的麻叉口。 12、一个半罐是半罐，两个半罐是一罐； 三个半罐是一罐半，四个半罐是两罐； 五个半罐是两罐半，六个半罐是三满罐； 七个、八个、九个半罐，请你算算是多少罐。 13、石、斯、施、史四老师，天天和我在一起。 石老师教我大公无私，斯老师给我精神食粮， 施老师叫我遇事三思，史老师送我知识钥匙。 我感谢石、斯、施史四老师。 14、小柳柳望着牛儿游，小溪流，流呀流， 流到村头柳树沟。柳树沟里一头牛， 沟边坐着小柳柳，柳柳望着牛儿游， 乐得身儿晃悠悠。柳柳从小爱劳动，人人都夸好妞妞。 15、爷爷让奶奶一同来下棋，奶奶让爷爷—同去看戏。 爷爷奶奶争来争去，小喜和小齐出个好主意。 小喜和爷爷下棋，小齐和奶奶看戏，爷爷、奶奶、小喜、小齐笑嘻嘻。 16、施家丝店卖丝线，买线进了丝线店。 花了四个钱，买四条细丝线；花了十四个钱， 又十四条细丝线；花四十个钱，买四十条细丝线； 花四十四个饯，买四十四条纲丝线。 17、刘小牛去打油，买了油，往回走； 油瓶满，往外流，多给了半斤油， 急坏了刘小牛。多的油，不能留， 回到商店大退油；叔叔摸摸小牛头， 阿姨拉拉小牛手，齐声夸资刘小牛。 18、老齐欲想去卖鱼，巧遇老吕去牵驴， 老齐要用老吕的驴去驮鱼， 老吕说老齐要用我老吕的驴驮鱼就得给我鱼， 要不给我鱼就别用我老吕的驴去驮鱼，二人争来争去都误了去赶集。 19、小槐树，结樱桃，杨柳树上结辣椒。 吹着鼓，打着号，抬着大车扛着轿。 苍蝇踏死驴，蚂蚁踩塌桥。葫芦沉了底， 石头水上漂。小鸡叼个饿老雕， 老鼠拉个大狸猫。你说好笑不好笑？ 20、一班有个黄贺，二班有个王克， 黄贺、王克二人搞创作，黄贺搞木刻， 王克写诗歌。黄贺帮助王克写诗歌， 王克帮助黄贺搞木刻。由于二人搞协作， 黄贺完成了木刻，王克写好了诗歌。 21、铜勺舀热油，铁勺舀凉油， 铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。 舀油入炒勺，月月有佳肴。先炖鱿鱼块， 后扒羊肉条。火在炉下燃，油在勺中熬， 满锅同炎热，管它铜勺与铁勺。 22、河边两只鹅，白鹅与灰鹅， 哦哦爱唱歌，唱得渴又饿， 昂首吸飞蛾，飞蛾啄不住岸边去找窝。 草窝暗又矮，只得去过河，河里真暖和， 有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 23、姥姥有个宝宝，宝宝有位姥姥， 姥姥疼爱宝宝，宝宝喜爱姥姥。 姥姥天天抱宝宝，宝宝天天亲姥姥， 姥姥老，走不好，抱着宝宝摔—胶， 跌了姥姥，摔了宝宝，宝宝连忙扶姥姥，姥姥赶快抱宝宝。 24、天上有个日头，地下有块石头， 嘴里有个舌头，手上有五个手指头。 不管是天上的热日头，地下的硬石头， 嘴里的软舌头，手上的手指头， 还是热日头，硬石头，软舌头， 手指头，反正都是练舌头。 25、婆婆和嬷嬷，来到山坡坡， 婆婆默默采蘑菇，嬷嬷默默拔萝卜。 婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩， 婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。 婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 26、古铜钱，挂门帘；门帘高，买铡刀； 铡刀快，切青菜；青菜青，买张弓；弓没弦， 买只船；船没头，买头牛；牛没爪，买匹马； 马没鞍，买只鸢；鸢没肚，买只兔；兔没蹄， 买只鸡；鸡不叫，狗不咬，都叫狸花猫偷着吃了。 27、石小四和史肖石石小四，史肖石， 一同来到阅览室。石小四年十四， 史肖石年四十。年十四的石小四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词， 忙递给年十四的石小四， 年十四的石小四见了好报纸，忙递给年四十的史肖石 28、山里有个寺，山外有个市， 弟子三十三，师父四十四。 三十三的弟子在寺里练写字， 四十四的师父到市里去办事。 三十三的弟子用了四十四小时， 四十四的师父走了三十三里地。 走了三十三里地就办了四十四件事， 用了四十四小时才写了三十三个字。 29、南面来了个瘸子，腰里别着个橛子， 北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子， 挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子， 挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 30、八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 31、搞笑绕口令大全打南边来了个哑巴，腰里别了个喇叭； 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸，哑巴嘀嘀哒哒吹喇叭。 32、司小四和史小世，四月十四日十四时四十上集市， 司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 33、南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗， 咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗， 也咬了他大大伯家的大搭拉尾巴耳朵狗一口。 不知是他大大伯家的大搭拉尾巴耳朵狗， 先咬了他二大伯家的二搭拉尾巴耳朵狗； 还是他二大伯家的二搭拉尾巴耳朵狗， 先咬了他大大伯家的大搭拉尾巴耳朵狗。 34、天上看，满天星天上看，满天星； 地下看，有个坑；坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。 35、从南边来了个喇嘛，提拉着五斤塔嘛。 从北边来个哑吧，腰里别着个喇叭， 提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭， 别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛， 别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。 也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。 也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。84. 1、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。 2、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。 3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 4、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 5、牛郎恋刘娘，刘娘恋牛郎，牛郎年年念刘娘，刘娘年年恋牛郎，郎念娘来娘恋郎。 6、楼后有柳九十九，九十九人编柳篓。九十九个人，九十九棵柳，九十九棵柳编九十九个柳条篓。 7、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 8、乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑；乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 9、灰化肥发黑，黑化肥发灰。灰化肥挥发会发黑，黑化肥挥发会发灰，灰化肥发黑挥发会发灰，黑化肥发灰挥发会发黑。 10、在乎你的我只在乎我在乎的你是否在乎在乎你的我，我在乎的你是否和在乎你的我在乎我在乎的你一样在乎在乎你的我一样！85. 1、打南边来了个哑巴，腰里别了个喇叭；打北边来了个喇嘛，手里提了个獭犸。提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭；别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭；还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸,哑巴嘀嘀哒哒吹喇叭。 2、哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河。哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、瓜棚挂瓜，瓜挂瓜棚。风刮瓜，瓜碰棚。风刮棚，棚碰瓜。 5、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰??”黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰化肥会挥发灰化肥会化灰，黑化肥不会化灰。86. 1、张伯伯，李伯伯，饽饽铺里买饽饽， 张伯伯买了个饽饽大，李伯伯买了个大饽饽。 拿回家里喂婆婆，婆婆又去比饽饽也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 2、这是蚕，那是蝉， 蚕常在叶里藏，蝉常在林里唱。 3、字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 4、东海鱼仓多鱼群聚， 大鱼小鱼鱼游鱼碰鱼捕鱼为业的人吕玉撒网去网鱼， 还没捕纯粹国雨雨珠打鱼，鱼遇雨，吕玉雨中忙网鱼。 5、东有嘀嘟寺，山有嘀嘟寺， ?有个嘀嘟爷，上山去祈福。?手提嘀嘟油， 腰里别葫芦，?嘴念嘀嘟经，三步一叩首。? 面见嘀嘟佛，佛爷开慈目，?大经念三遭， 小经唱六度。?嘀嘀嘟嘟，嘀嘟嘀嘟， 嘀嘀嘟嘟，嘀嘟嘀嘟。嘀嘟梦醒嘀嘟屋， 睁眼不见嘀嘟寺，?嘀嘟母鸡叫咕咕，嘀嘟老猪打呼噜。 6、峰顶有藤棚，棚上挂铜瓶。 风吹藤棚棚碰瓶，风吹铜瓶瓶碰棚。 7、峰上有蜂，峰上凤飞蜂螫凤： 风中有凤，风中蜂飞凤斗蜂。 不知到底是峰上蜂螫凤，还是风中凤斗蜂。 8、款项花，十八朵，大姨妈， 来接我，猪拿柴，狗使柴燃烧，猫儿烧饭笑死我。 9、老方背着个黄市招，老黄背着个方市招， 老方要拿老黄的方市招，老黄要拿老方的黄市招， 老黄老方不相让，方市招碰破了黄市招，黄市招碰破了方市招。 10、老舅进城看小六，小六高兴买油又买肉。 买完了油和，老六就要走，老板说“：你给了油钱， 没给肉钱。”老板娘说“：你给了肉钱没给油钱。 ”老六说“：我给了油钱也给了肉钱。” 11、梁上两对倒吊鸟,泥里两对鸟倒吊, 可怜梁上两对倒吊鸟,惦记泥里两对鸟倒吊, 可怜泥里两对鸟倒吊,也惦记梁上两对倒吊鸟。 12、按时绿,按时住,按时透春绿,按时透春住。 13、粗出气种谷，出气粗喂猪。 粗出气种的谷，谷穗长得长又粗。 出气粗喂的猪，身子长得胖乎乎。 出气粗的胖乎乎的大肥猪， 偷吃了粗出气又长又粗的品种谷。 粗出气用锄打出气粗胖乎乎的大肥猪， 出气粗家胖乎乎的大肥猪， 再也不吃粗出气家的又长又粗的品种谷。 14、公园有四排石狮子，每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子。 15、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞； 灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰。 16、花猫跌进了花袍，猫要撕袍，袍来裹猫。 不知是花猫撕破花袍，还是花袍裹住了花猫。 17、家后有座庙,天天猫来尿, 不知是庙尿猫,还是猫尿庙。 18、牛郎恋刘娘,刘娘念牛郎,牛郎年年恋刘娘, 刘娘年年念牛郎,郎恋娘来娘念郎,念娘恋娘念郎恋郎,念恋娘郎。 19、山前有个严圆眼,山后有个圆眼严, 两人上山来比眼,不知是严圆眼的眼圆,还是圆眼严的眼圆。87. 1、打南边来了个哑巴，腰里别了个喇叭； 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸,哑巴嘀嘀哒哒吹喇叭。 2、哥哥弟弟坡前坐，坡上卧着一只鹅， 坡下流着一条河。哥哥说：宽宽的河， 弟弟说：白白的鹅。鹅要过河， 河要渡鹅。不知是鹅过河，还是河渡鹅。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。 隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、瓜棚挂瓜，瓜挂瓜棚。风刮瓜， 瓜碰棚。风刮棚，棚碰瓜。 5、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞； 灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰?? “黑灰化肥灰会挥发发灰黑讳为黑灰花会飞； 灰黑化肥会会挥发发黑灰为讳飞花化为灰化肥会挥发灰化肥会化灰，黑化肥不会化灰。 6、金瓜瓜，银瓜瓜，瓜棚上面结满瓜， 瓜瓜落下来，打着小娃娃， 娃娃叫妈妈，娃娃怪瓜瓜，瓜瓜笑娃娃。 7、蓝衣布履刘兰柳，布履蓝衣柳半刘， 兰柳拉犁来犁地，半刘播种来拉耧。 8、老罗拉了一车梨，老李拉了一车栗。 老罗人称大力罗，老李人称李大力。 老罗拉梨做梨酒，老李拉栗去换梨。 9、老齐欲想去卖鱼，巧遇老吕去牵驴， 老齐要用老吕的驴去驮鱼， 老吕说老齐要用我老吕的驴驮鱼就得给我鱼， 要不给我鱼就别用我老吕的驴去驮鱼， 二人争来争去都误了去赶集。 10、老鼠遇老虎，老虎咬老鼠。 老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 11、梁上两对倒吊鸟，泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 12、一班有个黄贺，二班有个王克， 黄贺、王克二人搞创作，黄贺搞木刻， 王克写诗歌。黄贺帮助王克写诗歌， 王克帮助黄贺搞木刻。由于二人搞协作， 黄贺完成了木刻，王克写好了诗歌。 13、一道黑，两道黑，三四五六七道黑， 八九道黑十道黑。我买了个烟袋乌木杆儿， 我是掐着它的两头那么一道黑。 二姑娘描眉去演戏，照着她的镜子那么两道黑。 粉皮儿墙，写川字儿，横瞧竖瞧三道黑。 象牙桌子乌木腿儿，把它放着在那炕上那么四道黑。 我买了个母鸡不下蛋，把它圈在那个笼里捂到（五道）黑。 挺好的骡子不吃草，把它拉到在那街上遛到（六道）黑。 买了头小驴儿不拉磨，背上它的鞍韂骑（七）到（道）黑。 姐俩南洼去割麦，丢了她的镰刀拔到（八道）黑。 月窠儿的小孩儿子得了病，团几个艾球灸到（九道）黑。 卖瓜籽的打瞌睡，哗啦啦啦撒了。 14、那么一大堆，他的扫帚簸箕不凑手， 那么一个一个拾到（十道）黑。 15、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。88. 1、坡上立着一只鹅，坡下就是一条河。 宽宽的河，肥肥的鹅，鹅要过河， 河要渡鹅不知是鹅过河，还是河渡鹅？ 2、有个面铺门朝南，门上挂着蓝布棉门帘， 摘了蓝布棉门帘，面铺门朝南； 挂上蓝布棉门帘，面铺还是门朝南。 3、乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑； 乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿， 不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗？ 5、山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 6、出南门，走六步，见着六叔和六舅， 叫声六叔和六舅，借我六斗六升好绿豆； 过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 7、老方扛着黄幌子，老黄扛着方幌子。 老方要拿老黄的方幌子，老黄要拿老方的黄幌子， 末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 8、梁上两对倒吊鸟，泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 9、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子， 四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 10、哥哥弟弟坡前坐，坡上卧着一只鹅， 坡下流着一条河。哥哥说：宽宽的河， 弟弟说：白白的鹅。鹅要过河，河要渡鹅。 不知是鹅过河，还是河渡鹅。 11、紫瓷盘，盛鱼翅，一盘熟鱼翅， 一盘生鱼翅。迟小池拿了一把瓷汤匙， 要吃清蒸美鱼翅。一口鱼翅刚到嘴， 鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 12、一个半罐是半罐，两个半罐是一罐； 三个半罐是一罐半，四个半罐是两罐； 五个半罐是两罐半，六个半罐是三满罐； 七个、八个、九个半罐，请你算算是多少罐。 13、石、斯、施、史四老师， 天天和我在一起。石老师教我大公无私， 斯老师给我精神食粮，施老师叫我遇事三思， 史老师送我知识钥匙。我感谢石、斯、施史四老师。 14、张伯伯，李伯伯，饽饽铺里买饽饽， 张伯伯买了个饽饽大，李伯伯买了个大饽饽。 拿回家里喂婆婆，婆婆又去比饽饽也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 15、老齐欲想去卖鱼，巧遇老吕去牵驴， 老齐要用老吕的驴去驮鱼，老吕说老齐要用我老吕的驴驮鱼就得给我鱼， 要不给我鱼就别用我老吕的驴去驮鱼，二人争来争去都误了去赶集。 16、一班有个黄贺，二班有个王克， 黄贺、王克二人搞创作，黄贺搞木刻， 王克写诗歌。黄贺帮助王克写诗歌， 王克帮助黄贺搞木刻。由于二人搞协作， 黄贺完成了木刻，王克写好了诗歌。 17、天上有个日头，地下有块石头， 嘴里有个舌头，手上有五个手指头。 不管是天上的热日头，地下的硬石头， 嘴里的软舌头，手上的手指头，还是热日头， 硬石头，软舌头，手指头，反正都是练舌头。 18、从南边来了个喇嘛，提拉着五斤塔嘛。 从北边来个哑吧，腰里别着个喇叭， 提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭， 别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛， 别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。 也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。 也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。89. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、一平盆面，烙一平盆饼， 饼碰盆，盆碰饼。 3、吃葡萄不吐葡萄皮儿， 不吃葡萄倒吐葡萄皮儿。 4、这是蚕，那是蝉， 蚕常在叶里藏，蝉常在林里唱。 5、大刀对单刀，单刀对大刀， 大刀斗单刀，单刀夺大刀。 6、粉红墙上画凤凰，红凤凰， 粉凤凰，粉红凤凰，花凤凰。 7、瓜棚挂瓜，瓜挂瓜棚。风刮瓜， 瓜碰棚。风刮棚，棚碰瓜。 8、马大哈，牵匹马，拉马去驮瓦。 瓦磕马胯破，马胯磕破瓦。 9、磨房磨墨，墨碎磨房一磨墨； 梅香添煤，煤爆梅香两眉灰。 10、那么一大堆，他的扫帚簸箕不凑手， 那么一个一个拾到黑。 11、三山屹四水，四水绕三山； 三山四水春常在，四水三山四时春。 12、任命是任命，人名是人名， 任命不能说成人名，人名也不能说成任命。 13、八百标兵奔北坡，北坡炮兵并排跑， 炮兵怕把标兵碰，标兵怕碰炮兵炮。 14、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。 隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 15、蓝衣布履刘兰柳，布履蓝衣柳半刘， 兰柳拉犁来犁地，半刘播种来拉耧。 16、你也勤来我也勤，生产同心土变金。 工人农民亲兄弟，心心相印团结紧。 17、七加一，再减一，加完减完等于几？ 七加一，再减一，加完减完还是七。 18、山前有只虎，山下有只猴。虎撵猴， 猴斗虎；虎撵不上猴，猴斗不了虎。 19、老鼠遇老虎，老虎咬老鼠。 老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 20、字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 21、你会炖我的冻豆腐，就来炖我的冻豆腐， 你不会炖我的冻豆腐，别胡炖乱炖炖坏了我的冻豆腐。 22、扁担长，板凳宽，扁担没有板凳宽， 板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 23、金瓜瓜，银瓜瓜，瓜棚上面结满瓜， 瓜瓜落下来，打着小娃娃， 娃娃叫妈妈，娃娃怪瓜瓜，瓜瓜笑娃娃。 24、小郭画了朵红花，小葛画了朵黄花， 小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 25、山前有个严圆眼，山后有个严眼圆， 二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？ 26、师部司令部指示：四团十连石连长带四十人在十日四时 四十四分按时到达师部司令部，师长召开誓师大会。 27、老罗拉了一车梨，老李拉了一车栗。 老罗人称大力罗，老李人称李大力。 老罗拉梨做梨酒，老李拉栗去换梨。90. 《拔萝卜》 出八十八二十八， 八个小孩儿把萝卜拔， 你也拔，我也拔， 看谁拔得多， 看谁拔得大。 你拔得不多个儿不小， 我拔得不少个儿不大。 一个萝卜一个坑儿， 算算多少用车拉， 一个加俩，俩加仨， 七十二个加十八， 拿个算盘打一打， 一百差俩九十八。 《毛毛和涛涛》 毛毛和涛涛， 跳高又练跑， 毛毛教涛涛练跑， 涛涛教毛毛跳高， 毛毛学会了跳高， 涛涛学会了练跑。91. 《华华和红红》（一） 华华有两朵黄花， 红红有两朵红花， 华华要红花， 红红要黄花。 华华送给红红一朵黄花， 红红送给华华一朵红花。 《毛毛和涛涛》（二） 毛毛和涛涛， 跳高又练跑， 毛毛教涛涛练跑， 涛涛教毛毛跳高， 毛毛学会了跳高， 涛涛学会了练跑。 《胡子骑驴子》（三） 胡子骑驴子， 驼子挑螺蛳， 胡子撞翻了驼子的螺蛳， 驼子拖住胡子的驴子， 胡子去打挑螺蛳的驼子， 驼子来打骑驴子的胡子， 胡子打驼子， 驼子打胡子。 《种冬瓜》（四） 东门童家门东董家， 童、董两家， 同种冬瓜， 童家知道董家冬瓜大， 来到董家学种冬瓜。 门东董家懂种冬瓜， 来教东门童家种冬瓜。 童家、董家都懂得种冬瓜， 童、董两家的冬瓜比桶大。 《枪和糠》（五） 墙上一个窗， 窗上一支枪， 窗上一箩糠。 枪落进了糠， 糠埋住了枪。 窗要糠让枪， 糠要枪上墙， 墙要枪上窗。 互相不退让， 糠赶不走枪， 枪也上不了窗和墙。92. 《白果果》（一） 我走白家门前过， 白家门前一棵白果树， 树上结了白果果， 白果树上歇了只白八哥。 《四老伯》（二） 郭老伯、骆老伯， 毕老伯、柏老伯， 郭骆毕柏四老伯， 约着城北买菱角， 买得菱角阁上剥， 菱角壳戳了四老伯的脚。 《灰猫追花鸟》（三） 灰猫跳，花鸟叫， 灰猫听花鸟叫， 花鸟瞧灰猫跳， 灰猫跳起抓花鸟， 花鸟怕灰猫， 拨腿就逃掉。 《一二三四五》（四） 一二三四五， 上山打老虎。 老虎没打着， 打了小松鼠。 松鼠有几只？ 一二三四五。 《采蘑菇》（五） 黑兔和白兔， 上山采蘑菇， 小猴和小鹿， 一齐来帮助， 猴和兔，兔和鹿， 高高兴兴采蘑菇。 《布和裤》（六） 一块粗土布， 一条粗布裤。 哥哥拿布又拿裤， 飞针走线来扎布， 扎过布，再缝裤， 裤子破了用布补。93. 《磙和棍》（一） 磙下压个棍，棍上压个磙。 磙压棍滚，棍滚磙滚。 《根连根》（二） 山上青松根连根，各族人民心连心。 根连根，心连心，建设祖国一股劲。 《鱼和大雁》（三） 小鱼入鱼网鱼网捕鱼鱼难逃， 大雁过雁塔雁塔留雁雁不留。 《背水杯》（四） 贝贝背水杯，水杯贝贝背。 贝贝背水杯背背水杯。 水杯贝贝背，贝贝背水杯。 《过国过果》（五） 过国过果 郭国过国国 果国过郭国国 国国国过果国 《四十四束紫丝线》（六） 四十四束紫丝线， 织四十四只紫狮子， 细紫丝线织细紫狮子， 织细紫狮子用细紫丝线。 《看电视》（七） 对门田老四， 喜欢看电视。 电视里演戏， 戏里有田老师。 《蚕和蝉》（八） 爬来爬去是蚕， 飞来飞去是蝉。 蚕常在桑叶里藏， 蝉藏在树林里唱。94. （一） 梁上两对倒吊鸟， 泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟， 惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊， 也惦着梁上的两对倒吊鸟。 （二） 哥哥弟弟坡前坐， 坡上卧着一只鹅， 坡下流着一条河。 哥哥说：宽宽的河，弟弟说：白白的鹅。 鹅要过河，河要渡鹅。 不知是鹅过河，还是河渡鹅。 （三） 老方扛着个黄幌子， 老黄扛着个方幌子， 老方要拿老黄的方幌子， 老黄要拿老方的黄幌子， 老黄老方不相让， 方幌子碰破了黄幌子， 黄幌子碰破了方幌子。 （四） 一楼住着管得宽，二楼住着潘不管。 潘不管乱倒垃圾一大片， 还说弄脏楼道他不管。 管得宽要管潘不管， 潘不管不让管得宽管， 管得宽说我非要管管潘不管。 （五） 张伯伯，李伯伯， 饽饽铺里买饽饽， 张伯伯买了个饽饽大， 李伯伯买了个大饽饽。 拿回家里喂婆婆， 婆婆又去比饽饽也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 （六） 老齐欲想去卖鱼， 巧遇老吕去牵驴， 老齐要用老吕的驴去驮鱼， 老吕说老齐要用我老吕的驴驮鱼就得给我鱼， 要不给我鱼就别用我老吕的驴去驮鱼， 二人争来争去都误了去赶集。 （七） 小槐树，结樱桃，杨柳树上结辣椒。 吹着鼓，打着号，抬着大车扛着轿。 苍蝇踏死驴，蚂蚁踩塌桥。 葫芦沉了底，石头水上漂。 小鸡叼个饿老雕，老鼠拉个大狸猫。 你说好笑不好笑？ （八） 一班有个黄贺， 二班有个王克， 黄贺、王克二人搞创作， 黄贺搞木刻，王克写诗歌。 黄贺帮助王克写诗歌， 王克帮助黄贺搞木刻。 由于二人搞协作， 黄贺完成了木刻， 王克写好了诗歌。 （九） 古铜钱，挂门帘； 门帘高，买铡刀； 铡刀快，切青菜； 青菜青，买张弓； 弓没弦，买只船； 船没头，买头牛； 牛没爪，买匹马； 马没鞍，买只鸢； 鸢没肚，买只兔； 兔没蹄，买只鸡； 鸡不叫，狗不咬， 都叫狸花猫偷着吃了。 （十） 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞； 灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰。 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞； 灰黑化肥会会挥发发黑灰为讳飞花化为灰。 化肥会挥发，灰化肥会化灰，黑化肥不会化灰。 （十一） 打南边来了个哑巴，腰里别了个喇叭； 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸，哑巴嘀嘀哒哒吹喇叭。95. （一） 一平盆面，烙一平盆饼， 饼碰盆，盆碰饼。 （二） 这是蚕，那是蝉， 蚕常在叶里藏，蝉常在林里唱。 （三） 瓜棚挂瓜，瓜挂瓜棚。 风刮瓜，瓜碰棚。 风刮棚，棚碰瓜。 （四） 哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。 隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 （五） 蓝衣布履刘兰柳，布履蓝衣柳半刘， 兰柳拉犁来犁地，半刘播种来拉耧。 （六） 金钱花，十八朵， 大姨妈，来接我， 猪拿柴，狗烧火， 猫儿煮饭笑死我！ （七） 老鼠遇老虎，老虎咬老鼠。 老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 （八） 字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 （九） 描只花猫，花猫花毛。 描只黑猫，黑猫黑毛。 描只白猫，白猫白毛。 描只灰猫，灰猫灰毛。 （十） 朱家有个金柱子， 曲家有个金锯子。 曲家的主人， 抱住了朱家的举人， 金锯子锯断了金柱子。 （十一） 金瓜瓜，银瓜瓜，瓜棚上面结满瓜， 瓜瓜落下来，打着小娃娃， 娃娃叫妈妈，娃娃怪瓜瓜，瓜瓜笑娃娃。 （十二） 老罗拉了一车梨，老李拉了一车栗。 老罗人称大力罗，老李人称李大力。 老罗拉梨做梨酒，老李拉栗去换梨。 （十三） 东海鱼仓多鱼群聚，大鱼小鱼鱼游鱼碰鱼。 渔民吕玉撒网去捕鱼，还没捕完天下雨。 雨珠打鱼，鱼遇雨，吕玉雨中忙捕鱼。 （十四） 油一缸，豆一筐，老鼠嗅着油豆香。 爬上缸，跳进筐，偷油偷豆两头忙。 又高兴，又慌张，脚一滑，身一晃，扑通，一块跌进缸。96. 1、马大妈的儿子叫马大哈，马大哈的妈妈叫马大妈。 马大妈让马大哈买麻花，马大哈给马大妈买西瓜。 马大妈叫马大哈割芝麻，马大哈给马大妈摘棉花。 马大妈告诉马大哈，以后不能再马大哈， 马大哈不改马大哈，马大妈就不要马大哈。 2、轻率找三个工具，比如三个杯子吧， 你敲第一个时让你的伴侣说“忘”， 敲第二个说“情”，第三个说“水”， 美其名曰试验你伴侣的反映速率，频频然后， 不断的敲第一个，你的伴侣如果随着说“忘，忘，忘，忘，汪，汪， 汪，汪，汪……”呵呵，效验就出来了。 3、南面来了个瘸子，腰里别着个橛子， 北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子， 挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子， 挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 4、八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 5、六十六岁的陆老头，盖了六十六间楼， 买了六十六篓油，养了六十六头牛， 栽了六十六棵垂杨柳。六十六篓油， 堆在六十六间楼；六十六头牛， 扣在六十六棵垂杨柳。忽然一阵狂风起， 吹倒了六十六间楼，翻倒了六十六篓油， 折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 6、柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵着六只猴； 来了侯老六，拉了六头牛； 来了仇老六，担了六篓油； 来了尤老六，背了四匹绸。 牛老六、侯老六、仇老六、尤六， 住上刘老六住的六号楼。半夜里， 牛抵猴，猴斗牛，撞倒了仇老六的油， 油坏了尤老六的绸。仇老六拉起牛老六要赔油， 尤老六拉着侯老六要赔绸，牛老六怨侯老六的牛，侯老六怨牛老六的猴。 7、南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗， 咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗， 也咬了他大大伯家的大搭拉尾巴耳朵狗一口。 不知是他大大伯家的大搭拉尾巴耳朵狗， 先咬了他二大伯家的二搭拉尾巴耳朵狗； 还是他二大伯家的二搭拉尾巴耳朵狗， 先咬了他大大伯家的大搭拉尾巴耳朵狗。 8、麻雀蛋，溜溜滚，张家哥哥去买粉。 买的粉，不会搽，张家哥哥去买麻。 买的麻，不会搓，张家哥哥去买锅。 买的锅，不会捂，张家哥哥去买鼓。 买的鼓，不会敲，张家哥哥去买刀。 买的刀，不会切，张家哥哥去买铁。 买的铁，不会打，张家哥哥去买马。 买的马，不会骑，张家哥哥去买犁。 买的犁，不会耕，张家哥哥去买针。 买的针，不会做，张家哥哥去买扣。 买的扣，不会织，张家哥哥去买尺， 买的尺，不会量，张家哥哥去买秤。 买的秤，不会称，称条鲤鱼十八斤。97. 1、磨房磨墨，墨碎磨房一磨墨； 梅香添煤，煤爆梅香两眉灰。 2、三山屹四水，四水绕三山； 三山四水春常在，四水三山四时春。 3、任命是任命，人名是人名， 任命不能说成人名，人名也不能说成任命。 4、字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 5、牛郎恋刘娘，刘娘恋牛郎， 牛郎年年念刘娘，刘娘年年恋牛郎，郎念娘来娘恋郎。 6、楼后有柳九十九，九十九人编柳篓。 九十九个人，九十九棵柳，九十九棵柳编九十九个柳条篓。 7、你会炖炖冻豆腐，你来炖我的炖冻豆腐； 你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 8、乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑； 乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 9、灰化肥发黑，黑化肥发灰。灰化肥挥发会发黑， 黑化肥挥发会发灰，灰化肥发黑挥发会发灰，黑化肥发灰挥发会发黑。 10、在乎你的我只在乎我在乎的你是否在乎在乎你的我， 我在乎的你是否和在乎你的我在乎我在乎的你一样在乎在乎你的我一样！ 11、找一个mm，说是试验她的英文能力。由你说一个单词， mm说这个单词的第二个字母。开始时轻率说几个，接着好戏开始。 12、南南有个篮篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮， 篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 13、刘留牵牛过宽沟，牛背驮着一个篓， 篓里装满一篓豆。沟宽牛蹦篓滚沟，篓滚沟， 撒了豆。捡豆、捡豆装篓、装篓上沟、上沟牵牛朝前走。 14、牛郎恋刘娘刘娘恋牛郎牛郎年年念刘娘刘娘年年恋牛郎郎念娘来娘恋郎任命是任命， 人名是人名，任命不能说成人名，人名也不能说成任命。 15、施史氏嗜狮，誓食十狮。 是时，十狮适市，氏视十狮，十狮逝。 氏拾十狮尸，适石室，石室湿，氏使侍拭石室， 石室拭，氏视十狮：是十石狮尸！ 16、男演员说吴方言，女演员说闽南言。 男演员远东劲族飞行员，女演员演鲁迅着作研究员。 研究员、飞行员；吴方言、闽南言。你说男演员演得全不全？ 17、八老头门前有八棵芭蕉树，八只八哥要在芭蕉树上住。 八老头恼八老头怒。八老头做了八个泥球要打八只八哥，不让八只八哥在八老头门前八颗芭蕉树上住。 18、金瓜瓜，银瓜瓜，瓜棚上面结满瓜， 瓜瓜落下来，打着小娃娃，娃娃叫妈妈， 娃娃怪瓜瓜，瓜瓜笑娃娃。哥哥喂蝈蝈， 蝈蝈要果果；哥哥给果果，蝈蝈叫咯咯。 19、一个半罐是半罐，两个半罐是一罐； 三个半罐是一罐半，四个半罐是两罐； 五个半罐是两罐半，六个半罐是三满罐； 七个、八个、九个半罐，请你算算是多少罐。 20、一个伴侣，让他先说3遍“耗子”， 然后再说3遍“鼠老”，待他说完“耗子，耗子，耗子，鼠老，鼠老，鼠老”然后， 当即问他“猫最怕啥子”，几乎可以保证他会答“耗子”。98. 【导语】以下是无忧考网为大家整理的关于搞笑绕口令，希望大家喜欢！ 搞笑绕口令 古铜钱，挂门帘； 门帘高，买铡刀； 铡刀快，切青菜； 青菜青，买张弓； 弓没弦，买只船； 船没头，买头牛； 牛没爪，买匹马； 马没鞍，买只鸢； 鸢没肚，买只兔； 兔没蹄，买只鸡； 鸡不叫，狗不咬， 都叫狸花猫偷着吃了。 杂技团里狗和猴， 演个节目猴骑狗。 猴骑狗，狗驮猴， 狗驮猴骑朝前定， 猴在狗背期侮狗， 狗摔背上猴。 猴抓狗．狗咬猴， 猴骑狗变成狗骑猴。 坡上树多蘑菇多， 白兔上山采蘑菇。 采了蘑菇装包裹， 背驮包裹背压驼。 忽然风过雨涝花， 白兔急步树下躲。 雨过肚饿忙菠路， 滑脚掉落坡下河。 多亏包裹浮水波， 白兔坐着渡过河。 —尺布换六斤萝卜, —尺布换四斤红薯. 一斤红薯换二斤萝卜, 六斤萝卜换三斤红薯, 布换红薯, 布换萝卜, 不如布换红薯再换萝卜。99. 【导语】以下是无忧考网为大家整理的关于搞笑绕口令，希望大家喜欢！ 漏斗上面倒斗豆， 漏斗下而豆漏斗。 漏斗漏豆漏斗漏， 漏斗斗漏豆漏斗。 有人说是斗漏豆， 有人说是豆漏斗。 漏斗上面倒斗豆， 漏斗下而豆漏斗。 漏斗漏豆漏斗漏， 漏斗斗漏豆漏斗。 有人说是斗漏豆， 有人说是豆漏斗。 姥姥恼老姥姥， 老姥姥恼姥姥。 姥姥恼老姥姥恼， 老姥姥不恼姥姥不恼. 姥姥恼老姥姥， 老姥姥恼姥姥。 姥姥恼老姥姥恼， 老姥姥不恼姥姥不恼. 姥姥恼老姥姥， 老姥姥恼姥姥。 姥姥恼老姥姥恼， 老姥姥不恼姥姥不恼. 哥哥叫陆陆， 弟弟叫柱柱。 陆陆和柱柱， 上街去买醋。 陆陆说醋酸， 柱柱说醋苦， 哥俩追着过马路， 湿了衣和裤， 酸得口水吐。 哥哥叫陆陆， 弟弟叫柱柱。 陆陆和柱柱， 上街去买醋。 陆陆说醋酸， 柱柱说醋苦， 哥俩追着过马路， 湿了衣和裤， 酸得口水吐。100. 搞笑的绕口令(一) 演员制服 男演员穿蓝制服， 女演员穿棉制服， 蓝制服是棉制服， 棉制服是蓝制服， 男演员穿蓝棉制服， 女演员穿棉蓝制服。 搞笑的绕口令(二) 天上看，满天星 天上看，满天星; 地下看，有个坑; 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。 搞笑的绕口令(三) 瘸子和矬子 小山屋 南面来了个瘸子，腰里别着个橛子， 北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子， 挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子， 挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 搞笑的绕口令(四) 提灯笼 小凤提着圆灯笼， 小龙提着方灯笼。 小凤的圆灯笼上画着龙， 小龙的方灯笼上画着凤， 小凤要拿圆龙灯笼换小龙的方凤灯笼。 搞笑的绕口令(五) 南边的喇嘛和北边的哑吧 从南边来了个喇嘛，提拉着五斤塔嘛。 从北边来个哑吧，腰里别着个喇叭。 提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭， 别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛， 别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。 也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑励志电影巴的喇叭。 也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。101. 男演员穿蓝制服， 女演员穿棉制服， 蓝制服是棉制服， 棉制服是蓝制服， 搞笑绕口令，最搞笑的绕口令大全。 男演员穿蓝棉制服， 女演员穿棉蓝制服。 天上看，满天星 天上看，满天星; 地下看，有个坑; 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。 瘸子和矬子 小山屋 南面来了个瘸子，腰里别着个橛子， 北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子， 挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子， 挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 提灯笼绕口令 提灯笼 小凤提着圆灯笼， 小龙提着方灯笼。 小凤的圆灯笼上画着龙， 小龙的方灯笼上画着凤， 小凤要拿圆龙灯笼换小龙的方凤灯笼。 南边的喇嘛和北边的哑吧 从南边来了个喇嘛，提拉着五斤塔嘛。 从北边来个哑吧，腰里别着个喇叭。 提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭， 别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛， 别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。 也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。 也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 山前山后的崔粗腿和崔腿粗 山前有个崔粗腿， 山后有个崔腿粗。 二人山前来比腿， 不知是崔粗腿比崔腿粗的腿粗， 还是崔腿粗比崔粗腿的腿粗? 山前山后的严圆眼和严眼圆 山前有个严圆眼， 山后有个严眼圆， 二人山前来比眼， 不知是严圆眼的眼圆， 还是严眼圆比严圆眼的眼圆? 有个面铺门朝南 有个面铺门朝南， 门上挂着蓝布棉门帘， 摘了蓝布棉门帘， 面铺门朝南; 挂上蓝布棉门帘， 面铺还是门朝南。 三山屹四水 三山屹四水， 四水绕三山; 三山四水春常在， 四水三山四时春。 老屋老 老屋老,老屋污， 老屋经雨老屋涝： 老屋老，老屋孤， 老屋经风老屋秃。 老屋涝，老屋秃， 涝、老、污、秃是老屋. 姥姥有个宝宝 姥姥有个宝宝， 宝宝有位姥姥， 姥姥疼爱宝宝， 宝宝喜爱姥姥。 姥姥天天抱宝宝， 宝宝天天亲姥姥， 姥姥老，走不好， 抱着宝宝摔—胶， 跌了姥姥，摔了宝宝， 宝宝连忙扶姥姥， 姥姥赶快抱宝宝。102. 篇1：搞笑的绕口令 1、墙上挂面鼓，鼓上画老虎，老虎抓破鼓，拿块布来补。不知是布补鼓，还是布补虎? 2、嘴说腿，腿说嘴，嘴说腿爱跑腿，腿说嘴爱卖嘴。光动嘴不动腿，光动腿不动嘴，不如不长腿和嘴。 3、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 5、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 6、长虫围着砖堆转，转完砖堆钻砖堆。 7、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 8、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 9、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 10、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 11、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 12、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 13、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 14、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 15、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 16、婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 17、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 18、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 19、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 20、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 21、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 22、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 23、从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 24、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 25、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 26、有个懒汉本姓阮，提个篮子卖鸡卵，“卖卵”“卖卵”使劲喊，谁都不来买鸡卵，不是鸡卵品种乱，而是鸡卵皮太软。卖不出鸡卵难买饭，回家吃饭路又远，胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。 27、化肥会挥发;黑化肥发灰，灰化肥发黑;黑化肥发灰会挥发;灰化肥挥发会发黑;黑化肥发灰挥发会花飞;灰化肥挥发发黑会飞花。 28、四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿，谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 29、石小四和史肖石石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石 30、司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 篇2：搞笑的绕口令 1、轻率找三个工具，比如三个杯子吧，你敲第一个时让你的伴侣说”忘”，敲第二个说”情”，第三个说”水”，美其名曰试验你伴侣的反映速率，频频然后，不断的敲第一个，你的伴侣如果随着说”忘，忘，忘，忘，汪，汪，汪，汪，汪，……”呵呵，效验就出来了。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、老齐欲想去卖鱼，巧遇老吕去牵驴，老齐要用老吕的驴去驮鱼，老吕说老齐要用我老吕的驴驮鱼就得给我鱼，要不给我鱼就别用我老吕的驴去驮鱼，二人争来争去都误了去赶集。 4、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 5、乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑；乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 6、老鼠遇老虎，老虎咬老鼠。老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 7、八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 8、一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 9、南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗；还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 10、姥姥恼老姥姥，老姥姥恼姥姥。姥姥恼老姥姥恼，老姥姥不恼姥姥不恼。(.) 11、哥哥叫陆陆，弟弟叫柱柱。陆陆和柱柱，上街去买醋。陆陆说醋酸，柱柱说醋苦，哥俩追着过马路，湿了衣和裤，酸得口水吐。103. 英文搞笑绕口令 英文搞笑绕口令1 1. Can you can a can as a canner can can a can? 你能够像罐头工人一样装罐头吗？ 2. I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish. 我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。 3. I scream, you scream, we all scream for ice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋! 4. How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢？一个好的厨师能做出和其它好厨师一样多的小甜饼。 5. The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 6. Whether the weather be fine or whether the weather be not.Whether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not. 无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。 7. Peter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked? 彼德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿？ 8. I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much. 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 9. Amid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts. 雾蒙蒙，冰霜冻， 手腕儿空空，话儿涌， 只见他猛所拳头往柱子上砸， 直说自己把鬼碰。 10. Badmin was able to beat Bill at billiards, but Bill always beat Badmin badly at badminton. 巴德明在台球上能够打败比尔，但是打羽毛球比尔常常大败巴德明。 11. Betty beat a bit of butter to make a better butter. 贝蒂敲打一小块黄油要做一块更好的奶油面。 12. Rita repeated what Reardon recited when Reardon read the remarks. 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13. Few free fruit flies fly from flames. 没有几只果蝇从火焰中飞过去。 14. Fifty-five flags freely flutter from the floating frigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 15. There is no need to light a night light on a light night like tonight. for a bright night light is just like a slight light. 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 17. A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together. 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 18. How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢？ 19. Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See. 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 20. If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite. 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。 英文搞笑绕口令2 1、while we were walking, we were watching window washers’ wash washington’s windows with warm washing water. 当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。 2、betty and bob brought back blue balloons from the big bazaar. betty和bob从大杂货店市场上买了蓝气球。 3、what a shame such a shapely sash should such shabby stitches show? 这幺有形的腰带却用这幺破旧的缝线，多丢人啊。 4、thieves seize skis. the blue bluebird blinks. 小偷抓住了滑雪板。 蓝色的知更鸟在眨眼。 5、susan shines shoes and socks; she ceased shining shoes and socks for shoes and socks shock susan. susan把鞋子和袜子擦亮，她停止了将鞋子和袜子擦亮，因为鞋子和袜子把susan吓坏了。 6、chop shops stock chops. 印章店备有印章。 7、brad’s big black bath brush broke. brad’s的黑色大浴刷断了。 8、six shimmering sharks sharply striking shins. 六条闪亮的鲨鱼吸引人的胫骨。 9、don’t pamper damp scamp tramps that camp under ramp lamps. 不要纵容那些斜坡的街灯下露营的湿着身子的流浪街童。 10、i never felt a piece of felt which felt as fine as that felt felt, when first i felt that felt hat‘s felt. 在我了解到那个毡帽的手感后，再也没有觉得哪个毛毡的手感和那次感觉得一样好了。 11、sarah saw a shot-silk sash shop full of shot-silk sashes as the sunshine shone on the side of the shot-silk sash shop. 萨拉看到闪光丝饰品店挂满了闪光丝饰品，好象太阳在店边上发出刺眼的光芒。 12、give me the gift of a grip top sock: a drip-drape, ship-shape, and tip-top sock. 给我一双有禁袜带的袜子：悬挂状的，船行的，品质一流的袜子。104. 八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口；他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗；还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 轻率找三个工具，比如三个杯子吧，你敲第一个时让你的伴侣说”忘”，敲第二个说”情”，第三个说”水”，美其名曰试验你伴侣的反映速率，频频然后，不断的敲第一个，你的伴侣如果随着说”忘，忘，忘，忘，汪，汪，汪，汪，汪，……”呵呵，效验就出来了。 乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑；乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 在乎你的我只在乎我在乎的你是否在乎在乎你的我，我在乎的你是否和在乎你的我在乎我在乎的你一样在乎在乎你的我一样！ 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 按时绿,按时住,按时透春绿,按时透春住.粗出气种谷，出气粗喂猪。粗出气种的谷，谷穗长得长又粗。出气粗喂的猪，身子长得胖乎乎。出气粗的胖乎乎的大肥猪，偷吃了粗出气又长又粗的品种谷。 坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？ 山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 一道黑，两道黑，三四五六七道黑，八九道黑十道黑。我买了个烟袋乌木杆儿，我是掐着它的两头那么一道黑。二姑娘描眉去演戏，照着她的镜子那么两道黑。粉皮儿墙，写川字儿，横瞧竖瞧三道黑。象牙桌子乌木腿儿，把它放着在那炕上那么四道黑。我买了个母鸡不下蛋，把它圈在那个笼里捂到（五道）黑。挺好的骡子不吃草，把它拉到在那街上遛到（六道）黑。买了头小驴儿不拉磨，背上它的鞍韂骑（七）到（道）黑。姐俩南洼去割麦，丢了她的镰刀拔到（八道）黑。月窠儿的小孩儿子得了病，团几个艾球灸到（九道）黑。卖瓜籽的打瞌睡，哗啦啦啦撒了。 老齐欲想去卖鱼，巧遇老吕去牵驴，老齐要用老吕的驴去驮鱼，老吕说老齐要用我老吕的驴驮鱼就得给我鱼，要不给我鱼就别用我老吕的驴去驮鱼，二人争来争去都误了去赶集。 金瓜瓜，银瓜瓜，瓜棚上面结满瓜，瓜瓜落下来，打着小娃娃，娃娃叫妈妈，娃娃怪瓜瓜，瓜瓜笑娃娃。 张伯伯，李伯伯，饽饽铺里买饽饽，张伯伯买了个饽饽大，李伯伯买了个大饽饽。拿回家里喂婆婆，婆婆又去比饽饽也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 哥哥叫陆陆，弟弟叫柱柱。陆陆和柱柱，上街去买醋。陆陆说醋酸，柱柱说醋苦，哥俩追着过马路，湿了衣和裤，酸得口水吐。 老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 笼子里有三凤，黄凤红凤粉红凤。忽然黄凤啄红凤，红凤反嘴啄黄凤，粉红凤帮啄黄凤。你说是红凤啄黄凤，还是黄凤啄红凤。 丰丰和芳芳，上街买混纺。红混纺，粉混纺，黄混纺，灰混纺。红花混纺做裙子，粉花混纺做衣裳。穿上衣裳多漂亮，丰丰和芳芳乐得喜洋洋。 河上是坡，坡下是河。坡上立着一只鹅，鹅低头望着一条河，宽宽的河，肥肥的鹅，鹅过河，河渡鹅。河坡飞来丹顶鹤，鹤望河与鹅，小鹤笑呵呵，不知鹅过河还是河渡鹅。105. 简单搞笑的绕口令1 1. 花猫跌进了花袍，猫要撕袍，袍来裹猫。 不知是花猫撕破花袍，还是花袍裹住了花猫? 2. 家后有座庙,天天猫来尿,不知是庙尿猫,还是猫尿庙。 3. 牛郎恋刘娘,刘娘念牛郎,牛郎年年恋刘娘,刘娘年年念牛郎,郎恋娘来娘念郎,念娘恋娘念郎恋郎,念恋娘郎。简单搞笑的绕口令大全 4. 山前有个严圆眼,山后有个圆眼严,两人上山来比眼,不知是严圆眼的眼圆,还是圆眼严的眼圆。 5. 十四是十四，不是四十，四十是四十，不是十四。 简单搞笑的绕口令2 1. 按时绿,按时住,按时透春绿,按时透春住. 2. 粗出气种谷，出气粗喂猪。 粗出气种的谷，谷穗长得长又粗。 出气粗喂的猪，身子长得胖乎乎。 出气粗的胖乎乎的大肥猪， 偷吃了粗出气又长又粗的品种谷。 粗出气用锄打出气粗胖乎乎的大肥猪， 出气粗家胖乎乎的大肥猪， 再也不吃粗出气家的又长又粗的品种谷。 3. 公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子? 4. 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 。 简单搞笑的绕口令3 1. 太阳从西往东落，听我唱个颠倒歌。 天上打雷没有响，地下石头滚上坡。 江里骆驼会下蛋，山上鲤鱼搭成窝。 腊月苦热直淌汗，六月暴冷打哆嗦。 黄河中心割韭菜，龙门山上捉田螺。 捉到田螺比缸大，抱了田螺看外婆。 外婆在摇篮里哇哇哭，放下田螺抱外婆。 2. 想画像，就画像，画像不像不画像。不画像，想画像，画像又嫌画不像，画像不像再画像。 3. 油一缸，豆一筐，耗子嗅着油豆喷鼻爬上缸，跳进筐，偷油偷豆两端忙又开心，又慌张，脚一滑，身转眼，“扑通，一块跌进缸。 4. 朱家有个金柱子，曲家有个金锯子曲家的主人，抱住了朱家的举人，金锯子锯断了金柱子。106. 《数星星》(一) 天上小星星， 地上小青青。 青青看星星， 星星亮晶晶。 青青数星星， 星星数不清。 《根连根》(二) 山上青松根连根，各族人民心连心。 根连根，心连心，建设祖国一股劲。 《鱼和大雁》(三) 小鱼入鱼网鱼网捕鱼鱼难逃， 大雁过雁塔雁塔留雁雁不留。 《背水杯》(四) 贝贝背水杯，水杯贝贝背。 贝贝背水杯背背水杯。 水杯贝贝背，贝贝背水杯。 《过国过果》(五) 过国过果 郭国过国国 果国过郭国国 国国国过果国 《四十四束紫丝线》(六) 四十四束紫丝线， 织四十四只紫狮子， 细紫丝线织细紫狮子， 织细紫狮子用细紫丝线。 《看电视》(七) 对门田老四， 喜欢看电视。 电视里演戏， 戏里有田老师。 《蚕和蝉》(八) 爬来爬去是蚕， 飞来飞去是蝉。 蚕常在桑叶里藏， 蝉藏在树林里唱。 《白果果》(九) 我走白家门前过， 白家门前一棵白果树， 树上结了白果果， 白果树上歇了只白八哥。 《四老伯》(十) 郭老伯、骆老伯， 毕老伯、柏老伯， 郭骆毕柏四老伯， 约着城北买菱角， 买得菱角阁上剥， 菱角壳戳了四老伯的脚。 《灰猫追花鸟》(十一) 灰猫跳，花鸟叫， 灰猫听花鸟叫， 花鸟瞧灰猫跳， 灰猫跳起抓花鸟， 花鸟怕灰猫， 拨腿就逃掉。 《一二三四五》(十二) 一二三四五， 上山打老虎。 老虎没打着， 打了小松鼠。 松鼠有几只? 一二三四五。 《采蘑菇》(十三) 黑兔和白兔， 上山采蘑菇， 小猴和小鹿， 一齐来帮助， 猴和兔，兔和鹿， 高高兴兴采蘑菇。 《布和裤》(十四) 一块粗土布， 一条粗布裤。 哥哥拿布又拿裤， 飞针走线来扎布， 扎过布，再缝裤， 裤子破了用布补。 《华华和红红》(十五) 华华有两朵黄花， 红红有两朵红花， 华华要红花， 红红要黄花。 华华送给红红一朵黄花， 红红送给华华一朵红花。 《毛毛和涛涛》(十六) 毛毛和涛涛， 跳高又练跑， 毛毛教涛涛练跑， 涛涛教毛毛跳高， 毛毛学会了跳高， 涛涛学会了练跑。 《胡子骑驴子》(十七) 胡子骑驴子， 驼子挑螺蛳， 胡子撞翻了驼子的螺蛳， 驼子拖住胡子的驴子， 胡子去打挑螺蛳的驼子， 驼子来打骑驴子的胡子， 胡子打驼子， 驼子打胡子。 《种冬瓜》(十八) 东门童家门东董家， 童、董两家， 同种冬瓜， 童家知道董家冬瓜大， 来到董家学种冬瓜。 门东董家懂种冬瓜， 来教东门童家种冬瓜。 童家、董家都懂得种冬瓜， 童、董两家的冬瓜比桶大。 《枪和糠》(十九) 墙上一个窗， 窗上一支枪， 窗上一箩糠。 枪落进了糠， 糠埋住了枪。 窗要糠让枪， 糠要枪上墙， 墙要枪上窗。 互相不退让， 糠赶不走枪， 枪也上不了窗和墙。 《拔萝卜》(二十) 出八十八二十八， 八个小孩儿把萝卜拔， 你也拔，我也拔， 看谁拔得多， 看谁拔得大。 你拔得不多个儿不小， 我拔得不少个儿不大。 一个萝卜一个坑儿， 算算多少用车拉， 一个加俩，俩加仨， 七十二个加十八， 拿个算盘打一打， 一百差俩九十八。107. 中国话博大精深，绕口令也是中国文化的一种，秀出你的好舌头跟朋友比比，谁能最快念出下面的绕口令吧。以下是无忧考网为大家准备的，快来一起练练吧。 1、补破皮褥子不如不补破皮褥子。 2、一堆粪，一堆灰，灰混粪，粪混灰。 3、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 4、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 5、门口有四辆四*马车，你爱拉哪两辆来拉哪两辆。 6、大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头。 7、大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子。 8、三山撑四水，四水绕三山，三山四水春常在，四水三山四时春。 9、司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 10、八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 11、白石塔，白石搭，白石搭白塔，白塔白石搭，搭好白石塔，白塔白又大。 12、哥哥过河捉个鸽，回家割鸽来请客，客人吃鸽称鸽肉，哥哥请客乐呵呵。 13、哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 14、炮兵攻打八面坡，炮兵排排炮弹齐发射。步兵逼近八面坡，歼敌八千八百八十多。 15、七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。 16、隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸。 17、夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山。 18、华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花。 19、老爷堂上一面鼓，鼓上一只皮老虎，皮老虎抓破了鼓，就拿块破布往上补，只见过破布补破裤，哪见过破布补破鼓。 20、会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，哪就吃不成我的炖冻豆腐。108. 1、补破皮褥子不如不补破皮褥子。 2、一堆粪，一堆灰，灰混粪，粪混灰。 3、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 4、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 5、门口有四辆四轮大马车，你爱拉哪两辆来拉哪两辆。 6、大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头。 7、大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子。 8、三山撑四水，四水绕三山，三山四水春常在，四水三山四时春。 9、司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 10、八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 11、白石塔，白石搭，白石搭白塔，白塔白石搭，搭好白石塔，白塔白又大。 12、哥哥过河捉个鸽，回家割鸽来请客，客人吃鸽称鸽肉，哥哥请客乐呵呵。 13、哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 14、炮兵攻打八面坡，炮兵排排炮弹齐发射。步兵逼近八面坡，歼敌八千八百八十多。 15、七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。 16、隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸。 17、夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山。 18、华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花。 19、老爷堂上一面鼓，鼓上一只皮老虎，皮老虎抓破了鼓，就拿块破布往上补，只见过破布补破裤，哪见过破布补破鼓。 20、会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，哪就吃不成我的炖冻豆腐。 21、太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地下石头滚上坡；江里骆驼会下蛋，山里鲤鱼搭成窝；腊月苦热直流汗，六月暴冷打哆嗦；姐在房中手梳头，门外口袋把驴驮。 22、四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿谁说四十是“细席”，他的舌头没用力；谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 23、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？ 24、石室诗士施史，嗜狮，誓食十狮，氏时时适市，氏视十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮尸，食时，始识十狮尸实是十石狮尸，试释是事实。 25、巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住，八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 26、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 27、六十六岁刘老六，修了六十六座走马楼，楼上摆了六十六瓶苏合油，门前栽了六十六棵垂杨柳，柳上拴了六十六个大马猴。忽然一阵狂风起，吹倒了六十六座走马楼，打翻了六十六瓶苏合油，压倒了六十六棵垂杨柳，吓跑了六十六个大马猴，气死了六十六岁刘老六。 28、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴；来了侯老六，拉了六头牛；来了仇老六，提了六篓油；来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。109. 复韵母练习 1、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。 2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆；过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗？ 唇音练习 1、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 舌尖中音练习 1、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 舌根音、舌面音练习 1、七加一，再减一，加完减完等于几？七加一，再减一，加完减完还是七。 2、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 3、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 4、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 翘舌音、平舌音、练习(1) 1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 2、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。 3、长虫围着砖堆转，转完砖堆钻砖堆。 4、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 5、早招租，晚招租，总找周邹郑曾朱。 翘舌音、平舌音、练习(2) 1、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 2、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 3、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 4、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 喇嘛和哑吧 从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。110. 1 聂小姐借鞋去答辩结业 聂小姐到西斜街， 刚上台阶鞋口儿裂。 左一撇，右一撇， 蹑手蹑脚去借鞋。 培训班要结业， 考试答辩在今夜。 借了鞋，过了街。 赶到考场把题解。 解、解、解， 写、写、写， 答辩通过就结业。 2 老婆婆俩笸箩装菠萝和萝卜 打南坡走过来个老婆婆， 俩手托着俩笸箩。 左手托着的笸箩装的是菠萝， 右手托着的笸箩装的是萝卜。 你说说， 是老婆婆左手托着的笸箩装的菠萝多? 还是老婆婆右手托着的笸箩装的萝卜多? 说的对，送给你一笸箩菠萝， 说的不对，既不给菠萝也不给萝卜， 罚你替老婆婆把装菠萝的笸箩和装萝卜的笸萝， 送到大北坡。 3 老龙和老农 老龙恼怒闹老农， 老农恼怒闹老龙。 农恼龙怒农更恼， 龙恼农怒龙怕农。 4 庙里住着俩老道 高高山上有座庙， 庙里住着俩老道， 一个年纪老， 一个年纪少。 庙前长着许多草， 有时候老老道剪药， 小老道采药， 有时候小老道剪药， 老老道采药。 5 城隍庙内潘判官管庞判官 城隍庙内俩判官， 左边的是潘判官， 右边的是庞判官。 不知是潘判官管庞判官， 还是庞判官管潘判官。 6 李小杜去卖谷换布和醋 离村五里路，有个李小杜， 上街去卖谷，换回布和醋。 肩背布，手提醋， 刚走一里路，看见一只兔， 小杜放下布和醋， 卷起裤腿去追兔， 跑了兔，放下裤， 回来不见布和醋。 7 婆婆和嬷嬷 婆婆和嬷嬷，来到山坡坡， 婆婆默默采蘑菇，嬷嬷默默拔萝卜。 婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩， 婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。 婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 8 师父四十四 山里有个寺，山外有个市，弟子三十三，师父四十四。 三十三的弟子在寺里练写字，四十四的师父到市里去办事。 三十三的弟子用了四十四小时，四十四的师父走了三十三里地。 走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 9 石、斯、施、史四老师 石、斯、施、史四老师，天天和我在一起。 石老师教我大公无私，斯老师给我精神食粮， 施老师叫我遇事三思，史老师送我知识钥匙。 我感谢石、斯、施史四老师。111. 1、山前有四十四个小狮子，山后边有四十四棵紫色柿子树， 山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子， 山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 2、天上有个日头，地下有块石头，嘴里有个舌头， 手上有五个手指头。不管是天上的热日头， 地下的硬石头，嘴里的软舌头，手上的手指头， 还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 3、四是四，十是十，十四是十四，四十是四十。 说好四和十得靠舌头和牙齿。谁说四十是“细席”， 他的舌头没用力；谁说十四是“适时”，他的舌头没伸直。 认真学，常练习，十四、四十、四十四。 4、公园有四排石狮子，每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？ 5、石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。年十四的石小四爱看诗词， 年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词， 忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 6、一只花皮花背花青蛙，遇见花背花皮大西瓜。 青蛙说西瓜的背皮没有青蛙的皮背花 ，西瓜说青蛙的皮背没有西瓜的背皮花。 小花猫爱画画，先画一朵腊梅花，又画一个小喇叭， 带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 7、山里有个寺，山外有个市，弟子三十三， 师父四十四。三十三的弟子在寺里练写字， 四十四的师父到市里去办事。三十三的弟子用了四十四小时， 四十四的师父走了三十三里地。走了三十三里地就办了四十四件事， 用了四十四小时才写了三十三个字。 8、八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 9、四十四个字和词，组成一首子、词、丝的绕口词， 桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。 名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词， 蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 10、石司四、史肖石去阅览室。石司四年十四， 史肖石年四十，年十四的石司四爱看诗词， 年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词忙递给年十四的石司四， 年十四的石司四见了好报纸忙递给年四十的史肖石。 石司四接过杂志看诗词，史肖石接过报纸看时事， 看完诗词和时事，史肖石和石司四出了阅览室。 11、四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿， 史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 12、柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴；来了侯老六，拉了六头牛； 来了仇老六，提了六篓油；来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼， 半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油， 油坏了尤老六的绸。牛老六帮仇老六收起油， 侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。112. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、三山屹四水，四水绕三山； 三山四水春常在，四水三山四时春。 4、锅里煮猪肉，肉里包着骨， 取肉去猪骨，放上一点醋，都吃熟猪肉。 5、隔着窗子撕字纸，一撕横字纸， 再撕竖字纸，撕了四十四张湿字纸。 6、十四四十十四四，四十十四四四十， 四十十四四十四，不知是十还是四。 7、日头热，晒人肉，晒得心里好难受。 晒人肉，好难受，晒得头上直冒油。 8、字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、小四约小石学写字，小石约小四看电视。 小四不看电视只要学写字，小石不学写字只看电视。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、知道就说知道，不知道就说不知道。 不要知道的说不知道，也不要不知道说知道， 要老老实实，实事求是。 12、四是四，十是十，十四是十四， 四十是四十，十不能说成四， 四也不能说成十，假使说错了，就可能误事。 13、三哥三嫂子，借给我三斗三升酸枣子， 等我上山摘了三升三斗酸枣子， 再奉还三哥三嫂子的三斗三升酸枣子。 14、史老师，讲时事，常学时事长知识。 时事学习看报纸，报纸登的是时事。 常看报纸要多思，心里装着天下事。 15、抱子看报纸报纸是报纸，抱子是抱子， 报纸、抱子两件事，抱子不是报纸， 看报纸不是看抱子，只能抱子看报纸。 16、葱葱栽了十颗葱，松松栽了十棵松。 冲冲说栽松不如栽葱，松松说栽葱不如栽松。 是栽松不如栽葱，还是栽葱不如栽松？ 17、四是四，十是十，十四是十四， 四十是四十。莫把四字说成十， 休将十字说成四。若要分清四十和十四，经常练说十和四。 18、辨读找到不念早到，乱草不念乱吵， 制造不念自造，师范不念思凡， 质子不念字纸，师长不念司长， 主力不念阻力，木柴不念木材。 19、石狮寺前有四十四个石狮子， 寺前树上结了四十四个涩柿子， 四十四个石狮子不吃四十四个涩柿子， 四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山； 上山又下山，下山又上山； 登了三次山，跑了三里三； 出了一身汗，湿了三件衫； 小三山上大声喊，离天只有三尺三。 21、水中映着彩霞，水面游着花鸭。 霞是五彩霞，鸭是麻花鸭。 麻花鸭游进五彩霞，五彩霞网住麻花鸭。 乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅， 一盘生鱼翅。迟小池拿了一把瓷汤匙， 要吃清蒸美鱼翅。一口鱼翅刚到嘴， 鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、捡颗小石子，在地上画个方格子， 画好了格子造房子，画个大方格子造个大房子， 画个小方格子造个小房子， 楼上的房子分给鸽子，楼下的房子分给兔子。 24、扁担长，板凳宽，扁担没有板凳宽， 板凳没有扁担长。扁担要绑在板凳上。 板凳不让扁担绑在板凳上。 扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 25、有个好孩子，拿张图画纸， 来到石院子，学画石狮子。 一天来画一次石狮子，十天来画十次石狮子。 次次画石狮子，天天画石狮子，死狮子画成了活狮子。 26、杂志社出杂志，杂志出在杂志社， 有政治常识、历史常识、写作指导、诗词注释、 还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 27、石、斯、施、史四老师，天天和我在一起。 石老师教我大公无私，斯老师给我精神食粮， 施老师叫我遇事三思，史老师送我知识钥匙。 我感谢石、斯、施史四老师。 28、认识从实践始，实践出真知。 知道就是知道，不知道就是不知道。 不要知道说不知道，也不要不知道装知道， 老老实实，实事求是，一定要做到不折不扣的真知道。113. 1、公园有四排石狮子，每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？ 2、石室诗士施史，嗜狮，誓食十狮， 氏时时适市，氏视十狮，恃矢势， 使是十狮逝世，氏拾是十狮尸， 适石室，石室湿，氏使侍拭石室， 石室拭，氏始试食十狮尸，食时， 始识十狮尸实是十石狮尸，试释是事实。 3、巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住， 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 4、石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词，年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词，忙递给年十四的石小四， 年十四的石小四见了好报纸，忙递给年四十的史肖石。 5、太阳从西往东落，听我唱个颠倒歌。 天上打雷没有响，地下石头滚上坡； 江里骆驼会下蛋，山里鲤鱼搭成窝； 腊月苦热直流汗，六月暴冷打哆嗦； 姐在房中手梳头，门外口袋把驴驮白石塔， 白石搭，白石搭白塔，白塔白石搭， 搭好白石塔，白塔白又大。 6、六十六岁刘老六，修了六十六座走马楼， 楼上摆了六十六瓶苏合油，门前栽了六十六棵垂杨柳， 柳上拴了六十六个大马猴。忽然一阵狂风起， 吹倒了六十六座走马楼，打翻了六十六瓶苏合油， 压倒了六十六棵垂杨柳，吓跑了六十六个大马猴，气死了六十六岁刘老六。 7、老爷堂上一面鼓，鼓上一只皮老虎， 皮老虎抓破了鼓，就拿块破布往上补， 只见过破布补破裤，哪见过破布补破鼓四和十， 十和四，十四和四十，四十和十四。 说好四和十得*舌头和牙齿谁说四十是“细席”， 他的舌头没用力；谁说十四是“适时”， 他的舌头没伸直。认真学， 常练习，十四、四十、四十四。 8、柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴； 来了侯老六，拉了六头牛； 来了仇老六，提了六篓油； 来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六， 住上刘老六的六号楼，半夜里， 牛抵猴，猴斗牛，撞倒了仇老六的油， 油坏了尤老六的绸。牛老六帮仇老六收起油， 侯老六帮尤老六洗掉绸上油， 拴好牛，看好猴，一同上楼去喝酒。 9、从南边来了个喇嘛，提拉着五斤塔嘛。 从北边来个哑吧，腰里别着个喇叭， 提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭， 别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛， 别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。 也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。 也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。114. 1、山前有个严圆眼，山后有个严眼圆， 二人山前来比眼，不知是严圆眼的眼圆， 还是严眼圆比严圆眼的眼圆？ 2、夏日无日日亦热，冬日有日日亦寒， 春日日出天渐暖，晒衣晒被晒褥单， 秋日天高复云淡，遥看红日迫西山。 3、坡上立着一只鹅，坡下就是一条河。 宽宽的河，肥肥的鹅，鹅要过河， 河要渡鹅不知是鹅过河，还是河渡鹅？ 4、华华有两朵黄花，红红有两朵红花。 华华要红花，红红要黄花。 华华送给红红一朵黄花，红红送给华华一朵红花。 5、山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 6、山前有个崔粗腿，山后有个崔腿粗。 二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗， 还是崔腿粗比崔粗腿的腿粗？ 7、望月空，满天星，光闪闪， 亮晶晶，好象那，小银灯， 仔细看，看分明，大大小小， 密密麻麻，闪闪烁烁，数也数不清。 8、辛厂长，申厂长，同乡不同行。 辛厂长声声讲生产，申厂长常常闹思想。 辛厂长一心只想革新厂，申厂长满口只讲加薪饷。 9、出南门，走六步，见着六叔和六舅， 叫声六叔和六舅，借我六斗六升好绿豆； 过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 10、老方扛着黄幌子，老黄扛着方幌子。 老方要拿老黄的方幌子，老黄要拿老方的黄幌子， 末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 11、哥挎瓜筐过宽沟，赶快过沟看怪狗， 光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 哥哥过河捉个鸽，回家割鸽来请客， 客人吃鸽称鸽肉，哥哥请客乐呵呵。 12、高高山上有座庙，庙里住着两老道， 一个年纪老，一个年纪少。庙前长着许多草， 有时候老老道煎药，小老道采药； 有时候小老道煎药，老老道采药。 13、一个胖娃娃，捉了三个大花活蛤蟆， 三个胖娃娃，捉了一个大花活蛤蟆， 捉了一个大花活蛤蟆的三个胖娃娃， 真不如捉了三个大花活蛤蟆的一个胖娃娃。 14、小光和小刚，抬着水桶上岗。 上山岗，歇歇凉，拿起竹竿玩打仗。 乒乒乒，乓乓乓，打来打去砸了缸。 小光怪小刚，小刚怪小光，小光小刚都怪丿竿和水缸。 15、会炖我的炖冻豆腐，来炖我的炖冻豆腐， 不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。 要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐， 哪就吃不成我的炖冻豆腐。 16、天上有个日头，地下有块石头， 嘴里有个舌头，手上有五个手指头。 不管是天上的热日头，地下的硬石头， 嘴里的软舌头，手上的手指头， 还是热日头，硬石头，软舌头， 手指头，反正都是练舌头。115. 1、补破皮褥子不如不补破皮褥子。 2、一堆粪，一堆灰， 灰混粪，粪混灰。 3、一平盆面，烙一平盆饼， 饼碰盆，盆碰饼。 4、吃葡萄不吐葡萄皮儿， 不吃葡萄倒吐葡萄皮儿。 5、门口有四辆四轮大马车， 你爱拉哪两辆来拉哪两辆。 6、粉红墙上画凤凰，红凤凰， 粉凤凰，粉红凤凰，花凤凰。 7、大兔子，大肚子， 大肚子的大兔子，要咬大兔子的大肚子。 8、大车拉小车，小车拉小石头， 石头掉下来，砸了小脚指头。 9、磨房磨墨，墨碎磨房一磨墨； 梅香添煤，煤爆梅香两眉灰。 10、三山撑四水，四水绕三山， 三山四水春常在，四水三山四时春。 11、司机买雌鸡，仔细看雌鸡， 四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 12、任命是任命，人名是人名， 任命不能说成人名，人名也不能说成任命。 13、黄花花黄黄花黄，花黄黄花朵朵黄， 朵朵黄花黄又香，黄花花香向太阳。 14、十字路口指示灯，红黄绿色分得清。 绿灯行，红灯停。红灯停，绿灯行。 15、八百标兵奔北坡，炮兵并排北边跑， 炮兵怕把标兵碰，标兵怕碰炮兵炮。 16、哥挎瓜筐过宽沟，赶快过沟看怪狗。 光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 17、山前有只虎，山下有只猴。 虎撵猴，猴斗虎； 虎撵不上猴，猴斗不了虎。 18、小华和胖娃，两个种花又种瓜， 小华会种花不会种瓜，胖娃会种瓜不会种花。 19、炮兵攻打八面坡，炮兵排排炮弹齐发射。 步兵逼近八面坡，歼敌八千八百八十多。 20、东边庙里有个猫，西边树梢有只鸟。 猫鸟天天闹，不知是猫闹树上鸟，还是鸟闹庙里猫。 21、蜻蜓青，青浮萍， 青萍上面停蜻蜓，蜻蜓青萍分不清。 别把蜻蜓当青萍，别把青萍当蜻蜓。 22、七巷一个漆匠，西巷一个锡匠， 七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。 23、毛毛和涛涛，跳高又练跑， 毛毛教涛涛练跑，涛涛教毛毛跳高， 毛毛学会了跳高，涛涛学会了练跑。 24、扁担长，板凳宽，扁担没有板凳宽， 板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 25、隔着窗户撕字纸，一次撕下横字纸， 一次撕下竖字纸，是字纸撕字纸， 不是字纸，不要胡乱撕一地纸。116. 【一】 四十四个字和词，组成一首子、词、丝的绕口词， 桃子、李子、梨子、栗子、 桔子、柿子、槟子、榛子， 栽满院子、村子和寨子。 名词、动词、数词、量词、 代词、副词、助词、连词， 组成语词、诗词和唱词， 蚕丝、生丝、熟丝、缫丝、 染丝、晒丝、纺丝、织丝、 自制粗丝、细丝、人造丝。 【二】 老爷堂上一面鼓， 鼓上一只皮老虎， 皮老虎抓破了鼓， 就拿块破布往上补， 只见过破布补破裤， 哪见过破布补破鼓四和十， 十和四，十四和四十，四十和十四。 说好四和十得靠舌头和牙齿谁说四十是“细席”，他的舌头没用力； 谁说十四是“适时”，他的舌头没伸直。 认真学，常练习，十四、四十、四十四。 【三】 石司四、史肖石去阅览室。 石司四年十四，史肖石年四十， 年十四的石司四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词忙递给年十四的石司四， 年十四的石司四见了好报纸忙递给年四十的史肖石。 石司四接过杂志看诗词，史肖石接过报纸看时事， 看完诗词和时事，史肖石和石司四出了阅览室。 【四】 四月十四日十四时四十上集市， 司小四买了四十四斤四两西红柿， 史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 【五】 巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住， 八十八个把式烧了八十八棵芭蕉树， 巴老爷在八十八棵树边哭。 【六】 石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词， 忙递给年十四的石小四， 年十四的石小四见了好报纸， 忙递给年四十的史肖石。 【七】 一只花皮花背花青蛙， 遇见花背花皮大西瓜。 青蛙说西瓜的背皮没有青蛙的皮背花， 西瓜说青蛙的皮背没有西瓜的背皮花。 小花猫爱画画，先画一朵腊梅花， 又画一个小喇叭，带着腊梅花，吹着小喇叭， 回家去见妈妈，妈妈见了笑哈哈。 【八】 山里有个寺，山外有个市， 弟子三十三，师父四十四。 三十三的弟子在寺里练写字， 四十四的师父到市里去办事。 三十三的弟子用了四十四小时， 四十四的师父走了三十三里地。 走了三十三里地就办了四十四件事， 用了四十四小时才写了三十三个字。 【九】 太阳从西往东落，听我唱个颠倒歌。 天上打雷没有响，地下石头滚上坡； 江里骆驼会下蛋，山里鲤鱼搭成窝； 腊月苦热直流汗，六月暴冷打哆嗦； 姐在房中手梳头，门外口袋把驴驮白石塔， 白石搭，白石搭白塔，白塔白石搭， 搭好白石塔，白塔白又大。 【十】 六十六岁刘老六， 修了六十六座走马楼， 楼上摆了六十六瓶苏合油， 门前栽了六十六棵垂杨柳， 柳上拴了六十六个大马猴。 忽然一阵狂风起， 吹倒了六十六座走马楼， 打翻了六十六瓶苏合油， 压倒了六十六棵垂杨柳， 吓跑了六十六个大马猴， 气死了六十六岁刘老六。117. 【一】 炮兵攻打八面坡， 炮兵排排炮弹齐发射。 步兵逼近八面坡， 歼敌八千八百八十多。 【二】 一个驼子骑匹骡子， 碰到婆子，挑担茄子， 驼子个骡子践到婆子个茄子， 婆子拖驼子下骡子， 要驼子赔婆子个茄子。 【三】 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担要绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。 【四】 梁上两对倒吊鸟， 泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟， 惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊， 也惦着梁上的两对倒吊鸟。 【五】 会炖我的炖冻豆腐， 来炖我的炖冻豆腐， 不会炖我的炖冻豆腐， 就别炖我的炖冻豆腐。 要是混充会炖我的炖冻豆腐， 炖坏了我的炖冻豆腐， 那就吃不成我的炖冻豆腐。 【六】 墙上一根钉，钉上挂条绳， 绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。 滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯， 灯骂绳，瓶说绳，绳说钉， 丁丁当当，乒乓乓乓。 【七】 铜勺舀热油，铁勺舀凉油， 铜勺舀了热油舀凉油， 铁勺舀了凉油舀热油。 舀油入炒勺，月月有佳肴。 先炖鱿鱼块，后扒羊肉条。 火在炉下燃，油在勺中熬， 满锅同炎热，管它铜勺与铁勺。 【八】 河边两只鹅，白鹅与灰鹅， 哦哦爱唱歌，唱得渴又饿， 昂首吸飞蛾，飞蛾啄不住岸边去找窝。 草窝暗又矮，只得去过河， 河里真暖和，有吃又有喝， 不能再挨饿，遨游真快活，安心唱爱歌。 【九】 黑化肥发灰，灰化肥发黑，黑化肥发灰会挥发； 灰化肥挥发会发黑，黑化肥挥发发灰会花飞； 灰化肥挥发发黑会飞花，黑灰化肥会挥发发灰黑讳为花飞； 灰黑化肥会挥发发黑灰为讳飞花， 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞； 灰黑化肥会会挥发发黑灰为讳飞花化为灰， 黑化肥灰化肥灰会挥发发灰黑讳为黑灰花会回飞； 灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。118. 【导语】普通话作为中国通用的语言，为了大家更加和谐畅通地进行交流，大家从小学就要开始学习标准的普通话。 司机买雌鸡， 仔细看雌鸡， 四只小雌鸡， 叽叽好欢喜，司机笑嘻嘻。 任命是任命， 人名是人名， 任命不能说成人名， 人名也不能说成任命。 黄花花黄黄花黄， 花黄黄花朵朵黄， 朵朵黄花黄又香， 黄花花香向太阳。 十字路口指示灯， 红黄绿色分得清。 绿灯行，红灯停。 红灯停，绿灯行。 八百标兵奔北坡， 炮兵并排北边跑， 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 哥挎瓜筐过宽沟， 赶快过沟看怪狗。 光看怪狗瓜筐扣， 瓜滚筐空哥怪狗。 山前有只虎，山下有只猴。 虎撵猴，猴斗虎； 虎撵不上猴，猴斗不了虎。 小华和胖娃， 两个种花又种瓜， 小华会种花不会种瓜， 胖娃会种瓜不会种花。119. 【导语】普通话作为中国通用的语言，为了大家更加和谐畅通地进行交流，大家从小学就要开始学习标准的普通话。 半辫蒜掰半篮蒜瓣。（重复五遍） 白石塔，白石搭，白石搭白塔， 白塔白石搭，搭好白石塔，白塔白又大。 扁扁娃背个扁口背篓， 上扁扁山拔扁豆， 拔了一扁背篓扁豆， 扁扁娃背不起一扁背篓扁豆， 背了半扁背篓扁豆。 大姐编辫， 两个人编。 二姐编那半边， 三姐编这半边； 三姐编这半边， 二姐编那半边。 巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住， 八十八个把式烧了八十八棵芭蕉树， 巴老爷在八十八棵树边哭。 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴； 来了侯老六，拉了六头牛； 来了仇老六，提了六篓油； 来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼， 半夜里，牛抵猴，猴斗牛， 撞倒了仇老六的油，油坏了尤老六的绸。 牛老六帮仇老六收起油， 侯老六帮尤老六洗掉绸上油， 拴好牛，看好猴，一同上楼去喝酒。 太阳从西往东落，听我唱个颠倒歌。 天上打雷没有响，地下石头滚上坡； 江里骆驼会下蛋，山里鲤鱼搭成窝； 腊月苦热直流汗，六月暴冷打哆嗦； 姐在房中手梳头，门外口袋把驴驮。 三山撑四水， 四水绕三山， 三山四水春常在， 四水三山四时春。120. 黄果树瀑布【篇一】 黄果树瀑布像白布，黄果树瀑布像白幕。 白布是白布，像白布的不是白布。 白幕是白幕，像白幕的不是白幕。 瀑布不是白布也不是白幕。 瀑布就是瀑布。 柳条条【篇二】 柳条条，绿条条，风儿摇摇。 摇摇条条，条条摇摇，这是春天的好兆兆。 老老道小老道【篇三】 高高山上有座庙，庙里住着两老道，一个年纪老，一个年纪少。 庙前长着许多草，有时候老老道煎药，小老道采药； 有时候小老道煎药，老老道采药。121. 猴拍球【篇一】 一群猴，打篮球猴拍球蹦球碰头， 球蹦猴拍头碰球，球碰猴头球蹦跳，猴拍蹦球头碰球。 蛐蛐说大话【篇二】 墙头高，墙头低，墙旮旯有对蛐蛐，在那儿吹大气。 大蛐蛐说：“昨儿个我吃了两只花不愣登的大老虎。 ”小蛐蛐说：“今儿个我吃了两只灰不溜秋的大毛驴。 ”大蛐蛐说：“我在南山爪了一抬，踢倒了十棵大柳树。 ”小蛐蛐说：“我在北海大嘴一张，吞了十条大鲸鱼。 ”这两个蛐蛐正在吹大气，扑棱棱打东边飞来一只芦花大公鸡。 你看这只公鸡有多愣，它“哆”的一声吃了那只小蛐蛐。 大蛐蛐一看生了气，它龇牙捋须一伸腿，唉！ 它也喂了鸡！ 哈哈，看它还吹大气不吹大气！ 踢毽子【篇三】 小燕子踢毽子，小建子数毽子。 毽子上，毽子下，毽子上上又下下， 累坏数数的小建子，乐坏踢毽的小燕子。 数一数【篇四】 山头立着一只虎，林中跑着一只鹿。 路上走来一只猪，草中藏着一只兔。 洞里出来一只鼠，一二三四五，虎鹿猪兔鼠。122. 华华和佳佳【篇一】 华华有两朵黄花，佳佳有两朵白花， 华华要白花，佳佳要黄花，华华送给佳佳一朵黄花， 佳佳送给华华一朵白花。 佳佳和华华每人一朵黄花一朵白花。 小石拾柿【篇二】 小石拾柿拾到四十四，拿到秤上试，需要称两次。 头次秤三十，斤数整四十； 二次称十四，四斤四两四。 两次称柿子。 共是四十四斤四两四。 黄果树瀑布【篇三】 黄果树瀑布像白布，黄果树瀑布像白幕。 白布是白布，像白布的不是白布。 白幕是白幕，像白幕的不是白幕。 瀑布不是白布也不是白幕。 瀑布就是瀑布。123. 汤烫塔【篇一】 老唐端蛋汤， 踏凳登宝塔， 只因凳太滑， 汤洒汤烫塔。 蚕和蝉【篇二】 这是蚕， 那是蝉， 蚕常在叶里藏， 蝉常在林里唱。 六十六头牛【篇三】 六十六岁的陆老头， 盖了六十六间楼， 买了六十六篓油， 养了六十六头牛， 栽了六十六棵垂杨柳。 六十六篓油， 堆在六十六间楼； 六十六头牛， 扣在六十六棵垂杨柳。 忽然一阵狂风起， 吹倒了六十六间楼， 翻倒了六十六篓油， 折断了六十六棵垂杨柳， 砸死了六十六头牛， 急煞了六十六岁的陆老头。 任命、人名 任命是任命， 人名是人名， 任命人名不能错， 错了人名错任命。124. 毛毛和涛涛【篇一】 毛毛和涛涛，跳高又练跑， 毛毛教涛涛练跑，涛涛教毛毛跳高， 毛毛学会了跳高，涛涛学会了练跑。 猫闹鸟【篇二】 东边庙里有个猫， 西边树梢有只鸟。 猫鸟天天闹， 不知是猫闹树上鸟， 还是鸟闹庙里猫。 老老道小老道【篇三】 高高山上有座庙，庙里住着两老道， 一个年纪老，一个年纪少。 庙前长着许多草，有时候老老道煎药， 小老道采药；有时候小老道煎药，老老道采药。 同乡不同行【篇四】 辛厂长，申厂长，同乡不同行。 辛厂长声声讲生产，申厂长常常闹思想。 辛厂长一心只想革新厂，申厂长满口只讲加薪饷。 砸缸【篇五】 小光和小刚，抬着水桶上岗。 上山岗，歇歇凉，拿起竹竿玩打仗。 乒乒乒，乓乓乓，打来打去砸了缸。 小光怪小刚，小刚怪小光， 小光小刚都怪丿竿和水缸。125. 老爷堂上一面鼓【篇一】 老爷堂上一面鼓，鼓上一只皮老虎， 皮老虎抓破了鼓，就拿块破布往上补， 只见过破布补破裤，哪见过破布补破鼓 四和十【篇二】 四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿谁说四十是“细席”， 他的舌头没用力；谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。 石小四和史肖石【篇三】 石小四，史肖石， 一同来到阅览室。 石小四年十四， 史肖石年四十。 年十四的石小四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词， 忙递给年十四的石小四， 年十四的石小四见了好报纸， 忙递给年四十的史肖石。 数狮子【篇四】 公园有四排石狮子， 每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子？ 胖娃娃和蛤蟆【篇五】 一个胖娃娃，捉了三个大花活蛤蟆， 三个胖娃娃，捉了一个大花活蛤蟆， 捉了一个大花活蛤蟆的三个胖娃娃， 真不如捉了三个大花活蛤蟆的一个胖娃娃。126. 颠倒歌【篇一】 太阳从西往东落，听我唱个颠倒歌。 天上打雷没有响，地下石头滚上坡; 江里骆驼会下蛋，山里鲤鱼搭成窝; 腊月苦热直流汗，六月暴冷打哆嗦; 姐在房中手梳头，门外口袋把驴驮. 白石塔【篇二】 白石塔，白石搭，白石搭白塔， 白塔白石搭，搭好白石塔，白塔白又大。 哥挎瓜筐过宽沟【篇三】 哥挎瓜筐过宽沟，赶快过沟看怪狗， 光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 哥哥捉鸽【篇四】 哥哥过河捉个鸽，回家割鸽来请客， 客人吃鸽称鸽肉，哥哥请客乐呵呵。127. 一平盆面【篇一】 一平盆面，烙一平盆饼， 饼碰盆，盆碰饼。 巴老爷芭蕉树【篇二】 巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住， 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 老六放牛【篇三】 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴；来了侯老六， 拉了六头牛；来了仇老六，提了六篓油； 来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六， 住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛， 撞倒了仇老六的油，油坏了尤老六的绸。 牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油， 拴好牛，看好猴，一同上楼去喝酒。128. 九个酒迷喝醉酒【篇一】 九月九，九个酒迷喝醉酒。 九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。 九个酒迷端起酒， “咕咚、咕咚”又九口。 九杯酒，酒九口， 喝罢九个酒迷醉了酒。 酒换油【篇二】 一葫芦酒九两六，一葫芦油六两九。 六两九的油，要换九两六的酒， 九两六的酒，不换六两九的油。 牛驮油【篇三】 九十九头牛，驮着九十九个篓。 每篓装着九十九斤油。 牛背油篓扭着走， 油篓磨坏篓漏油， 九十九斤一个篓， 还剩六十六斤油。 你说漏了几十几斤油？ 十和四【篇四】 四是四，十是十， 十四是十四，四十是四十。 莫把四字说成十，休将十字说成四。 若要分清四十和十四，经常练说十和四。129. 白老八【篇一】 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 八座屋【篇二】 八只小白兔，住在八棱八角八座屋。 八个小孩要逮八只小白兔，吓得小白兔， 不敢再住八棱八角八座屋。 把萝卜【篇三】 出八十八二十八,八个小孩儿把萝卜拔， 你也拔，我也拔，看谁拔得多，看谁拔得大。 你拔得不多个儿不小，我拔得不少个儿不大。 一个萝卜一个坑儿，算算多少用车拉， 一个加俩，俩加仨，七十二个加十八， 拿个算盘打一打，一百差俩九十八。130. 石小四和史肖石【篇一】 石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词， 忙递给年十四的石小四， 年十四的石小四见了好报纸， 忙递给年四十的史肖石。 六十六头牛【篇二】 六十六岁的陆老头， 盖了六十六间楼， 买了六十六篓油， 养了六十六头牛， 栽了六十六棵垂杨柳。 六十六篓油， 堆在六十六间楼； 六十六头牛， 扣在六十六棵垂杨柳。 忽然一阵狂风起， 吹倒了六十六间楼， 翻倒了六十六篓油， 折断了六十六棵垂杨柳， 砸死了六十六头牛， 急煞了六十六岁的陆老头。 老六放牛【篇三】 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴； 来了侯老六，拉了六头牛； 来了仇老六，提了六篓油； 来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六， 住上刘老六的六号楼， 半夜里，牛抵猴，猴斗牛， 撞倒了仇老六的油， 油坏了尤老六的绸。 牛老六帮仇老六收起油， 侯老六帮尤老六洗掉绸上油， 拴好牛，看好猴，一同上楼去喝酒。 连念七遍就聪明【篇四】 天上七颗星，地下七块冰， 树上七只鹰，梁上七根钉， 台上七盏灯。呼噜呼噜扇灭七盏灯， 嗳唷嗳唷拔掉七根钉， 呀嘘呀嘘赶走七只鹰， 抬起一脚踢碎七块冰， 飞来乌云盖没七颗星。 一连念七遍就聪明。 天上七颗星【篇五】 天上七颗星，地上七块冰， 台上七盏灯，树上七只莺， 墙上七枚钉。吭唷吭唷拔脱七枚钉。 喔嘘喔嘘赶走七只莺。 乒乒乓乓踏坏七块冰。 一阵风来吹来七盏灯。 一片乌云遮掉七颗星。131. 两个排【篇一】 营房里出来两个排， 直奔正北菜园来， 一排浇波菜， 二排砍白菜。 剩下八百八十八棵大白菜没有掰。 一排浇完了波菜， 又把八百八十八棵大白菜掰下来； 二排砍完白菜， 把一排掰下来的八百八十八棵大白菜背回来。 酸枣子【篇二】 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子， 山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 还了山当腰三哥三嫂子，两个三斗三升酸枣子。 登山【篇三】 三月三，小三去登山。 上山又下山，下山又上山。 登了三次山，跑了三里三。 出了一身汗，湿了三件衫。 小三山上大声喊：“离天只有三尺三！” 司小四和史小世【篇四】 司小四和史小世， 四月十四日十四时四十上集市， 司小四买了四十四斤四两西红柿， 史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 四和十【篇五】 四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿谁说四十是“细席”， 他的舌头没用力； 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。132. 八十八岁公公【篇一】 八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 化肥【篇二】 黑化肥发灰,灰化肥发黑。黑化肥发黑不发灰,灰化肥发灰不发黑。 南边来个老爷子，手里拿碟子，碟子里装茄子，一下碰上了橛子。打了碟子，洒了茄子，摔坏了老爷子。 四和十【篇三】 四是四,十是十，十四是十四，四十是四十，谁能分得清,请来试一试。 多少罐【篇四】 一个半罐是半罐，两个半罐是一罐； 三个半罐是一罐半，四个半罐是两罐； 五个半罐是两罐半，六个半罐是三满罐； 七个、八个、九个半罐，请你算算是多少罐。133. 【导语】绕口令是我们常常喜欢使用的一种口头上的技巧。及其快速而准确的说出读音相近的句子或是段落。以下是无忧考网为大家准备的，希望对大家有帮助。 绕口令：猫捉鼠 粮仓里边有稻谷， 小猫来看护， 睁大眼睛不马虎。 忽然发现一只鼠， 偷偷摸摸来吃谷， 一把抓过去， 老鼠乖乖成俘虏。 左抓抓，右拱拱， 吓得老鼠心打鼓， 眼看小命要入土。胡子骑驴子胡子骑驴子， 绕口令：驼子挑螺蛳 胡子撞翻了驼子的螺蛳， 驼子拖住胡子的驴子， 胡子去打挑螺蛳的驼子， 驼子来打骑驴子的胡子， 胡子打驼子， 驼子打胡子。 绕口令：倒吊鸟 梁上两对倒吊鸟， 泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟， 惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊， 也惦着梁上的两对倒吊鸟。 绕口令：六合县六十六岁的陆老头 六合县有个六十六岁的陆老头， 盖了六十六间楼， 买了六十六篓油， 堆在六十六间楼。 栽了六十六株垂杨柳， 养了六十六头牛， 扣在六十六株垂杨柳。 遇了一阵狂风起， 吹倒了六十六间楼， 翻了六十六篓油， 断了六十六株垂杨柳， 打死了六十六头牛， 急煞了六合县的六十六岁的陆老头。 绕口令：化肥会挥发 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发;灰化肥挥发会发黑 黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰134. 绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。以下是无忧考网为大家准备的最难的绕口令，真是费尽唇舌啊，快来一起练练吧。 1、一面小花鼓，鼓上画老虎。妈妈用布来补。到底是布补鼓，还是布补虎。 2、路上跑来马，撞上路边瓦，瓦打坏马，马踏碎瓦，瓦要马赔瓦，马要瓦赔马。 3、多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。 4、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 5、盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏泥，比比，真梨、假梨差不离。 6、嘴说腿，腿说嘴，嘴说腿爱跑腿，腿说嘴爱卖嘴。光动嘴不动腿，光动腿不动嘴，不如不长腿和嘴。 7、天连水，水连天，水天一色望无边，蓝蓝的天似绿水，绿绿的水如蓝天。到底是天连水，还是水连天？ 8、河边两只鹅，一同过了河；白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 9、胡图用笔画葫芦，葫芦画得真糊涂，糊涂不能算葫芦，要画葫芦不糊涂，胡图决心不糊涂，画出一只大葫芦。 10、牛郎恋刘娘，刘娘念牛郎，牛郎年年恋刘娘，刘娘年年念牛郎，郎恋娘来娘念郎，念娘恋娘念郎恋郎，念恋娘郎。 11、量窗量床又量墙，跳*量窗，靠往墙量床，墙比张床长，床又比窗长，窗长不过床，床又长不过墙，所以墙比床比窗长。 12、板凳宽，扁担长。扁担没有板凳宽，板凳没有扁担长。扁担在绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 13、小艾和小戴，一起去买菜。小艾把一斤菜给小戴，小戴有比小艾多一倍的菜；小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 14、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 15、白猫黑鼻子，黑猫白鼻子；黑猫的白鼻子，碰破了白猫黑鼻子白猫的黑鼻子破了剥了秕谷壳儿补鼻子；黑猫的白鼻子不破不剥秕谷壳儿补鼻子。 16、天上有日头，地下有石头，嘴里有舌头，瓶口有塞头。天上是日头不是石头，地下是石头不是日头，嘴里是舌头不是塞头，瓶中是塞头不是舌头。 17、这边一个人，挑了一挑瓶。那边一个人，担了一挑盆。瓶碰烂了盆，盆碰烂了瓶。卖瓶买盆来赔盆，卖盆买瓶来赔瓶。瓶不能赔盆，盆不能赔瓶。 18、天上一群大白鸽，河里一群大白鹅。白鸽尖尖红嘴壳，白鹅曲项向天歌。白鸽剪开云朵朵，白鹅拨开浪波波。鸽乐呵呵，鹅活泼波，白鹅白鸽碧波蓝天真快乐。 19、张家有个小英子，王家有个小柱子。张家的小英子，自己穿衣洗袜子，天天扫地擦桌子，王家的小柱子，捡到一只皮夹子，还给后院大婶子。小英子，小柱子，他们都是好孩子。 20、抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 21、墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 22、小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛还油。 23、白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 24、六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼；六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 25、司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 26、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴；来了侯老六，拉了六头牛；来了仇老六，提了六篓油；来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 27、天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 28、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 29、打南边来了个喇嘛，手里提拉着五斤鳎目。打北边来了个哑巴，腰里别着个喇叭。南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 30、初入江湖：化肥会挥发135. 1、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 3、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 4、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 5、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 6、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 7、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 8、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 9、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还10、我六叔六舅六十六斗六升好绿豆。 11、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 12、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 13、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 14、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 15、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 16、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮 1、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 5、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 6、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 7、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 8、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 9、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 10、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 11、长虫围着砖堆转，转完砖堆钻砖堆。 12、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 13、早招租，晚招租，总找周邹郑曾朱。 14、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 15、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 16、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 17、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。136. 1，半边莲，莲半边，半边莲长在山涧边。半边天路过山涧边，发现这片半边莲。半边天拿来一把镰，割了半筐半边莲。半筐半边莲，送给边防连。 2，杨家养了一只羊，蒋家修了一道墙。杨家的羊撞倒了蒋家的墙，蒋家的墙压死了杨家的羊。杨家要蒋家赔杨家的羊，蒋家要杨家赔蒋家的墙。 3，司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 4，王庄卖筐，匡庄卖网，王庄卖筐不卖网，匡庄卖网不卖筐，你要买筐别去匡庄去王庄，你要买网别去王庄去匡庄。 5，老翁卖酒老翁买，老翁买酒老翁卖。 6，冲冲栽了十畦葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 7，大帆船，小帆船，竖起桅杆撑起船。风吹帆，帆引船，帆船顺风转海湾。 8，圆圈圆，圈圆圈，圆圆娟娟画圆圈。娟娟画的圈连圈，圆圆画的圈套圈。娟娟圆圆比圆圈，看看谁的圆圈圆。 9，小涌勇敢学游泳，勇敢游泳是英雄。 10，八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 1，断头台倒吊短单刀，歹徒登台偷短刀，断头台塌盗跌倒，对对短刀叮当掉。 2，哥跨瓜筐过宽沟，快过宽沟观怪狗，光顾观狗瓜筐扣，瓜滚筐空哥怪狗。 3，无父母，不孤独，五叔督促苦读书，不读书，无出路，独宿竹屋哭不住。 4，四是四，十是十，十四是十四，四十是四十，谁要把十四说成四十就打谁十四，谁要把四十说成十四就打谁四十，十四四十四十四，私自试一试。 5，咬牛奶，喝面包，夹着火车上皮包。东西街，南北走，出门看见人咬狗。拿起狗来打砖头，又怕砖头咬我手。 6，三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;“小三山上大声喊，离天只有三尺三”。 7、蓝教练是女教练，吕教练是男教练，蓝教练不是男教练，吕教练不是女教练。蓝南是男篮主力，吕楠是女篮主力，吕教练在男篮训练蓝南，蓝教练在女篮训练吕楠。 8，拉拉会折喇叭，丫丫会吹喇叭。拉拉只会折喇叭，不会吹喇叭;丫丫只会吹喇叭，不会折喇叭。拉拉教丫丫折喇叭，丫丫教拉拉吹喇叭，两个乐得笑哈哈。 9，书费本费书本费(连说五遍)_班干部搬干包谷杆(连着念) 10，白石白又滑，搬来白石搭白塔。白石塔，白石搭，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 1，你会炖我的炖冻豆腐，来炖我的炖冻豆腐，你不会炖我的炖冻豆腐剧假充会炖我的炖冻豆腐，胡炖，乱炖，炖坏了我的炖冻豆腐啊! 2，铜勺舀热油，铁勺舀凉油。铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。一勺热油一勺凉油，热油凉油都是油。 3，我们那儿有六十六条胡同口，住着一位六十六岁的刘老六，他家里有六十六座好高楼，楼上有六十六篓桂花油，篓上蒙着六十六匹绿绉绸。绸上绣六十六个大绒球，楼下钉着六十六根儿檀木轴，轴上拴六十六条大青牛。牛旁蹲着六十六个大马猴。六十六岁的刘老六，坐在门口啃骨头。南边来了一条狗，这条狗，好眼熟，它好像大大妈家大大妈妈脑袋、大大妈妈眼睛、大大妈妈耳朵、大大妈妈尾巴、大大妈妈家鳌头狮子狗。北边又来一条狗，这条狗，嘿!又眼熟，它好像二大妈妈家、二大妈妈脑袋、二大妈妈眼睛、二大妈妈耳朵、二大妈妈尾巴、二大妈妈家鳌头狮子狗。两条狗打架抢骨头，打成仇。吓跑了六十六个大马猴，吓惊了六十六条大青牛，拉折了六十六根儿檀木轴，倒了六十六座好高楼，洒了六十六篓桂花油，油了六十六匹绿绉绸，脏了六十六个大绒球。南边来个气不休，手里拿着土坯头去砍着狗的头，也不知气不休的土坯头打了狗的头，也不知狗的头碰坏气不休的土坯头。北边来了个秃妞妞，手里拿着个油篓口去套狗的头。也不知秃妞妞的油篓口套了狗的头，也不知狗的头钻了秃妞妞的油篓口。狗啃油篓篓油漏，狗不啃油篓篓不漏油。 4，南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 5，打南边来个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子茄子，砸了瘸子碟子，瘸子毛腰拾茄子。北边来个醉老爷子，腰里掖着烟袋别子，过来要买瘸子茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知老爷子的烟袋别子打了瘸子茄子，也不知瘸子橛子打了老爷子烟袋别子。 6，高高山上一条藤，藤条头上挂铜铃，风动藤动铜铃动，风定藤停铜铃停。 7，老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农。 8，蒜拌面，面拌蒜，吃蒜拌面算蒜瓣;面拌蒜，蒜拌面，算吃蒜瓣面拌蒜。 9，抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 10，初级：大声说20遍(红凤凰)。中级：大声说20遍(粉红凤凰)137. 〔猫鼻子〕白猫黑鼻子，黑猫白鼻子；黑猫的白鼻子，碰破了白猫黑鼻子,白猫的黑鼻子破了,剥了秕谷壳儿补鼻子；黑猫的白鼻子不破,不剥秕谷壳儿补鼻子。〔瘸子〕北边来了一个瘸子,背着一捆橛子。南边来了一个瘸子,背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口；他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗；还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。138. 1、抬头看，满天星，低头看， 一道坑。坑里看，栽满葱， 葱上看，冻着冰。屋里看， 点着灯，墙上看，钉的钉。 钉上看，挂的弓，弓上看， 卧的鹰。寒冬天，刮大风， 刮散了，满天星。 2、天上七颗星，地上七块冰， 台上七盏灯，树上七只莺， 墙上七枚钉。吭唷吭唷拔脱七枚钉。 喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。 一阵风来吹来七盏灯。一片乌云遮掉七颗星。 3、墙上一根钉，钉上挂条绳， 绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。 滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯， 灯骂绳，瓶说绳，绳说钉， 丁丁当当，乒乓乓乓。 4、小牛放学去打球，踢倒老刘一瓶油， 小牛回家取来油，向老刘道歉又赔油老刘不要小牛还油小牛硬要把油还给老刘， 老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛还油。 5、白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 6、柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴； 来了侯老六，拉了六头牛；来了仇老六， 提了六篓油；来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六， 住上刘老六的六号楼，半夜里， 牛抵猴，猴斗牛，撞倒了仇老六的油， 油坏了尤老六的绸。牛老六帮仇老六收起油， 侯老六帮尤老六洗掉绸上油， 拴好牛，看好猴，一同上楼去喝酒。 7、山上住着三老子，山下住着三小子， 山腰住着三哥三嫂子。山下三小子， 找山腰三哥三嫂子，借三斗三升酸枣子， 山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子， 只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。 过年山下三小子打下酸枣子，还了山腰三哥三嫂子， 两个三斗三升酸枣子。量窗量床又量墙， 跳上床量窗，靠往墙量床，墙比张床长， 床又比窗长，窗长不过床，床又长不过墙， 所以墙比床比窗长。139. 1、一面小花鼓，鼓上画老虎。 妈妈用布来补。到底是布补鼓，还是布补虎。 2、路上跑来马，撞上路边瓦， 瓦打坏马，马踏碎瓦， 瓦要马赔瓦，马要瓦赔马。 3、多多和哥哥，坐下分果果。 哥哥让多多，多多让哥哥。 都说要小个，外婆乐呵呵。 4、兜里装豆，豆装满兜，兜破漏豆。 倒出豆，补破兜，补好兜， 又装豆，装满兜，不漏豆。 5、盘里放着一个梨，桌上放块橡皮泥。 小丽用泥学捏梨，眼看着梨手捏泥， 比比，真梨、假梨差不离。 6、嘴说腿，腿说嘴，嘴说腿爱跑腿， 腿说嘴爱卖嘴。光动嘴不动腿， 光动腿不动嘴，不如不长腿和嘴。 7、河边两只鹅，一同过了河； 白鹅去拾草，黑鹅来搭窝。 冬天北风刮，草窝真暖和， 住在草窝里，哦哦唱支歌。 8、胡图用笔画葫芦，葫芦画得真糊涂， 糊涂不能算葫芦，要画葫芦不糊涂， 胡图决心不糊涂，画出一只大葫芦。 9、牛郎恋刘娘，刘娘念牛郎， 牛郎年年恋刘娘，刘娘年年念牛郎， 郎恋娘来娘念郎，念娘恋娘念郎恋郎，念恋娘郎。 10、小艾和小戴，一起去买菜。 小艾把一斤菜给小戴，小戴有比小艾多一倍的菜； 小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 11、白猫黑鼻子，黑猫白鼻子； 黑猫的白鼻子，碰破了白猫黑鼻子白猫的黑鼻子破了剥了秕谷壳儿补鼻子； 黑猫的白鼻子不破不剥秕谷壳儿补鼻子。 12、这边一个人，挑了一挑瓶。 那边一个人，担了一挑盆。 瓶碰烂了盆，盆碰烂了瓶。 卖瓶买盆来赔盆，卖盆买瓶来赔瓶。 瓶不能赔盆，盆不能赔瓶。 13、天上有日头，地下有石头， 嘴里有舌头，瓶口有塞头。 天上是日头不是石头，地下是石头不是日头， 嘴里是舌头不是塞头，瓶中是塞头不是舌头。 14、天上一群大白鸽，河里一群大白鹅。 白鸽尖尖红嘴壳，白鹅曲项向天歌。 白鸽剪开云朵朵，白鹅拨开浪波波。 鸽乐呵呵，鹅活泼波，白鹅白鸽碧波蓝天真快乐。 15、张家有个小英子，王家有个小柱子。 张家的小英子，自己穿衣洗袜子， 天天扫地擦桌子，王家的小柱子， 捡到一只皮夹子，还给后院大婶子。 小英子，小柱子，他们都是好孩子。140. 1、张家有个小英子，王家有个小柱子。 张家的小英子，自己穿衣洗袜子， 天天扫地擦桌子，王家的小柱子， 捡到一只皮夹子，还给后院大婶子。 小英子，小柱子，他们都是好孩子。 2、抬头看，满天星，低头看，一道坑。 坑里看，栽满葱，葱上看，冻着冰。 屋里看，点着灯，墙上看，钉的钉。 钉上看，挂的弓，弓上看，卧的鹰。 寒冬天，刮大风，刮散了，满天星。 3、天上七颗星，地上七块冰， 台上七盏灯，树上七只莺， 墙上七枚钉。吭唷吭唷拔脱七枚钉。 喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。 一阵风来吹来七盏灯。一片乌云遮掉七颗星。 4、墙上一根钉，钉上挂条绳， 绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。 滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯， 灯骂绳，瓶说绳，绳说钉， 丁丁当当，乒乓乓乓。 5、小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油， 向老刘道歉又赔油老刘不要小牛还油小牛硬要把油还给老刘， 老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛还油。 6、白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 7、柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴； 来了侯老六，拉了六头牛；来了仇老六， 提了六篓油；来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六， 住上刘老六的六号楼，半夜里，牛抵猴， 猴斗牛，撞倒了仇老六的油， 油坏了尤老六的绸。牛老六帮仇老六收起油， 侯老六帮尤老六洗掉绸上油，拴好牛， 看好猴，一同上楼去喝酒。 8、山上住着三老子，山下住着三小子， 山腰住着三哥三嫂子。山下三小子， 找山腰三哥三嫂子，借三斗三升酸枣子， 山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子， 只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。 过年山下三小子打下酸枣子，还了山腰三哥三嫂子， 两个三斗三升酸枣子。量窗量床又量墙，跳上床量窗， 靠往墙量床，墙比张床长，床又比窗长， 窗长不过床，床又长不过墙，所以墙比床比窗长。141. 1、一面小花鼓，鼓上画老虎。 妈妈用布来补。到底是布补鼓，还是布补虎。 2、路上跑来马，撞上路边瓦，瓦打坏马， 马踏碎瓦，瓦要马赔瓦，马要瓦赔马。 3、多多和哥哥，坐下分果果。哥哥让多多， 多多让哥哥。都说要小个，外婆乐呵呵。 4、兜里装豆，豆装满兜，兜破漏豆。 倒出豆，补破兜，补好兜， 又装豆，装满兜，不漏豆。 5、盘里放着一个梨，桌上放块橡皮泥。 小丽用泥学捏梨，眼看着梨手捏泥， 比比，真梨、假梨差不离。 6、嘴说腿，腿说嘴，嘴说腿爱跑腿， 腿说嘴爱卖嘴。光动嘴不动腿， 光动腿不动嘴，不如不长腿和嘴。 7、河边两只鹅，一同过了河； 白鹅去拾草，黑鹅来搭窝。 冬天北风刮，草窝真暖和， 住在草窝里，哦哦唱支歌。 8、胡图用笔画葫芦，葫芦画得真糊涂， 糊涂不能算葫芦，要画葫芦不糊涂， 胡图决心不糊涂，画出一只大葫芦。 9、牛郎恋刘娘，刘娘念牛郎， 牛郎年年恋刘娘，刘娘年年念牛郎， 郎恋娘来娘念郎，念娘恋娘念郎恋郎，念恋娘郎。 10、小艾和小戴，一起去买菜。 小艾把一斤菜给小戴，小戴有比小艾多一倍的菜； 小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 11、白猫黑鼻子，黑猫白鼻子；黑猫的白鼻子， 碰破了白猫黑鼻子白猫的黑鼻子破了剥了秕谷壳儿补鼻子； 黑猫的白鼻子不破不剥秕谷壳儿补鼻子。 12、这边一个人，挑了一挑瓶。 那边一个人，担了一挑盆。瓶碰烂了盆， 盆碰烂了瓶。卖瓶买盆来赔盆， 卖盆买瓶来赔瓶。瓶不能赔盆，盆不能赔瓶。 13、天上有日头，地下有石头， 嘴里有舌头，瓶口有塞头。 天上是日头不是石头，地下是石头不是日头， 嘴里是舌头不是塞头，瓶中是塞头不是舌头。 14、天上一群大白鸽，河里一群大白鹅 。白鸽尖尖红嘴壳，白鹅曲项向天歌。 白鸽剪开云朵朵，白鹅拨开浪波波。 鸽乐呵呵，鹅活泼波，白鹅白鸽碧波蓝天真快乐。142. 谁也不服管 苏州玄妙观，东西两判官，东判官姓潘，西判官姓管， 管判官要管潘判官，潘判官要管管判官，闹得谁也不服管。 忽听门外人咬狗 忽听门外人咬狗，拿起门来开开手； 拾起狗来打砖头，又被砖头咬了手； 从来不说颠倒话，口袋驮着骡子走。 吃荸荠 荸荠荸荠有皱皮儿，皱皮上面藏着泥儿。 旧甘草皮上的泥儿，去甘草外面的皮儿。 荸荠没了皮儿和泥儿，干干净净吃荸荠儿。 严圆眼和杨眼圆 山前有个严圆眼，山后有个杨眼圆，二人山前山后来比眼； 不知严圆眼比杨眼圆的眼圆，还是杨眼圆比严圆眼的眼圆。143. 【导语】无忧考网为大家准备了特别难的绕口令，赶快练习起来吧，想要拥有好口才，绕口令当属首选，希望大家喜欢！ 字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 荷花姑娘爱科学，哥哥送她文具盒。 各科成绩前几名，大家一起来祝贺。 墙上一面鼓，鼓上画老虎。 老虎扯破了鼓，拿块布来补。 到底布补鼓，还是布补虎。 菲菲有只灰黑杯，辉辉有只黑灰杯， 菲菲喝水不用黑灰杯用灰黑杯，辉辉喝水不用灰黑杯用黑灰杯。 菲菲辉辉爱卫生，不乱用灰黑杯和黑灰杯。 银子进荷包，撩，撩，撩，撩起儿子捡柴烧，一天捡一担，二天捡一挑，又有卖，又有烧，又有银子进荷包。 一只极小极小酒盅，小小酒盅装小小酒瓶细花花雕酒， 小小酒瓶倒小小细花酒盅，小小花雕倒不满小酒盅，算算几个小小酒盅装几瓶小小酒瓶的细花小酒盅。 哥哥挎筐过宽沟，快过宽沟看怪狗。 光看怪狗瓜筐扣，瓜滚筐扣哥怪狗。 南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 蓝教练是女教练，吕教练是男教练，蓝教练不是男教练，吕教练不是女教练。 蓝南是男篮主力，吕楠是女篮主力，吕教练在男篮训练蓝南，蓝教练在女篮训练吕楠。 一座棚傍峭壁旁，峰边喷泻瀑布长，不怕暴雨瓢泼冰雹落， 不怕寒风扑面雪飘扬，并排分班翻山攀坡把宝找，聚宝盆里松柏飘香百宝藏， 背宝奔跑报矿炮劈火，篇篇捷报飞伴金凤凰。 盆里有个瓢，风吹瓢摆摇，不知是瓢碰盆，还是盆碰瓢。 出东门，过大桥，大桥前面一树枣，拿着竿子去打枣， 青的多，红的少，一个枣，两个枣，三个枣，四个枣， 五个枣，六个枣，七个枣，八个枣，九个枣，十个枣； 十个枣，九个枣，八个枣，七个枣，六个枣，五个枣， 四个枣，三个枣，两个枣，一个枣，这是一个绕口令，一口气说完才算好。 144. 猫鼻子【篇一】 白猫黑鼻子， 黑猫白鼻子； 黑猫的白鼻子， 碰破了白猫黑鼻子 白猫的黑鼻子破了 剥了秕谷壳儿补鼻子； 黑猫的白鼻子不破 不剥秕谷壳儿补鼻子。 倒吊鸟【篇二】 梁上两对倒吊鸟， 泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟， 惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊， 也惦着梁上的两对倒吊鸟。 兜装豆【篇三】 兜里装豆， 豆装满兜， 兜破漏豆。 倒出豆，补破兜， 补好兜，又装豆， 装满兜，不漏豆。?145. 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子,白猫的黑鼻子破了,剥了秕谷壳儿补鼻子;黑猫的白鼻子不破,不剥秕谷壳儿补鼻子。 北边来了一个瘸子,背着一捆橛子。南边来了一个瘸子,背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 荸荠有皮，皮上有泥。洗掉荸荠皮上的泥，削去荸荠外面的皮，小丽、小艺和小奇，欢欢喜喜吃荸荠。 吃桔子，剥桔子，桔皮丢在垃圾箱里。不吃桔子，不剥桔子，不把桔皮丢在垃圾箱里。 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 发废话会花话费，回发废话话费发，发废话花费话费会后悔，回发废话会费话费，花费话费回发废话会耗费话费。 河边两只鹅，一同过了河;白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 红红糊红粉灯笼，给军属送光荣灯;芬芬糊粉红灯笼，给军属送灯光荣;红红糊完红粉灯笼，糊粉红灯笼;芬芬糊完粉红灯笼，糊红粉灯笼。 老杜和老顾，齐走富裕路。老杜养了兔，老顾养了鹿。老顾给老杜十只兔，两家平等同只数;老顾给老杜十只鹿，顾家是杜家一半数。请问老杜养了多少兔，再问老顾养了多少鹿。给你一个简单的. 老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农。 梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 妈妈种麻，我去放马，马吃了麻，妈妈骂马。 南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 牛郎恋刘娘，刘娘恋牛郎，牛郎年年恋刘娘，刘娘年年恋牛郎，郎念娘来娘念郎，念娘恋娘，念郎恋郎，念恋娘郎。绕不死你算我白忙! 盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏泥，比比，真梨、假梨差不离。 七巷一个漆匠，西巷一个锡匠。七巷漆匠用了西巷锡匠的锡，西巷锡匠拿了七巷漆匠的漆，七巷漆匠气西巷锡匠用了漆，西巷锡匠讥七巷漆匠拿了锡。 墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 石室诗士施氏，嗜狮，誓食十狮。施氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视是十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏使侍拭石室。石室拭，氏始试食是十狮尸。食时，始识是十狮尸，实十石狮尸。试释是事。 树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿,谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。146. 1.d-t：大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子(《大兔子和大肚子》)。 2.n-l：门口有四辆四轮 大马车，你爱拉哪两辆来拉哪两辆(《四辆四轮 大马车》)。 3.h：华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花(《华华和红红》)。 4.jqx：七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。(《漆匠和锡匠》)。 5.g-k：哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗(《哥挎瓜筐过宽沟》)。 6.h-f：一堆粪，一堆灰，灰混粪，粪混灰(《一堆粪》)。 7.z-zh：隔(gé)着(zháo)窗户(chuānghù)撕(sī)字纸(zìzhǐ)，一(yī)次(cì)撕下(sīxià)横(héng)字纸(zìzhǐ)，一(yī)次(cì)撕下(sīxià)竖(shù)字纸(zìzhǐ)，是(shì)字纸(zìzhǐ)撕(sī)字纸(zìzhǐ)，不是(búshì)字纸(zìzhǐ)，不要(búyào)胡乱(húluàn)撕(sī)一(yī)地纸(《撕字纸》)。 8.s-sh：三山撑四水，四水绕三山，三山四水春常在，四水三山四时春(《三山撑四水》)。 9.zcs-jx司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻(《司机买雌鸡》)。 10.zhchsh：大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头(《大车拉小车》)。 11.r：夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山(《说日》)。 12.six thick thistle sticks. six thick thistles stick. 13.if two witches would watch two watches, which witch would watch which watch? 14.how many cookies could a good cook cook if a good cook could cook cookies? a good cook could cook as much cookies as a good cook who could cook cookies. 15.七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 16.你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 17.一班有个黄贺，二班有个王克，黄贺王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 18.小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 19.天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 20.三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 21.长虫围着砖堆转，转完砖堆钻砖堆。 22.师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 23.早招租，晚招租，总找周邹郑曾朱。 24.紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 25.字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。147. 绕口令(一) 打南边来了个哑巴，腰里别了个喇叭; 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭; 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭; 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸，哑巴嘀嘀哒哒吹喇叭 绕口令(二) 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。 扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。 长扁担，短扁担，长扁担比短扁担长半扁担; 短扁担比长扁担短半扁担。 长扁担捆在短板凳上，短扁担捆在长板凳上; 长板凳不能捆比短扁担长半扁担的长扁担， 短板凳也不能捆比长扁担短半扁担的短扁担。 绕口令(三) 爸爸抱宝宝，跑到布铺买布做长袍， 宝宝穿了长袍不会跑。 布长袍破了还要用布补， 再跑到布铺买布补长袍。 绕口令(四) 哥挎瓜筐过宽沟，赶快过沟看怪狗，光看怪狗瓜筐扣。瓜滚筐扣哥怪狗。 调到敌岛打特盗，特盗太刁投短刀。挡推顶打短刀掉，踏盗得刀盗*。 断头台倒吊短单刀，歹徒登台偷单刀，断头台塌盗跌倒，对对单刀叮当掉。 绕口令(五) 南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口; 他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。 不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗; 还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。148. 1、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 2、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 3、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 4、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 5、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 6、墙上一个洞，壁上一个缝，割块鸡皮补壁缝，不知是壁缝补鸡皮?还是鸡皮补壁缝? 7、你会炖我的冻豆腐，就来炖我的冻豆腐，你不会炖我的冻豆腐，别胡炖八炖我的冻豆腐。 8、南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。 9、房胡子，黄胡子，新年到了写福字;不知道房胡子的福字写得好?还是黄胡子的福字写得好? 10、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 11、山前有个严圆眼，山后有个圆眼严，两人上山来比眼，不知是严圆眼的眼圆?还是圆眼严的眼圆? 12、蒋家羊，杨家墙，蒋家羊撞倒了杨家墙，杨家墙压死了蒋家羊，杨家要蒋家赔墙，蒋家要杨家赔羊。 13、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 14、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 15、小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 16、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 17、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 18、石斯施史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思， 19、盆里有个瓢，风吹瓢摆摇，不知是瓢碰盆，还是盆碰瓢;家后有座庙，天天猫来尿，不知是庙尿猫，还是猫尿庙。 20、墙上一个瓶，墙下一个盆，瓶落下来打破了盆的底，盆翻转来打破了瓶的嘴，瓶要盆赔瓶的嘴，盆要瓶赔盆的底。 21、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 22、一个驼子骑匹骡子，碰到婆子，挑担茄子，驼子个骡子践到婆子个茄子，婆子拖驼子下骡子，要驼子赔婆子个茄子。 23、房子里有箱子，箱子里有匣子，匣子里有盒子，盒子里有镯子;镯子外有盒子，盒子外有匣子，匣子外有箱子，箱子外有房子。 24、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 25、牛郎恋刘娘，刘娘念牛郎，牛郎牛年恋刘娘，刘娘年年念牛郎，郎恋娘来娘恋郎，念娘恋娘念郎恋郎，念恋娘郎，绕不晕你算我白忙。 26、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦记泥里的两对鸟倒吊;可怜泥里的两对鸟倒吊，也惦记梁上的两对倒吊鸟。 27、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 28、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 29、天空飘着一片霞，水上游来一群鸭。霞是五彩霞，鸭是麻花鸭，麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 30、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 31、楼上一块破瓦，楼下一匹骡马，破瓦落下来打了骡马，骡马跳起来踩了破瓦。天上一颗星，地上一个人，星照人，人瞧星，星照不清人，人瞧不清星。 32、桥东有一家丁家，桥西也有一家丁家。有一天，桥东丁家说桥西丁家的冬瓜好，桥西丁家说桥东丁家的西瓜好，不知是桥东丁家的西瓜好?还是桥西丁家的东瓜好? 33、一个跛子，牵着驴子;一个驼子，拉着车子;一个瞎子，抱着孩子。跛子的驴子，撞着驼子的车子;驼子的车子，碰倒瞎子的孩子;瞎子要打驼子，驼子要打跛子。 34、石斯施史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石斯施史四老师。 35、一班有个黄贺，二班有个王克，黄贺王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 36、小牛放学去打球，踢倒老刘一瓶油，小回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛不油。 37、闲来没事我出城西，树木琳琅我数不齐，一二三四五六七，七六五四三二一，六五四，三二一，五四三二一，四三二一三二一，二一一，一个一，数了半天一棵树，一棵树上七个枝，七个枝。 38、四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四四十四十四。 39、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 40、东边大婆婆之家有一只白鼻头大白猫。西边二婆婆家也有一只白鼻头大白猫。一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打，也不晓得东边大婆婆家的白鼻头大白猫赢的呢?还是西边二婆婆家的白鼻头大白猫赢的? 41、石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。 42、龚先生东方走来肩了一棵松，翁先生西方走来拿了一只钟。龚先生的松撞破了翁先生的钟，翁先生扭住了龚先生的一棵松。龚先生要翁先生放了他的松，翁先生要龚先生赔了他的钟。龚先生不肯赔还翁先生的钟，翁先生不肯放还龚先生的松。 43、谭家谭老汉，挑担到蛋摊，买了半担蛋，挑担到炭摊，买了半担炭，满担是蛋炭。老汉忙回赶，回家炒蛋饭。进门跨门槛，脚下绊一绊，跌了谭老汉，破了半担蛋，翻了半担炭，脏了木门槛。老汉看一看，急得满头汗，连说怎幺办，蛋炭完了蛋，老汉怎吃蛋炒饭。 44、六合县有个六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，堆在六十六间楼，栽了六十六株垂杨柳，养了六十六头牛，扣在六十六株垂杨柳。遇了一阵狂风起，吹倒了六十六间楼，翻了六十六篓油，断了六十六株垂杨柳，打死了六十六头牛，急煞了六合县的六十六岁的陆老头。 45、他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 46、打南边来了个哑巴，腰里别了个喇叭;打北边来了个喇嘛，手里提了个獭犸。提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭;别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭;还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸，哑巴嘀嘀哒哒吹喇叭。 47、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 48、天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。连念七遍就聪明。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 49、从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 50、有一个姓布，手提一块布，叁步做二步，走到双叉路，当钱一千五。又到双叉路，为看做头路。担着一担醋，顶街下街来卖醋。卖呀卖，卖到蕃薯路，看着一只免，赶紧放落醋，去追兔，掠看兔，更找无布，气看竟落裤，用裤来包兔。这只兔真不识礼数，给我咬破裤，咬到烂糊糊，真可恶，出手要掠，慢半步。赶紧放落醋，去追兔，追前追后追归哺，追一下无突好，推倒醋，啊，裤又更咬到烂糊糊，醋泼落地，沉落土，兔仔走到内山路，真真气死彼个姓布。149. 1、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 2、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 3、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 4、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 5、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 6、墙上一个洞，壁上一个缝，割块鸡皮补壁缝，不知是壁缝补鸡皮?还是鸡皮补壁缝? 7、你会炖我的冻豆腐，就来炖我的冻豆腐，你不会炖我的冻豆腐，别胡炖八炖我的冻豆腐。 8、南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。 9、房胡子，黄胡子，新年到了写福字;不知道房胡子的福字写得好?还是黄胡子的福字写得好? 10、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 11、山前有个严圆眼，山后有个圆眼严，两人上山来比眼，不知是严圆眼的眼圆?还是圆眼严的眼圆? 12、蒋家羊，杨家墙，蒋家羊撞倒了杨家墙，杨家墙压死了蒋家羊，杨家要蒋家赔墙，蒋家要杨家赔羊。 13、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 14、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 15、小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 16、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 17、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 18、石斯施史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思， 19、盆里有个瓢，风吹瓢摆摇，不知是瓢碰盆，还是盆碰瓢;家后有座庙，天天猫来尿，不知是庙尿猫，还是猫尿庙。 20、墙上一个瓶，墙下一个盆，瓶落下来打破了盆的底，盆翻转来打破了瓶的嘴，瓶要盆赔瓶的嘴，盆要瓶赔盆的底。 21、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 22、一个驼子骑匹骡子，碰到婆子，挑担茄子，驼子个骡子践到婆子个茄子，婆子拖驼子下骡子，要驼子赔婆子个茄子。 23、房子里有箱子，箱子里有匣子，匣子里有盒子，盒子里有镯子;镯子外有盒子，盒子外有匣子，匣子外有箱子，箱子外有房子。 24、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 25、牛郎恋刘娘，刘娘念牛郎，牛郎牛年恋刘娘，刘娘年年念牛郎，郎恋娘来娘恋郎，念娘恋娘念郎恋郎，念恋娘郎，绕不晕你算我白忙。 26、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦记泥里的两对鸟倒吊;可怜泥里的两对鸟倒吊，也惦记梁上的两对倒吊鸟。 27、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 28、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 29、天空飘着一片霞，水上游来一群鸭。霞是五彩霞，鸭是麻花鸭，麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 30、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 31、楼上一块破瓦，楼下一匹骡马，破瓦落下来打了骡马，骡马跳起来踩了破瓦。天上一颗星，地上一个人，星照人，人瞧星，星照不清人，人瞧不清星。 32、桥东有一家丁家，桥西也有一家丁家。有一天，桥东丁家说桥西丁家的冬瓜好，桥西丁家说桥东丁家的西瓜好，不知是桥东丁家的西瓜好?还是桥西丁家的东瓜好? 33、一个跛子，牵着驴子;一个驼子，拉着车子;一个瞎子，抱着孩子。跛子的驴子，撞着驼子的车子;驼子的车子，碰倒瞎子的孩子;瞎子要打驼子，驼子要打跛子。 34、石斯施史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石斯施史四老师。 35、一班有个黄贺，二班有个王克，黄贺王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 36、小牛放学去打球，踢倒老刘一瓶油，小回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛不油。 37、闲来没事我出城西，树木琳琅我数不齐，一二三四五六七，七六五四三二一，六五四，三二一，五四三二一，四三二一三二一，二一一，一个一，数了半天一棵树，一棵树上七个枝，七个枝。 38、四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四四十四十四。 39、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 40、东边大婆婆之家有一只白鼻头大白猫。西边二婆婆家也有一只白鼻头大白猫。一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打，也不晓得东边大婆婆家的白鼻头大白猫赢的呢?还是西边二婆婆家的白鼻头大白猫赢的? 41、石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。 42、龚先生东方走来肩了一棵松，翁先生西方走来拿了一只钟。龚先生的松撞破了翁先生的钟，翁先生扭住了龚先生的一棵松。龚先生要翁先生放了他的松，翁先生要龚先生赔了他的钟。龚先生不肯赔还翁先生的钟，翁先生不肯放还龚先生的松。 43、谭家谭老汉，挑担到蛋摊，买了半担蛋，挑担到炭摊，买了半担炭，满担是蛋炭。老汉忙回赶，回家炒蛋饭。进门跨门槛，脚下绊一绊，跌了谭老汉，破了半担蛋，翻了半担炭，脏了木门槛。老汉看一看，急得满头汗，连说怎幺办，蛋炭完了蛋，老汉怎吃蛋炒饭。 44、六合县有个六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，堆在六十六间楼，栽了六十六株垂杨柳，养了六十六头牛，扣在六十六株垂杨柳。遇了一阵狂风起，吹倒了六十六间楼，翻了六十六篓油，断了六十六株垂杨柳，打死了六十六头牛，急煞了六合县的六十六岁的陆老头。 45、他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 46、打南边来了个哑巴，腰里别了个喇叭;打北边来了个喇嘛，手里提了个獭犸。提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭;别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭;还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸，哑巴嘀嘀哒哒吹喇叭。 47、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 48、天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。连念七遍就聪明。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 49、从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 50、有一个姓布，手提一块布，叁步做二步，走到双叉路，当钱一千五。又到双叉路，为看做头路。担着一担醋，顶街下街来卖醋。卖呀卖，卖到蕃薯路，看着一只免，赶紧放落醋，去追兔，掠看兔，更找无布，气看竟落裤，用裤来包兔。这只兔真不识礼数，给我咬破裤，咬到烂糊糊，真可恶，出手要掠，慢半步。赶紧放落醋，去追兔，追前追后追归哺，追一下无突好，推倒醋，啊，裤又更咬到烂糊糊，醋泼落地，沉落土，兔仔走到内山路，真真气死彼个姓布。 51、打南边来了个喇嘛，手里头提了五斤鳎目，从北边来了个哑巴腰里头别着个喇叭，这提了鳎目喇嘛，要拿鳎目换那别了喇叭的哑巴他的喇叭，别喇叭的哑巴不乐意拿喇叭，换那提了鳎目喇嘛他的鳎目，提鳎目喇嘛就急了，轮起了五斤鳎目打了别着喇叭的哑巴一鳎目，别喇叭的哑巴也急了，摘下喇叭打了提了鳎目喇嘛一喇叭，也不知提鳎目喇嘛，打了别着喇叭的哑巴一鳎目，还是那别着喇叭的哑巴，打了提了鳎目喇嘛一喇叭，喇嘛回家炖鳎目，哑巴站着嘀嘀嗒嗒吹喇叭。150. 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 8、喇嘛和哑巴： 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 9、六十六头牛： 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。 忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 10、老六放牛： 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。 牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。151. 1，半边莲，莲半边，半边莲长在山涧边。半边天路过山涧边，发现这片半边莲。半边天拿来一把镰，割了半筐半边莲。半筐半边莲，送给边防连。 2，杨家养了一只羊，蒋家修了一道墙。杨家的羊撞倒了蒋家的墙，蒋家的墙压死了杨家的羊。杨家要蒋家赔杨家的羊，蒋家要杨家赔蒋家的墙。 3，司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 4，王庄卖筐，匡庄卖网，王庄卖筐不卖网，匡庄卖网不卖筐，你要买筐别去匡庄去王庄，你要买网别去王庄去匡庄。 5，老翁卖酒老翁买，老翁买酒老翁卖。 6，冲冲栽了十畦葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 7，大帆船，小帆船，竖起桅杆撑起船。风吹帆，帆引船，帆船顺风转海湾。 8，圆圈圆，圈圆圈，圆圆娟娟画圆圈。娟娟画的圈连圈，圆圆画的圈套圈。娟娟圆圆比圆圈，看看谁的圆圈圆。 9，小涌勇敢学游泳，勇敢游泳是英雄。 10，八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 11，断头台倒吊短单刀，歹徒登台偷短刀，断头台塌盗跌倒，对对短刀叮当掉。 12，哥跨瓜筐过宽沟，快过宽沟观怪狗，光顾观狗瓜筐扣，瓜滚筐空哥怪狗。 13，无父母，不孤独，五叔督促苦读书，不读书，无出路，独宿竹屋哭不住。 14，四是四，十是十，十四是十四，四十是四十，谁要把十四说成四十就打谁十四，谁要把四十说成十四就打谁四十，十四四十四十四，私自试一试。 15，咬牛奶，喝面包，夹着火车上皮包。东西街，南北走，出门看见人咬狗。拿起狗来打砖头，又怕砖头咬我手。 16，三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;“小三山上大声喊，离天只有三尺三”。 17、蓝教练是女教练，吕教练是男教练，蓝教练不是男教练，吕教练不是女教练。蓝南是男篮主力，吕楠是女篮主力，吕教练在男篮训练蓝南，蓝教练在女篮训练吕楠。 18，拉拉会折喇叭，丫丫会吹喇叭。拉拉只会折喇叭，不会吹喇叭;丫丫只会吹喇叭，不会折喇叭。拉拉教丫丫折喇叭，丫丫教拉拉吹喇叭，两个乐得笑哈哈。 19，书费本费书本费(连说五遍)_班干部搬干包谷杆(连着念) 20，白石白又滑，搬来白石搭白塔。白石塔，白石搭，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 21，你会炖我的炖冻豆腐，来炖我的炖冻豆腐，你不会炖我的炖冻豆腐剧假充会炖我的炖冻豆腐，胡炖，乱炖，炖坏了我的炖冻豆腐啊! 22，铜勺舀热油，铁勺舀凉油。铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。一勺热油一勺凉油，热油凉油都是油。 23，我们那儿有六十六条胡同口，住着一位六十六岁的刘老六，他家里有六十六座好高楼，楼上有六十六篓桂花油，篓上蒙着六十六匹绿绉绸。绸上绣六十六个大绒球，楼下钉着六十六根儿檀木轴，轴上拴六十六条大青牛。牛旁蹲着六十六个大马猴。六十六岁的刘老六，坐在门口啃骨头。南边来了一条狗，这条狗，好眼熟，它好像大大妈家大大妈妈脑袋、大大妈妈眼睛、大大妈妈耳朵、大大妈妈尾巴、大大妈妈家鳌头狮子狗。北边又来一条狗，这条狗，嘿!又眼熟，它好像二大妈妈家、二大妈妈脑袋、二大妈妈眼睛、二大妈妈耳朵、二大妈妈尾巴、二大妈妈家鳌头狮子狗。两条狗打架抢骨头，打成仇。吓跑了六十六个大马猴，吓惊了六十六条大青牛，拉折了六十六根儿檀木轴，倒了六十六座好高楼，洒了六十六篓桂花油，油了六十六匹绿绉绸，脏了六十六个大绒球。南边来个气不休，手里拿着土坯头去砍着狗的头，也不知气不休的土坯头打了狗的头，也不知狗的头碰坏气不休的土坯头。北边来了个秃妞妞，手里拿着个油篓口去套狗的头。也不知秃妞妞的油篓口套了狗的头，也不知狗的头钻了秃妞妞的油篓口。狗啃油篓篓油漏，狗不啃油篓篓不漏油。 24，南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 25，打南边来个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子茄子，砸了瘸子碟子，瘸子毛腰拾茄子。北边来个醉老爷子，腰里掖着烟袋别子，过来要买瘸子茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知老爷子的烟袋别子打了瘸子茄子，也不知瘸子橛子打了老爷子烟袋别子。 26，高高山上一条藤，藤条头上挂铜铃，风动藤动铜铃动，风定藤停铜铃停。 27，老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农。 28，蒜拌面，面拌蒜，吃蒜拌面算蒜瓣;面拌蒜，蒜拌面，算吃蒜瓣面拌蒜。 29，抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。 屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 30，初级：大声说20遍(红凤凰)。中级：大声说20遍(粉红凤凰)152. 最难绕口令：瘸子和茄子 打南边来个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。 没留神那橛子绊倒了瘸子，弄撒了瘸子茄子，砸了瘸子碟子，瘸子毛腰拾茄子。 北边来个醉老爷子，腰里掖着烟袋别子，过来要买瘸子茄子，瘸子不卖给醉老爷子茄子， 老爷子一生气抢了瘸子茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子， 老爷子一生气，不给瘸子茄子，拿起烟袋别子， 也不知老爷子的烟袋别子打了瘸子茄子，也不知瘸子橛子打了老爷子烟袋别子。 什么上山吱扭扭?什么下山乱点头?什么有头无有尾?什么有尾无有头? 最难绕口令：采油和漏渍 大海底下有石油，打井采汩石油流， 输油管道流石油，采油运油别漏油， 漏了石油污染海，鱼虾海鸟不停留。 绕口令：班长管班干部 班长管班干部(重复五遍) 最难绕口令：刘小牛与柳小妞 刘村有个刘小牛， 柳村有个柳小妞。 刘小牛去放牛， 柳小妞种石榴。 刘小牛让柳小妞骑牛牛， 柳小妞让刘小牛吃石榴。 最难绕口令： 老龙恼怒闹老农， 老农恼怒闹老龙。 农怒龙恼农更怒， 龙恼农怒龙怕农 。 最难绕口令： 牛郎恋刘娘 刘娘恋牛郎 牛郎年年念刘娘 刘娘年年恋牛郎 郎念娘来娘恋郎 最难绕口令： 七巷一个漆匠，西巷一个锡匠。 七巷漆匠用了西巷锡匠的锡， 西巷锡匠拿了七巷漆匠的漆， 七巷漆匠气西巷锡匠用了漆， 西巷锡匠讥七巷漆匠拿了锡。 最难绕口令： 初级 大声说20便(红凤凰) 中级 大声说20便 (粉红凤凰) 高级 大声说10便(红凤凰.黄凤凰.粉红凤凰花凤凰) 最难绕口令： 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰153. 一、小牛赔油： 小牛放学去打球， 踢倒老刘一瓶油， 小牛回家取来油， 向老刘道歉又赔油 老刘不要小牛还油 小牛硬要把油还给老刘， 老刘夸小牛， 小牛直摇头， 你猜老刘让小牛还油， 还是不让小牛还油。 二、牛郎恋刘娘 牛郎恋刘娘， 刘娘念牛郎， 牛郎年年恋刘娘， 刘娘年年念牛郎， 郎恋娘来娘念郎， 念娘恋娘念郎恋郎， 念恋娘郎。堪称最难绕口令 三、黑化肥绕口令 1、初入江湖：化肥会挥发 2小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰 8、喇嘛和哑巴： 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 9、六十六头牛： 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。 忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 10、老六放牛： 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。 牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 11、天上七颗星： 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。 吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 12、连念七遍就聪明： 天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。 呼噜呼噜扇灭七盏灯，噯唷噯唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 13、司小四和史小世： 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 14、酸枣子： 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子， 山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子， 只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。 过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 15、墙上一根钉： 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 16、板凳与扁担： 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担在绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。 17、白老八： 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 18、鹅和鸽： 天上一群大白鸽，河里一群大白鹅。 白鸽尖尖红嘴壳，白鹅曲项向天歌。 白鸽剪开云朵朵，白鹅拨开浪波波。 鸽乐呵呵，鹅活泼波， 白鹅白鸽碧波蓝天真快乐。 19、水连天： 天连水，水连天， 水天一色望无边， 蓝蓝的天似绿水， 绿绿的水如蓝天。 到底是天连水， 还是水连天? 20、买菜： 小艾和小戴，一起去买菜。 小艾把一斤菜给小戴， 小戴有比小艾多一倍的菜; 小戴把一斤菜给小艾， 小艾、小戴就有一般多的菜。 21、猫鼻子： 白猫黑鼻子， 黑猫白鼻子; 黑猫的白鼻子， 碰破了白猫黑鼻子 白猫的黑鼻子破了 剥了秕谷壳儿补鼻子; 黑猫的白鼻子不破 不剥秕谷壳儿补鼻子。 22、倒吊鸟： 梁上两对倒吊鸟， 泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟， 惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊， 也惦着梁上的两对倒吊鸟。154. 1、说你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别胡炖乱炖假充会炖看炖坏了我的炖冻豆腐。 2、说扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 3、出南门，面正南，有一个面铺面冲南，面铺门口挂着一个蓝布棉门帘，摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧面铺还是面冲南。 4、我家有个肥净白净八斤鸡，飞到张家后院里，张家后院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡，卖了他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。 5、这个绕口令儿最难唱，咱们唱的是山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 6、山前住着个崔粗腿，山后边住着个崔腿粗，俩人山前来比腿，也不知崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的粗腿。山前住着个严圆眼，山后边住着个严眼圆，俩人山前来比眼，也不知严圆眼比严眼圆的眼圆，还是严眼圆比严圆眼的圆眼。 7、闲来没事出城西，树木朗林数不齐，一二三四五六七，七六五四三二一，六城四，三二一，五四三二一，四三二一三二一，二一一，一个一，数了半天一棵树，一棵树长了七个枝，七个枝结了七样果，结的是槟子、橙子、桔子、柿子、李子、栗子、梨，槟子橙子桔子柿子李子栗子梨! 8、顺南边来了个喇嘛，手里提了五斤塌目，顺北边来了个哑巴，腰里别着个喇叭，提了塌目的喇嘛要拿五斤塌目去换北边哑巴腰里别着的喇叭，别着的喇叭的哑巴不愿意拿喇叭去换提了塌目喇嘛他的塌目，提了塌目的喇嘛就急了，拿起了五斤塌目打了别着的喇叭哑巴一塌目，别着的喇叭的哑巴也急了，顺腰里摘下喇叭，打了提了塌目喇嘛一喇叭，也不知道喇嘛的塌目打了别着的喇叭的哑巴一塌目，还是别着的喇叭的哑巴打了提了塌目的喇嘛一喇叭，喇嘛回家炖塌目，哑巴回家吹喇叭。 9、一道黑，两道黑，三四五六七道黑，八九道黑十道黑，我买个烟袋乌木杆儿，抓住两头一道黑，二姑娘描眉去打鬓，照着个镜子两道黑，粉皮墙写川字儿，横瞧竖瞧三道黑，象牙的桌子乌木的腿儿，放在炕上四道黑，买个小鸡不下蛋，圈在笼里捂到黑，挺好的骡子不吃草，拉到街上遛到黑，买个小驴不驮磨，配上鞍韂骑到黑，姐俩南洼去割麦，丢了镰刀拔到黑，月窠儿的孩子得了疯病，点起个艾条灸到黑，卖瓜子的打瞌睡，呼啦啦拉撒了那么一大堆，他的笤帚簸箕不凑手，这么一个一个拾到黑。 10、南边来个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子，没留神那橛子绊倒了瘸子，撒了瘸子茄子，砸了瘸子碟子，瘸子爬起来要捡茄子，北边来个醉老爷子，腰里掖着烟袋别子，过来要买瘸子茄子，瘸子不乐意卖给醉老爷子茄子，老爷子一生气抢了瘸子茄子，瘸子拔起橛子，追老爷子，快给瘸子茄子，不给瘸子茄子，招呼手里橛子，毛腰捡茄子拾碟子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，就打瘸子，瘸子拿起橛子砍老爷子，也不知老爷子的烟袋别子打了瘸子茄子，也不知瘸子橛子打了老爷子烟袋别子。 11、正月里，正月正，姐妹二人去逛灯，大姑娘名叫粉红女，二姑娘名叫女粉红，粉红女身穿一件粉红袄，女粉红身穿一件袄粉红，粉红女怀抱一瓶粉红酒，女粉红怀抱一瓶酒粉红，姐俩找了个无人处，推杯换盏饮刘伶，女粉红喝了粉红女的粉红酒，粉红女喝了女粉红的酒粉红，粉红女喝了一个酩酊醉，女粉红喝了一个醉酩酊，女粉红揪着粉红女就打，粉红女揪着女粉红就拧，女粉红撕了粉红女的粉红袄，粉红女就撕了女粉红的袄粉红，姐妹打罢落下手，自己买线自己缝，粉红女买了一条粉红线，女粉红买了一条线粉红，粉红女是反缝缝缝粉红袄，女粉红是缝反缝缝袄粉红。 12、数九寒天冷风嗖，转年春打六九头，正月十五是龙灯会，有一对狮子滚绣球，三月三王母娘娘蟠桃会，大闹天宫孙猴儿又把那个仙桃偷，五月端午是端阳日，白蛇许仙不到头，七月初七传说本是一个天河配，牛郎织女泪交流，八月十五云遮月，月里的嫦娥犯忧愁，要说愁，净说愁，唱上一段绕口令儿名字就叫十八愁，狼也愁，虎是愁，象也愁，鹿也愁，骡子也愁马也愁，猪也愁，狗是愁，牛也愁，羊也愁，鸭子也愁鹅也愁，蛤蟆愁，螃蟹愁，蛤蜊愁，乌龟愁，鱼愁虾愁不一样，您听我个个说根由，虎愁不敢把这高山下，狼愁野心耍滑头，象愁脸憨皮又厚，鹿愁长了一对七叉八叉大犄角，马愁鞴鞍行千里，骡子愁它是一世休，羊愁从小它把胡子长，牛愁愁的犯牛轴，狗愁改不了那净吃屎，猪愁离不开那臭水沟，鸭子愁扁了它的嘴，鹅愁脑瓜门儿上长了一个奔了头，蛤蟆愁长了一身脓疱疥，螃蟹愁的净横搂，蛤蜊愁闭关自守，乌龟愁的胆小尽缩头，鱼愁离水不能游，虾愁空枪乱扎没准头。 13、闲暇云游四大部洲，人的心好比是长江水似流，君子人相交是淡淡如水，小人交友蜜里调油，淡淡如水长来往，蜜里调油不到头，交朋友总学桃园三结义，莫学那孙膑庞涓结下冤仇，唱的是，天也愁地也愁，山也愁这个水也是愁，君也愁臣也愁，爹也愁这个娘也是愁，老的也是愁，少的也是愁，恶也愁善也愁，穷也愁这个富也愁，鸭子也愁鹅也愁，这个牛愁马愁一十八也愁，天愁不下那甘露雨，地愁五谷不丰收，山愁本是条了谷子坎，这个水愁本是流不到头，君愁愁的刀兵动，臣愁愁的把官丢，老愁愁的本是没有人管，少愁愁的本是白了他的头，恶愁愁的本是恶贯满，善愁愁的本是修不到头，穷愁愁的本是没有钱使，富愁愁的贼人把他偷，鸭子愁的扁了他的嘴，这个鹅也愁愁来愁去脑瓜门愁出一个奔了头，马愁备鞍行千里，这个牛愁愁的冷风嗖，嗖来嗖去把牛嗖老，送到汤锅里面宰老牛，牛皮蒙鼓千钉钉，送在城里头钟鼓楼，牛肉推在长街上卖，肝肚肠子作个饶头，牛骨头就把麻将牌来做，零零碎碎把色子扣，二对着五这个三了对着四，幺了对着六这个幺不幺六不六，咒骂色子邪骨头，说我诹我就诹，听我没事我捋捋舌头。 14、什么上山吱扭扭，什么下山乱点头，什么有头无有尾，什么有尾无有头，什么有腿家中坐，什么没腿游卞州，赵州桥什么人修，玉石栏杆什么人留，什么人骑驴桥上走，什么人推车轧道沟，什么人扛刀桥上站，什么人勒马看春秋，什么人拉着什么人是哈哈笑，什么人拉着什么人是泪交流，什么人白，什么人黑，什么人胡子一大堆，什么圆圆在天边，什么圆圆在眼前，什么圆圆长街卖，什么圆圆道两边，什么开花节节高，什么开花毛着腰，什么开花无人见，什么开花一嘴毛，什么鸟穿青又穿白，什么鸟穿出皂靴来，什么鸟身披十样锦，什么鸟身披麻布口袋?双扇门，单扇开，我自己破闷儿自己猜。车子上山吱扭扭，瘸子下山乱点头，蛤蟆有头无有尾，蝎子有尾无有头，有腿儿的板登家中坐，没腿儿的粮船游卞州，赵州桥，鲁班修，玉石栏杆圣人留，张果老骑驴桥上走，柴王爷推车轧了一道沟，周仓扛刀桥上站，关公勒马看春秋，小刘海拉着孟姜女是哈哈笑，孟姜女拉着小刘海是泪交流，罗成白，敬德黑，张飞的胡子一大堆，月亮圆圆在天边，眼镜圆圆在眼前，烧饼圆圆长街卖，车轱辘圆圆道两边，芝麻开花节节高，米树开花毛着腰，藤子开花无人见，玉米开花一嘴毛，喜鹊穿青又穿白，乌鸦穿出皂靴来，野鸡身披十样锦，鹗丽儿身披麻布口袋。 15、说我诌我不诌，闲来没事我溜溜舌头，这个绕口令儿最难唱，咱们唱的是前门楼子九丈九，四门三桥五牌楼，出了便门往东走，离城四十到通州，通州倒有个六十六条胡同口，在里边住着一位六十六岁的刘老六，六十六岁刘老头，六十六岁六老刘，老哥仨盖了那六十六座好高楼，楼上有六十六篓桂花油，篓上蒙着六十六匹鹅缎绸，绸上绣着六十六个狮子滚绣球，在楼外头栽了那六十六根儿柏木轴，轴上拴着六十六头大青牛，在牛上边着六十六个大马猴，刘老六，六老刘，刘老头，这么老哥仨倒坐在门口啃骨头，南边来了一条狗好眼熟，好像那大大妈家大大妈的眉子大大眼睛大大鼻子大大耳朵大大口大大鳌头狮子狗，北边又来一条狗好眼熟，好像那二大妈家二大大眉子二大眼睛二大鼻子二大耳朵二大口二大鳌头狮子狗，这两条狗抢骨头，顺南头跑到北头，碰倒了六十六座好高楼，碰洒了六十六篓桂花油，油了六十六匹鹅缎绸，脏了六十六个狮子滚绣球，在楼外头*了六十六根儿柏木轴，打惊了六十六头大青牛，打跑了六十六个大马猴，刘老六，六老刘，刘老头，这么老哥仨打死了狗，又盖起来六十六座好高楼，收起来六十六篓桂花油，洗干净六十六匹鹅缎绸，洗净了六十六个狮子滚绣球，在楼外头栽起来六十六根儿柏木轴，牵回来六十六头大青牛，逮回来六十六个大马猴，刘老六，六老刘，刘老头，这么老哥仨又看见南边来个气不休，手里拿着土坯头去打着狗的头，也不知气不休的土坯头打了狗的头，还是狗的头碰坏气不休的土坯头，打北边来了个秃妞妞，手里拿着个油篓口去套狗的头，也不知秃妞妞的油篓口套了狗的头，还是狗的头钻了秃妞妞的油篓口，狗啃油篓篓油漏，狗不啃油篓篓不漏油。155. （一） 打南边来了个哑巴，腰里别了个喇叭； 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸，哑巴嘀嘀哒哒吹喇叭 （二） 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。 扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。 长扁担，短扁担，长扁担比短扁担长半扁担； 短扁担比长扁担短半扁担。 长扁担捆在短板凳上，短扁担捆在长板凳上； 长板凳不能捆比短扁担长半扁担的长扁担， 短板凳也不能捆比长扁担短半扁担的短扁担。 （三） 爸爸抱宝宝，跑到布铺买布做长袍， 宝宝穿了长袍不会跑。 布长袍破了还要用布补， 再跑到布铺买布补长袍。 （四） 哥挎瓜筐过宽沟，赶快过沟看怪狗，光看怪狗瓜筐扣。瓜滚筐扣哥怪狗。 调到敌岛打特盗，特盗太刁投短刀。挡推顶打短刀掉，踏盗得刀盗*。 断头台倒吊短单刀，歹徒登台偷单刀，断头台塌盗跌倒，对对单刀叮当掉。 （五） 南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。(.) 他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。 不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗； 还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。156. 第一篇： 初级 大声说20遍(红凤凰) 中级 大声说20遍 (粉红凤凰) 高级 大声说10遍(红凤凰.黄凤凰.粉红凤凰花凤凰) 第二篇： 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 第三篇：牛郎恋刘娘 刘娘恋牛郎 牛郎年年念刘娘 刘娘年年恋牛郎 郎念娘来娘恋郎157. 最难绕口令红凤凰一 粉红墙上画凤凰， 凤凰画在粉红墙。 红凤凰、粉凤凰， 红粉凤凰、花凤凰。 最难绕口令红凤凰二 红凤凰粉凤凰， 红粉凤凰粉红凤凰。 红凤凰粉凤凰， 红粉凤凰粉红凤凰! 最难绕口令红凤凰三 小王和小黄，一块画凤凰。 小王画黄凤凰，小黄画红凤凰。 红凤凰黄凤凰，只只画成活凤凰， 望着小王和小黄。 最难绕口令红凤凰四 粉红墙上画凤凰， 先画一个红凤凰， 再画一个黄凤凰， 黄凤凰上面画上红， 红凤凰上面画上黄， 红凤凰成了红黄凤凰， 黄凤凰成了黄红凤凰， 粉红墙上分不清， 哪个是红凤凰， 哪个是黄凤凰? 最难绕口令红凤凰五 红凤凰， 绿凤凰， 粉红凤凰黄凤凰。 凤凰飞，飞凤凰， 凤凰山里出凤凰。 最难绕口令红凤凰六 凤凰山上凤花香， 凤凰台上落凤凰。 红凤凰，蓝凤凰， 粉红凤凰黄凤凰。 凤凰落在凤凰台， 凤凰山上凤花香。 最难绕口令红凤凰七 春天里，杏花黄， 奶奶给我剪凤凰。 我和妹妹手挽手， 一起来把歌儿唱： 一进门，粉白墙， 刚刚芳芳贴凤凰， 红凤凰，蓝凤凰， 粉红凤凰黄凤凰。 最难绕口令红凤凰八 凤凰姊，绣凤凰， 绣个金凤凰放金光， 绣个银凤凰放银光， 绣个粉红凤凰放粉红光， 绣个红凤凰放红光， 绣个黄凤凰放黄光， 凤凰姊，绣凤凰， 绣的凤凰会放光。158. 播音主持最难绕口令 1、八百标兵奔北坡，北坡炮兵并排跑， 炮兵怕把标兵碰，标兵怕碰炮兵炮。(双唇) 2、巴老爷有八十八棵芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。(锻炼唇力) 3、门口吊刀，刀倒吊着。„„(反复说，锻炼舌的顶力) 4、山前有个催粗腿，山后有个催腿粗， 俩人山前来比腿，不知是催粗腿比催腿粗的腿粗， c 和ch 还是催腿粗比催腿粗的腿粗。 5、粉红墙上画凤凰，凤凰画在粉红墙。 红凤凰、粉凤凰，红粉凤凰花凤凰。 f和h 主持人播音员专业八级绕口令考试试卷 第一题： 老龙恼怒闹老农， 老农恼怒闹老龙。 农怒龙恼农更怒， 龙恼农怒龙怕农。 第二题： 牛郎恋刘娘 刘娘念牛郎 牛郎年年念刘娘 刘娘牛年恋牛郎 郎念娘来娘恋娘 1)丝瓜藤 丝瓜藤上绕满绳， 瓜藤绕着绳架伸。 绳长藤伸瓜儿长， 绳粗藤壮瓜儿沉。 2)风吹银铃叮铃铃 小琳琳，爱银铃， 琳琳用劲摇银铃， 银铃的铃声真好听。 风吹银铃叮铃铃， 小琳以为铃失灵， 银铃笑琳琳真是不机灵! 第三题： 七巷一个漆匠，西巷一个锡匠。 七巷漆匠用了西巷锡匠的锡， 西巷锡匠拿了七巷漆匠的漆， 七巷漆匠气西巷锡匠用了漆， 西巷锡匠讥七巷漆匠拿了锡。 第四题： 初级 大声说20遍(红凤凰) 中级 大声说20遍(粉红凤凰) 高级 大声说10遍(红凤凰.黄凤凰.粉红凤凰花凤凰) (1)蓝教练是女教练，吕教练是男教练 蓝教练不是男教练，吕教练不是男教练 蓝南是男篮主力，吕楠是女篮主力。吕教练在男篮训练蓝南，蓝教练在女篮训练吕楠。 (2)盈林爱银铃 小盈林，爱银铃， 盈林用劲摇银铃， 银铃声音真动听。 风吹银铃叮铃铃， 盈林心中喜盈盈， 笑声尽情赛银玲。 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 绕口令 单韵母练习 1、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅，不知是鹅过河，还是河渡鹅? 2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 鼻韵母练习 1、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长，扁担想绑在板凳上，板凳不让扁担绑在板凳上，扁担偏偏绑在板凳上，到底是板凳宽还是扁担长。 2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 复韵母练习 2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 唇音练习 1、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 舌尖中音练习 1、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 舌根音、舌面音练习 3、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。159. 1.d-t：大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子(《大兔子和大肚子》)。 2.n-l：门口有四辆四轮大马车，你爱拉哪两辆来拉哪两辆(《四辆四轮大马车》)。 3.h：华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花(《华华和红红》)。 4.jqx：七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。(《漆匠和锡匠》)。 5.g-k：哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗(《哥挎瓜筐过宽沟》)。 6.h-f：一堆粪，一堆灰，灰混粪，粪混灰(《一堆粪》)。 7.z-zh：隔(gé)着(zháo)窗户(chuānghù)撕(sī)字纸(zìzhǐ)，一(yī)次(cì)撕下(sīxià)横(héng)字纸(zìzhǐ)，一(yī)次(cì)撕下(sīxià)竖(shù)字纸(zìzhǐ)，是(shì)字纸(zìzhǐ)撕(sī)字纸(zìzhǐ)，不是(búshì)字纸(zìzhǐ)，不要(búyào)胡乱(húluàn)撕(sī)一(yī)地纸(《撕字纸》)。 8.s-sh：三山撑四水，四水绕三山，三山四水春常在，四水三山四时春(《三山撑四水》)。 9.zcs-jx司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻(《司机买雌鸡》)。 10.zhchsh：大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头(《大车拉小车》)。 11.r：夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山(《说日》)。 12.six thick thistle sticks. six thick thistles stick. 13.if two witches would watch two watches, which witch would watch which watch? 14.how many cookies could a good cook cook if a good cook could cook cookies? a good cook could cook as much cookies as a good cook who could cook cookies. 15.七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 16.你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 17.一班有个黄贺，二班有个王克，黄贺王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 18.小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 19.天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 20.三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 21.长虫围着砖堆转，转完砖堆钻砖堆。 22.师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 23.早招租，晚招租，总找周邹郑曾朱。 24.紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 25.字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。160. 【导语】绕口令的精妙，在于它字词间相近的读音，总让人混淆读错。而加入数字的绕口令，则显得更加生动活泼。以下是无忧考网为大家准备的，希望对大家有帮助。 1、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。(双唇) 2、巴老爷有八十八棵芭蕉树，来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。(锻炼唇力) 3、门口吊刀，刀倒吊着。„„(反复说，锻炼舌的顶力) 4、山前有个催粗腿，山后有个催腿粗，俩人山前来比腿，不知是催粗腿比催腿粗的腿粗，c和ch还是催腿粗比催腿粗的腿粗。 5、粉红墙上画凤凰，凤凰画在粉红墙。红凤凰、粉凤凰，红粉凤凰花凤凰。f和h 主持人播音员专业八级绕口令考试试卷 第一题：老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农。 第二题：牛郎恋刘娘刘娘念牛郎牛郎年年念刘娘刘娘牛年恋牛郎郎念娘来娘恋娘1)丝瓜藤丝瓜藤上绕满绳，瓜藤绕着绳架伸。绳长藤伸瓜儿长，绳粗藤壮瓜儿沉。2)风吹银铃叮铃铃小琳琳，爱银铃，琳琳用劲摇银铃，银铃的铃声真好听。风吹银铃叮铃铃，小琳以为铃失灵，银铃笑琳琳真是不机灵! 第三题：七巷一个漆匠，西巷一个锡匠。七巷漆匠用了西巷锡匠的锡，西巷锡匠拿了七巷漆匠的漆，七巷漆匠气西巷锡匠用了漆，西巷锡匠讥七巷漆匠拿了锡。 第四题： 初级大声说20遍(红凤凰)中级大声说20遍(粉红凤凰) 高级大声说10遍(红凤凰.黄凤凰.粉红凤凰花凤凰) (1)蓝教练是女教练，吕教练是男教练蓝教练不是男教练，吕教练不是男教练蓝南是男篮主力，吕楠是女篮主力。吕教练在男篮训练蓝南，蓝教练在女篮训练吕楠。(2)盈林爱银铃小盈林，爱银铃，盈林用劲摇银铃，银铃声音真动听。风吹银铃叮铃铃，盈林心中喜盈盈，笑声尽情赛银玲。 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰161. 想学播音主持，或者想练习口才，一定要练习绕口令，无忧考网为大家准备的播音主持必练的骨灰级绕口令,快来看看吧。 1.打南边来了个哑巴，腰里别了个喇叭; 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭; 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭; 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸; 哑巴嘀嘀哒哒吹喇叭 2.坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 3.山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 4.山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 5.化肥会挥发黑化肥发灰，灰化肥发黑黑化肥发灰会挥发;灰化肥挥发会发黑黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。 6.你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 7.老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 8.有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 9.大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 10.石室诗士施史，嗜狮，誓食十狮，氏时时适市，氏视十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮尸，食时，始识十狮尸实是十石狮尸，试释是事实(《施氏食狮史》)。 11.张康当董事长，詹丹当厂长，张康帮助詹丹，詹丹帮助张康(《张康和詹丹》)。eng—en：陈庄程庄都有城，陈庄城通程庄城。陈庄城和程庄城，两庄城墙都有门。陈庄城进程庄人，陈庄人进程庄城。请问陈程两庄城，两庄城门都进人，那个城进陈庄人，程庄人进那个城?162. 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上,板凳偏不让扁担绑在板凳上。扁担偏要板凳让扁担绑在板凳上。 南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗；还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 打南边来了个哑巴，腰里别了个喇叭； 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸； 哑巴嘀嘀哒哒吹喇叭 化肥 黑化肥发灰,灰化肥发黑。黑化肥发黑不发灰,灰化肥发灰不发黑。 司小四和史小世 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 石小四和史肖石 石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 南南有个篮 南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。163. 方法/步骤 ①轻快型——语调多扬抑，语音多轻少重，语句多连少停，语流轻快活泼。如孙犁的《荷花淀》中水生与媳妇们嬉戏的一段，就属于这种类型。 ②凝重型——语调多抑少扬，语音多重少轻，语句多停少连，语流平稳凝重。如朱自清的散文《背影》就属于这种类型。 ③低沉型——语调压抑，语音沉痛，停顿多而长，音色偏暗，语流沉缓。如柯岩的《一月的哀思》就属于这一类。 ④高亢型——语调高扬，语音响亮，语句连贯，语流畅达。如茅盾的《白杨礼赞》、闻一多的《最后一次演讲》都属于这种类型。 ⑤舒缓型——语调多扬，语音多轻，气息畅达，声音清亮轻柔，语流舒展，如峻青的《秋色赋》就是这种类型。 ⑥紧张型——语调多扬抑，语音多重少轻，语气强而短促，语流速度较快。如山东快书《武松打虎》一段就属于这一种。 以上6种即是语言节奏的类型，事实上，训练的方法也蕴涵其中。要掌握语言节奏，首先就要掌握台词的基本节奏，然后再根据台词内容而调整节奏，使节奏同内容和谐一致，以便更好地表达思想感情。164. 【导语】绕口令又叫做急口令、吃口令、拗口令等，它是一种汉族的传统语言游戏。由于它是将若干双声词、叠词或发音相同、相近的词语集中在一起，组成简单、有趣的语韵，并要求尽量快速念出，所以读起来使人感到节奏感强，妙趣横生。最重要的是，经常说绕口令，能够提高语言表达力，并使思维反应更具敏捷性、灵活性和准确性。正因如此，练习绕口令，成为了学习播音主持专业以及提高口语表达能力的最普遍也是最有效的方式之一。 通常，由于绕口令字音相近，极易混淆，所以要想念得既快又好，没有快速的思维、良好的记忆、伶俐的口齿，是很难做到的。尤其是青少年儿童，接受和区分同音或近音词的速度较慢，且注意力不易集中，要想让他们喜欢上并练习好绕口令，需要一些小窍门。对此可以简单归纳为“慢、勤、准”这三个字。 在人们的印象中，绕口令就是要快速的说，越快越好。其实不尽然。说绕口令是需要有一个循序渐进的过程的，不能一味求快，特别是青少儿，他们的语言文字的功底的还不够深，这时越快就越容易出错。说得太快就会出现字音不准、节奏不对的情况，反而达不到练习的目的。 所以学说绕口令应慢慢来，一步步来，不能操之过急。对孩子来说，学说绕口令无外乎练唇舌、练语言、练记忆、练思维。只要孩子说得流利、清晰，能够让人听懂且语速渐快即可。单方面求快，而不讲究字音，孩子说出的将全是咿咿呀呀的模糊音，这样反而增加孩子的心理压力，使得他们从心底畏惧绕口令，学得不开心，那样就背离学习绕口令的初衷了。 与此同时，老师和家长也要有耐心，教孩子学说绕口令时一定要慢，让孩子把每一个字音都念得准确无误，把每一句话都说得清楚连贯，然后再逐渐加快。为了更好地做到这一点，不妨采取“分句成词”的办法教孩子把绕口令读出节奏感。 我们都知道，青少年儿童正值花季的年龄，这个年龄段的孩子往往“玩心重、惰性大”，对于绕口令的学习，经常是新鲜劲一过就变得消极怠慢了。这时就得想出一些办法让孩子继续学习，勤于练习，坚持不懈。让孩子勤练绕口令可以在以下两个环节上多下工夫。 首先，可以给孩子进行对比训练，矫正错误发音。比如，家长与孩子一起练习，通过相互纠错的方式，使孩子的吐字发音更为准确清楚，也会激发孩子继续学习的兴趣和不断完善自我的决心。其次，可以让孩子经常公开演练。孩子练到一定程度时，特别期望得到他人的赞许，如果得不到别人的肯定，孩子很容易对学习失去信心，以至放弃。那么，我们就该鼓励孩子在众人面前大胆表演绕口令，这样很容易激起孩子的好胜心，不但能锻炼他们的胆量，也会使他们增强自信心，孩子便更会勤于练习，精益求精。 绕口令作为一种有趣的语言游戏，同音异调、字音相近、叠字重句是绕口令的鲜明特色。吐字清晰、发音准确是练习绕口令的基本要求。稍有失误，便会出现差错。从播音专业角度讲，舌头的部位、嘴唇的形状、口腔的开闭等整体的协调十分重要，因为它们都直接影响着发音的准确性。孩子的唇、舌、口等部位的功能尚未发育完全，很容易出现气息不匀、舌硬唇僵、喉咙发紧等一些问题。因此，在练习绕口令时，我们可以根据孩子的实际情况，对孩子的唇、舌、齿、喉等部位进行分类练习，努力促进孩子唇、舌、齿等部位的灵活性和统一性，这样可以有效提升绕口令发音咬字的准确性。 绕口令是一种特殊形式的游戏儿歌，它除了具有语言精炼、有韵律、有节奏、读起来顺口好听、易于朗读背诵等一般儿歌的特点外，还有意识地使用了一些近似音，读起来不但绕口，而且诙谐、幽默、有趣，对于正处在语言发展关键期的青少儿大有益处。只要结合上述方法练习绕口令，孩子的发音和口语表达能力将会大大改进和提升。 西河大鼓—西河大鼓是流行华北的一种说唱曲艺，这段《绕口令》由艺人马增芬演唱。 高高山上到有一位老僧,身穿着衲头几千层。 你要问老僧年纪有多么大，曾记得黄河九澄清。 五百年前，澄一澄，总共是四千五百冬。 老僧收了八个徒弟，八个弟子个顶个的有法名。 大徒弟名字就叫青头愣，二徒弟名叫愣头青。 三徒弟名字就叫僧三点，四徒弟名字就叫做点三僧。 五徒弟名叫蹦葫芦棒，六徒弟名叫棒葫芦蹦。 七徒弟名字就叫随风倒，八徒弟就叫做倒随风。 八个徒弟，学会了八中艺，八仙过海，各显其能： 青头愣会打磬，愣头青会撞钟。僧三点会吹管，点三僧会捧笙。 蹦葫芦棒会打鼓，棒葫芦蹦会念经。随风倒他会扫地，这倒随风他会点灯。 老师傅叫他们换上了一换，不知道换成换不成。 这个愣头青他打不了这青头愣的磬，青头愣撞不了愣头青的钟。 点三僧吹不了这僧三点的管，僧三点捧不了点三僧的笙。 棒葫芦蹦打不了蹦葫芦棒的鼓，蹦葫芦棒他念不了棒葫芦蹦的经。 倒随风他扫不了这随风倒的地，随风倒他点不了这倒随风的灯。 老师傅一见有了气，要打徒弟整八名。眼睁睁，八位徒弟个顶个的就要挨打，从外面，又来了五位云游的僧。五位僧人把情讲，罚他们后面去数塔玲珑。玲珑宝塔，十三起儿，临去数单层，回来数双层，谁要是数过来谁就是大师兄。 谁要是数不过来玲珑塔，叫他一夜罚跪，到天明。 玲珑塔来塔玲珑，玲珑宝塔第一层。一张高桌四条腿，一个和尚一本经，一个铙钹一口磬，一个木鱼一盏灯。一个金钟，整四两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第三层。三张高桌十二条腿，三个和尚三本经，三个铙钹三口磬，三个木鱼三盏灯。三个金钟，十二两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第五层。五张高桌二十条腿，五个和尚五本经，五个铙钹五口磬，五个木鱼五盏灯。五个金钟，二十两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第七层。七张高桌二十八条腿，七个和尚七本经，七个铙钹七口磬，七个木鱼七盏灯。七个金钟，二十八两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第九层。九张高桌三十六条腿，九个和尚九本经，九个铙钹九口磬，九个木鱼九盏灯。九个金钟，三十六两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 165. 如：出东门，过大桥，大桥底下一树枣儿，拿着杆子去打枣，青的多，红的少。一个枣儿，两个枣儿，三个枣儿，四个枣儿，五个枣儿，六个枣儿，七个枣儿，八个枣儿，九个枣儿，十个枣儿这是一个绕口令，要一口气说完。开始做绕口令练习的时候，中间可以换一换气，练到气息有了控制能力的时候，逐渐把换气次数减少，最后争取一口气说完，甚至多说几个枣儿。必须进行共鸣训练。 以下介绍几种简单易行的共训练方法。 方法/步骤 1， 放松喉头，用“哼哼”音唱歌。 2，学鸭叫声。挺软腭，口腔张开成一圆筒，边发gaga音，边仔细体会，共鸣运用得好的gaga音好听，共鸣运用得不好的gaga音枯燥、刺耳。 3， 学牛叫声。类似打电话的“嗯”(什么?)和“嗯”(明白了)。 4， 牙关大开合，同时发出“啊”音。 5， 模拟汽笛长鸣声。(di)既可平行发音，也可由大到小或由小到大地变化发音。 6， 做扩胸运动，同时尽量发高亢或尽量低沉的声音。 7， “气泡音”练习。闭嘴，用轻匀的气流冲击声带，使之发出细小的抖动声。 8，音阶层练习。选一句话，在本人音域范围内，先用低调说，一级一级地升高，然后又一级一级地下降，在一句高一句低，高低交替，一句话又高到低，再由低到高。 9，夸张四声练习。选择韵母因素较多的词语或成语，运用共鸣技巧做夸张四声的训练。如：清——正——廉——洁——，英——勇——顽——强——。 10， 大声呼唤练习。假设某人在离自己100米处，大声呼唤：张——师——傅——，快——回——来——!喂——，那——里——危——险——，快——离——开——! 字的对比练习。训练要求是，对比平翘舌声母，再分别组词作朗诵练习。 &gt; 平——翘 滋——之 字——只咋——扎 总——中 &gt; 嘴——追 增——正 尊——准 藏——张 &gt; 词的对比练习。训练要求是：对比平翘舌声母，再分别用每个词说句话。 &gt; 平——翘 自主——支柱栽花——摘花 木材——木柴 &gt; 推辞——推迟 私人——诗人 司机——实际 &gt; 组词练习。训练要求是：用平翘舌音组词，辨音记词，再用每个词说句话。 &gt; Z——zh 在职 杂志 栽种 增长 自重 宗旨 &gt; Zh——z 渣滓 张嘴 种族 长子 沼泽 振作 &gt; C——ch 财产 草场 猜出 采茶 彩绸 餐车 &gt; Ch——c 车次场次 蠢才 纯粹 差错 陈词 &gt; Sh——s 三十 丧生 扫射 私塾 四十 四声 &gt; S——sh 哨所 山色 深思 神速 上诉 深邃 绕口令-1 八百标兵(b、p) 八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 炮兵和步兵(b、p、m)炮兵攻打八面坡，炮兵排排炮弹齐发射。步兵逼近八面坡，歼敌八千八百八十多。 绕口令-2 一平盆面(b、p) 一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 巴老爷芭蕉树(b、p)巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住，八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 绕口令-8 哥挎瓜筐过宽沟(g、k) 哥挎瓜筐过宽沟，赶快过沟看怪狗，光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 哥哥捉鸽(g、k、h) 哥哥过河捉个鸽，回家割鸽来请客，客人吃鸽称鸽肉，哥哥请客乐呵呵。 老爷堂上一面鼓(g、k、h)老爷堂上一面鼓，鼓上一只皮老虎，皮老虎抓破了鼓，就拿块破布往上补，只见过破布补破裤，哪见过破布补破鼓。166. 1、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 3、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 鼻韵母练习 1、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 复韵母练习 1、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 唇音练习 1、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。（短文学网http://www.duanwenxue.com/） 3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 舌尖中音练习 1、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 舌根音、舌面音练习 1、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 2、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 3、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 4、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 翘舌音、平舌音练习 1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 2、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 3、长虫围着砖堆转，转完砖堆钻砖堆。 4、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 5、早招租，晚招租，总找周邹郑曾朱。 6、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 7、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 8、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 9、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 绕口令联系 1、张伯伯，李伯伯，饽饽铺里买饽饽，张伯伯买了个饽饽大，李伯伯买了个大饽饽。拿回家里喂婆婆，婆婆又去比饽饽。也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 2、东洞庭，西洞庭，洞庭山上一根藤，藤上挂铜铃。风吹藤动铜铃动，风停藤定铜铃静。 3、这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。（短文学网http://www.duanwenxue.com/） 4、小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 5、四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿。谁说四十是”细席”，他的舌头没用力;谁说十四是”适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 6、六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 7、小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛还油。 8、南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 9、白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 10、北边来了一个瘸子，背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 11、面圆圆个黄姨姨，黄姨姨名叫圆圆，黄姨姨个形圆圆，姨姨姓黄名圆圆，圆圆就是黄姨姨，黄姨姨是黄圆圆。黄圆圆姨姨，姨姨是姨姨，圆圆是圆圆。姨姨莫叫成圆圆，圆圆莫读作姨姨。斌兄张个目圆圆，读来会顺就离奇! 12、岁月无声，转眼成老爹，出门踏破脚车，落雨骑破雨遮，遇着资娘子看到目斜斜，资娘子楚烈着惊，惊归惊，也爱大声担你听，你者痴哥兄，硬虎无亩定 13、出门来打工，吕到裤破空，衫破无人补，只因还无亩，无亩生活过艰苦，三顿咸菜甲菜脯，个人瘦过竹壳脯，腰裤一穿力破肚，照生做呢娶有亩。勿奸苦，勿肿肚!有人未嫁硬虎有人未娶亩，自古姻缘无错配!心情放松做牵课，时间一到自然有人来搭配，伊人若错过，日后一定会后悔。 14、街市猎无，鸡仔错脚踏死鹅，会相烧拍攒头毛，尼姑娇仔猎铁桃，猫鼠教猫雪竹哥，海底虾仔食那歌，青夜看到笑呵呵。唔知阿白仁吕感觉如何? 15、吕对瓦，布对纸，双筷对个碗;梨对桃，有对无，公鸡对老鹅;门对窗，鸟对鹰，白仁对神经;真对假，兄对姐，黄牛对老马;水对山，胃对肝，水鸡对青蛙;长对短，好对孬，领兄对领嫂;白对晶，弟对兄，手护对卡车;酸对甜，整对咸，吕布对貂婵。能一口气念出人“会直”! 16、现在指帮校生仔，个个举址不文雅!头手肠肠刘秋仔!肠衫肠裤补破布!带目镜骑手机!行路块形张到死父鲜!上酒楼，酒醉回家放大喉。 17、一只狗仔摔下沟仔，一只猴仔拿钩仔钩狗仔。狗仔爬起来咬猴仔，猴仔拿钩仔打狗仔。狗仔咬钩仔，钩仔落入沟仔。猴仔咬钩仔。不知是狗仔咬猴仔，还是猴仔咬狗仔。 18、街市猎无，鸡仔错脚踏死鹅，会相烧拍攒头毛，尼姑娇仔猎铁桃，猫鼠教猫雪竹哥，海底虾仔食那歌，青夜看到笑呵呵。唔知阿白仁吕感觉如何? 19、东门东厝东公东嬷种丛冬瓜大过箩唔如西门西厝西公西嬷种丛西瓜愈更大过东门东厝东公东嬷种丛冬瓜大过箩。 20、天上一个盆，地上一个棚。盆碰棚，棚倒了，盆碎了是棚赔盆还是盆赔棚。 21、学习就怕满，懒，难，心里有了满，懒，难，不看不钻就不前。心里去掉满，懒，难，边学边干，蚂蚁也能爬泰山 22、红饭碗，黄饭碗，红饭碗盛满饭碗，黄饭碗盛饭半碗。黄饭碗添了半碗饭，红饭碗减了饭半碗。黄饭碗比红饭碗又多半碗饭。 23、出南门，面正南，有一个面铺面冲南。面铺门口挂着一个蓝布棉门帘。摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧，哟，嗬!面铺还是面冲南。出西门走七步，拾到鸡皮补皮裤。是鸡皮补皮裤，不是鸡皮不必补皮裤。 24、闲来没事我出城西，树木琳琅我数不齐，一二三四五六七，七六五四三二一，六五四，三二一，五四三二一，四三二一三二一，二一一，一个一，数了半天一棵树，一棵树上七个枝，七个枝结了七样果，结的是槟子、橙子、桔子、柿子、李子、栗子、梨!”（短文学网http://www.duanwenxue.com/） 25、打南边来了个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子的茄子，砸了瘸子的碟子，瘸子毛腰拾茄子。打北边来了个醉老爷子，腰里掖着个烟袋别子，过来要买瘸子的茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子的茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知是老爷子的烟袋别子打了瘸子的茄子，还是瘸子用橛子打了老爷子烟袋别子。 26、什么上山吱扭扭?什么下山乱点头?什么有头无有尾?什么有尾无有头?什么有腿家中坐?什么没腿游九州?赵州桥什么人修?玉石栏杆什么人留?什么骑驴桥上走?什么人推车轧了一道沟?什么人扛刀桥上站?什么人勒马看春秋?什么人白?什么人黑?什么人胡子一大堆?什么圆圆在天边?什么圆圆在眼前?什么圆圆长街卖?什么圆圆道两边?什么开花节节高?什么开花毛着个腰?什么开花无人见?什么开花一嘴毛?什么鸟穿青又穿白?什么鸟穿出皂靴来?什么鸟身披十样锦?什么鸟身披麻布口袋?双扇门，单扇开，我破的闷儿我自己猜。车子上山吱扭扭，瘸子下山乱点头，哈蟆有头无有尾，蝎子有尾无有头。板登有腿儿家中坐，小船没腿儿游九州，赵州桥，鲁班修，玉石栏杆儿圣人留。张果老骑驴桥上走，柴王推车轧了一道沟。周仓扛刀桥上站，关公勒马看春秋。罗成白，敬德黑，张飞胡子一大堆。月亮圆圆在天边，眼镜圆圆在眼前，烧饼圆圆长街卖，车轱辘圆圆道两边。芝麻开花节节高，棉花开花毛着腰，藤子开花无人见，玉米开花一嘴毛。喜鹊穿青又穿白，乌鸦穿出皂靴来，野鸡身披十样锦，鹗丽儿身披麻布口袋。 27、一道黑，两道黑，三四五六七道黑，八九道黑十道黑。我买了个烟袋乌木杆儿，我是掐着它的两头那么一道黑。二姑娘描眉去演戏，照着她的镜子那么两道黑。粉皮儿墙，写川字儿，横瞧竖瞧三道黑。象牙桌子乌木腿儿，把它放着在那炕上那么四道黑。我买了个母鸡不下蛋，把它圈在那个笼里捂到(五道)黑。挺好的骡子不吃草，把它拉到在那街上遛到(六道)黑。买了头小驴儿不拉磨，背上它的鞍韂骑(七)到(道)黑。姐俩南洼去割麦，丢了她的镰刀拔到(八道)黑。月窠儿的小孩儿子得了病，团几个艾球灸到(九道)黑。卖瓜籽的打瞌睡，哗啦啦啦撒了那么一大堆，他的扫帚簸箕不凑手，那么一个一个拾到(十道)黑。 28、从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 29、老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农。 30、七巷一个漆匠，西巷一个锡匠。七巷漆匠用了西巷锡匠的锡，西巷锡匠拿了七巷漆匠的漆，七巷漆匠气西巷锡匠用了漆，西巷锡匠讥七巷漆匠拿了锡。167. 1、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子， 四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 2、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。 迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。 一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 3、石、斯、施、史四老师，天天和我在一起。 石老师教我大公无私，斯老师给我精神食粮， 施老师叫我遇事三思，史老师送我知识钥匙。 我感谢石、斯、施史四老师。 4、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作， 黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌， 王克帮助黄贺搞木刻。由于二人搞协作， 黄贺完成了木刻，王克写好了诗歌。 5、（数玲珑塔）玲珑塔来塔玲珑，玲珑宝塔第一层。 一张高桌四条腿，一个和尚一本经， 一个铙钹一口磬，一个木鱼一盏灯。一 个金钟，整四两，西北风一刮， 纹儿了纹儿了响纹儿了嗡。 6、铜勺舀热油，铁勺舀凉油， 铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。 舀油入炒勺，月月有佳肴。先炖鱿鱼块， 后扒羊肉条。火在炉下燃，油在勺中熬， 满锅同炎热，管它铜勺与铁勺。 7、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌， 唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。 草窝暗又矮，只得去过河，河里真暖和， 有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 8、八个徒弟，学会了八中艺，八仙过海， 各显其能：青头愣会打磬，愣头青会撞钟。 僧三点会吹管，点三僧会捧笙。蹦葫芦棒会打鼓， 棒葫芦蹦会念经。随风倒他会扫地，这倒随风他会点灯。 9、天上有个日头，地下有块石头， 嘴里有个舌头，手上有五个手指头。 不管是天上的热日头，地下的硬石头， 嘴里的软舌头，手上的手指头， 还是热日头，硬石头，软舌头， 手指头，反正都是练舌头。 10、婆婆和嬷嬷，来到山坡坡， 婆婆默默采蘑菇，嬷嬷默默拔萝卜。 婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩， 婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。 婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 11、有个懒汉本姓阮，提个篮子卖鸡卵， “卖卵”“卖卵”使劲喊，谁都不来买鸡卵， 不是鸡卵品种乱，而是鸡卵皮太软。 卖不出鸡卵难买饭，回家吃饭路又远， 胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。 12、老师傅一见有了气，要打徒弟整八名。 眼睁睁，八位徒弟个顶个的就要挨打， 从外面，又来了五位云游的僧。 五位僧人把情讲，罚他们后面去数塔玲珑。 玲珑宝塔，十三起儿，临去数单层， 回来数双层，谁要是数过来谁就是大师兄。 13、老僧收了八个徒弟，八个弟子个顶个的有法名。 大徒弟名字就叫青头愣，二徒弟名叫愣头青。 三徒弟名字就叫僧三点，四徒弟名字就叫做点三僧。 五徒弟名叫蹦葫芦棒，六徒弟名叫棒葫芦蹦。 七徒弟名字就叫随风倒，八徒弟就叫做倒随风。 14、山里有个寺，山外有个市，弟子三十三，师父四十四。 三十三的弟子在寺里练写字，四十四的师父到市里去办事。 三十三的弟子用了四十四小时，四十四的师父走了三十三里地。 走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 15、出东门，过大桥，大桥前面一树枣， 拿着竿子去打枣，青的多，红的少，一个枣， 两个枣，三个枣，四个枣，五个枣，六个枣， 七个枣，八个枣，九个枣，十个枣； 十个枣，九个枣，八个枣，七个枣，六个枣， 五个枣，四个枣，三个枣，两个枣， 一个枣，这是一个绕口呤，一口气说完才算好。 16、老师傅叫他们换上了一换，不知道换成换不成。 这个愣头青他打不了这青头愣的磬，青头愣撞不了愣头青的钟。 点三僧吹不了这僧三点的管，僧三点捧不了点三僧的笙。 棒葫芦蹦打不了蹦葫芦棒的鼓，蹦葫芦棒他念不了棒葫芦蹦的经。 倒随风他扫不了这随风倒的地，随风倒他点不了这倒随风的灯。 17、从南边来了个喇嘛，提拉着五斤塔嘛。 从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛， 要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴， 不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛， 别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。 也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。 也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。168. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、一平盆面，烙一平盆饼， 饼碰盆，盆碰饼。 4、吃葡萄不吐葡萄皮儿， 不吃葡萄倒吐葡萄皮儿。 5、大刀对单刀，单刀对大刀， 大刀斗单刀，单刀夺大刀。 6、粉红墙上画凤凰，红凤凰， 粉凤凰，粉红凤凰，花凤凰。 7、磨房磨墨，墨碎磨房一磨墨； 梅香添煤，煤爆梅香两眉灰。 8、三山屹四水，四水绕三山； 三山四水春常在，四水三山四时春。 9、任命是任命，人名是人名， 任命不能说成人名，人名也不能说成任命。 10、山前有只虎，山下有只猴。 虎撵猴，猴斗虎； 虎撵不上猴，猴斗不了虎。 11、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。 隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 12、八百标兵奔北坡，北坡炮兵并排跑， 炮兵怕把标兵碰，标兵怕碰炮兵炮。 13、七加一，再减一，加完减完等于几？ 七加一，再减一，加完减完还是七。 14、你也勤来我也勤，生产同心土变金。 工人农民亲兄弟，心心相印团结紧。 15、字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 16、你会炖炖冻豆腐，你来炖我的炖冻豆腐； 你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 17、扁担长，板凳宽，扁担没有板凳宽， 板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 18、小郭画了朵红花，小葛画了朵黄花， 小郭想拿他的红花换小葛的黄花， 小葛把他的黄花换了小郭的红花。 19、山前有个严圆眼，山后有个严眼圆， 二人山前来比眼，不知是严圆眼的眼圆， 还是严眼圆比严圆眼的眼圆？ 20、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 21、坡上立着一只鹅，坡下就是一条河。 宽宽的河，肥肥的鹅，鹅要过河， 河要渡鹅不知是鹅过河，还是河渡鹅？ 22、老罗拉了一车梨，老李拉了一车栗。 老罗人称大力罗，老李人称李大力。 老罗拉梨做梨酒，老李拉栗去换梨。 23、有个面铺门朝南，门上挂着蓝布棉门帘， 摘了蓝布棉门帘，面铺门朝南； 挂上蓝布棉门帘，面铺还是门朝南。 24、山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 25、山前有个崔粗腿，山后有个崔腿粗。 二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗， 还是崔腿粗比崔粗腿的腿粗？ 26、出南门，走六步，见着六叔和六舅， 叫声六叔和六舅，借我六斗六升好绿豆； 过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 27、高高山上到有一位老僧，身穿着衲头几千层。 你要问老僧年纪有多么大，曾记得黄河九澄清。 五百年前，澄一澄，总共是四千五百冬。 28、老方扛着黄幌子，老黄扛着方幌子。 老方要拿老黄的方幌子，老黄要拿老方的黄幌子， 末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。169. 1、长扁担和短扁担 长扁担，短扁担。 长扁担比短扁担长半扁担， 短扁担比长扁担短半扁担。 长扁担捆在短板凳上， 短扁担捆在长板凳上; 长板凳不能捆比短扁担长半扁担的长扁担， 短板凳也不能捆比长扁担短半扁担的短扁担。 2、敬母亲 生身亲母亲，谨请您就寝。 请您心宁静，身心很要紧。 新星伴月明，银光澄清清。 尽是清静境，警铃不要惊。 您醒我进来，进来敬母亲。 3、炖冻豆腐 说你会炖我的炖冻豆腐， 来炖我的炖冻豆腐。 不会炖我的炖冻豆腐， 别胡炖乱炖假充会炖， 炖坏了我的炖冻豆腐。 4、牛郎恋刘娘 牛郎年年恋刘娘，刘娘连连念牛郎。 牛郎恋刘娘，刘娘念牛郎，郎恋娘来娘念郎。 5、满、懒、难 学习就怕满、懒、难。 心里有了满、懒、难，不看不钻就不前。 心里丢了满、懒、难， 永不自满边学边干，蚂蚁也能搬泰山。 6、比腿 山前住着个崔粗腿， 山后住着个崔腿粗。 俩人山前来比腿， 也不知道崔粗腿比崔腿粗的腿粗， 还是崔腿粗比崔粗腿的腿粗。 六十六岁的刘老六 六十六岁的刘老六， 修了六十六座走马楼， 楼上摆了六十六瓶苏合油， 门前栽了六十六棵垂杨柳， 垂杨柳上栓了六十六匹大马猴。 忽然一阵狂风起， 吹倒了六十六座走马楼， 打翻了六十六瓶苏合油， 压倒了六十六棵垂杨柳， 跑掉了六十六匹大马猴， 气死了六十六岁刘老六。 7、学语言 学语言，用语言，学好语言说话不费难。 播音员学语言，说话亲切又自然，演员学语言，台词传的远。 8、满天星 天上看，满天星，地下看，有个坑， 坑里看，有盘冰，坑外长着一棵松， 松上落着一只鹰，鹰下坐着一老僧， 僧前点着一盏灯，灯前搁着一部经， 墙上钉着一根钉，钉上挂着一张弓。 说刮风，就刮风，刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地下的坑， 刮化了坑里的冰，刮断了坑外的松， 刮飞了松下的鹰，刮走了鹰下的僧， 刮灭了僧前的灯，刮乱了灯前的经， 刮掉了墙上的钉，刮翻了钉上的弓， 只刮的：星散，坑平，冰化，松倒， 鹰飞，僧走，灯灭，经乱，钉掉，弓翻的一个绕口令。 9、女小吕 这天天下雨，体育运动委员会穿緑雨衣的女小吕， 去找计划生育委员会不穿绿雨衣的女老李， 体育运动委员会穿绿雨衣的女小吕， 没找着计划生育委员会不穿绿雨衣的女老李; 计划生育委员会不穿绿雨衣的女老李.170. 单韵母练习1、坡上立着一只鹅，坡下就是一条河，播音主持培训绕口令。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。3、山前有只虎，山下有只猴。虎撵猴，猴斗虎；虎撵不上猴，猴斗不了虎。鼻韵母练习1、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？复韵母练习1、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆；过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗？唇音练习1、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。舌尖中音练习1、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。舌根音、舌面音练习1、七加一，再减一，加完减完等于几？七加一，再减一，加完减完还是七。2、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。3、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。4、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。翘舌音、平舌音、练习(1)1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。2、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。3、长虫围着砖堆转，转完砖堆钻砖堆。4、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。5、早招租，晚招租，总找周邹郑曾朱。翘舌音、平舌音、练习(2)1、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。2、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。3、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。4、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。喇嘛和哑吧从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。、出东门，过大桥，大桥前面一树枣，拿着竿子去打枣，青的多，红的少，一个枣，两个枣，三个枣，四个枣，五个枣，六个枣，七个枣，八个枣，九个枣，十个枣；十个枣，九个枣，八个枣，七个枣，六个枣，五个枣，四个枣，三个枣，两个枣，一个枣，这是一个绕口呤，一口气说完才算好，绕口令《播音主持培训绕口令》(http://www.unjs.com)。2、有个懒汉本姓阮，提个篮子卖鸡卵，“卖卵”“卖卵”使劲喊，谁都不来买鸡卵，不是鸡卵品种乱，而是鸡卵皮太软。卖不出鸡卵难买饭，回家吃饭路又远，胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。师父四十四、铜勺舀热油1、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。2、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。河边两只鹅、婆婆和嬷嬷1、婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。2、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。西河大鼓---西河大鼓是流行华北的一种说唱曲艺，这段《绕口令》由艺人马增芬演唱。高高山上到有一位老僧,身穿着衲头几千层。你要问老僧年纪有多么大，曾记得黄河九澄清。五百年前，澄一澄，总共是四千五百冬。老僧收了八个徒弟，八个弟子个顶个的有法名。大徒弟名字就叫青头愣，二徒弟名叫愣头青。三徒弟名字就叫僧三点，四徒弟名字就叫做点三僧。五徒弟名叫蹦葫芦棒，六徒弟名叫棒葫芦蹦。七徒弟名字就叫随风倒，八徒弟就叫做倒随风。八个徒弟，学会了八中艺，八仙过海，各显其能：青头愣会打磬，愣头青会撞钟。僧三点会吹管，点三僧会捧笙。蹦葫芦棒会打鼓，棒葫芦蹦会念经。随风倒他会扫地，这倒随风他会点灯。老师傅叫他们换上了一换，不知道换成换不成。这个愣头青他打不了这青头愣的磬，青头愣撞不了愣头青的钟。点三僧吹不了这僧三点的管，僧三点捧不了点三僧的笙。棒葫芦蹦打不了蹦葫芦棒的鼓，蹦葫芦棒他念不了棒葫芦蹦的经。倒随风他扫不了这随风倒的地，随风倒他点不了这倒随风的灯。老师傅一见有了气，要打徒弟整八名。眼睁睁，八位徒弟个顶个的就要挨打，从外面，又来了五位云游的僧。五位僧人把情讲，罚他们后面去数塔玲珑。玲珑宝塔，十三起儿，临去数单层，回来数双层，谁要是数过来谁就是大师兄。谁要是数不过来玲珑塔，叫他一夜罚跪，到天明。玲珑塔来塔玲珑，玲珑宝塔第一层。一张高桌四条腿，一个和尚一本经，一个铙钹一口磬，一个木鱼一盏灯。一个金钟，整四两，西北风一刮，纹儿了纹儿了响纹儿了嗡。玲珑塔，塔玲珑，玲珑宝塔第三层。三张高桌十二条腿，三个和尚三本经，三个铙钹三口磬，三个木鱼三盏灯。三个金钟，十二两，西北风一刮，纹儿了纹儿了响纹儿了嗡。玲珑塔，塔玲珑，玲珑宝塔第五层。五张高桌二十条腿，五个和尚五本经，五个铙钹五口磬，五个木鱼五盏灯。五个金钟，二十两，西北风一刮，纹儿了纹儿了响纹儿了嗡。玲珑塔，塔玲珑，玲珑宝塔第七层。七张高桌二十八条腿，七个和尚七本经，七个铙钹七口磬，七个木鱼七盏灯。七个金钟，二十八两，西北风一刮，纹儿了纹儿了响纹儿了嗡。玲珑塔，塔玲珑，玲珑宝塔第九层。九张高桌三十六条腿，九个和尚九本经，九个铙钹九口磬，九个木鱼九盏灯。九个金钟，三十六两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 绕口令大全超级难绕口令播音主持必考绕口令播音面试的绕口令绕口令练习 化肥会挥发黑化肥发灰，灰化肥发黑黑化肥发灰会挥发；灰化肥挥发会发黑黑化肥挥发发灰会花飞；灰化肥挥发发黑会飞花黑灰化肥会挥发发灰黑讳为花飞；灰黑化肥会挥发发黑灰为讳飞花黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰 单韵母练习1、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。3、山前有只虎，山下有只猴。虎撵猴，猴斗虎；虎撵不上猴，猴斗不了虎。鼻韵母练习1、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？复韵母练习1、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆；过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。171. 1、八百标兵奔北坡，炮兵并排北边跑， 炮兵怕把标兵碰，标兵怕碰炮兵炮。（双唇） 2、巴老爷有八十八棵芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。（锻炼唇力） 3、门口吊刀，刀倒吊着。……（反复说，锻炼舌的顶力） 4、山前有个催粗腿，山后有个催腿粗， 俩人山前来比腿，不知是催粗腿比催腿粗的腿粗， 还是催腿粗比催粗腿的腿粗。 5、粉红墙上画凤凰，凤凰画在粉红墙。 红凤凰、粉凤凰，红粉凤凰花凤凰。172. 喇嘛与哑巴【篇一】 打南边来了个哑巴，腰里别了个喇叭； 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸； 哑巴嘀嘀哒哒吹喇叭 九与酒【篇二】 九月九，九个酒迷喝醉酒。 九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。 九个酒迷端起酒，“咕咚、咕咚”又九口。 九杯酒，酒九口，喝罢九个酒迷醉了酒。 天上一颗星【篇三】 天上一颗星，地下一块冰，屋上一只鹰，墙上一排钉。 抬头不见天上的星，乒乓乒乓踏碎地下的冰， 啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。173. 【导语】最新播音主持必练绕口令大全。以下内容由无忧考网整理发布。 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 白果打白布白布包白果，白果恨白布，白布打白果，白果打白布。 一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。 【 营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来;二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子，山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山当腰三哥三嫂子，两个三斗三升酸枣子。 三月三，小三去登山。上山又下山，下山又上山。登了三次山，跑了三里三。出了一身汗，湿了三件衫。小三山上大声喊：“离天只有三尺三!” 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 【 出八十八二十八,八个小孩儿把萝卜拔，你也拔，我也拔，看谁拔得多，看谁拔得大。你拔得不多个儿不小，我拔得不少个儿不大。一个萝卜一个坑儿，算算多少用车拉，一个加俩，俩加仨，七十二个加十八，拿个算盘打一打，一百差俩九十八。 九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 【 一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 九十九头牛，驮着九十九个篓。每篓装着九十九斤油。牛背油篓扭着走，油篓磨坏篓漏油，九十九斤一个篓，还剩六十六斤油。你说漏了几十几斤油? 四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子? 一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，飞了鹰，跑了兔。打翻醋，醋湿布。174. 一、量窗量床又量墙，跳上床量窗，靠往墙量床，墙比张床长，床又比窗长，窗长不过床，床又长不过墙，所以墙比床比窗长。 二、牛郎恋刘娘，刘娘念牛郎，牛郎年年恋刘娘，刘娘年年念牛郎，郎恋娘来娘念郎，念娘恋娘念郎恋郎，念恋娘郎。 三、1、初入江湖：化肥会挥发 2小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 8、喇嘛和哑巴： 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 9、六十六头牛： 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。 忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 10、老六放牛： 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。 牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 11、天上七颗星： 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。 吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 12、连念七遍就聪明： 天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。 呼噜呼噜扇灭七盏灯，噯唷噯唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 13、司小四和史小世： 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 14、酸枣子： 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子， 山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子， 只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。 过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 15、墙上一根钉： 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 16、板凳与扁担： 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担在绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。 17、白老八： 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 18、鹅和鸽： 天上一群大白鸽，河里一群大白鹅。 白鸽尖尖红嘴壳，白鹅曲项向天歌。 白鸽剪开云朵朵，白鹅拨开浪波波。 鸽乐呵呵，鹅活泼波， 白鹅白鸽碧波蓝天真快乐。 19、水连天： 天连水，水连天， 水天一色望无边， 蓝蓝的天似绿水， 绿绿的水如蓝天。 到底是天连水， 还是水连天? 20、买菜： 小艾和小戴，一起去买菜。 小艾把一斤菜给小戴， 小戴有比小艾多一倍的菜; 小戴把一斤菜给小艾， 小艾、小戴就有一般多的菜。175. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 4、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 5、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 6、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 7、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 8、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 9、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 10、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 11、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 12、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 13、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 14、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 15、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 16、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 17、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 18、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 19、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 20、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 21、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 22、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 23、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 24、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 25、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 26、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 27、高高山上到有一位老僧，身穿着衲头几千层。你要问老僧年纪有多么大，曾记得黄河九澄清。五百年前，澄一澄，总共是四千五百冬。 28、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 29、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 30、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 31、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 32、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。() 33、(数玲珑塔)玲珑塔来塔玲珑，玲珑宝塔第一层。一张高桌四条腿，一个和尚一本经，一个铙钹一口磬，一个木鱼一盏灯。一个金钟，整四两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 34、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 35、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。176. 单韵母练习 1、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 3、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 鼻韵母练习 1、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 复韵母练习 1、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 唇音练习 1、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 舌尖中音练习 1、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 舌根音、舌面音练习 1、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 2、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 3、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 4、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 翘舌音、平舌音练习 1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 2、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 3、长虫围着砖堆转，转完砖堆钻砖堆。 4、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 5、早招租，晚招租，总找周邹郑曾朱。 6、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 7、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 8、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 9、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 绕口令联系 1. 张伯伯，李伯伯，饽饽铺里买饽饽，张伯伯买了个饽饽大，李伯伯买了个大饽饽。拿回家里喂婆婆，婆婆又去比饽饽。也不知是张伯伯买的饽饽大还是李伯伯买的大饽饽。 2. 东洞庭，西洞庭，洞庭山上一根藤，藤上挂铜铃。风吹藤动铜铃动，风停藤定铜铃静。 3. 这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 4. 小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 5. 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿。谁说四十是”细席”，他的舌头没用力;谁说十四是”适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 6. 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 7. 小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛还油 。 8. 南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗， 碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 9. 白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 10. 北边来了一个瘸子，背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 11. 面圆圆个黄姨姨，黄姨姨名叫圆圆，黄姨姨个形圆圆，姨姨姓黄名圆圆，圆圆就是黄姨姨，黄姨姨是黄圆圆。黄圆圆姨姨，姨姨是姨姨，圆圆是圆圆。姨姨莫叫成圆圆，圆圆莫读作姨姨。斌兄张个目圆圆，读来会顺就离奇! 12. 岁月无声，转眼成老爹，出门踏破脚车，落雨骑破雨遮，遇着资娘子看到目斜斜，资娘子楚烈着惊，惊归惊，也爱大声担你听，你者痴哥兄，硬虎无亩定 13. 出门来打工，吕到裤破空，衫破无人补，只因还无亩，无亩生活过艰苦，三顿咸菜甲菜脯，个人瘦过竹壳脯，腰裤一穿力破肚，照生做呢娶有亩。勿奸苦，勿肿肚!有人未嫁硬虎有人未娶亩，自古姻缘无错配!心情放松做牵课，时间一到自然有人来搭配，伊人若错过，日后一定会后悔。 14. 街市猎无，鸡仔错脚踏死鹅，会相烧拍攒头毛，尼姑娇仔猎铁桃，猫鼠教猫雪竹哥，海底虾仔食那歌，青夜看到笑呵呵。唔知阿白仁吕感觉如何? 15. 吕对瓦，布对纸，双筷对个碗;梨对桃，有对无，公鸡对老鹅;门对窗，鸟对鹰，白仁对神经; 真对假，兄对姐，黄牛对老马; 水对山，胃对肝，水鸡对青蛙; 长对短，好对孬，领兄对领嫂; 白对晶，弟对兄，手护对卡车; 酸对甜，整对咸，吕布对貂婵。能一口气念出人“会直”! 16. 现在指帮校生仔，个个举址不文雅!头手肠肠刘秋仔!肠衫肠裤补破布!带目镜骑手机!行路块形张到死父鲜!上酒楼，酒醉回家放大喉。 17. 一只狗仔摔下沟仔，一只猴仔拿钩仔钩狗仔。狗仔爬起来咬猴仔，猴仔拿钩仔打狗仔。狗仔咬钩仔，钩仔落入沟仔。猴仔咬钩仔。不知是狗仔咬猴仔，还是猴仔咬狗仔。 18. 街市猎无，鸡仔错脚踏死鹅，会相烧拍攒头毛，尼姑娇仔猎铁桃，猫鼠教猫雪竹哥，海底虾仔食那歌，青夜看到笑呵呵。唔知阿白仁吕感觉如何? 19. 东门东厝东公东嬷种丛冬瓜大过箩唔如西门西厝西公西嬷种丛西瓜愈更大过东门东厝东公东嬷种丛冬瓜大过箩。 20. 天上一个盆，地上一个棚。盆碰棚，棚倒了，盆碎了是棚赔盆还是盆赔棚。 21. 学习就怕满，懒，难，心里有了满，懒，难，不看不钻就不前。心里去掉满，懒，难，边学边干，蚂蚁也能爬泰山 22. 红饭碗，黄饭碗，红饭碗盛满饭碗，黄饭碗盛饭半碗。黄饭碗添了半碗饭，红饭碗减了饭半碗。黄饭碗比红饭碗又多半碗饭。 23. 出南门，面正南，有一个面铺面冲南。面铺门口挂着一个蓝布棉门帘。摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧，哟，嗬!面铺还是面冲南。出西门走七步，拾到鸡皮补皮裤。是鸡皮补皮裤，不是鸡皮不必补皮裤。 24. 闲来没事我出城西，树木琳琅我数不齐，一二三四五六七，七六五四三二一，六五四，三二一，五四三二一，四三二一三二一，二一一，一个一，数了半天一棵树，一棵树上七个枝，七个枝结了七样果，结的是槟子、橙子、桔子、柿子、李子、栗子、梨!” 25. 打南边来了个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子的茄子，砸了瘸子的碟子，瘸子毛腰拾茄子。 打北边来了个醉老爷子，腰里掖着个烟袋别子，过来要买瘸子的茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子的茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知是老爷子的烟袋别子打了瘸子的茄子，还是瘸子用橛子打了老爷子烟袋别子。 26. 什么上山吱扭扭?什么下山乱点头?什么有头无有尾?什么有尾无有头?什么有腿家中坐?什么没腿游九州?赵州桥什么人修?玉石栏杆什么人留?什么骑驴桥上走?什么人推车轧了一道沟?什么人扛刀桥上站?什么人勒马看春秋?什么人白?什么人黑?什么人胡子一大堆?什么圆圆在天边?什么圆圆在眼前?什么圆圆长街卖?什么圆圆道两边?什么开花节节高?什么开花毛着个腰?什么开花无人见?什么开花一嘴毛?什么鸟穿青又穿白?什么鸟穿出皂靴来?什么鸟身披十样锦?什么鸟身披麻布口袋?双扇门，单扇开，我破的闷儿我自己猜。车子上山吱扭扭，瘸子下山乱点头，哈蟆有头无有尾，蝎子有尾无有头。板登有腿儿家中坐，小船没腿儿游九州，赵州桥，鲁班修，玉石栏杆儿圣人留。张果老骑驴桥上走，柴王推车轧了一道沟。周仓扛刀桥上站，关公勒马看春秋。罗成白，敬德黑，张飞胡子一大堆。月亮圆圆在天边，眼镜圆圆在眼前，烧饼圆圆长街卖，车轱辘圆圆道两边。芝麻开花节节高，棉花开花毛着腰，藤子开花无人见，玉米开花一嘴毛。喜鹊穿青又穿白，乌鸦穿出皂靴来，野鸡身披十样锦，鹗丽儿身披麻布口袋。 27. 一道黑，两道黑，三四五六七道黑，八九道黑十道黑。我买了个烟袋乌木杆儿，我是掐着它的两头那么一道黑。二姑娘描眉去演戏，照着她的镜子那么两道黑。粉皮儿墙，写川字儿，横瞧竖瞧三道黑。象牙桌子乌木腿儿，把它放着在那炕上那么四道黑。我买了个母鸡不下蛋，把它圈在那个笼里捂到(五道)黑。挺好的骡子不吃草，把它拉到在那街上遛到(六道)黑。买了头小驴儿不拉磨，背上它的鞍韂骑(七)到(道)黑。姐俩南洼去割麦，丢了她的镰刀拔到(八道)黑。月窠儿的小孩儿子得了病，团几个艾球灸到(九道)黑。卖瓜籽的打瞌睡，哗啦啦啦撒了那么一大堆，他的扫帚簸箕不凑手，那么一个一个拾到(十道)黑。177. 1、八百标兵奔北坡，炮兵并排北边跑， 炮兵怕把标兵碰，标兵怕碰炮兵炮。(双唇) 2、巴老爷有八十八棵芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。(锻炼唇力) 3、门口吊刀，刀倒吊着。……(反复说，锻炼舌的顶力) 4、山前有个催粗腿，山后有个催腿粗， 俩人山前来比腿，不知是催粗腿比催腿粗的腿粗， 还是催腿粗比催腿粗的腿粗。 5、粉红墙上画凤凰，凤凰画在粉红墙。红凤凰、粉凤凰，红粉凤凰花凤凰。 6、丝瓜藤 丝瓜藤上绕满绳， 瓜藤绕着绳架伸。 绳长藤伸瓜儿长， 绳粗藤壮瓜儿沉。 7、风吹银铃叮铃铃 小琳琳，爱银铃， 琳琳用劲摇银铃， 银铃的铃声真好听。 风吹银铃叮铃铃， 小琳以为铃失灵， 银铃笑琳琳真是不机灵! 8、藤和绳 瓜藤身上绕满绳， 瓜藤绕着绳架伸。 绳长藤伸瓜儿生， 绳粗藤壮瓜儿沉。 9、盈林爱银铃 小盈林，爱银铃， 盈林用劲摇银铃， 银铃声音真动听。 风吹银铃叮铃铃， 盈林心中喜盈盈， 笑声尽情赛银玲。 主持人播音员专业八级绕口令考试试卷 第一题： 老龙恼怒闹老农， 老农恼怒闹老龙。 农怒龙恼农更怒， 龙恼农怒龙怕农。 第二题： 牛郎恋刘娘 刘娘恋牛郎 牛郎年年念刘娘 刘娘年年恋牛郎 郎念娘来娘恋娘 第三题： 七巷一个漆匠，西巷一个锡匠。 七巷漆匠用了西巷锡匠的锡， 西巷锡匠拿了七巷漆匠的漆， 七巷漆匠气西巷锡匠用了漆， 西巷锡匠讥七巷漆匠拿了锡。 第四题： 初级大声说20遍(红凤凰) 中级大声说20遍(粉红凤凰) 高级大声说10遍(红凤凰.黄凤凰.粉红凤凰花凤凰) 绕口令江湖等级评定： 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 超长绕口令集合： 1、南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 2、六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 3、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 4、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子，过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 5、司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。178. 1.你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2.扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 3.小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 4.山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 5.师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 6.坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 7.老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 8.有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 9.山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 10.山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 11.出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 12.高高山上到有一位老僧，身穿着衲头几千层。你要问老僧年纪有多么大，曾记得黄河九澄清。五百年前，澄一澄，总共是四千五百冬。 13.老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 14.石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 15.紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 16.石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 17.一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。( ) 18.(数玲珑塔)玲珑塔来塔玲珑，玲珑宝塔第一层。一张高桌四条腿，一个和尚一本经，一个铙钹一口磬，一个木鱼一盏灯。一个金钟，整四两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 19.铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 20.河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 21.八个徒弟，学会了八中艺，八仙过海，各显其能：青头愣会打磬，愣头青会撞钟。僧三点会吹管，点三僧会捧笙。蹦葫芦棒会打鼓，棒葫芦蹦会念经。随风倒他会扫地，这倒随风他会点灯。 22.天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 23.婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 24.有个懒汉本姓阮，提个篮子卖鸡卵，“卖卵”“卖卵”使劲喊，谁都不来买鸡卵，不是鸡卵品种乱，而是鸡卵皮太软。卖不出鸡卵难买饭，回家吃饭路又远，胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。 25.老师傅一见有了气，要打徒弟整八名。眼睁睁，八位徒弟个顶个的就要挨打，从外面，又来了五位云游的僧。五位僧人把情讲，罚他们后面去数塔玲珑。玲珑宝塔，十三起儿，临去数单层，回来数双层，谁要是数过来谁就是大师兄。 26.老僧收了八个徒弟，八个弟子个顶个的有法名。大徒弟名字就叫青头愣，二徒弟名叫愣头青。三徒弟名字就叫僧三点，四徒弟名字就叫做点三僧。五徒弟名叫蹦葫芦棒，六徒弟名叫棒葫芦蹦。七徒弟名字就叫随风倒，八徒弟就叫做倒随风。 27.出东门，过大桥，大桥前面一树枣，拿着竿子去打枣，青的多，红的少，一个枣，两个枣，三个枣，四个枣，五个枣，六个枣，七个枣，八个枣，九个枣，十个枣;十个枣，九个枣，八个枣，七个枣，六个枣，五个枣，四个枣，三个枣，两个枣，一个枣，这是一个绕口呤，一口气说完才算好。 28.老师傅叫他们换上了一换，不知道换成换不成。这个愣头青他打不了这青头愣的磬，青头愣撞不了愣头青的钟。点三僧吹不了这僧三点的管，僧三点捧不了点三僧的笙。棒葫芦蹦打不了蹦葫芦棒的鼓，蹦葫芦棒他念不了棒葫芦蹦的经。倒随风他扫不了这随风倒的地，随风倒他点不了这倒随风的灯。179. 绕口令大全 1．十和四 四是四，十是十，十四是十四，四十是四十，莫把四字说成十， 休将十字说成四。若要分清四十和十四，经常练说和四。 2．捉兔 一位爷爷她姓顾，上街打醋又买布。 买了布，打了醋，回头看见鹰抓兔。 放下布，搁下兔，上前去追鹰和兔， 飞了鹰，跑了兔。打翻醋，醋湿布。 3．小毛与花猫 小毛抱着花猫， 花猫用爪抓小毛， 小毛用手拍花猫， 花猫抓破了小毛， 小毛打疼了花猫， 小毛哭，花猫叫， 小毛松开了花猫， 花猫跑离了小毛。 4．小花猫 小花猫爱画画， 先画一朵腊梅花， 又画一个小喇叭， 带着腊梅花， 吹着小喇叭， 回家去见妈妈， 妈妈见了笑哈哈。 5．鸟和猫 树上一只鸟， 地上一只猫。 地上的猫想咬树上的鸟， 树上的鸟想啄猫的毛。 6．猫鼻子 白猫黑鼻子，黑猫白鼻子； 黑猫的白鼻子，碰破了白猫的黑鼻子， 白猫的黑鼻子破了，剥了秕谷壳儿补鼻子； 黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 7．狗与猴 树上卧只猴，树下蹲条狗。 猴跳下来撞了狗， 狗翻起来咬住猴， 不知是猴咬狗，还是狗咬猴。 8．鹅过河 哥哥弟弟坡前坐，坡上卧着一只鹅， 坡下流着一条河，哥哥说：“宽宽的河， 弟弟说：白白的鹅。鹅要过河，河要渡鹅， 不知是鹅过河，还是河渡鹅。 9．小猪 小猪找锄头，吭哧吭哧走。 小鸟唱枝头，小猪扭头瞅， 锄头撞石头，石头砸猪头。 小猪怨锄头，锄头怨猪头。 10．画狮子 有个好孩子，拿张画图纸， 来到石院子，学画石狮子。 一天来画一次石狮子， 十天来画十次石狮子。 次次画石狮子，天天画石狮子， 死狮子画成了“活狮子”。 11．羊和狼 东边来了一只小山羊，西边来了一只大灰狼，一起走到小桥上，小山羊不让大灰狼，大灰狼不让小山羊，小山羊叫大灰狼让小山羊，大灰狼叫小山羊让大灰狼，羊不让，狼不让羊，扑通一起掉到河中央。 12．分果果 多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。说要小果果，外婆乐呵呵。 13．南南有个篮 南南有个篮篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘， 盘盘打了碗碗，碗碗撒了饭饭。 14．瘸子 北边来了一个瘸子，背着一捆橛子， 南边来了一个瘸子，背着一筐茄子。 背橛子的瘸子打了背茄子的瘸子一橛子。 背茄子的瘸子打了背橛子的瘸子一茄子。 15．小华和胖娃 小华和胖娃，两人种花又种瓜， 小华会种花不会种瓜， 胖娃会种瓜不会种花， 小华教胖娃种花，胖娃教小华种瓜。 16．白家伯伯 北贫坡上白空有个伯伯， 家里养着一百八十八只白鹅， 门口种着一百八十八棵白果， 树上住着一百八十八只八哥。 八哥在白果树上吃白果， 白鹅气得直叫：我饿！我饿！ 17．小牛赔油 小牛放学去打球，踢倒老刘一瓶油， 小牛回家取来油，向老刘道歉又赔油， 老刘不要小牛还油，小牛硬要把油还给老刘， 老刘夸小牛，小牛直摇头， 你猜老刘让小牛还油，还是不让小牛还油。 18．送花 华华有两朵红花，红红有两朵黄花， 华华想要黄花，红红想要红花， 华华送给红红一朵红花， 红红送给华华一朵黄花。 19．好孩子 张家有个小英子，王家有个小柱子， 张家的小英子，自己穿衣洗袜子，天天扫地擦桌子， 王家的小柱子，捡到一只皮夹子，还给后院大婶子。 小英了，小柱子，他们都是好孩子。 20．老伯 郭老伯、骆第伯、毕老伯、柏老伯， 郭骆毕柏四老伯，约着城北买菱角， 买菱角阁上剥，菱角壳戳了四老伯了脚。 21．捞虾 小溪流水哗啦啦，小华手拿簸萁去小溪里捞虾， 一捞捞起一只大河虾和半簸萁烂泥沙。 虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 22．六叔和六舅 好六叔和好六舅， 借给六斗六升绿绿豆。 打罢秋，接住豆， 再还六叔六舅六斗六升绿绿豆。 23．小秋和小牛 小妞妞，叫小秋，梳着两个小抓鬏， 小胖胖，叫小牛，穿着一个小兜兜。 小秋帮着小牛记扣扣，小牛帮小秋剥豆豆， 小秋、小牛手拉手，一块儿玩，一块儿走。 24．植树 老顾大顾和 小顾，扛锄植树走出屋， 漫天大雾罩峡谷，雾像灰布满路铺， 大顾关注喊小顾。 老顾扛锄又提树， 雾里植树尽义务。 25．白果树 我从伯伯门前过， 看见伯爹伯妈前种着白果树， 白果树上站着百十百个白斑鸠， 我就拣了百十百块白石头， 打那百十百个白斑鸠。 26．一捆葱 东边来个小朋友叫小松，手里拿着一捆葱。 西边来个小朋友叫小丛，手里拿着小闹钟。 小松手里葱捆提松，掉在地上一些葱。 小丛忙放闹钟去拾葱，帮助小松捆紧葱。 小松夸小丛像雷锋，小丛说小松爱劳动。 27．收葵花 葵花、蓖麻胖娃小筐手中拿，来到园中收葵花； 小华小篮身上挎，一同走进园中收蓖麻。 胖娃种的葵花花盘大，小华种的蓖麻密麻麻。 小华去帮胖娃摘葵花，胖娃去帮小华收葵花。 小华和胖娃，收了葵花、蓖麻献国家。 28．荷花和蛤蟆 一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。 29．看花和吃瓜 妈妈爱栽花，爸爸爱种瓜；妈妈载桃花，爸爸种西瓜； 桃花红，红桃花，娃娃脸上笑哈哈； 爸爸给我吃西瓜，娃娃心里乐开花。 30．花和瓜 瓜藤开花像喇叭，娃娃爱花不去掐。 瓜藤开花瓜花结花，没花就没瓜。 吃瓜要爱花，娃娃爱花也爱瓜。180. 南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口；他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗；还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 打南边来了个哑巴，腰里别了个喇叭；打北边来了个喇嘛，手里提了个獭犸。提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭；别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭；还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸；哑巴嘀嘀哒哒吹喇叭。 九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 天上一颗星，地下一块冰，屋上一只鹰，墙上一排钉。抬头不见天上的星，乒乓乒乓踏碎地下的冰，啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。 八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 南边来个老爷子，手里拿碟子，碟子里装茄子，一下碰上了橛子。打了碟子，洒了茄子，摔坏了老爷子。 四是四，十是十，十四是十四，四十是四十， 哥哥挎筐过宽沟，快过宽沟看怪狗，光看怪狗瓜筐扣，瓜滚筐扣哥怪狗。 八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 嘴说腿，腿说嘴，嘴说腿爱跑腿，腿说嘴爱卖嘴。光动嘴不动腿，光动腿不动嘴，不如不长腿和嘴。 有个小孩叫小杜，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，飞了鹰，跑了兔。洒了醋，湿了布。 树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 白果打白布白布包白果，白果恨白布，白布打白果，白果打白布。 一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来；二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子，山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山当腰三哥三嫂子，两个三斗三升酸枣子。 三月三，小三去登山。上山又下山，下山又上山。登了三次山，跑了三里三。出了一身汗，湿了三件衫。小三山上大声喊：“离天只有三尺三！” 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼；六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。181. 1、海水长，长长长，长长长消。 2、老翁卖酒老翁买，老翁买酒老翁卖。 3、小涌勇敢学游泳，勇敢游泳是英雄。 4、一堆粪，一堆灰，灰混粪，粪混灰。 5、门前有八匹大伊犁马，你爱拉哪匹马拉哪匹马。 6、门口有四辆四轮大马车，你爱拉哪两辆来拉哪两辆。 7、鼓上画只虎，破了拿布补。不知布补鼓，还是布补虎。 8、狼打柴，狗烧火，猫儿上炕捏窝窝，雀儿飞来蒸饽饽。 9、长城长，城墙长，长长长城长城墙，城墙长长城长长。 10、大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头。 11、大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子。 12、张康当董事长，詹丹当厂长，张康帮助詹丹，詹丹帮助张康。 13、隔着墙头扔草帽，也不知草帽套老头儿，也不知老头儿套草帽。 14、三山撑四水，四水绕三山，三山四水春常在，四水三山四时春。 15、司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 16、八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 17、大帆船，小帆船，竖起桅杆撑起船。风吹帆，帆引船，帆船顺风转海湾。 18、粉红墙上画凤凰，凤凰画在粉红墙。红凤凰、粉凤凰，红粉凤凰花凤凰。 19、哥跨瓜筐过宽沟，快过宽沟观怪狗，光顾观狗瓜筐扣，瓜滚筐空哥怪狗。 20、军车运来一堆裙，一色军用绿色裙。军训女生一大群，换下花裙换绿裙。 21、老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农。 22、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 23、丝瓜藤上绕满绳，瓜藤绕着绳架伸。绳长藤伸瓜儿长，绳粗藤壮瓜儿沉。 24、孙伦打靶真叫准，半蹲射击特别神，本是半路出家人，摸爬滚打练成神。 25、无父母，不孤独，五叔督促苦读书，不读书，无出路，独宿竹屋哭不住。 26、断头台倒吊短单刀，歹徒登台偷短刀，断头台塌盗跌倒，对对短刀叮当掉。 27、真绝，真绝，真叫绝，皓月当空下大雪，麻雀游泳不飞跃，鹊巢鸠占鹊喜悦。 28、郑政捧着盏台灯，彭澎扛着架屏风，彭澎让郑政扛屏风，郑政让彭澎捧台灯。 29、那边划来一艘船，这边漂去一张床，船床河中互相撞，不知船撞床，还是床撞船。 30、知之为知之，不知为不知，不以不知为知之，不以知之为不知，唯此才能求真知。182. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 4、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 5、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 6、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 7、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 8、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 9、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 10、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 11、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 12、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 13、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 14、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 15、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 16、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 17、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 18、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 19、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 20、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 21、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 22、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 23、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 24、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 25、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 26、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 27、高高山上到有一位老僧，身穿着衲头几千层。你要问老僧年纪有多么大，曾记得黄河九澄清。五百年前，澄一澄，总共是四千五百冬。 28、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 29、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 30、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 31、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 32、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 33、(数玲珑塔)玲珑塔来塔玲珑，玲珑宝塔第一层。一张高桌四条腿，一个和尚一本经，一个铙钹一口磬，一个木鱼一盏灯。一个金钟，整四两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 34、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 35、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 36、八个徒弟，学会了八中艺，八仙过海，各显其能：青头愣会打磬，愣头青会撞钟。僧三点会吹管，点三僧会捧笙。蹦葫芦棒会打鼓，棒葫芦蹦会念经。随风倒他会扫地，这倒随风他会点灯。 37、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 38、婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 39、有个懒汉本姓阮，提个篮子卖鸡卵，“卖卵”“卖卵”使劲喊，谁都不来买鸡卵，不是鸡卵品种乱，而是鸡卵皮太软。卖不出鸡卵难买饭，回家吃饭路又远，胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。 40、老师傅一见有了气，要打徒弟整八名。眼睁睁，八位徒弟个顶个的就要挨打，从外面，又来了五位云游的僧。五位僧人把情讲，罚他们后面去数塔玲珑。玲珑宝塔，十三起儿，临去数单层，回来数双层，谁要是数过来谁就是大师兄。 41、老僧收了八个徒弟，八个弟子个顶个的有法名。大徒弟名字就叫青头愣，二徒弟名叫愣头青。三徒弟名字就叫僧三点，四徒弟名字就叫做点三僧。五徒弟名叫蹦葫芦棒，六徒弟名叫棒葫芦蹦。七徒弟名字就叫随风倒，八徒弟就叫做倒随风。 42山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 43、出东门，过大桥，大桥前面一树枣，拿着竿子去打枣，青的多，红的少，一个枣，两个枣，三个枣，四个枣，五个枣，六个枣，七个枣，八个枣，九个枣，十个枣;十个枣，九个枣，八个枣，七个枣，六个枣，五个枣，四个枣，三个枣，两个枣，一个枣，这是一个绕口呤，一口气说完才算好。 44、老师傅叫他们换上了一换，不知道换成换不成。这个愣头青他打不了这青头愣的磬，青头愣撞不了愣头青的钟。点三僧吹不了这僧三点的管，僧三点捧不了点三僧的笙。棒葫芦蹦打不了蹦葫芦棒的鼓，蹦葫芦棒他念不了棒葫芦蹦的经。倒随风他扫不了这随风倒的地，随风倒他点不了这倒随风的灯。 45、从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 46、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花 47、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆 48、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会 49、树上桐子、树下童子，童子打桐子，桐子落、童子乐;屋前园外、屋内员外，员外扫园外，园外净、员外静 50、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨183. 1、海水长，长长长，长长长消。 2、老翁卖酒老翁买，老翁买酒老翁卖。 3、小涌勇敢学游泳，勇敢游泳是英雄。 4、一堆粪，一堆灰，灰混粪，粪混灰。 5、门前有八匹大伊犁马，你爱拉哪匹马拉哪匹马。 6、门口有四辆四轮大马车，你爱拉哪两辆来拉哪两辆。 7、鼓上画只虎，破了拿布补。不知布补鼓，还是布补虎。 8、狼打柴，狗烧火，猫儿上炕捏窝窝，雀儿飞来蒸饽饽。 9、长城长，城墙长，长长长城长城墙，城墙长长城长长。 10、大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头。 11、大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子。 12、张康当董事长，詹丹当厂长，张康帮助詹丹，詹丹帮助张康。 13、隔着墙头扔草帽，也不知草帽套老头儿，也不知老头儿套草帽。 14、三山撑四水，四水绕三山，三山四水春常在，四水三山四时春。 15、司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 16、八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 17、大帆船，小帆船，竖起桅杆撑起船。风吹帆，帆引船，帆船顺风转海湾。 18、粉红墙上画凤凰，凤凰画在粉红墙。红凤凰、粉凤凰，红粉凤凰花凤凰。 19、哥跨瓜筐过宽沟，快过宽沟观怪狗，光顾观狗瓜筐扣，瓜滚筐空哥怪狗。 20、军车运来一堆裙，一色军用绿色裙。军训女生一大群，换下花裙换绿裙。 21、老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农。 22、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 23、丝瓜藤上绕满绳，瓜藤绕着绳架伸。绳长藤伸瓜儿长，绳粗藤壮瓜儿沉。 24、孙伦打靶真叫准，半蹲射击特别神，本是半路出家人，摸爬滚打练成神。 25、无父母，不孤独，五叔督促苦读书，不读书，无出路，独宿竹屋哭不住。 26、断头台倒吊短单刀，歹徒登台偷短刀，断头台塌盗跌倒，对对短刀叮当掉。 27、真绝，真绝，真叫绝，皓月当空下大雪，麻雀游泳不飞跃，鹊巢鸠占鹊喜悦。 28、郑政捧着盏台灯，彭澎扛着架屏风，彭澎让郑政扛屏风，郑政让彭澎捧台灯。 29、那边划来一艘船，这边漂去一张床，船床河中互相撞，不知船撞床，还是床撞船。 30、知之为知之，不知为不知，不以不知为知之，不以知之为不知，唯此才能求真知。 31、水上漂着一只表，表上落着一只鸟。鸟看表，表瞪鸟，鸟不认识表，表也不认识鸟。 32、买白菜，搭海带，不买海带就别买大白菜。买卖改，不搭卖，不买海带也能买到大白菜。 33、姐姐借刀切茄子，去把儿去叶儿斜切丝，切好茄子烧茄子，炒茄子、蒸茄子，还有一碗焖茄子。 34、贝贝飞纸飞机，菲菲要贝贝的纸飞机，贝贝不给菲菲自己的纸飞机，贝贝教菲菲自己做能飞的纸飞机。 35、隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸。 36、白石白又滑，搬来白石搭白塔。白石塔，白石搭，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 37、一葫芦酒，九两六。一葫芦油，六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 38、忽听门外人咬狗，拿起门来开开手;拾起狗来打砖头，又被砖头咬了手;从来不说颠倒话，口袋驮着骡子走。 39、天上七颗星，树上七只鹰，梁上七个钉，台上七盏灯。拿扇扇了灯，用手拔了钉，举枪打了鹰，乌云盖了星。 40、夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山。 41、咬牛奶，喝面包，夹着火车上皮包。东西街，南北走，出门看见人咬狗。拿起狗来打砖头，又怕砖头咬我手。 42、圆圈圆，圈圆圈，圆圆娟娟画圆圈。娟娟画的圈连圈，圆圆画的圈套圈。娟娟圆圆比圆圈，看看谁的圆圈圆。 43、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 44、华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花。 45、男演员穿蓝制服，女演员穿棉制服，蓝制服是棉制服，棉制服是蓝制服。男演员穿蓝棉制服，女演员穿棉蓝制服。 46、王庄卖筐，匡庄卖网，王庄卖筐不卖网，匡庄卖网不卖筐，你要买筐别去匡庄去王庄，你要买网别去王庄去匡庄。 47、山前有个催粗腿，山后有个催腿粗，俩人山前来比腿，不知是催粗腿比催腿粗的腿粗，还是催腿粗比催腿粗的腿粗。 48、小陈去卖针，小沈去卖盆。俩人挑着担，一起出了门。小陈喊卖针，小沈喊卖盆。也不知是谁卖针，也不知是谁卖盆。 49、小琳琳，爱银铃，琳琳用劲摇银铃，银铃的铃声真好听。风吹银铃叮铃铃，小琳以为铃失灵，银铃笑琳琳真是不机灵! 50、冲冲栽了十畦葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松?184. 播音主持培训绕口令 六十六头牛 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼， 翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 老六放牛 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴; 来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛， 撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油， 拴好牛，看好猴，一同上楼去喝酒。 连念七遍就聪明 天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。 呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰， 抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 天上七颗星 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。 吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。 一阵风来吹来七盏灯。一片乌云遮掉七颗星。 白 老 八 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 八 座 屋 八只小白兔，住在八棱八角八座屋。 八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 拔萝卜 出八十八二十八，八个小孩儿把萝卜拔，你也拔，我也拔，看谁拔得多，看谁拔得大。 你拔得不多个儿不小，我拔得不少个儿不大。一个萝卜一个坑儿，算算多少用车拉， 一个加俩，俩加仨，七十二个加十八， 拿个算盘打一打，一百差俩九十八。 九个酒迷喝醉酒 九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。 喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。 九杯酒，酒九口，喝罢九个酒迷醉了酒。 酒 换 油 一葫芦酒九两六，一葫芦油六两九。 六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 牛 驮 油 九十九头牛，驮着九十九个篓。每篓装着九十九斤油。 牛背油篓扭着走，油篓磨坏篓漏油，九十九斤一个篓，还剩六十六斤油。你说漏了几十几斤油? 十 和 四 四是四，十是十，十四是十四，四十是四十。 莫把四字说成十，休将十字说成四。 若要分清四十和十四，经常练说十和四。 数 狮 子 公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子? 播音主持绕口令练习 以声母为主的绕口令 作绕口令练习要注意以下几点： 第一，要循序渐进。绕口令练习并非只是耍嘴皮子，不要一味求快。最初的练习应特别注意字音质量，需把音咬准，劲使稳，打开韵腹，利索收音。待慢读稳妥之后再逐渐加快速度。 第二，要强己所难。把握不好的段子要多练，勤练。 第三，内容 清楚，感情充沛。 1，唇舌 (b,p) 经典 绕口令 八百标兵奔北坡，北坡炮兵并排跑。 炮兵怕把标兵碰，标兵怕碰炮兵炮。 (b) 八老爷有八十八棵芭蕉树。 来了八十八个把式要在巴老爷的八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八棵芭蕉树， 巴老爷在八十八棵芭蕉树下哭。 (b,p,m) 白庙外蹲着只白猫， 白庙里有一顶白帽。 白庙外的白猫看见了白庙里的白帽。 叼着白庙里的白帽跑出了白庙。 (m) 妈妈骑马，马慢，妈妈骂吗。 牧童磨墨，墨抹牧童一目墨。 小猫摸煤，煤飞小猫一毛煤。 (b,p,t) 一座棚傍峭壁旁，峰边喷泻瀑布长。 不怕暴雨瓢泼冰雹落， 不怕寒风扑面雪飘扬。 并排分班翻山攀坡把宝找， 聚宝盆里松柏飘香百宝藏。 背包奔跑报矿炮劈山， 篇篇捷报飞伴金凤凰。 2，舌根音 (g,k) 哥挎瓜筐过宽沟，赶快过沟看怪狗， 光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 (g,b,z) 簸了秕谷子簸谷秕子。 后簸谷秕子，先簸秕谷子。 会簸谷秕子，必会簸秕谷子。 不会簸秕谷子，必不会簸谷秕子。 (g,b,p,u) 屋里一个破烂鼓 ， 扯点破布就来补。 也不知破布补烂鼓， 还是破鼓补破布。 只见鼓补布，布补鼓。布补鼓，鼓补布。 补来补去，布不成布，鼓不成鼓。 3，舌面音 (j,q) 七加一，七减一，加完减完等于几? 七加一，七减一，加完减完还是七。 (j,q,x,i) 稀奇稀奇真稀奇， 麻雀踩死老母鸡。 蚂蚁身长三尺六。 八十岁老头躺在摇篮里。 (j,q,x) 西巷一个漆匠，七巷一个锡匠。 西巷的漆匠偷了七巷锡匠的锡。 七巷的锡匠偷了西巷漆匠的漆; 西巷的漆匠为七巷的锡匠偷漆而生气。 七巷的锡匠因西巷的漆匠头锡受刺激。 一个生气，一个受刺激。 岂不知你俩都是目无法纪。 4，舌尖音 (zh,ch,sh) 时事学习 看报纸，报纸登的是时事。 带着报纸要多思，心里装着天下事。 (zh,sh ,a) 知道就是知道，不知道就是不知道。 不要知道说不知道， 也不要不知道装知道。 一定要做到老老实实，实事求是， 不折不扣的真知道。 (sh) 山羊上山，山碰山羊脚。 水牛下水，水没水牛腰。 (zh,ch,u) 朱家种棵竹，竹笋初长出。 朱叔处处锄，锄出笋来煮。 竹枯笋不出。竹叔知护竹。 (d,t) 谭家谭老汉，挑担到蛋摊，买了半担蛋; 挑担到炭摊，买了半担炭，满担是蛋炭。 老汉往家赶，脚下绊一绊，跌了谭老汉， 破了半担蛋，翻了半担炭，脏了新衣衫。 老汉看一看，急得满头汗， 炭蛋完了蛋，怎吃蛋炒饭。 超越自己。。 (i,b,m) 有一个喇嘛，手里提着个鳎目。 有一个哑巴，腰里别着个喇叭。 手里提着鳎目的喇嘛 要拿鳎目换哑巴腰里别着的喇叭。 腰里别着喇叭的哑巴 不肯拿喇叭换喇手里提着的鳎目 手里提着鳎目的喇嘛 打了腰里别着喇叭的哑巴一鳎目; 腰里别着喇叭的哑巴 也打了手里提着鳎目的喇嘛一喇叭。 (c,t) 山前有个崔粗腿，山后有个崔腿粗。 两人山前来比腿。 不知是崔粗腿比崔腿粗的腿粗， 还是崔腿粗比催粗腿的腿粗。185. 【导语】让我们一同来动嘴嘴唇，完美而快速的念出这一串又一串的文字吧。快速而精准，你值得拥有！无忧考网为大家准备了《小学生声母绕口令练习》，快来看看吧！ b-p：补破皮褥子不如不补破皮褥子(《补皮褥子》) b-p：吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿(《葡萄皮儿》) b-p：八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。(《八百标兵》) d：会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，那就吃不成我的炖冻豆腐(《炖冻豆腐》)。 l：六十六岁刘老六，修了六十六座走马楼，楼上摆了六十六瓶苏合油，门前栽了六十六棵垂杨柳，柳上拴了六十六个大马猴。忽然一阵狂风起，吹倒了六十六座走马楼，打翻了六十六瓶苏合油，压倒了六十六棵垂杨柳，吓跑了六十六个大马猴，气死了六十六岁刘老六(《六十六岁刘老六》)。 d-t：大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子(《大兔子和大肚子》)。 n-l：门口有四辆四马车，你爱拉哪两辆就来拉哪两辆(《四辆四马车》)。 h：华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花(《华华和红红》)。 j、q、x：七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。(《漆匠和锡匠》)。 g-k：哥挎瓜筐过宽沟，快过宽沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗(《哥挎瓜筐过宽沟》)。 h-f：一堆粪，一堆灰，灰混粪，粪混灰(《一堆粪》)。 z-zh：隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸(《撕字纸》)。 bs-sh：三山撑四水，四水绕三山，三山四水春常在，四水三山四时春(《三山撑四水》)。 z、c、s-j、x：司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻(《司机买雌鸡》)。 zh、ch、sh：大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头(《大车拉小车》)。 r：夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山(《说日》)。 sh、四声：石室诗士施史，嗜狮，誓食十狮，氏时时适市，氏视十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮尸，食时，始识十狮尸实是十石狮尸，试释是事实(《施氏食狮史》)。186. 【导语】绕口令多是诙谐而活泼，节奏感较强，富有音乐效果。有的用方言朗读更具有浓郁乡土特色。以下是无忧考网为大家准备的，希望对大家有帮助。 天上一只鹅 地上一只鹅 鹅飞鹅跑我(发鹅音)赶鹅 鹅下鹅蛋我抱鹅 一位爷爷他姓顾， 上街打醋又买布， 买了布，打了醋， 回头看见鹰抓兔。 放下布，搁下醋， 上前去追鹰和兔， 飞了鹰，跑了兔。 打翻醋，醋湿布。 小猪扛锄头， 吭哧吭哧走。 小鸟唱枝头， 小猪扭头瞅， 锄头撞石头， 石头砸猪头。 小猪怨锄头， 锄头怨猪头。 白石白又滑， 搬来白石搭白塔。 白石塔， 白石塔， 白石搭石塔， 白塔白石搭。 搭好白石塔， 白塔白又滑。 水中映着彩霞， 水面游着花鸭。 霞是五彩霞， 鸭是麻花鸭。 麻花鸭游进五彩霞， 五彩霞网住麻花鸭。 乐坏了鸭， 拍碎了霞， 分不清是鸭还是霞。 四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿 谁说四十是“细席”， 他的舌头没用力; 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。187. 【导语】绕口令是中国民间语言游戏，将声母、韵母或声调极易混同的字，组成反复、重叠、绕口、拗口的句子，要求一口气急速念出。以下是无忧考网为大家准备的，希望对大家有帮助。 天上满天星， 地上满山灯， 满天星亮满天庭， 满山灯接满天星， 星映灯，灯映星， 分不清是灯还是星。 油一缸 豆一筐 老鼠嗅着油豆香 爬上缸 跳进筐 偷油偷豆两头忙 又高兴 又慌张 脚一滑 身一晃 扑通，一块跌进缸。 花花去商店买花， 华华给花花拿来画。 花花怪华华把画当花不像话， 华华说花花把“花”说成了“画” 把“花”说成“画”的花花 决心今后学好普通话。 小猫掉进棉花包， 棉包飞起棉花毛。 棉花毛沾小花猫， 小花猫变成棉花毛。 棉花毛变成小花猫。 蝴蝶飞，蝴蝶追。 蝶追追，蝶飞飞。 到底谁追谁， 两只蝴蝶互追追。 四个孩子摘柿子， 老大摘了四个十， 老二摘了十个四， 老三摘了四十个， 老四摘了十四又四十。 爷爷买双鞋子， 奶奶买斤茄子。 爷爷爱吃奶奶烧的茄子， 奶奶爱穿爷爷挑的鞋子， 爷爷奶奶吃完茄子试鞋子。188. 【导语】绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。以下是无忧考网为大家准备的，希望对大家有帮助。 巴老爷有八十八棵芭蕉树，来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 摇啊摇，摇啊摇， 一摇摇到外婆桥， 外婆桥上烧砖窑。 烧砖窑，为哪桩， 青砖绿瓦盖高楼， 一盖盖到天上头。 天上头，有什么， 雷公爷爷、云奶奶 又吵又闹不开交， 雷鸣电闪雨瓢泼。 莫要吵，莫要闹， 云开开，雨停停， 架起一座七彩桥。 太阳公公眯眯笑， 七彩桥上走一遭， 一走走到外婆桥。 山也清，水也绿， 山青水绿美如娇， 美不过外婆门前的 外婆桥。 冬瓜藤 拉拉西瓜藤的手 西瓜藤 摸摸冬瓜藤的头 拉了多少个夜晚 摸了多少个白昼 请你认一认 哪是冬瓜藤的手 哪是西瓜藤的头 大渠养大鱼， 小渠养小鱼， 大渠大鱼吃小鱼， 小渠小鱼怕大鱼。 有一天，下大雨， 小渠流进大渠水， 小渠里有大鱼， 大渠里没小鱼。 路陌人挑了乌盆来卖， 有个妈妈手提着醋瓶来， 上桥时相撞着， 骨碌碌瓶盆都打坏。 盆要瓶赔瓶不肯， 瓶要盆赔盆不肯， 盆要瓶赔瓶要盆赔， 那时瓶盆都要买。189. 【导语】一遍绕口令，让我们感受到那些文字中无穷的乐趣。一起加油吧，在这些文字中获得快乐，获得精彩。以下是无忧考网为大家准备的，希望对大家有帮助。 八百标兵奔北坡， 炮兵并排北边跑， 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 八百标兵奔北坡， 北坡八百炮兵炮， 标兵怕碰炮兵炮， 炮兵怕把标兵碰。 瘸子 北边来了一个瘸子，背着一捆橛子， 南边来了一个瘸子，背着一筐茄子。 背橛子的瘸子打了背茄子的瘸子一橛子。 背茄子的瘸子打了背橛子的瘸子一茄子。 小华和胖娃 小华和胖娃，两人种花又种瓜，小华会种花不会种瓜， 胖娃会种瓜不会种花，小华教胖娃种花，胖娃教小华种瓜。 白家伯伯 北贫坡上有个伯伯，家里养着一百八十八只白鹅， 门口种着一百八十八棵白果，树上住着一百八十八只八哥。 八哥在白果树上吃白果，白鹅气得直叫：我饿！我饿！ 捞虾 小溪流水哗啦啦，小华手拿簸萁去小溪里捞虾， 一捞捞起一只大河虾和半簸萁烂泥沙。 虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 六叔和六舅 好六叔和好六舅，借给六斗六升绿绿豆。 打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 小秋和小牛 小妞妞，叫小秋，梳着两个小抓鬏， 小胖胖，叫小牛，穿着一个小兜兜。 小秋帮着小牛记扣扣，小牛帮小秋剥豆豆， 小秋、小牛手拉手，一块儿玩，一块儿走。 白果树 我从伯伯门前过，看见伯爹伯妈前种着白果树， 白果树上站着百十百个白斑鸠，我就拣了百十百块白石头， 打那百十百个白斑鸠。190. 【导语】绕口令的精妙，在于它字词间相近的读音，总让人混淆读错。而加入数字的绕口令，则显得更加生动活泼。以下是无忧考网为大家准备的，希望对大家有帮助。 相声演员练习专用的绕口令：基础篇 1.出南门奔正南，有一个面铺面向南，面铺门口挂个蓝布棉门帘，摘了蓝布棉门帘，面铺还是面向南，挂上蓝布棉门帘，瞧了瞧，面铺还是面向南。 2.河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 3.一颗星，孤零零，两颗星，放光明。三四五六许多星，照得满天亮晶晶。 4.大米饭喷喷香，我们大家都来尝。吃得快吃得饱，不把饭粒掉桌上。 5.母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。 6.排排坐，吃果果，你一个，我一个。小华没有来，给他留一个。 7.排排好，排排好，小狗小猫做早操。花鹿姐姐喊口令，一二三四做得好。 8.这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 9.出西门走七步，拾到鸡皮补皮裤。是鸡皮补皮裤，不是鸡皮不必补皮裤。 10.我家有个肥净白净八斤鸡，飞到张家后院里。张家院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。我拿他的肥净白净八斤狗赔了我的肥净白净八斤鸡。 11.扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 12.打南边来了个白胡子老头，手里头拄着根崩白的白拐棒棍。 13.吃葡萄不吐葡萄皮，不吃葡萄倒吐葡萄皮。 14.八百标兵奔北坡，炮兵并排北边跑，标兵怕把炮兵碰，炮兵怕碰标兵炮。 相声演员练习专用的绕口令：提高篇 1.正月里，正月正，姐妹二人去逛灯，大姐名叫粉红女，二姐名叫女粉红。粉红女身穿一件粉红袄，女粉红身穿一件袄粉红。粉红女怀抱一瓶粉红酒，女粉红怀抱一瓶酒粉红。姐妹找了个无人处，推杯换盏饮刘伶。女粉红喝了粉红女的粉红酒，粉红女喝了女粉红的酒粉红，粉红女喝了一个酩酊醉，女粉红喝了一个醉酩酊。女粉红揪着粉红女就打，粉红女揪着女粉红就拧。女粉红撕了粉红女的粉红袄，粉红女就撕了女粉红的袄粉红。姐妹打罢落下手，自己买线自己缝。粉红女买了一条粉红线，女粉红买了一条线粉红。粉红女是反缝缝缝粉红袄，女粉红是缝反缝缝袄粉红。 2.会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐。 3.你会糊我的粉红活佛龛来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪! 4.打南边来个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子茄子，砸了瘸子碟子，瘸子毛腰拾茄子。北边来个醉老爷子，腰里掖着烟袋别子，过来要买瘸子茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知老爷子的烟袋别子打了瘸子茄子，也不知瘸子橛子打了老爷子烟袋别子。 5.车上有个盆，盆里有个瓶，乓乓乓，乒乒乒，不知是瓶碰盆，还是盆碰瓶。 6.男演员穿蓝，女演员穿棉，蓝是棉，棉是蓝。男演员穿蓝棉，女演员穿棉蓝。 7.老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 8.小良放羊遇见狼，狼想吃羊怕小良。小良打狼救小羊，狼死羊活靠小良。 9.牛郎恋刘娘，牛郎年年恋刘娘。(五遍) 10.红凤凰，粉凤凰，红粉凤凰花凤凰。(连说五遍) 11.兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。191. 【导语】绕口令是我们常常喜欢使用的一种口头上的技巧。及其快速而准确的说出读音相近的句子或是段落。以下是无忧考网为大家准备的，希望对大家有帮助。 1、Sandy sniffed sweet smelling sunflower seeds while sitting beside a swift stream.桑迪坐在湍急的小溪边尽情地品味着葵花子的香味。 2、If you notice this notice you will notice that this notice is not worth noticing.你看到这张告示，你会发现这张告示是不直得留意的。 3、A lusty lady loved a lawyer and longed to lure him from his laboratory.一个精力充沛的女士爱上了一位律师，她渴望*律师离开实验室，投入她的怀抱。 4、A big black bug bit a big black bear.Where’s the big black bear the big black bug bit? 大黑虫咬大黑熊，被大黑虫咬的大黑熊在那里呢？ 5、I thought a thoughtBut the thought I thought wasn’t the thought I thought I thought.我思考一个问题。可是，我所思考的问题并不是我认为自己正在思考的问题。 6、A skunk sat on a stumpThe skunk thought the stump stunk, and the stump thought the skunk stunk.一只臭鼬坐在树墩上，臭鼬认为树墩发臭，而树墩又认为臭鼬发臭。 7、Can you imagine an imaginary menagerie manager imagining managing an imaginary menagerie? 你可以想象一个虚构的野生动物园经理幻想自己管理一个虚构的野生动物园吗？ 8、Fuzzy wuzzy was a bearFuzzy wuzzy had no hairFuzzy wuzzy wasn’t fuzzyWas he? 毛茸茸、软绵绵的是玩具熊。毛茸茸、软绵绵，一根头发也没有。毛茸茸、软绵绵的玩具熊并不毛茸茸，是吗？ 9、The Wright rightly writes about the righting of the Rights rights to have rites on the right,right? 那工人政党正确写出了有关纠正右翼有坐在右边的礼仪权的建议，对吗？ 10、While we were walking, we were watching window washers wash Washington’s windows with warm washing water.当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。 11、Wally Wrinkle wriggles his white,wrinkled wigWyatt wondered why the wom wires were not wrapped right.Wally Wrinkle扭动着他皱皱的白色假发。Wyatt对这些旧的线没有被包好感到惊讶。 12、Brisk brave brigadiers brandished broad bright blades, blunderbusses, and bludgeons – balancing them badly.敏捷而勇敢的陆军旅长们挥舞着锋利的刀剑、大口径前膛枪和大头短棒——身体差点失去平衡。 13、There is no need to light a night light on a light night like tonight.for a bright night light is just like a slight light.像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 14、I cannot bear to see a bear bear down upon a hareWhen bare of hair he strips the hare, Right there I cry, Forbear! 我实在不忍心看着大熊一步一步向野兔逼近。当大熊差不多将野兔所有的毛发拔掉，我大叫：自制啊！ 15、A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together.一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 1、I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish.我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。 2、A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net.一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口 3、I am not the pheasant plucker, I’m the pheasant plucker’s mateI am only plucking pheasants ‘cause the pheasant plucker’s running lat.我不是拔雉野鸡毛的人，我是他的助手。我在拔雉野鸡的毛，因为拔雉野鸡毛的人赶不及将雉野鸡毛拔掉。 4、A tutor who tooted a flute tried to tutor two tooters to tootSaid the two to their tutor, Is it harder to toot or to tutor two tooters to toot? 一个吹笛的导师尝试教两个吹笛者吹笛。那两个学吹笛的问导师：吹笛难，还是教两个学吹笛的人吹笛难呢？ 5、Amidst the mists and coldest frosts, with stoutest wrists and loudest boasts, he thrusts his fist against the posts and still insists he sees the ghosts.在满布薄雾，严寒期最冻的那天，他用最结实的手腕和最自夸的话用拳头猛力推打柱子，而且声称他见鬼。 6、How many cookies could a good cook cook if a good cook could cook cookies?A good cook could cook as much cookies as a good cook who could cook cookies.如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢？一个好的厨师能做出和其它好厨师一样多的小甜饼。 7、Whether the weather be fine or whether the weather be notWhether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not.无论是晴天或是阴天；无论是冷或是暖；不管喜欢与否，我们都要经受风雨。 8、Underwood would wear underwear if Underwood knew where his underwear was.Underwood’s underwear was in Durwood’s woods.Underwood went into Durwood’s woods and got his underwear.Underwood.如果知道他的内衣在那里的话，他就会把它穿上。 9、If one doctor doctors anther doctor, does the doctor who doctors the doctor doctors the doctor the way the doctor is doctoring doctors? Or does the doctor doctor the way the doctor who doctors doctors如果一位医生给另一位医生看病，给医生看病的医生会按照医生给医生看病的方式给那位医生看病吗？或是医生按照医生看病的医生的方式给那位医生看病？ 10、How much wood would a woodchuck chuck if a woodchuck could chuck wood? He would chuck, he would, as much as he could, and chuck as much wood as a woodchuck would if a woodchuck could chuck wood.假如一只美洲旱獭能够扔掉木头，它可扔掉多少木头呢？它会扔掉，它会，尽全力把木头扔掉。假如一只美洲旱獭能够扔掉木头，它会尽全力扔掉一只美洲旱獭能扔的木头。 11、A bitter biting bittern bit a better brother bittern, and the bitter better bittern bit the bitter biter backAnd the bitter bittern, bitten, by the better bitten bittern, said: I’m a bitter biter bit, alack! 一只沮丧而尖刻的麻鳽咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鳽对它的兄弟说：我是一只充满怨恨的麻鳽！我害人终害己了！ 12、A tree toad loved a she-toad who lived up in a treeHe was a two-toed tree toad but a three-toed toad was sheThe two-toed tree toad tried to win the three-toed she-toad’s heart, for the two-toed tree toad loved the ground that the three-toed tree toad trodBut the two-toed tree toad tried in vainHe couldn’t please her whimFrom her tree toad bower with her three-toed power the she-toad vetoed him.一只树蟾蜍爱上另一只住在树上的蟾蜍女郎。它是一只二趾的蟾蜍，而蟾蜍女郎是三趾的。那只二趾的树蟾蜍尝试夺取三趾蟾蜍女郎的方心，因为二趾蟾蜍喜欢三趾蟾蜍女郎所踩踏的土地。可是，二趾蟾蜍徒劳无功。它不能满足三趾蟾蜍女郎的心意。在三趾蟾蜍女郎的卧室，三趾蟾蜍女郎用它的三趾能力将二趾蟾蜍的念头打消了。192. 一、绕口令(喷口)练习 (一)基础篇1.出南门奔正南，有一个面铺面向南，面铺门口挂个蓝布棉门帘，摘了蓝布棉门帘，面铺还是面向南，挂上蓝布棉门帘，瞧了瞧，面铺还是面向南。 2.河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 3.一颗星，孤零零，两颗星，放光明。三四五六许多星，照得满天亮晶晶。 4.大米饭喷喷香，我们大家都来尝。吃得快吃得饱，不把饭粒掉桌上。 5.母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。 6.排排坐，吃果果，你一个，我一个。小华没有来，给他留一个。 7.排排好，排排好，小狗小猫做早操。花鹿姐姐喊口令，一二三四做得好。 8.这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 9.出西门走七步，拾到鸡皮补皮裤。是鸡皮补皮裤，不是鸡皮不必补皮裤。 10.我家有个肥净白净八斤鸡，飞到张家后院里。张家院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。我拿他的肥净白净八斤狗赔了我的肥净白净八斤鸡。 11.扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 12.打南边来了个白胡子老头，手里头拄着根崩白的白拐棒棍。 13.吃葡萄不吐葡萄皮，不吃葡萄倒吐葡萄皮。 14.八百标兵奔北坡，炮兵并排北边跑，标兵怕把炮兵碰，炮兵怕碰标兵炮。 (二)提高篇 1.正月里，正月正，姐妹二人去逛灯，大姐名叫粉红女，二姐名叫女粉红。粉红女身穿一件粉红袄，女粉红身穿一件袄粉红。粉红女怀抱一瓶粉红酒，女粉红怀抱一瓶酒粉红。姐妹找了个无人处，推杯换盏饮刘伶。女粉红喝了粉红女的粉红酒，粉红女喝了女粉红的酒粉红，粉红女喝了一个酩酊醉，女粉红喝了一个醉酩酊。女粉红揪着粉红女就打，粉红女揪着女粉红就拧。女粉红撕了粉红女的粉红袄，粉红女就撕了女粉红的袄粉红。姐妹打罢落下手，自己买线自己缝。粉红女买了一条粉红线，女粉红买了一条线粉红。粉红女是反缝缝缝粉红袄，女粉红是缝反缝缝袄粉红。 2.会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐。 3.你会糊我的粉红活佛龛来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪！ 4.打南边来个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子茄子，砸了瘸子碟子，瘸子毛腰拾茄子。北边来个醉老爷子，腰里掖着烟袋别子，过来要买瘸子茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知老爷子的烟袋别子打了瘸子茄子，也不知瘸子橛子打了老爷子烟袋别子。 5.车上有个盆，盆里有个瓶，乓乓乓，乒乒乒，不知是瓶碰盆，还是盆碰瓶。 6.男演员穿蓝制服，女演员穿棉制服，蓝制服是棉制服，棉制服是蓝制服。男演员穿蓝棉制服，女演员穿棉蓝制服。 7.老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 8.小良放羊遇见狼，狼想吃羊怕小良。小良打狼救小羊，狼死羊活靠小良。193. 【韵母】 a：门前有八匹大伊犁马，你爱拉哪匹马拉哪匹马(《伊犁马》)。 e：坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅(《鹅》)。 i：一二三，三二一，一二三四五六七。七个阿姨来摘果，七个花篮儿手中提。七棵树上结七样儿，苹果、桃儿、石榴、柿子，李子、栗子、梨(《七棵树上结七样儿》)。 u：鼓上画只虎，破了拿布补。不知布补鼓，还是布补虎(《鼓上画只虎》)。 i-ü：这天天下雨，体育局穿绿雨衣的女小吕，去找穿绿运动衣的女老李。穿绿雨衣的女小吕，没找到穿绿运动衣的女老李，穿绿运动衣的女老李，也没见着穿绿雨衣的女小吕(《女小吕和女老李》) er：要说“尔”专说“尔”/马尔代夫，喀布尔/阿尔巴尼亚，扎伊尔/卡塔尔，尼伯尔/贝尔格莱德，安道尔/萨尔瓦多，伯尔尼/利伯维尔，班珠尔/厄瓜多尔，塞舌尔/哈密尔顿，尼日尔/圣彼埃尔，巴斯特尔/塞内加尔的达喀尔，阿尔及利亚的阿尔及尔。 -i(前)：一个大嫂子，一个大小子。大嫂子跟大小子比包饺子，看是大嫂子包的饺子好，还是大小子包的饺子好，再看大嫂子包的饺子少，还是大小子包的饺子少。大嫂子包的饺子又小又好又不少，大小子包的饺子又小又少又不好(《大嫂子和大小子》)。 -i(后)：知之为知之，不知为不知，不以不知为知之，不以知之为不知，唯此才能求真知(《知之为知之》)。 ai：买白菜，搭海带，不买海带就别买大白菜。买卖改，不搭卖，不买海带也能买到大白菜(《白菜和海带》)。 ei：贝贝飞纸飞机，菲菲要贝贝的纸飞机，贝贝不给菲菲自己的纸飞机，贝贝教菲菲自己做能飞的纸飞机(《贝贝和菲菲》)。 ai-ei：大妹和小妹，一起去收麦。大妹割大麦，小妹割小麦。大妹帮小妹挑小麦，小妹帮大妹挑大麦。大妹小妹收完麦，噼噼啪啪齐打麦(《大妹和小妹》)。 ao：隔着墙头扔草帽，也不知草帽套老头儿，也不知老头儿套草帽(《扔草帽》)。 ou：忽听门外人咬狗，拿起门来开开手;拾起狗来打砖头，又被砖头咬了手;从来不说颠倒话，口袋驮着骡子走(《忽听门外人咬狗》)。 an：出前门，往正南，有个面铺面冲南，门口挂着蓝布棉门帘。摘了它的蓝布棉门帘，棉铺面冲南，给他挂上蓝布棉门帘，面铺还是面冲南(《蓝布棉门帘》)。 en：小陈去卖针，小沈去卖盆。俩人挑着担，一起出了门。小陈喊卖针，小沈喊卖盆。也不知是谁卖针，也不知是谁卖盆(《小陈和小沈》)。 ang：海水长，长长长，长长长消(《海水长》)。 eng：郑政捧着盏台灯，彭澎扛着架屏风，彭澎让郑政扛屏风，郑政让彭澎捧台灯(《台灯和屏风》)。 ang—an：张康当董事长，詹丹当厂长，张康帮助詹丹，詹丹帮助张康(《张康和詹丹》)。 eng—en：陈庄程庄都有城，陈庄城通程庄城。陈庄城和程庄城，两庄城墙都有门。陈庄城进程庄人，陈庄人进程庄城。请问陈程两庄城，两庄城门都进人，那个城进陈庄人，程庄人进那个城?(《陈庄城和程庄城》) ang—eng：长城长，城墙长，长长长城长城墙，城墙长长城长长(《长城长》)。 ia：天上飘着一片霞，水上飘着一群鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞挽住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞(《鸭和霞》)。 ie：姐姐借刀切茄子，去把儿去叶儿斜切丝，切好茄子烧茄子，炒茄子、蒸茄子，还有一碗焖茄子(《茄子》)。 iao：水上漂着一只表，表上落着一只鸟。鸟看表，表瞪鸟，鸟不认识表，表也不认识鸟(《鸟看表》)。 iou：一葫芦酒，九两六。一葫芦油，六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油(《酒换油》) ian：半边莲，莲半边，半边莲长在山涧边。半边天路过山涧边，发现这片半边莲。半边天拿来一把镰，割了半筐半边莲。半筐半边莲，送给边防连(《半边莲》)。 in：你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧(《土变金》)。 iang：杨家养了一只羊，蒋家修了一道墙。杨家的羊撞倒了蒋家的墙，蒋家的墙压死了杨家的羊。杨家要蒋家赔杨家的羊，蒋家要杨家赔蒋家的墙(《杨家养了一只羊》)。 ing：天上七颗星，树上七只鹰，梁上七个钉，台上七盏灯。拿扇扇了灯，用手拔了钉，举枪打了鹰，乌云盖了星(《天上七颗星》)。 ua：一个胖娃娃，画了三个大花活蛤蟆;三个胖娃娃，画不出一个大花活蛤蟆。画不出一个大花活蛤蟆的三个胖娃娃，真不如画了三个大花活蛤蟆的一个胖娃娃。(《画蛤蟆帽》)。 uo(o)：狼打柴，狗烧火，猫儿上炕捏窝窝，雀儿飞来蒸饽饽(《狼打柴狗烧火》)。 uai：槐树槐，槐树槐，槐树底下搭戏台，人家的姑娘都来了，我家的姑娘还不来。说着说着就来了，骑着驴，打着伞，歪着脑袋上戏台(《槐树槐》)。 uei：威威、伟伟和卫卫，拿着水杯去接水。威威让伟伟，伟伟让卫卫，卫卫让威威，没人先接水。一二三，排好队，一个一个来接水(《接水)。 uang：王庄卖筐，匡庄卖网，王庄卖筐不卖网，匡庄卖网不卖筐，你要买筐别去匡庄去王庄，你要买网别去王庄去匡庄(《王庄和匡庄》)。 ueng：老翁卖酒老翁买，老翁买酒老翁卖(《老翁和老翁》)。 ong：冲冲栽了十畦葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松?(《栽葱和栽松》) uan—uang：那边划来一艘船，这边漂去一张床，船床河中互相撞，不知船撞床，还是床撞船(《船和床》)。 uan—an：大帆船，小帆船，竖起桅杆撑起船。风吹帆，帆引船，帆船顺风转海湾(《帆船》)。 uen—en：孙伦打靶真叫准，半蹲射击特别神，本是半路出家人，摸爬滚打练成神(《孙伦打靶》)。 üe：真绝，真绝，真叫绝，皓月当空下大雪，麻雀游泳不飞跃，鹊巢鸠占鹊喜悦(《真绝》)。 ün：军车运来一堆裙，一色军用绿色裙。军训女生一大群，换下花裙换绿裙(《换裙子》)。 üan：圆圈圆，圈圆圈，圆圆娟娟画圆圈。娟娟画的圈连圈，圆圆画的圈套圈。娟娟圆圆比圆圈，看看谁的圆圈圆(《画圆圈》)。 iong：小涌勇敢学游泳，勇敢游泳是英雄(《学游泳》)。194. 1、一堆粪，一堆灰，灰混粪，粪混灰。 2、长虫围着砖堆转，转完砖堆钻砖堆。 3、早招租，晚招租，总找周邹郑曾朱。 4、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 5、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 6、门口有四辆四轮大马车，你爱拉哪两辆来拉哪两辆。 7、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 8、大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子。 9、大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头。 10、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。 11、三山撑四水，四水绕三山，三山四水春常在，四水三山四时春。 12、司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 13、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 14、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 15、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 16、黄花花黄黄花黄，花黄黄花朵朵黄，朵朵黄花黄又香，黄花花香向太阳。 17、十字路口指示灯，红黄绿色分得清。绿灯行，红灯停。红灯停，绿灯行。 18、八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 19、哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 20、山前有只虎，山下有只猴。虎撵猴，猴斗虎；虎撵不上猴，猴斗不了虎。 21、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 22、小华和胖娃，两个种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花。 23、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 24、炮兵攻打八面坡，炮兵排排炮弹齐发射。步兵逼近八面坡，歼敌八千八百八十多。 25、东边庙里有个猫，西边树梢有只鸟。猫鸟天天闹，不知是猫闹树上鸟，还是鸟闹庙里猫。 26、蜻蜓青，青浮萍，青萍上面停蜻蜓，蜻蜓青萍分不清。别把蜻蜓当青萍，别把青萍当蜻蜓。 27、七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。 28、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 29、毛毛和涛涛，跳高又练跑，毛毛教涛涛练跑，涛涛教毛毛跳高，毛毛学会了跳高，涛涛学会了练跑。 30、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 31、隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸。 32、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？ 33、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 34、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 35、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 36、夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山。 37、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？ 38、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 39、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 40、华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花。 41、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 42、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 43、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗？ 44、望月空，满天星，光闪闪，亮晶晶，好象那，小银灯，仔细看，看分明，大大小小，密密麻麻，闪闪烁烁，数也数不清。 45、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松？ 46、辛厂长，申厂长，同乡不同行。辛厂长声声讲生产，申厂长常常闹思想。辛厂长一心只想革新厂，申厂长满口只讲加薪饷。 47、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆；过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 48、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 49、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 50、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 51、三月三，小三去登山；上山又下山，下山又上山；登了三次山，跑了三里三；出了一身汗，湿了三件衫；小三山上大声喊，离天只有三尺三。 52、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 53、哥挎瓜筐过宽沟，赶快过沟看怪狗，光看怪狗瓜筐扣，瓜滚筐空哥怪狗。哥哥过河捉个鸽，回家割鸽来请客，客人吃鸽称鸽肉，哥哥请客乐呵呵。 54、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 55、高高山上有座庙，庙里住着两老道，一个年纪老，一个年纪少。庙前长着许多草，有时候老老道煎药，小老道采药；有时候小老道煎药，老老道采药。 56、一个胖娃娃，捉了三个大花活蛤蟆，三个胖娃娃，捉了一个大花活蛤蟆，捉了一个大花活蛤蟆的三个胖娃娃，真不如捉了三个大花活蛤蟆的一个胖娃娃。 57、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 58、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 59、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 60、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 61、小光和小刚，抬着水桶上岗。上山岗，歇歇凉，拿起竹竿玩打仗。乒乒乒，乓乓乓，打来打去砸了缸。小光怪小刚，小刚怪小光，小光小刚都怪丿竿和水缸。 62、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 63、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 64、会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，哪就吃不成我的炖冻豆腐。 65、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 66、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 67、四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力；谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 68、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？ 69、石室诗士施史，嗜狮，誓食十狮，氏时时适市，氏视十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮尸，食时，始识十狮尸实是十石狮尸，试释是事实。 70、巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住，八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。（短文学网www.duanwenxue.com） 71、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 72、一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 73、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 74、太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地下石头滚上坡；江里骆驼会下蛋，山里鲤鱼搭成窝；腊月苦热直流汗，六月暴冷打哆嗦；姐在房中手梳头，门外口袋把驴驮白石塔，白石搭，白石搭白塔，白塔白石搭，搭好白石塔，白塔白又大。 75、六十六岁刘老六，修了六十六座走马楼，楼上摆了六十六瓶苏合油，门前栽了六十六棵垂杨柳，柳上拴了六十六个大马猴。忽然一阵狂风起，吹倒了六十六座走马楼，打翻了六十六瓶苏合油，压倒了六十六棵垂杨柳，吓跑了六十六个大马猴，气死了六十六岁刘老六。 76、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 77、四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 78、老爷堂上一面鼓，鼓上一只皮老虎，皮老虎抓破了鼓，就拿块破布往上补，只见过破布补破裤，哪见过破布补破鼓四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿谁说四十是“细席”，他的舌头没用力；谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 79、石司四、史肖石去阅览室。石司四年十四，史肖石年四十，年十四的石司四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词忙递给年十四的石司四，年十四的石司四见了好报纸忙递给年四十的史肖石。石司四接过杂志看诗词，史肖石接过报纸看时事，看完诗词和时事，史肖石和石司四出了阅览室。 80、四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。195. 【导语】绕口令练习是提升语言表达能力最有效的方法之一，对于参加全国青少儿语言艺术大赛的小选手来说，练习绕口令不仅可以缓解紧张的情绪，还能让自己的语言表达“更上一层楼”，达到“一箭双雕”的效果。小选手们不妨每天多多练习绕口令。 1、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 3、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 1、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 1、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 1、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 1、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 1、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 2、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 3、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 4、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 2、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 3、长虫围着砖堆转，转完砖堆钻砖堆。 4、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 5、早招租，晚招租，总找周邹郑曾朱。 1、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 2、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 3、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 4、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 1、出东门，过大桥，大桥前面一树枣，拿着竿子去打枣，青的多，红的少，一个枣，两个枣，三个枣，四个枣，五个枣，六个枣，七个枣，八个枣，九个枣，十个枣;十个枣，九个枣，八个枣，七个枣，六个枣，五个枣，四个枣，三个枣，两个枣，一个枣，这是一个绕口呤，一口气说完才算好。 1、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 2、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 1、婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 2、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 196. 对于有口吃的人群，人们往往接受度不是太高。但是从自身来说。我们应该怎么才能提高自己的口语能力。下面从几个绕口令来一步一步的练习。以提高自身水平。 第一步： 老龙恼怒闹老农， 老农恼怒闹老龙。 农怒龙恼农更怒， 龙恼农怒龙怕农。 第二步： 牛郎恋刘娘 刘娘恋牛郎 牛郎年年念刘娘 刘娘年年恋牛郎 郎念娘来娘恋郎 第三步： 七巷一个漆匠，西巷一个锡匠。 七巷漆匠用了西巷锡匠的锡， 西巷锡匠拿了七巷漆匠的漆， 七巷漆匠气西巷锡匠用了漆， 西巷锡匠讥七巷漆匠拿了锡。 第四步： 初级：大声说20遍（红凤凰） 中级：大声说20遍（粉红凤凰） 第五步： 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发；灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞；灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞；灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 编后语：绕口令，不能急，先弄懂大概字的读音以防混淆，多多练习吧，有助于思维的提高呢！197. 1、 会炖我的炖冻豆腐， 来炖我的炖冻豆腐， 不会炖我的炖冻豆腐， 就别炖我的炖冻豆腐。 要是混充会炖我的炖冻豆腐， 炖坏了我的炖冻豆腐， 那就吃不成我的炖冻豆腐。 2、 墙上一根钉，钉上挂条绳， 绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。 滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯， 灯骂绳，瓶说绳，绳说钉， 丁丁当当，乒乓乓乓。 3、 铜勺舀热油，铁勺舀凉油， 铜勺舀了热油舀凉油， 铁勺舀了凉油舀热油。 舀油入炒勺，月月有佳肴。 先炖鱿鱼块，后扒羊肉条。 火在炉下燃，油在勺中熬， 满锅同炎热，管它铜勺与铁勺。 4、 河边两只鹅，白鹅与灰鹅， 哦哦爱唱歌，唱得渴又饿， 昂首吸飞蛾，飞蛾啄不住岸边去找窝。 草窝暗又矮，只得去过河， 河里真暖和，有吃又有喝， 不能再挨饿，遨游真快活，安心唱爱歌。 5、 八个徒弟，学会了八中艺， 八仙过海，各显其能： 青头愣会打磬，愣头青会撞钟。 僧三点会吹管，点三僧会捧笙。 蹦葫芦棒会打鼓，棒葫芦蹦会念经。 随风倒他会扫地，这倒随风他会点灯。 6、 天上有个日头，地下有块石头， 嘴里有个舌头，手上有五个手指头。 不管是天上的热日头，地下的硬石头， 嘴里的软舌头，手上的手指头， 还是热日头，硬石头，软舌头， 手指头，反正都是练舌头。 7、 山里有个寺，山外有个市， 弟子三十三，师父四十四。 三十三的弟子在寺里练写字， 四十四的师父到市里去办事。 三十三的弟子用了四十四小时， 四十四的师父走了三十三里地。 走了三十三里地就办了四十四件事， 用了四十四小时才写了三十三个字。 8、 出东门，过大桥，大桥前面一树枣， 拿着竿子去打枣，青的多，红的少， 一个枣，两个枣，三个枣，四个枣， 五个枣，六个枣，七个枣，八个枣， 九个枣，十个枣；十个枣，九个枣， 八个枣，七个枣，六个枣，五个枣， 四个枣，三个枣，两个枣，一个枣， 这是一个绕口呤，一口气说完才算好。 9、 老师傅叫他们换上了一换，不知道换成换不成。 这个愣头青他打不了这青头愣的磬，青头愣撞不了愣头青的钟。 点三僧吹不了这僧三点的管，僧三点捧不了点三僧的笙。 棒葫芦蹦打不了蹦葫芦棒的鼓，蹦葫芦棒他念不了棒葫芦蹦的经。 倒随风他扫不了这随风倒的地，随风倒他点不了这倒随风的灯。 10、 黑化肥发灰，灰化肥发黑，黑化肥发灰会挥发； 灰化肥挥发会发黑，黑化肥挥发发灰会花飞； 灰化肥挥发发黑会飞花，黑灰化肥会挥发发灰黑讳为花飞； 灰黑化肥会挥发发黑灰为讳飞花， 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞； 灰黑化肥会会挥发发黑灰为讳飞花化为灰， 黑化肥灰化肥灰会挥发发灰黑讳为黑灰花会回飞； 灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。198. 1、 吃葡萄不吐葡葡皮， 不吃葡萄倒吐葡萄皮。 2、 和尚端汤上塔，塔滑汤汤烫塔； 和尚端塔上汤，汤滑塔塔烫汤。 3、 石狮寺有四十四只石狮子， 四十四只石狮子吃四十四枝湿紫柿子。 4、 稀奇稀奇真稀奇， 蟋蟀踩死老母鸡， 汽球碰坏大机器， 蚯蚓身长一丈七。 5、 高高山上一条藤， 藤条头上挂铜铃， 风吹藤动铜铃动， 风静藤停铜铃静。 6、 鼓玻璃棍， 瘪玻璃棍， 鼓玻璃棍没有瘪玻璃棍瘪， 瘪玻璃棍没有鼓玻璃棍鼓。 7、 字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 8、 混纺厂里买混纺， 红混纺，黄混纺，粉混纺， 粉红混纺，黄粉混纺， 红粉混纺和黑混纺。 9、 蒋家羊，杨家墙， 蒋家羊撞倒了杨家墙， 杨家墙压死了蒋家羊， 杨家要蒋家赔墙， 蒋家要杨家赔羊。 10、 小郭画了朵红花， 小葛画了朵黄花， 小郭想拿他的红花换小葛的黄花， 小葛把他的黄花换了小郭的红花。 11、 山前有个严圆眼， 山后有个严眼圆， 二人山前来比眼， 不知是严圆眼的眼圆， 还是严眼圆比严圆眼的眼圆？ 12、 坡上立着一只鹅， 坡下就是一条河。 宽宽的河， 肥肥的鹅， 鹅要过河， 河要渡鹅不知是鹅过河， 还是河渡鹅？ 13、 墙上一个瓶，墙下一个盆， 瓶落下来打破了盆的底， 盆翻转来打破了瓶的嘴， 瓶要盆赔瓶的嘴， 盆要瓶赔盆的底。 14、 一个驼子骑匹骡子， 碰到婆子，挑担茄子， 驼子个骡子践到婆子个茄子， 婆子拖驼子下骡子， 要驼子赔婆子个茄子。 15、 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担要绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。 16、 梁上两对倒吊鸟， 泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟， 惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊， 也惦着梁上的两对倒吊鸟。199. 1、水中映着彩霞，水面游着花鸭。 霞是五彩霞，鸭是麻花鸭。 麻花鸭游进五彩霞，五彩霞网住麻花鸭。 乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 2、哥挎瓜筐过宽沟，赶快过沟看怪狗， 光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 哥哥过河捉个鸽，回家割鸽来请客， 客人吃鸽称鸽肉，哥哥请客乐呵呵。 3、紫瓷盘，盛鱼翅，一盘熟鱼翅， 一盘生鱼翅。迟小池拿了一把瓷汤匙， 要吃清蒸美鱼翅。一口鱼翅刚到嘴， 鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 4、高高山上有座庙，庙里住着两老道， 一个年纪老，一个年纪少。庙前长着许多草， 有时候老老道煎药，小老道采药； 有时候小老道煎药，老老道采药。 5、一个胖娃娃，捉了三个大花活蛤蟆， 三个胖娃娃，捉了一个大花活蛤蟆， 捉了一个大花活蛤蟆的三个胖娃娃， 真不如捉了三个大花活蛤蟆的一个胖娃娃。 6、捡颗小石子，在地上画个方格子， 画好了格子造房子，画个大方格子造个大房子， 画个小方格子造个小房子， 楼上的房子分给鸽子，楼下的房子分给兔子。 7、扁担长，板凳宽，扁担没有板凳宽， 板凳没有扁担长。扁担要绑在板凳上。 板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。 板凳偏不让扁担绑在板凳上。 8、有个好孩子，拿张图画纸， 来到石院子，学画石狮子。 一天来画一次石狮子，十天来画十次石狮子。 次次画石狮子，天天画石狮子，死狮子画成了活狮子。 9、杂志社出杂志，杂志出在杂志社， 有政治常识、历史常识、写作指导、诗词注释、还有那： 植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 10、小光和小刚，抬着水桶上岗。 上山岗，歇歇凉，拿起竹竿玩打仗。 乒乒乒，乓乓乓，打来打去砸了缸。 小光怪小刚，小刚怪小光， 小光小刚都怪丿竿和水缸。 11、石、斯、施、史四老师， 天天和我在一起。石老师教我大公无私， 斯老师给我精神食粮，施老师叫我遇事三思， 史老师送我知识钥匙。我感谢石、斯、施史四老师。 12、认识从实践始，实践出真知。 知道就是知道，不知道就是不知道。 不要知道说不知道，也不要不知道装知道， 老老实实，实事求是，一定要做到不折不扣的真知道。 13、会炖我的炖冻豆腐，来炖我的炖冻豆腐， 不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。 要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐， 哪就吃不成我的炖冻豆腐。 14、山前有四十四个小狮子，山后边有四十四棵紫色柿子树， 山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子， 山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 15、天上有个日头，地下有块石头，嘴里有个舌头， 手上有五个手指头。不管是天上的热日头， 地下的硬石头，嘴里的软舌头，手上的手指头， 还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 16、四是四，十是十，十四是十四， 四十是四十。说好四和十得靠舌头和牙齿。 谁说四十是“细席”，他的舌头没用力； 谁说十四是“适时”，他的舌头没伸直。 认真学，常练习，十四、四十、四十四。 17、公园有四排石狮子，每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子？ 18、石室诗士施史，嗜狮，誓食十狮， 氏时时适市，氏视十狮，恃矢势， 使是十狮逝世，氏拾是十狮尸， 适石室，石室湿，氏使侍拭石室， 石室拭，氏始试食十狮尸，食时， 始识十狮尸实是十石狮尸，试释是事实。 19、巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住， 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 20、石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词， 忙递给年十四的石小四， 年十四的石小四见了好报纸， 忙递给年四十的史肖石。 21、一只花皮花背花青蛙，遇见花背花皮大西瓜。 青蛙说西瓜的背皮没有青蛙的皮背花， 西瓜说青蛙的皮背没有西瓜的背皮花。 小花猫爱画画，先画一朵腊梅花， 又画一个小喇叭，带着腊梅花， 吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 22、山里有个寺，山外有个市， 弟子三十三，师父四十四。 三十三的弟子在寺里练写字， 四十四的师父到市里去办事。 三十三的弟子用了四十四小时， 四十四的师父走了三十三里地。 走了三十三里地就办了四十四件事， 用了四十四小时才写了三十三个字。 23、太阳从西往东落，听我唱个颠倒歌。 天上打雷没有响，地下石头滚上坡； 江里骆驼会下蛋，山里鲤鱼搭成窝； 腊月苦热直流汗，六月暴冷打哆嗦； 姐在房中手梳头，门外口袋把驴驮白石塔， 白石搭，白石搭白塔， 白塔白石搭，搭好白石塔，白塔白又大。 24、六十六岁刘老六，修了六十六座走马楼， 楼上摆了六十六瓶苏合油，门前栽了六十六棵垂杨柳， 柳上拴了六十六个大马猴。忽然一阵狂风起， 吹倒了六十六座走马楼，打翻了六十六瓶苏合油， 压倒了六十六棵垂杨柳，吓跑了六十六个大马猴， 气死了六十六岁刘老六。 25、八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 26、四十四个字和词， 组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。 名词、动词、数词、量词、代词、副词、助词、连词， 组成语词、诗词和唱词， 蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 27、老爷堂上一面鼓，鼓上一只皮老虎， 皮老虎抓破了鼓，就拿块破布往上补， 只见过破布补破裤，哪见过破布补破鼓四和十， 十和四，十四和四十，四十和十四。 说好四和十得靠舌头和牙齿谁说四十是“细席”， 他的舌头没用力；谁说十四是“适时”， 他的舌头没伸直。认真学，常练习，十四、四十、四十四。 28、石司四、史肖石去阅览室。 石司四年十四，史肖石年四十， 年十四的石司四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词忙递给年十四的石司四， 年十四的石司四见了好报纸忙递给年四十的史肖石。 石司四接过杂志看诗词，史肖石接过报纸看时事， 看完诗词和时事，史肖石和石司四出了阅览室。 29、四月十四日十四时四十上集市， 司小四买了四十四斤四两西红柿， 史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。200. 1、山前有个严圆眼，山后有个严眼圆， 二人山前来比眼，不知是严圆眼的眼圆， 还是严眼圆比严圆眼的眼圆？ 2、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部， 师长召开誓师大会。 3、知道就说知道，不知道就说不知道。 不要知道的说不知道，也不要不知道说知道， 要老老实实，实事求是。 4、四是四，十是十，十四是十四， 四十是四十，十不能说成四， 四也不能说成十，假使说错了，就可能误事。 5、夏日无日日亦热，冬日有日日亦寒， 春日日出天渐暖，晒衣晒被晒褥单， 秋日天高复云淡，遥看红日迫西山。 6、坡上立着一只鹅，坡下就是一条河。 宽宽的河，肥肥的鹅，鹅要过河， 河要渡鹅不知是鹅过河，还是河渡鹅？ 7、三哥三嫂子，借给我三斗三升酸枣子， 等我上山摘了三升三斗酸枣子， 再奉还三哥三嫂子的三斗三升酸枣子。 8、史老师，讲时事，常学时事长知识。 时事学习看报纸，报纸登的是时事。 常看报纸要多思，心里装着天下事。 9、华华有两朵黄花，红红有两朵红花。 华华要红花，红红要黄花。 华华送给红红一朵黄花，红红送给华华一朵红花。 10、抱子看报纸报纸是报纸，抱子是抱子， 报纸、抱子两件事，抱子不是报纸， 看报纸不是看抱子，只能抱子看报纸。 11、山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 12、山前有个崔粗腿，山后有个崔腿粗。 二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗， 还是崔腿粗比崔粗腿的腿粗？ 13、望月空，满天星，光闪闪， 亮晶晶，好象那，小银灯， 仔细看，看分明，大大小小， 密密麻麻，闪闪烁烁，数也数不清。 14、葱葱栽了十颗葱，松松栽了十棵松。 冲冲说栽松不如栽葱，松松说栽葱不如栽松。 是栽松不如栽葱，还是栽葱不如栽松？ 15、辛厂长，申厂长，同乡不同行。 辛厂长声声讲生产，申厂长常常闹思想。 辛厂长一心只想革新厂，申厂长满口只讲加薪饷。 16、出南门，走六步，见着六叔和六舅， 叫声六叔和六舅，借我六斗六升好绿豆； 过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 17、辨读找到不念早到，乱草不念乱吵， 制造不念自造，师范不念思凡， 质子不念字纸，师长不念司长， 主力不念阻力，木柴不念木材。 18、老方扛着黄幌子，老黄扛着方幌子。 老方要拿老黄的方幌子，老黄要拿老方的黄幌子， 末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 19、石狮寺前有四十四个石狮子， 寺前树上结了四十四个涩柿子， 四十四个石狮子不吃四十四个涩柿子， 四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山； 上山又下山，下山又上山； 登了三次山，跑了三里三； 出了一身汗，湿了三件衫； 小三山上大声喊，离天只有三尺三。201. 1、一堆粪，一堆灰， 灰混粪，粪混灰。 2、长虫围着砖堆转， 转完砖堆钻砖堆。 3、早招租，晚招租， 总找周邹郑曾朱。 4、一平盆面，烙一平盆饼， 饼碰盆，盆碰饼。 5、吃葡萄不吐葡萄皮儿， 不吃葡萄倒吐葡萄皮儿。 6、门口有四辆四轮大马车， 你爱拉哪两辆来拉哪两辆。 7、粉红墙上画凤凰，红凤凰， 粉凤凰，粉红凤凰，花凤凰。 8、大兔子，大肚子， 大肚子的大兔子，要咬大兔子的大肚子。 9、大车拉小车，小车拉小石头， 石头掉下来，砸了小脚指头。 10、磨房磨墨，墨碎磨房一磨墨； 梅香添煤，煤爆梅香两眉灰。 11、三山撑四水，四水绕三山， 三山四水春常在，四水三山四时春。 12、司机买雌鸡，仔细看雌鸡， 四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 13、锅里煮猪肉，肉里包着骨， 取肉去猪骨，放上一点醋，都吃熟猪肉。 14、隔着窗子撕字纸，一撕横字纸， 再撕竖字纸，撕了四十四张湿字纸。 15、任命是任命，人名是人名， 任命不能说成人名，人名也不能说成任命。 16、黄花花黄黄花黄，花黄黄花朵朵黄， 朵朵黄花黄又香，黄花花香向太阳。 17、十字路口指示灯，红黄绿色分得清。 绿灯行，红灯停。红灯停，绿灯行。 18、八百标兵奔北坡，炮兵并排北边跑， 炮兵怕把标兵碰，标兵怕碰炮兵炮。 19、哥挎瓜筐过宽沟，赶快过沟看怪狗。 光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 20、山前有只虎，山下有只猴。虎撵猴， 猴斗虎；虎撵不上猴，猴斗不了虎。 21、日头热，晒人肉，晒得心里好难受。 晒人肉，好难受，晒得头上直冒油。 22、小华和胖娃，两个种花又种瓜， 小华会种花不会种瓜，胖娃会种瓜不会种花。 23、字纸里裹着细银丝， 细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 24、炮兵攻打八面坡，炮兵排排炮弹齐发射。 步兵逼近八面坡，歼敌八千八百八十多。 25、东边庙里有个猫，西边树梢有只鸟。 猫鸟天天闹，不知是猫闹树上鸟，还是鸟闹庙里猫。 26、蜻蜓青，青浮萍，青萍上面停蜻蜓， 蜻蜓青萍分不清。别把蜻蜓当青萍，别把青萍当蜻蜓。 27、七巷一个漆匠，西巷一个锡匠， 七巷漆匠偷了西巷锡匠的锡， 西巷锡匠偷了七巷漆匠的漆。 28、小四约小石学写字，小石约小四看电视。 小四不看电视只要学写字，小石不学写字只看电视。 29、毛毛和涛涛，跳高又练跑，毛毛教涛涛练跑， 涛涛教毛毛跳高，毛毛学会了跳高，涛涛学会了练跑。 30、扁担长，板凳宽，扁担没有板凳宽， 板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。202. 是谁？ 是谁？ 敲着窗户沙沙沙。 是我，我是小雪花，我从天上来，告诉你们冬天来到啦！ 八楼八角树 出城门，走八步，有棵八棱八角树。 八个八哥飞上树，八棱八角树上住。 树下孩子直发悉，手拿弹弓射大树。 打得八哥离开树，八棱八角掉下树。 司机买雌鸡 司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 是灯还是星 天上满天星，地上满山灯，满天星亮满天庭，满山灯接满天星，星映灯，灯映星，分不清是灯还是星。203. 【导语】无忧考网为大家准备了练习口才的绕口令，赶快练习起来吧，想要拥有好口才，绕口令当属首选，希望大家喜欢！ 大米饭喷喷香，我们大家都来尝。 吃得快吃得饱，不把饭粒掉桌上。 四个孩子摘柿子，老大摘了四个十， 老二摘了十个四，老三摘了四十个，老四摘了十四又四十。 莎莎告诉佳佳，又去告诉花花，妈妈下班乏了，不要惊吵妈妈。 咱们外边玩耍，手帕反眼蒙毒害，玩玩“过桥摸瞎“。 莎莎拉着佳佳，佳佳拉着花花。 大妹和小妹，一起去收麦。 大妹割大麦，小妹割小麦。 大妹帮小妹挑小麦，小妹帮大妹挑大麦。 大妹小妹收完麦，噼噼啪啪齐打麦。 炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快？ 还是锤锤快比锤快锤锤得快？ 天上一只鹅，地上一只鹅，鹅飞，鹅跑，鹅碰鹅。 北贫坡上白家有个伯伯，家里养着一百八十八只白鹅， 门口种着一百八十八棵白果，树上住着一百八十八只八哥。 八哥在白果树上吃白果，白鹅气得直叫：我饿！ 我饿！ 小郭画了朵红花，小葛画了朵黄花， 小郭想拿他的红花换小葛的黄花， 小葛把他的黄花换了小郭的红花。 一个哑子，拿了一只盒子，盒子里有桃子； 一个瞎子的儿子，绊了他一只凳子，瞎子的儿子的凳子， 撞翻哑子盒子里的桃子，哑子拉住瞎子的儿子的凳子， 要他赔还盒子里的桃子，瞎子的儿子不肯赔还哑子盒子里的桃子， 哑子打瞎子的儿子，瞎子的儿子也打哑子。 出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆； 过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 山前有个阎圆眼，山后有个阎眼圆， 二人山前来比眼，不知是阎圆眼的跟圆，还是阎眼圆的眼圆。 爷爷领着孙子黑虎，到猪圈里数黑猪。 黑猪圈在猪圈里，各个猪圈都有猪。 小黑虎不马虎，挨着个儿地把猪数。 黑猪围着小黑虎，转来转去乱乎乎。 黑虎数了半天小黑猪，不知哪些黑猪挨过黑虎数，也不知黑虎数过哪些小黑猪。 逗得爷爷抿嘴笑，急得黑虎直要哭，爷爷说：“小黑虎，你别哭，这是十五只小黑猪。 孩子是孩子，鞋子是鞋子，孩子不是鞋子，鞋子不是孩子。 是孩子穿鞋子，不是鞋子穿孩子。 谁分不清鞋子和孩子，谁就念不准鞋子和孩子。 八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 大门外有四辆四轮大马车，你爱拉哪两辆，来拉哪两辆。 山岩出山泉，山泉源山岩，山泉抱山岩，山岩依山泉，山泉冲山岩。 一块面擀不满案板，半块面倒擀满案板。 花青蛙，叫呱呱，西瓜地里看西瓜，西瓜夸青蛙背背花，青蛙夸西瓜长得大。 一出南门走六步，遇见六叔和六舅，好六叔， 好六舅，借给我六斗六升好绿豆，到了秋， 收了豆，再还六叔六舅六斗六升好绿豆。204. 【导语】让我们一同来动嘴嘴唇，完美而快速的念出这一串又一串的文字吧。快速而精准，你值得拥有！以下是无忧考网为大家准备的，希望对大家有帮助。 一，《三山撑四水》 sānshānchēnɡsìshuǐ， 三山撑四水， sìshuǐràosānshān， 四水绕三山， sānshānsìshuǐchūnchánɡzài， 三山四水春常在， sìshuǐsānshānsìshíchūn 四水三山四时春 bùyàohúluànsīyīdìzhǐ。 不要胡乱撕一地纸。 二，《司机买雌鸡》 sījīmǎicíjī， 司机买雌鸡， zǎixìkàncíjī， 仔细看雌鸡， sìzhīxiǎocíjī， 四只小雌鸡， jījīhǎohuānxǐ， 叽叽好欢喜， sījīxiàoxīxī。 司机笑嘻嘻。 三，《施氏食狮史》 shíshìshīshìshīshǐ， 石室诗士施史， shìshī，shìshíshíshī， 嗜狮，誓食十狮， shìshíshíshìshì，shìshìshíshī， 氏时时适市，氏视十狮， shìshǐshì，shǐshìshíshīshìshì， 恃矢势，使是十狮逝世， shìshíshìshíshīshī，shìshíshì， 氏拾是十狮尸，适石室， shíshìshī，shìshǐshìshìshíshì， 石室湿，氏使侍拭石室， shíshìshì， 石室拭， shìshǐshìshíshíshīshī，shíshí， 氏始试食十狮尸，食时， shǐshíshíshīshīshíshìshíshíshīshī， 始识十狮尸实是十石狮尸， shìshìshìshìshí。 试释是事实。 四，《小狮子和柿子》 山前有四十四个小狮子， 山后边有四十四棵紫色柿子树， 山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子， 山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 五，《石小四和史肖石》 石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词， 忙递给年十四的石小四， 年十四的石小四见了好报纸， 忙递给年四十的史肖石。205. 【导语】绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。以下是无忧考网为大家准备的，供您借鉴。 南面来了个瘸子，腰里别着个橛子， 北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子， 挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子， 挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子，山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山当腰三哥三嫂子，两个三斗三升酸枣子。 公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 捡颗小石子， 在地上画个方格子， 画好了格子造房子， 画个大方格子造个大房子， 画个小方格子造个小房子， 楼上的房子分给鸽子， 楼下的房子分给兔子。 京剧叫京剧， 警句叫警句。 京剧不能叫警句， 警句不能叫京剧。206. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 4、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 5、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 6、十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。 7、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 12、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 13、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 14、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 15、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 16、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 17、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 18、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 19、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;小三山上大声喊，离天只有三尺三。 21、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 24、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 25、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 26、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 27、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 28、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 29、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 30、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 31、四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 32、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子?(短文学网 www.duanwenxue.com) 33、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 34、一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 35、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 36、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 37、四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 38、石司四、史肖石去阅览室。石司四年十四，史肖石年四十，年十四的石司四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词忙递给年十四的石司四，年十四的石司四见了好报纸忙递给年四十的史肖石。石司四接过杂志看诗词，史肖石接过报纸看时事，看完诗词和时事，史肖石和石司四出了阅览室。 39、四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 40、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。207. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 4、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 5、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 6、十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。 7、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 12、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 13、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 14、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 15、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 16、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 17、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 18、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 19、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;小三山上大声喊，离天只有三尺三。 21、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 24、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 25、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 26、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 27、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 28、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 29、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 30、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 31、四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 32、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子?( ) 33、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 34、一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 35、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 36、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 37、四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 38、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。208. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 4、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 5、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 6、十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。 7、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 12、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 13、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 14、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 15、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 16、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 17、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 18、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 19、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;小三山上大声喊，离天只有三尺三。 21、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 24、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 25、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 26、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 27、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 28、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 29、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 30、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。209. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 4、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 5、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 6、十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。 7、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 12、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 13、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 14、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 15、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 16、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 17、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 18、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 19、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;小三山上大声喊，离天只有三尺三。 21、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 24、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 25、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 26、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 27、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 28、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 29、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 30、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 31、四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 32、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子? 33、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 34、一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 35、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 36、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 37、四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 38、石司四、史肖石去阅览室。石司四年十四，史肖石年四十，年十四的石司四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词忙递给年十四的石司四，年十四的石司四见了好报纸忙递给年四十的史肖石。石司四接过杂志看诗词，史肖石接过报纸看时事，看完诗词和时事，史肖石和石司四出了阅览室。 39、四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 40、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。210. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 4、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 5、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 6、十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。 7、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 12、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 13、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 14、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 15、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 16、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 17、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 18、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 19、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;小三山上大声喊，离天只有三尺三。 21、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 24、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 25、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 26、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 27、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 28、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 29、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 30、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 31、四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 32、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子?(短文学网www.duanwenxue.com) 33、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 34、一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 35、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 36、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 37、四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 38、石司四、史肖石去阅览室。石司四年十四，史肖石年四十，年十四的石司四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词忙递给年十四的石司四，年十四的石司四见了好报纸忙递给年四十的史肖石。石司四接过杂志看诗词，史肖石接过报纸看时事，看完诗词和时事，史肖石和石司四出了阅览室。 39、四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 40、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。211. 1) 十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。 2) 日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 3) 长虫围着砖堆转，转完砖堆钻砖堆。 4) 早招租，晚招租，总找周邹郑曾朱。 5) 三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 6) 锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 7) 隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 8) 字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9) 小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 10) 公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子?( ) 11) 石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 12) 一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 13) 山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 14) 八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 15) 四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 16) 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 17) 师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 18) 知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 19) 四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 20) 三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 21) 史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 22) 抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 23) 葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 24) 四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 25) 辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 26) 石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 27) 三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;小三山上大声喊，离天只有三尺三。 28) 水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 29) 紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 30) 捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 31) 扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 32) 有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 33) 杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 34) 石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 35) 认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 36) 山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 37) 天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 38) 四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。212. 1、长虫围着砖堆转，转完砖堆钻砖堆。2、早招租，晚招租，总找周邹郑曾朱。3、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。4、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。5、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。6、十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。7、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。9、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。11、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。12、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。13、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。14、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。15、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。16、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松？17、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。18、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。19、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。20、三月三，小三去登山；上山又下山，下山又上山；登了三次山，跑了三里三；出了一身汗，湿了三件衫；小三山上大声喊，离天只有三尺三。21、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。23、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。24、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。25、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。26、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。27、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。28、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。29、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。30、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。31、四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力；谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。32、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？（短文学网 www.duanwenxue.com）33、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。34、一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。35、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。36、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。37、四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。38、石司四、史肖石去阅览室。石司四年十四，史肖石年四十，年十四的石司四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词忙递给年十四的石司四，年十四的石司四见了好报纸忙递给年四十的史肖石。石司四接过杂志看诗词，史肖石接过报纸看时事，看完诗词和时事，史肖石和石司四出了阅览室。39、四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。40、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴；来了侯老六，拉了六头牛；来了仇老六，提了六篓油；来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。213. 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 4、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 5、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 6、十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。 7、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。超难的普通话平翘舌绕口令大全 9、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 12、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 13、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 14、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 15、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 16、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 17、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 18、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 19、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;小三山上大声喊，离天只有三尺三。 21、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 24、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 25、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 26、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 27、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 28、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 29、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 30、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 31、四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 32、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子?( ) 33、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 34、一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 35、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 36、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 37、四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 38、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。214. 导语：有哪些是适合练习普通话的绕口令呢?下面是无忧考网收集整理好的超难的普通话平翘舌绕口令大全 ,我们一起来看看吧! 1、长虫围着砖堆转，转完砖堆钻砖堆。 2、早招租，晚招租，总找周邹郑曾朱。 3、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 4、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 5、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 6、十四四十十四四，四十十四四四十，四十十四四十四，不知是十还是四。 7、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 8、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 9、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 12、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 13、三哥三嫂子，借给我三斗三升酸枣子，等我上山摘了三升三斗酸枣子，再奉还三哥三嫂子的三斗三升酸枣子。 14、史老师，讲时事，常学时事长知识。时事学习看报纸，报纸登的是时事。常看报纸要多思，心里装着天下事。 15、抱子看报纸报纸是报纸，抱子是抱子，报纸、抱子两件事，抱子不是报纸，看报纸不是看抱子，只能抱子看报纸。 16、葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 17、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 18、辨读找到不念早到，乱草不念乱吵，制造不念自造，师范不念思凡，质子不念字纸，师长不念司长，主力不念阻力，木柴不念木材。 19、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 20、三月三，小三去登山;上山又下山，下山又上山;登了三次山，跑了三里三;出了一身汗，湿了三件衫;小三山上大声喊，离天只有三尺三。 21、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 24、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 25、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 26、杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 27、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 28、认识从实践始，实践出真知。知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道装知道，老老实实，实事求是，一定要做到不折不扣的真知道。 29、山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 30、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 31、四是四，十是十，十四是十四，四十是四十。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 32、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子?( ) 33、石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 34、一只花皮花背花青蛙，遇见花背花皮大西瓜。青蛙说西瓜的背皮没有青蛙的皮背花，西瓜说青蛙的皮背没有西瓜的背皮花。小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 35、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 36、八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 37、四十四个字和词，组成一首子、词、丝的绕口词，桃子、李子、梨子、栗子、桔子、柿子、槟子、榛子，栽满院子、村子和寨子。名词、动词、数词、量词、代词、副词、助词、连词，组成语词、诗词和唱词，蚕丝、生丝、熟丝、缫丝、染丝、晒丝、纺丝、织丝、自制粗丝、细丝、人造丝。 38、柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。215. 求自在不自在， 知自在自然自在； 悟如来想如来， 非如来如是如来。长扁担，短扁担长扁担，短扁担， 长扁担比短扁担长半扁担； 短扁担比长扁担短半扁担。 长扁担绑在短板凳上， 长板凳不能绑在比短扁担长半扁担的长扁担上； 短板凳也不能绑在比长扁担短半扁担的短扁担上。民兵排选标兵民兵排选标兵， 六班的标兵、七班的标兵、八班的标兵， 评比台前比选先进， 比比谁更先进， 选拔八名全排标兵上北京。盆和棚天上一个盆， 地下一个棚， 盆碰棚，棚碰盆， 棚倒了，盆碎了， 是棚赔盆， 还是盆赔棚？ 216. 我们要学理化， 他们要学理发。 理化不是理发， 理发不是理化。 学会理化不会理发， 学会理发也不懂理化。量窗量床又量墙量窗量床又量墙， 跳上床量窗， 靠住墙量床， 墙比张床长， 床又比窗长， 窗长不过床， 床又长不过墙， 所以墙比床比窗长， 读不顺就去撞墙。 217. 墙、钉、绳、瓶、灯、盆墙上一根钉，强作 钉上挂条绳， 滑落绳下瓶， 打碎瓶下灯， 砸破灯下盆。 瓶打灯，灯打盆， 盆骂灯，灯骂瓶， 瓶骂绳，绳骂钉， 钉怪绳，绳怪瓶， 瓶怪灯，灯怪盆， 叮叮当当当当叮， 乒乒乓乓乓乓乒。爹打弟，弟滚地爹打弟，弟滚地， 嫂嫂烧苕哄地弟； 姐呼鸡，鸡藏箕， 叔叔竖黍惊箕鸡。奋发商店卖混纺奋发商店卖混纺， 有红混纺，黄混纺，粉红混纺，花混纺， 纷繁的混纺让大娘着了慌。 仿佛进了混纺的大世界， 眼也花，手也忙。 吩咐女儿快快挑混纺。理化和理发我们要学理化， 他们要学理发。 理化不是理发， 理发不是理化。 学会理化不会理发， 学会理发也不懂理化。 218. 从南边来了一个高高大大的喇嘛，手里提着五斤比目鱼的啦。 从北边来了一个阿巴阿巴，背上背着一个伸缩喇叭。 南边提着比目鱼的啦的高高大大的喇嘛，要拿比目鱼的啦换北边背伸缩喇叭的阿巴阿巴的伸缩喇叭。 阿巴阿巴不愿拿伸缩喇叭换高高大大的喇嘛的比目鱼的啦。 高高大大的喇嘛非要换背伸缩喇叭阿巴阿巴的伸缩喇叭。 高高大大的喇嘛抡起比目鱼的啦抽了背伸缩喇叭阿巴阿巴一比目鱼的啦，阿巴阿巴摘下伸缩喇叭打了提比目鱼的啦的高高大大的喇嘛一伸缩喇叭。也不知是提着比目鱼的啦的高高大大的喇嘛抽了背伸缩喇叭的阿巴阿巴一比目鱼的啦，还是背伸缩喇叭的阿巴阿巴打了提比目鱼的啦的高高大大的喇嘛一伸缩喇叭。 高高大大的喇叭回家炖比目鱼的啦。 阿巴阿巴滴滴答答吹伸缩喇叭。小鸡鸡不尿尿各有各的道天有天道地有地道 小鸡鸡不尿尿各有各的道 听说你会剑道忍道人道学过柔道抬拳道还会空手道和李小龙学过截拳道 小服呀说你爹不走正道你妈就走歪道你还不进孝道整天横行霸道还胡说八道脚踏黑白两道出门警车开道你快去你吗了个一群二白3拳4轴无炎六色七上八下五花八门三长两短千变万化五万十色万紫千红里的大比里组织一下语言深空进化一下你的长相吗的~!~气死我了小服呀你在跟我装我就一个大拳头给你打到西伯力亚叫你抱着北极熊叫爸 219. 大哥有大锅， 二哥有小锅， 大哥要换二哥的小锅， 二哥不换大哥的大锅。班干部管班干部班干部管班干部（重复五遍）树顶一只猴树顶一只猴， 树脚一只狗； 猴狗跋落来撞着狗， 狗吠猴哮，猴走狗也走， 不知是猴怕狗，还是狗怕猴。 220. 1、床脚撞墙角,墙角撞床角,你话床角撞墙角定墙角撞床脚! 2、姨妈而家去宜家家俬买而家岩用既宜家家俬 3、入食物实验室扲紧十个紧急掣 4、麦当娜约左麦当雄去麦当劳道个间麦当劳食麦皮捞当归 5、肯德龟同肯德鸡去肯德基食肯德基最出名既巴辣香鸡 6、邮差叔叔送信纯熟迅速送出 7、财政司叫邰正宵做财政司,邰正宵叫财政司罗台证先,财政司话俾邰正宵知,要罗台证先要搞掂财政先。 8、郭蔼明过郭可盈,话郭可盈个袋型,郭可盈叫郭蔼明过海改个袋型,改成郭可盈个袋型。 9、潘宏彬、祝文君去搬云吞,祝文君跟潘宏彬去横滨,潘宏彬同祝文君一齐去纹身,纹枝人参枝参有崩。 10、一蚊一斤鸡，一蚊一斤龟，究竟系鸡贵定系龟贵?一蚊一只龟，七蚊一只鸡，佢话龟贵过鸡，我话鸡贵过龟，噉究竟龟贵过鸡定系鸡贵过龟。 1、宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。 2、邮差叔叔送信纯属迅速送出。 3、床脚撞墙角，墙角撞床脚，你话床脚撞墙角定墙角撞床脚? 4、郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋。 5、鸡龟骨滚羹。 6、圆圆远远叫圆月,叫来圆月来赏月。圆圆说:月月圆,圆月说:圆圆月。圆圆说:圆月的眼圆比月圆。圆月说:圆圆的圆眼赛圆月。究竟是圆圆,圆月的眼儿圆,还是圆圆的月儿圆 7、奄金琴军今暗暗,混吉挖金挖甘桔, 8、金骨挖桔挖银骨,银桔甩金不挖得,金骨混笔挖金粒,粒粒金粒挖银桔,银桔挖笔梗不吉,不吉挖金更不吉,笔墨挖骨得不偿失,得失混吉挖金笔,毕生大吉。 9、石室诗士施氏,嗜狮,誓食十狮,氏时时适市视狮,十时,适十狮适市。是时,适施氏适市,氏视是十狮,恃矢势,使是十狮逝世,氏拾是十狮尸,适石室,石室湿,氏使侍拭石室,石室拭,始试食十狮尸,食时,始识是十狮尸,实十石狮尸。试释是事。 10、蒋家羊，杨家墙，蒋家羊撞倒了杨家墙，杨家墙压死了蒋家羊，杨家要蒋家赔墙，蒋家要杨家赔羊。221. 1、鸡龟骨滚羹。 2、邮差叔叔送信纯熟迅速送出。 3、入食物实验室扲紧十个紧急掣。 4、黐线蜘蛛条蜘蛛丝黐住枝树枝。 5、梁上两对倒吊鸟，泥里两对鸟倒吊。 6、一蚊一斤鸡，一蚊一斤龟，究竟系鸡贵定系龟贵？ 7、肯德龟同肯德鸡去肯德基食肯德基最出名嘅巴辣香鸡。 8、母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。 9、麦当娜约左麦当雄去麦当劳道个间麦当劳食麦皮捞当归。 10、床脚撞墙角，墙角撞床脚，你话床脚撞墙角定墙角撞床脚？ 11、宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。 12、去街市买鱼肠，见到姨丈，放低鱼肠问候姨丈，执翻鱼肠，拜拜姨丈。 13、掘柑掘桔掘金桔，掘鸡掘骨掘龟骨，掘完鸡骨掘金桔，掘完龟骨掘鸡骨。 14、一二三四五，上山打老虎。老虎没打着，打了小松鼠。松鼠有几只？一二三四五。 15、郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋。 16、一蚊一只龟，七蚊一只鸡，佢话龟贵过鸡，我话鸡贵过龟，噉究竟龟贵过鸡定系鸡贵过龟。 17、宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。邮差叔叔送信纯属迅速送出。 18、狮子山上狮山寺，山寺门前四狮子。山寺是禅寺，狮子是石狮。狮子看守狮山寺，禅寺保护石狮子。 19、潘宏彬、祝文君去搬云吞，祝文君跟潘宏彬去横滨，潘宏彬同祝文君一齐去纹身，纹枝人参枝参有崩。 20、可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 21、天连水，水连天，水天一色望无边，兰兰的天似绿水，绿绿的水如蓝天。到底是天连水，还是水连天？ 22、贝贝飞纸飞机，菲菲要贝贝的纸飞机，贝贝不给菲菲自己的纸飞机，贝贝教菲菲自己做能飞的纸飞机。 23、财政司叫邰正宵做财政司，邰正宵叫财政司罗台证先，财政司话俾邰正宵知，要罗台证先要搞掂财政先。 24、金瓜瓜，银瓜瓜，瓜棚上面结满瓜。瓜瓜落下来，打着小娃娃；娃娃叫妈妈，妈妈抱娃娃；娃娃怪瓜瓜，瓜瓜笑娃娃。 25、东门东家，南门董家。东董两家，同种冬瓜。有人说：东门东家的冬瓜大。谁知南门董家的冬瓜大过东门东家的大冬瓜。 26、从前有个猪八戒，走到百花桥娘头，跑到百花店里头，坐勒八仙台娘头，吃腊铜钱八元八角八分八厘八、八、八、八、八…… 27、胡子撞翻了驼子的螺蛳，驼子拖住胡子的驴子，胡子去打挑螺蛳的驼子，驼子来打骑驴子的胡子，胡子打驼子，驼子打胡子。 28、出东楼，走六步，碰见六叔和六舅，好六叔，好六舅，借给我六斗六升好绿豆；过了秋，收了豆，再还给六叔六舅六斗六升好绿豆。 29、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 30、圆圆远远叫圆月，叫来圆月来赏月。圆圆说：月月圆，圆月说：圆圆月。圆圆说：圆月的眼圆比月圆。圆月说：圆圆的圆眼赛圆月。究竟是圆圆，圆月的眼儿圆，还是圆圆的月儿圆。 31、奄金琴军今暗暗，混吉挖金挖甘桔，金骨挖桔挖银骨，银桔甩金不挖得，金骨混笔挖金粒，粒粒金粒挖银桔，银桔挖笔梗不吉，不吉挖金更不吉，笔墨挖骨得不偿失，得失混吉挖金笔，毕生大吉。 32、石室诗士施氏，嗜狮，誓食十狮，氏时时适市视狮，十时，适十狮适市。是时，适施氏适市，氏视是十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，始试食十狮尸，食时，始识是十狮尸，实十石狮尸。试释是事。222. 1.黐線蜘蛛條蜘蛛絲黐住枝樹枝 2.去街市買魚腸，見到姨丈，放低魚腸，問候姨丈，執翻魚腸，拜拜姨丈 3.掘柑掘桔掘金桔，掘雞掘骨掘根骨，掘完根骨掘金桔，掘完鬼骨輪雞骨 4.一蚊一斤雞，一蚊一斤龜，究竟系雞貴定系龜貴 5.一蚊一隻龜，七蚊一隻雞，他話龜貴過雞，我話雞貴過龜，咁究竟龜貴過雞定係雞貴過龜。 6.街頭3蚊1斤雞，街尾3蚊1斤龜，街頭買斤雞，街尾買斤龜，你話雞貴定龜貴。 7.雞龜骨滾羹 8.入實驗室扲緊急掣 9.入食物實驗室扲緊十個緊急掣 10.郵差叔叔送信純屬迅速送 11.床腳撞牆角，牆角撞床角，你話床角撞牆角定牆角撞床腳？ 12.宜家學緊愈加嘅姨媽而家去宜家傢俬買而家啱用嘅宜家傢俬 13.麥當娜約咗麥當雄去麥當勞道嗰間麥當勞食麥皮撈當歸 14.肯德龜同肯德雞去肯德基食肯德基最出名嘅巴辣香雞 15.雙層牛肉巨無霸，醬汁洋蔥夾青瓜，芝士生菜加芝麻，人人食到笑哈哈。 16.財政司叫邰正宵做財政司，邰正宵叫財政司攞台證先，財政司話俾邰正宵知，要攞台證先要搞掂財政先 17.郭藹明見過郭可盈，話郭可盈個袋型，郭可盈叫郭藹明過海改個袋型，改成郭可盈個袋個袋型。 18.奄金琴軍今暗暗，混吉挖金挖甘桔，金骨挖桔挖銀骨，銀桔甩金不挖得，金骨混筆挖金粒，粒粒金粒挖銀桔，銀桔挖筆梗不吉，不吉挖金更不吉，筆墨挖骨得不償失，得失混吉挖金筆，畢生大吉。 19.出東樓，走六步，碰見六叔和六舅，好六叔，好六舅，借給我六斗六升好綠豆；過了秋，收了豆，再還給六叔六舅六斗六升好綠豆。 20.獅子山上獅山寺，山寺門前四獅子。山寺是禪寺，獅子是石獅。獅子看守獅山寺，禪寺保護石獅子。 21.東門東家，南門董家。東董兩家，同種冬瓜。有人說：東門東家的冬瓜大。誰知南門董家的冬瓜大過東門東家的大冬瓜。 22.金瓜瓜，銀瓜瓜，瓜棚上面結滿瓜。瓜瓜落下來，打著小娃娃；娃娃叫媽媽，媽媽抱娃娃； 娃娃怪瓜瓜，瓜瓜笑娃娃。 23.圓圓遠遠叫圓月，叫來圓月來賞月。圓圓說：月月圓，圓月說：圓圓月。圓圓說：圓月的眼圓比月圓。圓月說：圓圓的圓眼賽圓月。究竟是圓圓，圓月的眼兒圓，還是圓圓的月兒圓。 24.小王和小黃，一齊畫鳳凰。小王畫黃鳳凰，小黃畫紅鳳凰。紅鳳凰黃鳳凰，畫成活鳳凰，望著小黃和小王。 25.駱老伯，郭老伯，華老伯，柏老伯，駱、郭、華、柏四老伯，約著城北買菱角。買得菱角閣上剝，各剝各，各吃各，閣角莫落菱角殼，免得戳了駱、郭、華、柏四老伯我腳。 26.潘宏彬、祝文君去搬雲吞，祝文君跟潘宏彬去橫濱，潘宏彬同祝文君一齊去紋身，紋枝人參枝參有崩。 1姨媽而家去宜家傢俬買而家岩用既宜家傢俬 2(a)入實驗室扲緊急制(b)入食物實驗室扲緊十個緊急掣 3一蚊一隻龜，七蚊一隻雞，佢話龜貴過雞，我話雞貴過龜，咁究竟龜貴過雞定係雞貴過龜。 4麥當娜約左麥當雄去麥當勞道個間麥當勞食麥皮撈當歸 5出東樓，走六步，碰見六叔和六舅，好六叔，好六舅，借給我六斗六升好綠豆；過了秋，收了豆，再還給六叔六舅六斗六升好綠豆。 6獅子山上獅山寺，山寺門前四獅子。山寺是禪寺，獅子是石獅。獅子看守獅山寺，禪寺保護石獅子。 7東門東家，南門董家。東董兩家，同種冬瓜。有人說：東門東家的冬瓜大。誰知南門董家的冬瓜大過東門東家的大冬瓜。 8金瓜瓜，銀瓜瓜，瓜棚上面結滿瓜。瓜瓜落下來，打著小娃娃；娃娃叫媽媽，媽媽抱娃娃；娃娃怪瓜瓜，瓜瓜笑娃娃。 9圓圓遠遠叫圓月，叫來圓月來賞月。圓圓說：月月圓，圓月說：圓圓月。圓圓說：圓月的眼圓比月圓。圓月說：圓圓的圓眼賽圓月。究竟是圓圓，圓月的眼兒圓，還是圓圓的月兒圓。 10小王和小黃，一齊畫鳳凰。小王畫黃鳳凰，小黃畫紅鳳凰。紅鳳凰黃鳳凰，畫成活鳳凰，望著小黃和小王。 11肯德龜同肯德雞去肯德基食肯德基最出名既巴辣香雞。 12雙層牛肉巨無霸，醬汁洋蔥夾青瓜，芝士生菜加芝麻，人人食到笑哈哈。 13駱老伯，郭老伯，華老伯，柏老伯，駱、郭、華、柏四老伯，約著城北買菱角。買得菱角閣 上剝，各剝各，各吃各，閣肝鷏巡晲仍腄A免得戳了駱、郭、華、柏四老伯我腳。 14財政司叫邰正宵做財政司，邰正宵叫財政司囉台証先。財政司話俾邰正宵知，要囉台証先要 搞掂財政先。 15郭藹明過郭可盈，話郭可盈個袋型，，郭可盈叫郭藹明過海改個袋型，改成郭可盈個袋個袋型 16潘宏彬、祝文君去搬雲吞，祝文君跟潘宏彬去橫濱，潘宏彬同祝文君一齊去紋身，紋枝人參 枝參有崩。 17（超級強化版）奄金琴軍今暗暗，混吉挖金挖甘桔，金骨挖桔挖銀骨，銀桔甩金不挖得，金骨混筆挖金粒，粒粒金粒挖銀桔，銀桔挖筆梗不吉，不吉挖金更不吉，筆墨挖骨得不償失，得失混吉挖金筆，畢生大吉。 18粒粒金粒挖銀桔，銀桔挖筆梗不吉，不吉挖金更不吉，筆墨挖骨得不償失，得失混吉挖金筆 19街頭3蚊1斤雞，街尾3蚊1斤龜，街頭買斤雞，街尾買斤龜，你話雞貴定龜貴。 20（文言版）石室詩士施氏，嗜獅，誓食十獅，氏時時適市視獅，十時，適十獅適市。是時，適施氏適市，氏視是十獅，恃矢勢，使是十獅逝世，氏拾是十獅屍，適石室，石室濕，氏使侍拭石室，石室拭，氏始試食十獅屍，食時，始識是十獅屍，實十石獅屍。試釋是事。 21抱著灰雞上飛機，飛機起飛，灰雞要飛。 22東瞄廟，西瞄廟，左瞄廟，右瞄廟，調轉頭來瞄瞄廟。 23繩下調刀，刀倒吊著，繩斷刀掉，刀倒著掉在道上。（個急口令講講下，快得濟，就會講粗口，所以細聲D） 24家後一座廟，天天貓來尿，不知廟尿貓，還是貓尿廟？ 25頭戴涼帽，走進冷廟；去了涼帽，看看冷廟。 26獅子長蝨子，蝨子咬獅子，獅子抓蝨子，蝨子躲獅子。 27教室有殭屍，殭屍抓老師，老師找道士，道士捉殭屍。 28一個新兵吃青餅，一個老兵吃烙餅，新兵請老兵吃青餅，老兵請新兵吃烙餅。 29小良趕著一群羊，來到山上遇著狼，狼要吃羊羊躲狼，小良救羊打跑狼。 30高高山上一枝藤，藤條頭上掛銅鈴，風吹藤動銅鈴動，風停藤停銅鈴停。 31張家嫂子上山摘棗子，李家嫂子上山摘柿子，張家嫂子的姪子背石子，李家嫂子的姪子看獅子。 32一隻猴仔帶一群猴仔去溝仔，一群猴仔跌落溝仔，一隻猴仔轉去提鉤仔，來釣猴仔。 33大婆子是一個駝子，小婆子是一個跛子，大婆子嘲笑小婆子是跛子，小婆子大罵大婆子是駝子。 34牆上一隻青蛤蟆，牆下一隻麻蛤蟆，青蛤蟆咬麻蛤蟆的上下巴，麻蛤蟆咬青蛤蟆的下下巴。 35門外有四十四隻獅子，不知是四十四隻死獅子？還是四十四隻石獅子？ 36蔣家羊，楊家牆，蔣家羊撞倒了楊家牆，楊家牆壓死了蔣家羊，楊家要蔣家賠牆，蔣家要楊家賠羊。 37張大嘴，李大嘴，兩人對坐來比嘴。張大嘴說李大嘴的嘴大，李大嘴說張大嘴的嘴大。 38橋東走來一條狗，橋西走來一隻猴，未到橋心兩碰頭，彼此匆匆跑回頭，猴跑幾步望望狗，狗跑幾步望望猴，究竟猴怕狗，還是狗怕猴？ 39白石白又滑，搬來白石搭白塔，白石塔，白石搭，白石搭白塔，白塔白石搭。搭好白石塔，白塔白又滑。 40張啞巴，李啞巴，登了此樓吹喇叭，張啞巴吹的喇叭大，李啞巴吹的大喇叭。 41張結巴，李結巴，來到市場比結巴。張結巴說李結巴的結巴大，李結巴說張結巴的結巴大。 42房子裡有箱子箱子裡有匣子，匣子裡有盒子，盒子裡有鐲子。鐲子外有盒子，盒子外有匣子，匣子外有箱子，箱子外有房子 1.床腳撞牆角，牆角撞床角，你話床角撞牆角定牆角撞床腳 2.姨媽而家去宜家傢俬買而家岩用既宜家傢俬 3.一蚊一隻龜，七蚊一隻雞，佢話龜貴過雞，我話雞貴過龜，咁究竟龜貴過雞定係雞貴過龜。 4.獅子山上獅山寺，山寺門前四獅子。山寺是禪寺，獅子是石獅。獅子看守獅山寺，禪寺保護石獅子。 5.東門東家，南門董家。東董兩家，同種冬瓜。 有人說：東門東家的冬瓜大。誰知南門董家的冬瓜大過東門東家的大冬瓜。 6.出東樓，走六步，碰見六叔和六舅，好六叔，好六舅，借給我六斗六升好綠豆。 過了秋，收了豆，再還給六叔六舅六斗六升好綠豆。 7.金瓜瓜，銀瓜瓜，瓜棚上面結滿瓜。瓜瓜落下來，打著小娃娃； 娃娃叫媽媽，媽媽抱娃娃；娃娃怪瓜瓜，瓜瓜笑娃娃。 8.肯德龜同肯德雞去肯德基食肯德基最出名既巴辣香雞。 9.小王和小黃，一齊畫鳳凰。小王畫黃鳳凰，小黃畫紅鳳凰。 紅鳳凰黃鳳凰，畫成活鳳凰，望著小黃和小王。 10.郭藹明過郭可盈，話郭可盈個袋型，郭可盈叫郭藹明過海改個袋型，改成郭可盈個袋個袋型。223. 1、从前有个猪八戒，走到百花桥娘头， 跑到百花店里头，坐勒八仙台娘头， 吃腊铜钱八元八角八分八厘八、八、八、八、八…… 2、胡子撞翻了驼子的螺蛳， 驼子拖住胡子的驴子， 胡子去打挑螺蛳的驼子， 驼子来打骑驴子的胡子， 胡子打驼子，驼子打胡子。 3、出东楼，走六步，碰见六叔和六舅， 好六叔，好六舅，借给我六斗六升好绿豆； 过了秋，收了豆，再还给六叔六舅六斗六升好绿豆。 4、梁上两对倒吊鸟，泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 5、圆圆远远叫圆月，叫来圆月来赏月。 圆圆说：月月圆，圆月说：圆圆月。 圆圆说：圆月的眼圆比月圆。 圆月说：圆圆的圆眼赛圆月。 究竟是圆圆，圆月的眼儿圆， 还是圆圆的月儿圆。 6、奄金琴军今暗暗，混吉挖金挖甘桔， 金骨挖桔挖银骨，银桔甩金不挖得， 金骨混笔挖金粒，粒粒金粒挖银桔， 银桔挖笔梗不吉，不吉挖金更不吉， 笔墨挖骨得不偿失，得失混吉挖金笔，毕生大吉。 7、石室诗士施氏，嗜狮，誓食十狮， 氏时时适市视狮，十时，适十狮适市。 是时，适施氏适市，氏视是十狮， 恃矢势，使是十狮逝世，氏拾是十狮尸， 适石室，石室湿，氏使侍拭石室， 石室拭，始试食十狮尸，食时， 始识是十狮尸，实十石狮尸。试释是事。224. 1、鸡龟骨滚羹。 2、邮差叔叔送信纯熟迅速送出。 3、入食物实验室扲紧十个紧急掣。 4、黐线蜘蛛条蜘蛛丝黐住枝树枝。 5、梁上两对倒吊鸟，泥里两对鸟倒吊。 6、一蚊一斤鸡，一蚊一斤龟，究竟系鸡贵定系龟贵？ 7、肯德龟同肯德鸡去肯德基食肯德基最出名嘅巴辣香鸡。 8、母鸡骂小鸡，你这笨东西。 教你咯咯咯，你偏叽叽叽。 9、麦当娜约左麦当雄去麦当劳 道个间麦当劳食麦皮捞当归。 10、床脚撞墙角，墙角撞床脚， 你话床脚撞墙角定墙角撞床脚？ 11、宜家学紧瑜伽嘅姨妈而家去 宜家家俬买而家啱用嘅宜家家俬。 12、去街市买鱼肠，见到姨丈， 放低鱼肠问候姨丈，执翻鱼肠，拜拜姨丈。 13、掘柑掘桔掘金桔，掘鸡掘骨掘龟骨， 掘完鸡骨掘金桔，掘完龟骨掘鸡骨。 14、一二三四五，上山打老虎。 老虎没打着，打了小松鼠。 松鼠有几只？一二三四五。 15、郭蔼明见过郭可盈，话郭可盈个袋型， 郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋。 16、一蚊一只龟，七蚊一只鸡， 佢话龟贵过鸡，我话鸡贵过龟， 噉究竟龟贵过鸡定系鸡贵过龟。 17、宜家学紧瑜伽嘅姨妈而家去 宜家家俬买而家啱用嘅宜家家俬。 邮差叔叔送信纯属迅速送出。 18、狮子山上狮山寺，山寺门前四狮子。 山寺是禅寺，狮子是石狮。 狮子看守狮山寺，禅寺保护石狮子。 19、潘宏彬、祝文君去搬云吞，祝文君跟潘宏彬去横滨， 潘宏彬同祝文君一齐去纹身，纹枝人参枝参有崩。 20、可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 21、天连水，水连天，水天一色望无边， 兰兰的天似绿水，绿绿的水如蓝天。 到底是天连水，还是水连天？ 22、贝贝飞纸飞机，菲菲要贝贝的纸飞机， 贝贝不给菲菲自己的纸飞机， 贝贝教菲菲自己做能飞的纸飞机。 23、财政司叫邰正宵做财政司， 邰正宵叫财政司罗台证先， 财政司话俾邰正宵知，要罗台证先要搞掂财政先。 24、金瓜瓜，银瓜瓜，瓜棚上面结满瓜。 瓜瓜落下来，打着小娃娃；娃娃叫妈妈， 妈妈抱娃娃；娃娃怪瓜瓜，瓜瓜笑娃娃。 25、东门东家，南门董家。东董两家， 同种冬瓜。有人说：东门东家的冬瓜大。 谁知南门董家的冬瓜大过东门东家的大冬瓜。225. 1、可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 2、天连水，水连天，水天一色望无边，兰兰的天似绿水， 绿绿的水如蓝天。到底是天连水，还是水连天？ 3、贝贝飞纸飞机，菲菲要贝贝的纸飞机， 贝贝不给菲菲自己的纸飞机， 贝贝教菲菲自己做能飞的纸飞机。 4、财政司叫邰正宵做财政司，邰正宵叫财政司罗台证先， 财政司话俾邰正宵知，要罗台证先要搞掂财政先。 5、金瓜瓜，银瓜瓜，瓜棚上面结满瓜。 瓜瓜落下来，打着小娃娃；娃娃叫妈妈， 妈妈抱娃娃；娃娃怪瓜瓜，瓜瓜笑娃娃。 6、东门东家，南门董家。东董两家， 同种冬瓜。有人说：东门东家的冬瓜大。 谁知南门董家的冬瓜大过东门东家的大冬瓜。 7、从前有个猪八戒，走到百花桥娘头， 跑到百花店里头，坐勒八仙台娘头， 吃腊铜钱八元八角八分八厘八、八、八、八、八…… 8、胡子撞翻了驼子的螺蛳，驼子拖住胡子的驴子， 胡子去打挑螺蛳的驼子，驼子来打骑驴子的胡子， 胡子打驼子，驼子打胡子。 9、出东楼，走六步，碰见六叔和六舅， 好六叔，好六舅，借给我六斗六升好绿豆； 过了秋，收了豆，再还给六叔六舅六斗六升好绿豆。 10、梁上两对倒吊鸟，泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 11、圆圆远远叫圆月，叫来圆月来赏月。 圆圆说：月月圆，圆月说：圆圆月。 圆圆说：圆月的眼圆比月圆。 圆月说：圆圆的圆眼赛圆月。 究竟是圆圆，圆月的眼儿圆， 还是圆圆的月儿圆。 12、奄金琴军今暗暗，混吉挖金挖甘桔， 金骨挖桔挖银骨，银桔甩金不挖得， 金骨混笔挖金粒，粒粒金粒挖银桔， 银桔挖笔梗不吉，不吉挖金更不吉， 笔墨挖骨得不偿失，得失混吉挖金笔，毕生大吉。226. 1、鸡龟骨滚羹。 2、邮差叔叔送信纯熟迅速送出。 3、入食物实验室扲紧十个紧急掣。 4、黐线蜘蛛条蜘蛛丝黐住枝树枝。 5、梁上两对倒吊鸟，泥里两对鸟倒吊。 6、一蚊一斤鸡，一蚊一斤龟，究竟系鸡贵定系龟贵？ 7、肯德龟同肯德鸡去肯德基食肯德基最出名嘅巴辣香鸡。 8、母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。 9、麦当娜约左麦当雄去麦当劳道个间麦当劳食麦皮捞当归。 10、床脚撞墙角，墙角撞床脚，你话床脚撞墙角定墙角撞床脚？ 11、宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。 12、去街市买鱼肠，见到姨丈，放低鱼肠问候姨丈，执翻鱼肠，拜拜姨丈。 13、掘柑掘桔掘金桔，掘鸡掘骨掘龟骨，掘完鸡骨掘金桔，掘完龟骨掘鸡骨。 14、一二三四五，上山打老虎。老虎没打着，打了小松鼠。松鼠有几只？一二三四五。 15、郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋。 16、一蚊一只龟，七蚊一只鸡，佢话龟贵过鸡，我话鸡贵过龟，噉究竟龟贵过鸡定系鸡贵过龟。 17、宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。邮差叔叔送信纯属迅速送出。 18、狮子山上狮山寺，山寺门前四狮子。山寺是禅寺，狮子是石狮。狮子看守狮山寺，禅寺保护石狮子。 19、潘宏彬、祝文君去搬云吞，祝文君跟潘宏彬去横滨，潘宏彬同祝文君一齐去纹身，纹枝人参枝参有崩。227. 第一级 1) 床脚撞墙角, 墙角撞床角, 你话床角撞墙角定墙角撞床脚! 2) 姨妈而家去宜家家俬买而家岩用既宜家家俬 3) 入食物实验室扲紧十个紧急掣 4) 麦当娜约左麦当雄去麦当劳道个间麦当劳食麦皮捞当归 5) 肯德龟同肯德鸡去肯德基食肯德基最出名既巴辣香鸡 6) 邮差叔叔送信纯熟迅速送出 第二级 7) 财政司叫邰正宵做财政司, 邰正宵叫财政司罗台证先, 财政司话俾邰正宵知, 要 罗台证先要搞掂财政先。 8)郭蔼明过郭可盈, 话郭可盈个袋型, 郭可盈叫郭蔼明过海改个袋型, 改成郭可盈个袋型。 9)潘宏彬、祝文君去搬云吞, 祝文君跟潘宏彬去横滨, 潘宏彬同祝文君一齐去纹身 , 纹枝人参枝参有崩。 第三级 10) 圆圆远远叫圆月, 叫来圆月来赏月。 圆圆说:月月圆,圆月说:圆圆月。 圆圆说 :圆月的眼圆比月圆。 圆月说: 圆圆的圆眼赛圆月。 究竟是圆圆,圆月的眼儿圆,还是圆圆的月儿圆 11) 奄金琴军今暗暗, 混吉挖金挖甘桔, 金骨挖桔挖银骨, 银桔甩金不挖得, 金骨混笔挖金粒, 粒粒金粒挖银桔, 银桔挖笔梗不吉, 不吉挖金更不吉, 笔墨挖骨得不偿失, 得失混吉挖金笔, 毕生大吉。 12) 石室诗士施氏, 嗜狮, 誓食十狮, 氏时时适市视狮, 十时, 适十狮适市。是时,适施氏适市, 氏视是十狮, 恃矢势, 使是十狮逝世, 氏拾是十狮尸, 适石室, 石室湿, 氏使侍拭石室, 石室拭, 始试食十狮尸, 食时, 始识是十狮尸, 实十石狮尸。试释是事。228. 白鼻头大白猫 东边大婆婆之家有一只白鼻头大白猫。 西边二婆婆家也有一只白鼻头大白猫。 一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打， 也不晓得东边大婆婆家的白鼻头大白猫赢的呢? 还是西边二婆婆家的白鼻头大白猫赢的? 跛子和驼子 一个跛子，牵着驴子; 一个驼子，拉着车子; 一个瞎子，抱着孩子。 跛子的驴子，撞着驼子的车子; 驼子的车子，碰倒瞎子的孩子; 瞎子要打驼子，驼子要打跛子。 蒋家羊和杨家墙 蒋家羊，杨家墙， 蒋家羊撞倒了杨家墙， 杨家墙压死了蒋家羊， 杨家要蒋家赔墙， 蒋家要杨家赔羊。 桥东有一家丁家 桥东有一家丁家， 桥西也有一家丁家。 有一天，桥东丁家说桥西丁家的冬瓜好， 桥西丁家说桥东丁家的西瓜好。 不知是桥东丁家的西瓜好? 还是桥西丁家的东瓜好? 瞄瞄 东瞄庙，西瞄庙，左瞄庙，右瞄庙，调转头来瞄瞄庙。 刀 绳下调刀，刀倒吊着，绳断刀掉，刀倒著掉在道上。 梁嘉琪，麦美恩 梁嘉琪爱凉瓜皮，麦美恩爱麦米粥。梁嘉琪爱凉瓜皮，麦美恩爱麦米粥。 颁奖 揾只斑马同个班长。跟住班长骑住斑马，去颁奖台颁奖章。 六合县六十六岁的陆老头 六合县有个六十六岁的陆老头， 盖了六十六间楼， 三联阅读3lian.com/zl/转载请保留 买了六十六篓油， 堆在六十六间楼。 栽了六十六株垂杨柳， 养了六十六头牛， 扣在六十六株垂杨柳。 遇了一阵狂风起， 吹倒了六十六间楼， 翻了六十六篓油， 断了六十六株垂杨柳， 打死了六十六头牛， 急煞了六合县的六十六岁的陆老头。229. 白鼻头大白猫 东边大婆婆之家有一只白鼻头大白猫。 西边二婆婆家也有一只白鼻头大白猫。 一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打， 也不晓得东边大婆婆家的白鼻头大白猫赢的呢? 还是西边二婆婆家的白鼻头大白猫赢的? 跛子和驼子 一个跛子，牵着驴子; 一个驼子，拉着车子; 一个瞎子，抱着孩子。 跛子的驴子，撞着驼子的车子; 驼子的车子，碰倒瞎子的孩子; 瞎子要打驼子，驼子要打跛子。 蒋家羊和杨家墙 蒋家羊，杨家墙， 蒋家羊撞倒了杨家墙， 杨家墙压死了蒋家羊， 杨家要蒋家赔墙， 蒋家要杨家赔羊。 桥东有一家丁家 桥东有一家丁家， 桥西也有一家丁家。 有一天，桥东丁家说桥西丁家的冬瓜好， 桥西丁家说桥东丁家的西瓜好。 不知是桥东丁家的西瓜好? 还是桥西丁家的东瓜好? 瞄瞄 东瞄庙，西瞄庙，左瞄庙，右瞄庙，调转头来瞄瞄庙。 刀 绳下调刀，刀倒吊着，绳断刀掉，刀倒著掉在道上。 梁嘉琪，麦美恩 梁嘉琪爱凉瓜皮，麦美恩爱麦米粥。梁嘉琪爱凉瓜皮，麦美恩爱麦米粥。 颁奖 揾只斑马同个班长。跟住班长骑住斑马，去颁奖台颁奖章。 六合县六十六岁的陆老头 六合县有个六十六岁的陆老头， 盖了六十六间楼， 买了六十六篓油， 堆在六十六间楼。 栽了六十六株垂杨柳， 养了六十六头牛， 扣在六十六株垂杨柳。 遇了一阵狂风起， 吹倒了六十六间楼， 翻了六十六篓油， 断了六十六株垂杨柳， 打死了六十六头牛， 急煞了六合县的六十六岁的陆老头。230. 1、一蚊一斤鸡，一蚊一斤龟，究竟系鸡贵定系龟贵? 一蚊一只龟，七蚊一只鸡，佢话龟贵过鸡，我话鸡贵过龟，噉究竟龟贵过鸡定係鸡贵过龟。 2、宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。 3、邮差叔叔送信纯属迅速送出 。 4、床脚撞墙角，墙角撞床脚，你话床脚撞墙角定墙角撞床脚? 5、郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋。 6、鸡龟骨滚羹。 7、圆圆远远叫圆月, 叫来圆月来赏月。圆圆说:月月圆,圆月说:圆圆月。圆圆说 :圆月的眼圆比月圆。圆月说: 圆圆的圆眼赛圆月。究竟是圆圆,圆月的眼儿圆,还是圆圆的月儿圆 8、奄金琴军今暗暗, 混吉挖金挖甘桔, 9、金骨挖桔挖银骨, 银桔甩金不挖得, 金骨混笔挖金粒,粒粒金粒挖银桔, 银桔挖笔梗不吉, 不吉挖金更不吉,笔墨挖骨得不偿失, 得失混吉挖金笔, 毕生大吉。 10、石室诗士施氏, 嗜狮, 誓食十狮, 氏时时适市视狮,十时, 适十狮适市。是时,适施氏适市, 氏视是十狮,恃矢势, 使是十狮逝世, 氏拾是十狮尸, 适石室, 石室湿,氏使侍拭石室, 石室拭, 始试食十狮尸, 食时,始识是十狮尸, 实十石狮尸。试释是事。231. 白鼻头大白猫 东边大婆婆之家有一只白鼻头大白猫。 西边二婆婆家也有一只白鼻头大白猫。 一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打， 也不晓得东边大婆婆家的白鼻头大白猫赢的呢? 还是西边二婆婆家的白鼻头大白猫赢的? 跛子和驼子 一个跛子，牵着驴子; 一个驼子，拉着车子; 一个瞎子，抱着孩子。 跛子的驴子，撞着驼子的车子; 驼子的车子，碰倒瞎子的孩子; 瞎子要打驼子，驼子要打跛子。 蒋家羊和杨家墙 蒋家羊，杨家墙， 蒋家羊撞倒了杨家墙， 杨家墙压死了蒋家羊， 杨家要蒋家赔墙， 蒋家要杨家赔羊。 桥东有一家丁家 桥东有一家丁家， 桥西也有一家丁家。 有一天，桥东丁家说桥西丁家的冬瓜好， 桥西丁家说桥东丁家的西瓜好。 不知是桥东丁家的西瓜好? 还是桥西丁家的东瓜好? 瞄瞄 东瞄庙，西瞄庙，左瞄庙，右瞄庙，调转头来瞄瞄庙。 刀 绳下调刀，刀倒吊着，绳断刀掉，刀倒著掉在道上。 梁嘉琪，麦美恩 梁嘉琪爱凉瓜皮，麦美恩爱麦米粥。梁嘉琪爱凉瓜皮，麦美恩爱麦米粥。 颁奖 揾只斑马同个班长。跟住班长骑住斑马，去颁奖台颁奖章。 六合县六十六岁的陆老头 六合县有个六十六岁的陆老头， 盖了六十六间楼， 买了六十六篓油， 堆在六十六间楼。 栽了六十六株垂杨柳， 养了六十六头牛， 扣在六十六株垂杨柳。 遇了一阵狂风起， 吹倒了六十六间楼， 翻了六十六篓油， 断了六十六株垂杨柳， 打死了六十六头牛， 急煞了六合县的六十六岁的陆老头。232. 郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋倒吊鸟梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。水连天天连水，水连天，水天一色望无边，兰兰的天似绿水，绿绿的水如蓝天。到底是天连水，还是水连天?母鸡和小鸡母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。一二三四五一二三四五，上山打老虎。老虎没打着，打了小松鼠。松鼠有几只?一二三四五。从前有个猪八戒从前有个猪八戒，走到百花桥娘头，跑到百花店里头，坐勒八仙台娘头，吃腊铜钱八元八角八分八厘八、八、八、八、八……贝贝和菲菲贝贝飞纸飞机，菲菲要贝贝的纸飞机，贝贝不给菲菲自己的纸飞机，贝贝教菲菲自己做能飞的纸飞机。233. 石室诗士施氏，嗜狮，誓食十狮，施氏时时适市视狮，十时，适十狮适市。是时，适施氏适市，施氏视是十狮，恃矢势，使是十狮逝世，施氏拾是十狮尸，适石室，石室湿，施氏使侍拭石室，石室拭，施氏始试食十狮尸，食时，始识是十狮尸，实十石狮尸。试释是事。 “拭”读作[sik1]。 马骝仔 一只马骝仔带一群马骝仔去沟仔，一群马骝仔跌落沟渠底，一只马骝仔转去提钩仔，来钓马骝仔。 衣架 阿里妈妈去买衣架，买唔到衣架买衫架，买唔到衫架好丢架!理佢系真定系假? 仆街 一班仆街住喺曲街推人出街。 天连水连天 天连水，水连天，水天一色望无边。蓝天似绿水，绿水如蓝天。 军禁掘金棍 军禁掘金棍。 潘宏彬与祝文君 潘宏彬、祝文君生日去食粥，文君恭祝潘宏彬，祝文君跟实潘宏彬去横滨，潘宏彬同祝文君一齐去纹身，纹枝人参，枝参又崩。 “彬”“滨”与“崩”区别为：彬、滨[ban1]，崩[bang1];“宏”与“云”区别为：宏[wang4]，云[wan4]。 羊与墙 东家有只羊，中家有栋墙，东家只羊撞到中家栋墙，中家栋墙撞死东家只羊，中家要东家赔羊，东家要中家赔墙。 买菱角 骆老伯、郭老伯、华老伯、柏老伯。骆、郭、华、柏四老伯，约著城北买菱角。买得菱角阁上剥，各剥各，各吃各，各各剥落菱角壳，免得?亲骆、郭、华、柏四老伯。 各个国家的国歌 各个国家有各个国家慨国歌。 瓜瓜与娃娃 金瓜瓜，银瓜瓜，瓜棚上面结满瓜。 瓜瓜落下来，打着小娃娃;娃娃叫妈妈，妈妈抱娃娃;娃娃怪瓜瓜，瓜瓜笑娃娃。 鸡与飞机 抱着灰鸡上飞机，飞机起飞，灰鸡要飞。234. 郭蔼明和郭可盈郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋 倒吊鸟梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 水连天天连水，水连天，水天一色望无边，兰兰的天似绿水，绿绿的水如蓝天。到底是天连水，还是水连天? 母鸡和小鸡母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。 一二三四五一二三四五，上山打老虎。老虎没打着，打了小松鼠。松鼠有几只?一二三四五。 从前有个猪八戒从前有个猪八戒，走到百花桥娘头，跑到百花店里头，坐勒八仙台娘头，吃腊铜钱八元八角八分八厘八、八、八、八、八…… 贝贝和菲菲贝贝飞纸飞机，菲菲要贝贝的纸飞机，贝贝不给菲菲自己的纸飞机，贝贝教菲菲自己做能飞的纸飞机。235. 郭蔼明见过郭可盈， 话郭可盈个袋型， 郭可盈叫郭蔼明过海改个袋型， 改成郭可盈个袋 猫捉鼠 粮仓里边有稻谷， 小猫来看护， 睁大眼睛不马虎。 忽然发现一只鼠， 偷偷摸摸来吃谷， 一把抓过去， 老鼠乖乖成俘虏。 左抓抓，右拱拱， 吓得老鼠心打鼓， 眼看小命要入土。 胡子骑驴子 驼子挑螺蛳， 胡子撞翻了驼子的螺蛳， 驼子拖住胡子的驴子， 胡子去打挑螺蛳的驼子， 驼子来打骑驴子的胡子， 胡子打驼子， 驼子打胡子。 倒吊鸟 梁上两对倒吊鸟， 泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟， 惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊， 也惦着梁上的两对倒吊鸟。 从前有个猪八戒 从前有个猪八戒， 走到百花桥娘头， 跑到百花店里头， 坐勒八仙台娘头， 吃腊铜钱八元八角八分八厘八、八、八、八、八…… 贝贝和菲菲 贝贝飞纸飞机，菲菲要贝贝的纸飞机， 贝贝不给菲菲自己的纸飞机， 贝贝教菲菲自己做能飞的纸飞机。236. 1、鸡龟骨滚羹。2、邮差叔叔送信纯熟迅速送出。3、入食物实验室扲紧十个紧急掣。4、黐线蜘蛛条蜘蛛丝黐住枝树枝。5、梁上两对倒吊鸟，泥里两对鸟倒吊。6、一蚊一斤鸡，一蚊一斤龟，究竟系鸡贵定系龟贵？7、肯德龟同肯德鸡去肯德基食肯德基最出名嘅巴辣香鸡。8、母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。9、麦当娜约左麦当雄去麦当劳道个间麦当劳食麦皮捞当归。10、床脚撞墙角，墙角撞床脚，你话床脚撞墙角定墙角撞床脚？11、宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。12、去街市买鱼肠，见到姨丈，放低鱼肠问候姨丈，执翻鱼肠，拜拜姨丈。13、掘柑掘桔掘金桔，掘鸡掘骨掘龟骨，掘完鸡骨掘金桔，掘完龟骨掘鸡骨。14、一二三四五，上山打老虎。老虎没打着，打了小松鼠。松鼠有几只？一二三四五。15、郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋。16、一蚊一只龟，七蚊一只鸡，佢话龟贵过鸡，我话鸡贵过龟，噉究竟龟贵过鸡定系鸡贵过龟。17、宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。邮差叔叔送信纯属迅速送出。18、狮子山上狮山寺，山寺门前四狮子。山寺是禅寺，狮子是石狮。狮子看守狮山寺，禅寺保护石狮子。19、潘宏彬、祝文君去搬云吞，祝文君跟潘宏彬去横滨，潘宏彬同祝文君一齐去纹身，纹枝人参枝参有崩。20、可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。21、天连水，水连天，水天一色望无边，兰兰的天似绿水，绿绿的水如蓝天。到底是天连水，还是水连天？22、贝贝飞纸飞机，菲菲要贝贝的纸飞机，贝贝不给菲菲自己的纸飞机，贝贝教菲菲自己做能飞的纸飞机。23、财政司叫邰正宵做财政司，邰正宵叫财政司罗台证先，财政司话俾邰正宵知，要罗台证先要搞掂财政先。24、金瓜瓜，银瓜瓜，瓜棚上面结满瓜。瓜瓜落下来，打着小娃娃；娃娃叫妈妈，妈妈抱娃娃；娃娃怪瓜瓜，瓜瓜笑娃娃。25、东门东家，南门董家。东董两家，同种冬瓜。有人说：东门东家的冬瓜大。谁知南门董家的冬瓜大过东门东家的大冬瓜。26、从前有个猪八戒，走到百花桥娘头，跑到百花店里头，坐勒八仙台娘头，吃腊铜钱八元八角八分八厘八、八、八、八、八……27、胡子撞翻了驼子的螺蛳，驼子拖住胡子的驴子，胡子去打挑螺蛳的驼子，驼子来打骑驴子的胡子，胡子打驼子，驼子打胡子。28、出东楼，走六步，碰见六叔和六舅，好六叔，好六舅，借给我六斗六升好绿豆；过了秋，收了豆，再还给六叔六舅六斗六升好绿豆。29、梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。30、圆圆远远叫圆月，叫来圆月来赏月。圆圆说：月月圆，圆月说：圆圆月。圆圆说：圆月的眼圆比月圆。圆月说：圆圆的圆眼赛圆月。究竟是圆圆，圆月的眼儿圆，还是圆圆的月儿圆。31、奄金琴军今暗暗，混吉挖金挖甘桔，金骨挖桔挖银骨，银桔甩金不挖得，金骨混笔挖金粒，粒粒金粒挖银桔，银桔挖笔梗不吉，不吉挖金更不吉，笔墨挖骨得不偿失，得失混吉挖金笔，毕生大吉。32、石室诗士施氏，嗜狮，誓食十狮，氏时时适市视狮，十时，适十狮适市。是时，适施氏适市，氏视是十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，始试食十狮尸，食时，始识是十狮尸，实十石狮尸。试释是事。237. 导语：下面是无忧考网大家精心整理的关于绕口令粤语发音大全，欢迎阅读! 绕口令粤语发音【1】 1. 姨妈而家去宜家家私买而家岩用既宜家家私。 2. 入实验室扲紧急制。 3. 一蚊一隻龟，七蚊一隻鸡，佢话龟贵过鸡，我话鸡贵过龟，咁究竟龟贵过鸡定系鸡贵过龟。 4. 麦当娜约左麦当雄去麦当劳道个间麦当劳食麦皮捞当归。 5. 出东楼，走六步，碰见六叔和六舅，好六叔，好六舅，借给我六斗六升好绿豆;过了秋，收了豆，再还给六叔六舅六斗六升好绿豆。 6. 狮子山上狮山寺，山寺门前四狮子。山寺是禅寺，狮子是石狮。狮子看守狮山寺，禅寺保护石狮子。 7. 东门东家，南门董家。东董两家，同种冬瓜。有人说：东门东家的冬瓜大。谁知南门董家的冬瓜大过东门东家的大冬瓜。 8. 金瓜瓜，银瓜瓜，瓜棚上面结满瓜。瓜瓜落下来，打著小娃娃;娃娃叫妈妈，妈妈抱娃娃;娃娃怪瓜瓜，瓜瓜笑娃娃。 9. 圆圆远远叫圆月，叫来圆月来赏月。圆圆说：月月圆，圆月说：圆圆月。圆圆说：圆月的眼圆比月圆。圆月说：圆圆的圆眼赛圆月。究竟是圆圆，圆月的眼儿圆，还是圆圆的月儿圆。 10. 小王和小黄，一齐画凤凰。小王画黄凤凰，小黄画红凤凰。红凤凰黄凤凰，画成活凤凰，望著小黄和小王。 11. 肯德龟同肯德鸡去肯德基食肯德基最出名既巴辣香鸡。 12. 双层牛肉巨无霸，酱汁洋葱夹青瓜，芝士生菜加芝麻，人人食到笑哈哈。 13. 骆老伯，郭老伯，华老伯，柏老伯，骆、郭、华、柏四老伯，约著城北买菱角。买得菱角阁上剥，各剥各，各吃各，阁角莫落菱角壳，免得戳了骆、郭、华、柏四老伯我脚。 14. 材政司叫邰正宵做材政司，邰正宵叫材政司萝台証先。材政司话俾邰正宵知，要萝台証先要搞掂材政先。 15. 郭蔼明过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈袋个袋型。 16. 大婆子是一个驼子，小婆子是一个跛子，大婆子嘲笑小婆子是跛子，小婆子大骂大婆子是驼子。 17. 牆上一隻青蛤蟆，牆下一隻麻蛤蟆，青蛤蟆咬麻蛤蟆的上下巴，麻蛤蟆咬青蛤蟆的下下巴。 18. 门外有四十四隻狮子，不知是四十四隻死狮子?还是四十四隻石狮子?。 19. 蒋家羊，杨家牆，蒋家羊撞倒了杨家牆，杨家牆压死了蒋家羊，杨家要蒋家赔牆，蒋家要杨家赔羊。 20.张大嘴，李大嘴，两人对坐来比嘴。张大嘴说李大嘴的嘴大，李大嘴说张大嘴的嘴大。 绕口令粤语发音【2】 1. 桥东走来一条狗，桥西走来一隻猴，未到桥心两碰头，彼此匆匆跑回头，猴跑几步望望狗，狗跑几步望望猴，究竟猴怕 狗，还是狗怕猴?。 2. 白石白又滑，搬来白石搭白塔，白石塔，白石搭，白石搭白塔，白塔白石搭。搭好白石塔，白塔白又滑。 3. 张哑巴，李哑巴，登了此楼吹喇叭，张哑巴吹的喇叭大，李哑巴吹的大喇叭。 4. 张结巴，李结巴，来到市场比结巴。张结巴说李结巴的结巴大，李结巴说张结巴的结巴大。 5. 房子裡有箱子箱子裡有匣子，匣子裡有盒子，盒子裡有镯子。镯子外有盒子，盒子外有匣子，匣子外有箱子，箱子外有房子。 6. 潘宏彬、祝文君去搬云吞，祝文君跟潘宏彬去横宾，潘宏彬同祝文君一齐去纹身，纹枝人惨枝惨有崩。 7. (超级强化版)奄金琴军今暗暗，混吉挖金挖甘桔，金骨挖桔挖银骨，银桔甩金不挖得，金骨混笔挖金粒，粒粒金粒挖银桔，银桔挖笔梗不吉，不吉挖金更不吉，笔墨挖骨得不偿失，得失混吉挖金笔，毕生大吉。 8. 粒粒金粒挖银桔，银桔挖笔梗不吉，不吉挖金更不吉，笔墨挖骨得不偿失，得失混吉挖金笔。 9. 街头3蚊1斤鸡，街尾3蚊1斤龟，街头买斤鸡，街尾买斤龟，你话鸡贵定龟贵。 10. 石室诗士施氏，嗜狮，誓食十狮，氏时时这市视狮，十时，这十狮这市。是时，这施氏这市，氏视是十狮，恃矢势，使是十狮逝世，氏拾是十狮屎，这石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮屎，食时，始识是十狮屎，实十石狮屎。试释是事。 11. 抱著灰鸡上飞机，飞机起飞，灰鸡要飞。 12. 东瞄庙，西瞄庙，左瞄庙，右瞄庙，调转头来瞄瞄庙。 13. 绳下调刀，刀倒吊著，绳断刀掉，刀倒著掉在道上。 14. 家后一座庙，天天猫来尿，不知庙尿猫，还是猫尿庙?。 15. 头戴凉帽，走进冷庙﹔去了凉帽，看看冷庙。 16. 狮子长蝨子，蝨子咬狮子，狮子抓蝨子，蝨子躲狮子。 17. 教室有殭屎，殭屎抓老师，老师找道士，道士捉殭屎。 18. 一个新兵吃青饼，一个老兵吃烙饼，新兵请老兵吃青饼，老兵请新兵吃烙饼。 19. 小良赶著一群羊，来到山上遇著狼，狼要吃羊羊躲狼，小良救羊打跑狼。 20. 高高山上一枝藤，藤条头上挂铜铃，风吹藤动铜铃动，风停藤停铜铃停。 ­238. 喇嘛和啞吧 從南邊來瞭個喇嘛，提拉著五斤塔嘛。從北邊來個啞吧，腰裡別著個喇叭，提拉塔嘛的喇嘛，要拿塔嘛換別喇叭啞巴的喇叭，別喇叭的啞巴，不願意拿喇叭換提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打瞭別喇叭的啞巴一塔嘛，別喇叭的啞巴，拿喇叭打瞭提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打壞瞭別喇叭啞巴的喇叭。也不知別喇叭的啞巴拿喇巴打壞瞭提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，別喇叭的啞巴吹喇叭。 棗、賣卵 一：出東門，過大橋，大橋前面一樹棗，拿著竿子去打棗，青的多，紅的少，一個棗，兩個棗，三個棗，四個棗，五個棗，六個棗，七個棗，八個棗，九個棗，十個棗;十個棗，九個棗，八個棗，七個棗，六個棗，五個棗，四個棗，三個棗，兩個棗，一個棗，這是一個繞口呤，一口氣說完才算好。 二：有個懶漢本姓阮，提個籃子賣雞卵，“賣卵”“賣卵”使勁喊，誰都不來買雞卵，不是雞卵品種亂，而是雞卵皮太軟。賣不出雞卵難買飯，回傢吃飯路又遠，胡亂燒把爛草取取暖，再吃掉籃子裡幾個軟雞卵。 師父四十四、銅勺舀熱油 一：山裡有個寺，山外有個市，弟子三十三，師父四十四。三十三的弟子在寺裡練寫字，四十四的師父到市裡去辦事。三十三的弟子用瞭四十四小時，四十四的師父走瞭三十三裡地。走瞭三十三裡地就辦瞭四十四件事，用瞭四十四小時才寫瞭三十三個字。 二：銅勺舀熱油，鐵勺舀涼油，銅勺舀瞭熱油舀涼油，鐵勺舀瞭涼油舀熱油。舀油入炒勺，月月有佳肴。先燉魷魚塊，後扒羊肉條。火在爐下燃，油在勺中熬，滿鍋同炎熱，管它銅勺與鐵勺。239. 郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋 梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 天连水，水连天，水天一色望无边，兰兰的天似绿水，绿绿的水如蓝天。到底是天连水，还是水连天? 母鸡骂小鸡，你这笨东西。教你咯咯咯，你偏叽叽叽。 一二三四五，上山打老虎。老虎没打着，打了小松鼠。松鼠有几只?一二三四五。 从前有个猪八戒，走到百花桥娘头，跑到百花店里头，坐勒八仙台娘头，吃腊铜钱八元八角八分八厘八、八、八、八、八…… 贝贝飞纸飞机，菲菲要贝贝的纸飞机，贝贝不给菲菲自己的纸飞机，贝贝教菲菲自己做能飞的纸飞机。240. 导语：大家知道有哪些是粤语才能讲出来的绕口令吗?下面是无忧考网收集整理好的广东话绕口令集锦 ,我们一起来看看吧! 1.财政司叫邰正宵做财政司，邰正宵叫财政司攞台证先，财政司话俾邰正宵知，要攞台证先要搞掂财政先。 2.黐线蜘蛛条蜘蛛丝黐住枝树枝。 3.床脚撞墙角，墙角撞床脚，你话床脚撞墙角定墙角撞床脚? 4.郭蔼明见过郭可盈，话郭可盈个袋型，郭可盈叫郭蔼明过海改个袋型，改成郭可盈个袋。 5.鸡龟骨滚羹。 6.掘柑掘桔掘金桔，掘鸡掘骨掘龟骨，掘完鸡骨掘金桔，掘完龟骨掘鸡骨。 7.肯德龟同肯德鸡去肯德基食肯德基最出名嘅巴辣香鸡。 8.麦当娜约咗麦当雄去麦当劳道嗰间麦当劳食麦皮捞当归。 9.去街市买鱼肠,见到姨丈,放低鱼肠 问候姨丈,执翻鱼肠,拜拜姨丈。 10.入实验室揿紧急制。 11.一蚊一斤鸡，一蚊一斤龟，究竟系鸡贵定系龟贵? 12.一蚊一只龟，七蚊一只鸡，佢话龟贵过鸡，我话鸡贵过龟，噉究竟龟贵过鸡定係鸡贵过龟。 13.宜家学紧瑜伽嘅姨妈而家去宜家家俬买而家啱用嘅宜家家俬。 14.邮差叔叔送信纯属迅速送出 。241. 2) 姨妈而家去宜家家俬买而家岩用既宜家家俬 3) 入食物实验室扲紧十个紧急掣 4) 麦当娜约左麦当雄去麦当劳道个间麦当劳食麦皮捞当归 5) 肯德龟同肯德鸡去肯德基食肯德基最出名既巴辣香鸡 6) 邮差叔叔送信纯熟迅速送出 7) 财政司叫邰正宵做财政司, 邰正宵叫财政司罗台证先, 财政司话俾邰正宵知, 要 罗台证先要搞掂财政先。 8)郭蔼明过郭可盈, 话郭可盈个袋型, 郭可盈叫郭蔼明过海改个袋型, 改成郭可盈个袋型。 9)潘宏彬、祝文君去搬云吞, 祝文君跟潘宏彬去横滨, 潘宏彬同祝文君一齐去纹身 , 纹枝人参枝参有崩。 10) 圆圆远远叫圆月, 叫来圆月来赏月。 圆圆说:月月圆,圆月说:圆圆月。 圆圆说 :圆月的眼圆比月圆。 圆月说: 圆圆的圆眼赛圆月。 究竟是圆圆,圆月的眼儿圆,还是圆圆的月儿圆 11) 奄金琴军今暗暗, 混吉挖金挖甘桔, 金骨挖桔挖银骨, 银桔甩金不挖得, 金骨混笔挖金粒, 粒粒金粒挖银桔, 银桔挖笔梗不吉, 不吉挖金更不吉, 笔墨挖骨得不偿失, 得失混吉挖金笔, 毕生大吉。 12) 石室诗士施氏, 嗜狮, 誓食十狮, 氏时时适市视狮, 十时, 适十狮适市。是时,适施氏适市, 氏视是十狮, 恃矢势, 使是十狮逝世, 氏拾是十狮尸, 适石室, 石室湿, 氏使侍拭石室, 石室拭, 始试食十狮尸, 食时, 始识是十狮尸, 实十石狮尸。试释是事。 繁体原文 13) 姨媽而家去宜家傢俬買而家岩用既宜家傢俬 14) (a) 入實驗室扲緊急制 (b) 入食物實驗室扲緊十個緊急掣 15) 一蚊一隻龜，七蚊一隻雞，佢話龜貴過雞，我話雞貴過龜，咁究竟龜貴過雞定係雞貴過龜。 16) 麥當娜約左麥當雄去麥當勞道個間麥當勞食麥皮撈當歸 17) 出東樓，走六步，碰見六叔和六舅， 好六叔，好六舅，借給我六斗六升好綠豆;過 了秋， 收了豆，再還給六叔六舅六斗六升好綠豆。 18) 獅子山上獅山寺，山寺門前四獅子。山寺是禪寺，獅子是石獅。獅子看守獅山寺，禪寺保護 石獅子。 19) 東門東家，南門董家。 東董兩家，同種冬瓜。 有人說：東門東家的冬瓜大。誰知南門董家 的冬瓜大過東門東家的大冬瓜。 20) 金瓜瓜，銀瓜瓜，瓜棚上面結滿瓜。 瓜瓜落下來，打著小娃娃; 娃娃叫媽媽，媽媽抱娃娃 ;娃娃怪瓜瓜，瓜瓜笑娃娃。 21) 圓圓遠遠叫圓月，叫來圓月來賞月。圓圓說：月月圓，圓月說：圓圓月。圓圓說：圓月的眼 圓比月圓。圓月說：圓圓的圓眼賽圓月。究竟是圓圓，圓月的眼兒圓，還是圓圓的月兒圓。 22) 小王和小黃，一齊畫鳳凰。小王畫黃鳳凰，小黃畫紅鳳凰。紅鳳凰黃鳳凰，畫成活鳳凰，望 著小黃和小王。242. 【导语】以下是无忧考网为大家整理的关于绕口令，希望大家喜欢，欢迎大家阅读！ 一位爷爷他姓顾， 上街打醋又买布。 买了布，打了醋， 回头看见鹰抓兔。 放下布，搁下醋， 上前去追鹰和兔， 飞了鹰，跑了兔。 打翻醋，醋湿布。 小猪扛锄头， 吭哧吭哧走。 小鸟唱枝头， 小猪扭头瞅， 锄头撞石头， 石头砸猪头。 小猪怨锄头， 锄头怨猪头。 白石白又滑， 搬来白石搭白塔。 白石塔， 白石塔， 白石搭石塔， 白塔白石搭。 搭好白石塔， 白塔白又滑。 水中映着彩霞， 水面游着花鸭。 霞是五彩霞， 鸭是麻花鸭。 麻花鸭游进五彩霞， 五彩霞网住麻花鸭。 乐坏了鸭， 拍碎了霞， 分不清是鸭还是霞。 四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿 谁说四十是“细席”， 他的舌头没用力； 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。 哥哥弟弟坡前坐， 坡上卧着一只鹅， 坡下流着一条河， 哥哥说：宽宽的河， 弟弟说：白白的鹅。 鹅要过河， 河要渡鹅。 不知是鹅过河， 还是河渡鹅。 咬牛奶，喝面包， 夹着火车上皮包。 东西街，南北走， 出门看见人咬狗。 拿起狗来打砖头， 又怕砖头咬我手 兜里装豆， 豆装满兜， 兜破漏豆。 倒出豆，补破兜， 补好兜，又装豆， 装满兜，不漏豆。 树上卧只猴， 树下蹲条狗。 猴跳下来撞了狗， 狗翻起来咬住猴， 不知是猴咬狗， 还是狗咬猴。 河里有只船 河里有只船， 船上挂白帆， 风吹帆张船向前， 无风帆落停下船。 老唐端蛋汤， 踏凳登宝塔， 只因凳太滑， 汤洒汤烫塔。 这是蚕， 那是蝉， 蚕常在叶里藏， 蝉常在林里唱。 243. 带有绕口令的相声 咱们两个人说一段儿绕嘴的。 乙好说。 甲绕嘴的，我说一个，你就说不上来。 乙说不上来拜你为师。 甲你说上来我拜你为师。 乙好，你说吧。 甲你听这个。 乙啊。 甲“大门外有四辆四轮大马车，你爱拉哪两辆，来拉哪两辆。 乙好说。 甲说。 乙大门外有四辆四轮大马车，你爱拉哪两辆，你给我留两辆。 甲哎，咱俩一个人两辆。 乙不是分车吗? 甲分车呀! 乙大门外有四辆四轮大马车，你爱拉哪两辆，你拉，你全拉了去得了，我不要啦! 甲你坐黄包车家去啊! 乙我走着回去。 甲你这是挨骂。 乙“大门外有四辆四轮大马车，你爱拉哪两辆，来拉哪两辆。” 甲这个算你说上来啦。 乙哪个都行。 甲这个好说。“出南门往正南，有一个面铺面向南，面铺门口挂个蓝市棉门帘，摘了蓝布棉门帘，面铺还是面向南，挂上蓝布棉门帘，瞧了瞧，面铺还是面向南。” 乙这个好说。 甲说。 乙出南门往正南，有个面铺面向南，面铺挂着蓝布棉门帘，摘了蓝布棉门帘，面铺卖了八块八毛钱。 甲八块八，四袋子面。 乙“出南门往正南，有一个面铺面向南，面铺挂着蓝布棉门帘，摘了蓝布棉门帘，还是个面铺面向南。挂着蓝布棉门帘，瞧了瞧，哎，还是个面铺面向南。” 甲这个算你说上来了。 乙哪个我都行。 甲你再听这一个。 乙哎。 甲“会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐哇。” 乙好说。 甲说。 乙你会炖我的炖冻豆腐，你炖我的炖冻豆腐，你不会炖我的炖冻豆腐，你别动我的豆腐。 甲准动你的豆腐啦? 乙你会炖我的炖冻豆腐，来炖我的炖冻豆腐，你不会炖冻豆腐，你熬豆腐吃吧! 甲那就省厨师傅啦。 乙“你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐哇!” 甲哼!这个也算你说上来啦。 乙哪一个我都说得上来。 甲你这是蒙的。再说一个你听。 乙说。 甲“你会糊我的粉红活佛龛来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪!” 乙这个好说。 甲说。 乙你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你不会糊我的粉红活佛龛，你就给我看着得啦! 甲哎，我给你看着什么呀? 乙别丢啦! 甲什么呀! 乙你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你不会糊我的粉红活佛龛，你给我买一个佛爷龛子吧。 甲那你就别糊啦。 乙有卖的，先生。 甲哪儿卖呀? 乙怎么，非得说上来不可吗? 甲你说不上来啦。 乙当着诸位先生，说不上来我拜你为师。 甲你要说上来，我拜你为师。 乙好，你听着。 甲说。 乙我长年指着这个吃饭。 甲你说吧。 乙你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你要是不会糊我的粉红活佛龛，你别混充会炖炖坏了我的炖冻豆腐哇。 甲你别挨骂了。 乙“你会糊我的粉红活佛龛，来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪!” 甲我再说个绕嘴的，你就说不上来啦! 乙说不上来，拜你为师。 甲你听着。 乙说吧。 甲山前住着一个姓颜的，他是两只圆眼;山后住着个姓颜的，也是两只圆眼。山前那个叫颜圆眼，山后那个叫颜眼圆。这两个人上山前头比眼去啦，比出这么一个绕嘴的来。 乙你说吧。 甲我说给你听。“山前住的颜圆眼，山后住的颜眼圆，二人山前来比眼，也不知道颜圆眼比颜眼圆的圆眼，也不知道颜眼圆比颜圆眼的眼圆。” 乙这个好说。 甲你说。 乙山前住个颜圆远，山后住的颜远圆。 甲圆眼眼圆。 乙他是对头。 甲哦。 乙山前住的颜圆眼，山后住的颜眼圆，两人山前前来比圆眼，颜圆眼比不过给一块四毛钱。 甲你的洋钱又来啦! 乙四吊多啦。 甲嗐。 乙“山前住的颜国眼，山后住的颜眼圆，两人山前来比眼，也不知道颜国眼比颜眼圆的圆眼，也不知道颜眼圆比颜圆眼的眼圆。” 甲这个算你说上来啦。 乙这算什么呀? 甲我再说一个你听。 乙哎。 甲山前住一个姓崔的，他是两条粗腿，山后住了一个姓崔的，他是两条腿粗。“山前住的叫崔粗腿，山后住的叫崔腿粗，两人山前来比腿，也不知道崔祖腿比崔腿粗的粗腿，也不知道是崔腿粗比崔粗腿的腿粗。” 乙这好说。 甲说。 乙山前住的崔粗腿，山后住的秃老美。 甲嘿，秃老美，还没有头发哪! 乙“山前住的崔祖腿，山后住的崔腿粗，两人山前来比腿，也不知道崔粗腿的粗腿，他是肿腿。 甲腿肿啦，比你这腿海得多啦，你这是挨骂哪! 乙“山前住的崔粗腿，山后住的崔腿粗，两人山前来比腿，也不知道崔粗腿的腿比崔腿粗的粗腿，也不知道崔腿粗比崔粗腿的腿粗。” 甲好，瞧瞧舌头多利落! 乙也说上来啦! 甲我再说一个你就说不上来啦! 乙说不上来我就算拜你为师。 甲你听这个。“我家有个肥嫩的嫩巴八斤鸡，飞在张家后院里，张家后院有个肥嫩的嫩巴八斤狗，咬了我肥嫩的嫩巴八斤鸡，卖了他肥嫩的嫩巴八斤狗，赔了我肥嫩的嫩巴八斤鸡。” 乙这好说。 甲说。 乙我家有一个肥嫩的嫩大八斤。 甲大八斤哪?肥嫩的嫩巴八斤鸡。 乙我家有个肥嫩的嫩巴八斤鸡，飞到张家后院里，张家有个肥嫩的嫩巴八斤狗，咬了我的手，我不走，大众围着瞅，巡警也来瞅，巡警说，你的狗，不上捐，咬了吉坪三的手，连人带拘一齐拉着走，你爸爸和你妈妈害怕，给巡警打的酒、买的白莲藕， 巡警说，我办公事不喝酒，不吃藕，巡警走，我没有走，我在你家喝的酒，吃的藕，我在你家呆了好几宿。 甲这是什么呀? 乙不是这个吗? 甲不对，我们这是狗咬鸡。 乙哦，狗咬鸡。 甲嘿! 乙我跑到狗咬手上去啦。 甲你那狗咬手跟狗咬鸡差多啦! 乙你听。 甲说。 乙我家有一肥嫩的嫩巴八斤鸡，飞到你们张家后院里，你们张家肥嫩的嫩巴八斤狗，咬了我的肥嫩的嫩巴八斤鸡，因为什么你们狗咬我鸡，我不依，你爸爸和你妈妈抱着肥嫩狗，那天星期一，抱到大街西拖到法兰西，卖了一块七，我还不依，你妈是阎婆惜。 甲你别挨骂啦!244. 大姐编辫 大姐编辫，两个人编。二姐编那半边，三姐编这半边;三姐编这半边，二姐编那半边。 扁娃拔扁豆 扁扁娃背个扁口背篓，上扁扁山拔扁豆。拔了一扁背篓扁豆，扁扁娃背不起一扁背篓扁豆，背了半扁背篓扁豆。 敬母亲 生身亲母亲，谨请您就寝，请您心宁静，身心很要紧，新星伴明月，银光澄清清。尽是清静镜，警铃不要惊，您请我进来，进来敬母亲。 分银 隔墙听见人分银，不知道多少人分多少银。只听见人说，人人分半斤银余银四两，人人分四两银余银半斤。 槐树歪歪 槐树歪歪，坐个乖乖，乖乖用手，摔了老酒，酒瓶摔坏，奶奶不怪，怀抱乖乖，出外买买。 藤与绳 丝瓜藤，绕丝绳，丝绳绕上丝瓜藤。藤长绳长绳藤绕，绳长藤伸绳绕藤。 黄花黄 黄花花黄花黄，花黄黄花朵朵黄，朵朵黄花黄又香，黄花花香向太阳。 砸缸 小光和小刚，抬着水桶上山岗。上山岗，歇歇凉，拿起竹竿玩打仗。乒乒乒，乓乓乓，打来打去砸了缸。小光怪小刚，小刚怪小光，小光小刚都怪竹竿和水缸。 同乡不同行 辛厂长，申厂长，同乡不同行。 辛厂长声声讲生产，申厂长常常闹思想。 辛厂长一心只想革新厂，申厂长满口只讲加薪饷。 风、松、钟、弓 走如风，站如松，坐如钟，睡如弓。风、松、钟、弓，弓、钟、松、风，连念七遍口齿清。 浓雾 浓浓雾，雾浓浓，浓浓灰雾飞入松。灰雾入松松飞雾，灰雾雾松分不清。 放风筝 刮着大风放风筝，风吹风筝挣断绳。风筝断绳风筝松，断绳风筝随风行。风不停，筝不停，风停风筝自不行。 望月空满天星 望月空，满天星，光闪闪，亮晶晶，好象那，小银灯，仔细看，看分明，大大小小，密密麻麻，闪闪烁烁，数也数不清。 补桶 桐木桶，桶有洞，补洞用桐不用铜。用铜补洞补不住，用桐补桶桶无洞。 聋童 朦胧彩霓虹，玲珑小聋童。聋童采柠檬，聋童不懵懂。 弯弯丘斑斑鸠 弯前弯后弯弯丘，弯丘弯角里躲着个斑斑鸠。有个弯背的弯老头儿，在弯丘弯角里弯腰捡了个弯砖头。弯老头弯里投砖头， 专打弯丘弯角里那个斑斑鸠。 谁也不服管 苏州玄妙观，东西两判官，东判官姓潘，西判官姓管，管判官要管潘判官，潘判官要管管判官，闹得谁也不服管。 断短扁豆 门角里放着一垛断短扁豆。(重复五遍) 指示灯 十字路口指示灯，红黄绿色分得清。 绿灯行，红灯停。红灯停，绿灯行。 蜻蜓青萍分不清 蜻蜓青，青浮萍，青萍上面停蜻蜓， 蜻蜓青萍分不清。别把蜻蜓当青萍，别把青萍当蜻蜓。 慢表 表慢，慢表，慢表慢半秒。 慢半秒，拨半秒，拨过半秒多半秒; 多半秒，拨半秒，拨过半秒少半秒。拨来拨去是慢表，慢表表慢慢半秒。 吊刀 楼上吊刀刀倒吊着。(重复五遍) 捆葱绳 昆昆捆葱绳，葱绳捆得松。 绳松葱捆松，捆松捆漏葱。 昆昆拾葱捆葱绳，捆紧葱绳不掉葱。 闷棍 门背后有根闷棍开门别碰闷棍。(重复三遍) 磙和棍 磙下压个棍，棍上压个磙。磙压棍滚，棍滚磙滚。(重复一遍) 班长管班干部 班长管班干部(重复五遍) 肥混肥 黑肥混灰肥，灰肥混黑肥。黑肥混灰肥，黑肥灰又黑。 黑肥混灰肥，肥比黑肥灰。灰肥混黑肥，肥比灰肥黑。 背水杯 贝贝背水杯，水杯贝贝背。贝贝背水杯背背水杯。水杯贝贝背，贝贝背水杯。 描庙 东描庙，西描庙，左描庙，右描庙，调转头来描描庙。前描庙，后描庙，这一描，那一描，描得判官满脸毛。 雕和箫 一把雕刀，雕出好箫。刀是小雕刀，箫是玉屏箫。好箫出好调，箫靠好刀雕，刀要艺巧高。 一面小小鼓 一面小花鼓，鼓上画只虎 ，宝宝敲破鼓 ，妈妈拿布布，不知是布布鼓，还是布补虎 鸡碰坯 炕头一只鸡，炕稍一块坯，知是鸡碰了坯，还是坯碰了鸡 红凤凰粉凤凰 红凤凰粉凤凰，红粉凤凰粉红凤凰。红凤凰粉凤凰，红粉凤凰粉红凤凰! 猪吃我屎，我猪吃屎 猪吃我屎，我猪吃屎，猪吃我屎，我猪吃屎，猪吃我屎，我猪吃屎，吃我屎，我吃猪屎! 肥嫩的嫩巴八斤鸡 我家有个肥嫩的嫩巴八斤鸡，飞在张家后院里，张家后院有个肥嫩的嫩巴八斤狗，咬了我肥嫩的嫩巴八斤鸡，卖了他肥嫩的嫩巴八斤狗， 赔了我肥嫩的嫩巴八斤鸡。 崔粗腿和崔腿粗 山前住的叫崔粗腿，山后住的叫崔腿粗，两人山前来比腿，也不知道崔祖腿比崔腿粗的粗腿，也不知道是崔腿粗比崔粗腿的腿粗。 糊我的粉红活佛龛 你会糊我的粉红活佛龛来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪。 《施氏食狮史》 石室诗士施氏，嗜狮，誓食十狮。 氏时时适市视狮。十时，适十狮适市。 是时，适施氏适市。 氏视十狮，恃矢势，使是十狮逝世。 氏拾是十狮尸，适石室。 石室湿，氏拭室。 氏始试食十狮尸。 食时，始识十狮尸，实是十石狮尸。 试释是事。 面铺面向南 出南门往正南， 有一个面铺面向南， 面铺门口挂个蓝市棉门帘， 摘了蓝布棉门帘， 面铺还是面向南， 挂上蓝布棉门帘， 瞧了瞧， 面铺还是面向南。245. 绕口令相声咱们两个人说一段儿绕嘴的。乙 好说。甲 绕嘴的，我说一个，你就说不上来。乙 说不上来拜你为师。甲 你说上来我拜你为师。乙 好，你说吧。甲 你听这个。乙 啊。甲 “大门外有四辆四轮大马车，你爱拉哪两辆，来拉哪两辆。乙 好说。甲 说。乙 大门外有四辆四轮大马车，你爱拉哪两辆，你给我留两辆。甲 哎，咱俩一个人两辆。乙 不是分车吗?甲 分车呀!乙 大门外有四辆四轮大马车，你爱拉哪两辆，你拉，你全拉了去得了，我不要啦!甲 你坐黄包车家去啊!乙 我走着回去。甲 你这是挨骂。乙 “大门外有四辆四轮大马车，你爱拉哪两辆，来拉哪两辆。”甲 这个算你说上来啦。乙 哪个都行。甲 这个好说。“出南门往正南，有一个面铺面向南，面铺门口挂个蓝市棉门帘，摘了蓝布棉门帘，面铺还是面向南，挂上蓝布棉门帘，瞧了瞧，面铺还是面向南。”乙 这个好说。甲 说。乙 出南门往正南，有个面铺面向南，面铺挂着蓝布棉门帘，摘了蓝布棉门帘，面铺卖了八块八毛钱。甲 八块八，四袋子面。乙 “出南门往正南，有一个面铺面向南，面铺挂着蓝布棉门帘，摘了蓝布棉门帘，还是个面铺面向南。挂着蓝布棉门帘，瞧了瞧，哎，还是个面铺面向南。”甲 这个算你说上来了。乙 哪个我都行。甲 你再听这一个。乙 哎。甲 “会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐哇。”乙 好说。甲 说。乙 你会炖我的炖冻豆腐，你炖我的炖冻豆腐，你不会炖我的炖冻豆腐，你别动我的豆腐。甲 准动你的豆腐啦?乙 你会炖我的炖冻豆腐，来炖我的炖冻豆腐，你不会炖冻豆腐，你熬豆腐吃吧!甲 那就省厨师傅啦。乙 “你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐哇!”甲 哼!这个也算你说上来啦。乙 哪一个我都说得上来。甲 你这是蒙的。再说一个你听。乙 说。甲 “你会糊我的粉红活佛龛来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪!”乙 这个好说。甲 说。乙 你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你不会糊我的粉红活佛龛，你就给我看着得啦!甲 哎，我给你看着什么呀?乙 别丢啦!甲 什么呀!乙 你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你不会糊我的粉红活佛龛，你给我买一个佛爷龛子吧。甲 那你就别糊啦。乙 有卖的，先生。甲 哪儿卖呀?乙 怎么，非得说上来不可吗?甲 你说不上来啦。乙 当着诸位先生，说不上来我拜你为师。甲 你要说上来，我拜你为师。乙 好，你听着。甲 说。乙 我长年指着这个吃饭。甲 你说吧。乙 你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你要是不会糊我的粉红活佛龛，你别混充会炖炖坏了我的炖冻豆腐哇。甲 你别挨骂了。乙 “你会糊我的粉红活佛龛，来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪!”甲 我再说个绕嘴的，你就说不上来啦!乙 说不上来，拜你为师。甲 你听着。乙 说吧。甲 山前住着一个姓颜的，他是两只圆眼;山后住着个姓颜的，也是两只圆眼。山前那个叫颜圆眼，山后那个叫颜眼圆。这两个人上山前头比眼去啦，比出这么一个绕嘴的来。乙 你说吧。甲 我说给你听。“山前住的颜圆眼，山后住的颜眼圆，二人山前来比眼，也不知道颜圆眼比颜眼圆的圆眼，也不知道颜眼圆比颜圆眼的眼圆。”乙 这个好说。甲 你说。乙 山前住个颜圆远，山后住的颜远圆。甲 圆眼眼圆。乙 他是对头。甲 哦。乙 山前住的颜圆眼，山后住的颜眼圆，两人山前前来比圆眼，颜圆眼比不过给一块四毛钱。甲 你的洋钱又来啦!乙 四吊多啦。甲 嗐。乙 “山前住的颜国眼，山后住的颜眼圆，两人山前来比眼，也不知道颜国眼比颜眼圆的圆眼，也不知道颜眼圆比颜圆眼的眼圆。”甲 这个算你说上来啦。乙 这算什么呀?甲 我再说一个你听。乙 哎。甲 山前住一个姓崔的，他是两条粗腿，山后住了一个姓崔的，他是两条腿粗。“山前住的叫崔粗腿，山后住的叫崔腿粗，两人山前来比腿，也不知道崔祖腿比崔腿粗的粗腿，也不知道是崔腿粗比崔粗腿的腿粗。”乙 这好说。甲 说。乙 山前住的崔粗腿，山后住的秃老美。甲 嘿，秃老美，还没有头发哪!乙 “山前住的崔祖腿，山后住的崔腿粗，两人山前来比腿，也不知道崔粗腿的粗腿，他是肿腿。甲 腿肿啦，比你这腿海得多啦，你这是挨骂哪!乙 “山前住的崔粗腿，山后住的崔腿粗，两人山前来比腿，也不知道崔粗腿的腿比崔腿粗的粗腿，也不知道崔腿粗比崔粗腿的腿粗。”甲 好，瞧瞧舌头多利落!乙 也说上来啦!甲 我再说一个你就说不上来啦!乙 说不上来我就算拜你为师。甲 你听这个。“我家有个肥嫩的嫩巴八斤鸡，飞在张家后院里，张家后院有个肥嫩的嫩巴八斤狗，咬了我肥嫩的嫩巴八斤鸡，卖了他肥嫩的嫩巴八斤狗，赔了我肥嫩的嫩巴八斤鸡。”乙 这好说。甲 说。乙 我家有一个肥嫩的嫩大八斤。甲 大八斤哪?肥嫩的嫩巴八斤鸡。乙 我家有个肥嫩的嫩巴八斤鸡，飞到张家后院里，张家有个肥嫩的嫩巴八斤狗，咬了我的手，我不走，大众围着瞅，巡警也来瞅，巡警说，你的狗，不上捐，咬了吉坪三的手，连人带拘一齐拉着走，你爸爸和你妈妈害怕，给巡警打的酒、买的白莲藕，巡警说，我办公事不喝酒，不吃藕，巡警走，我没有走，我在你家喝的酒，吃的藕，我在你家呆了好几宿。甲 这是什么呀?乙 不是这个吗?甲 不对，我们这是狗咬鸡。乙 哦，狗咬鸡。甲 嘿!乙 我跑到狗咬手上去啦。甲 你那狗咬手跟狗咬鸡差多啦!乙 你听。甲 说。乙 我家有一肥嫩的嫩巴八斤鸡，飞到你们张家后院里，你们张家肥嫩的嫩巴八斤狗，咬了我的肥嫩的嫩巴八斤鸡，因为什么你们狗咬我鸡，我不依，你爸爸和你妈妈抱着肥嫩狗，那天星期一，抱到大街西拖到法兰西，卖了一块七，我还不依，你妈是阎婆惜。甲 你别挨骂啦!246. 四干四鲜四蜜饯四冷荤,三个甜碗四点心。 四干,黑瓜子白瓜子核桃蘸子糖杏仁儿。 四鲜,北山苹果申州蜜桃广东荔枝桂林马蹄。 四蜜饯,青梅橘饼圆肉瓜条。 四冷荤,全羊肝儿溜蟹腿白斩鸡炸排骨。 三甜碗,莲子粥杏仁儿茶糖蒸八宝饭。 四点心,芙蓉糕喇嘛糕油炸荟子炸元宵。 有蒸羊羔儿、蒸熊掌、蒸鹿尾儿、烧花鸭、烧雏鸡、烧子鹅、炉猪、炉鸭、酱鸡、腊肉、松花小肚儿、 晾肉、香肠儿、什锦苏盘儿、熏鸡白肚儿、清蒸八宝猪、江米酿鸭子、罐儿野鸡、罐儿鹌鹑、卤什件儿、 卤子鹅、山鸡、兔脯、菜蟒、银鱼、清蒸哈什蚂、烩鸭腰儿、烤鸭条、清拌腰丝儿、黄心管儿、 焖白鳝、焖黄鳝、豆鼓鲇鱼、锅烧鲤鱼、烀烂甲鱼、抓炒鲤鱼、抓炒对虾、软炸里脊、软炸鸡、 什锦套肠儿、卤煮寒鸦儿、麻酥油卷儿、熘鲜蘑、熘鱼脯、熘鱼肚、熘鱼片儿、醋烟肉片儿、烟三鲜儿、 烟鸽子蛋、熘白蘑、熘什件儿、炒银丝儿、烟刀鱼、清蒸火腿、炒白虾、炝青蛤、炒面鱼、炝竹笋、 芙蓉燕菜、炒虾仁儿、熘腰花儿、烩海参、炒蹄筋儿、锅烧海参、锅烧白菜、炸木耳、炒肝尖儿、 桂花翅子、清蒸翅子、炸飞禽。炸汁儿、炸排骨、清蒸江瑶柱、糖熘芡仁米、拌鸡丝、拌肚丝、 什锦豆腐、什锦丁儿、糟鸭、糟熘鱼片、熘蟹肉、炒蟹肉、烩蟹肉、清拌蟹肉、蒸南瓜、酿倭瓜、 炒丝瓜、酿冬瓜.烟鸭掌儿、焖鸭掌儿、焖笋、炝茭白、茄子晒炉肉、鸭羹、蟹肉羹、鸡血汤、 三鲜木樨汤、红丸子、白丸子、南煎丸子、四喜丸子、三鲜丸子、氽丸子、鲜虾丸子、鱼脯丸子、 饹炸丸子、豆腐丸子、樱桃肉、马牙肉、米粉肉、一品肉、栗子肉、坛子肉、红焖肉、黄焖肉、 酱豆腐肉、晒炉肉、炖肉、黏糊肉、烀肉、扣肉、松肉、罐儿肉、烧肉、大肉、烤肉、白肉、红肘子、 白肘子、熏肘子、水晶肘子、蜜蜡肘子、锅烧肘子、扒肘条、炖羊肉、酱羊肉、烧羊肉、烤羊肉、 清羔羊肉、五香羊肉、氽三样儿、爆三样儿、炸卷果儿、烩散丹、烩酸燕儿、烩银丝儿、烩白杂碎、 氽节子、烩节子、炸绣球、三鲜鱼翅、栗子鸡、氽鲤鱼、酱汁鲫鱼、活钻鲤鱼、板鸭、筒子鸡、 烩脐肚、烩南荠、爆肚仁儿、盐水肘花儿、锅烧猪蹄儿、拌稂子、炖吊子、烧肝尖儿、烧肥肠儿、 烧心、烧肺、烧紫盖儿、烧连帖、烧宝盖儿、油炸肺、酱瓜丝儿、山鸡丁儿、拌海蜇、龙须菜、 炝冬笋、玉兰片、烧鸳鸯、烧鱼头、烧槟子、烧百合、炸豆腐、炸面筋、炸软巾、糖熘饹儿、 拔丝山药、糖焖莲子、酿山药、杏仁儿酪、小炒螃蟹、氽大甲、炒荤素儿、什锦葛仙米、鳎目鱼、 八代鱼、海鲫鱼、黄花鱼、鲥鱼、带鱼、扒海参、扒燕窝、扒鸡腿儿、扒鸡块儿、扒肉、扒面筋、 扒三样儿、油泼肉、酱泼肉、炒虾黄、熘蟹黄、炒子蟹、炸子蟹、佛手海参、炸烹儿、炒芡子米、 奶汤、翅子汤、三丝汤、熏斑鸠、卤斑鸠、海白米、烩腰丁儿、火烧茨菰、炸鹿尾儿、焖鱼头、 拌皮渣儿、氽肥肠儿、炸紫盖儿、鸡丝豆苗、十二台菜、汤羊、鹿肉、驼峰、鹿大哈、插根儿、 炸花件儿，清拌粉皮儿、炝莴笋、烹芽韭、木樨菜、烹丁香、烹大肉、烹白肉、麻辣野鸡、烩酸蕾、 熘脊髓、咸肉丝儿、白肉丝儿、荸荠一品锅、素炝春不老、清焖莲子、酸黄菜、烧萝卜、脂油雪花儿菜、 烩银耳、炒银枝儿、八宝榛子酱、黄鱼锅子、白菜锅子、什锦锅子、汤圆锅子、菊花锅子、杂烩锅子、 煮饽饽锅子、肉丁辣酱、炒肉丝、炒肉片儿、烩酸菜、烩白菜、烩豌豆、焖扁豆、氽毛豆、炒豇豆， 外加腌苤蓝丝儿。247. 咱们两个人说一段儿绕嘴的。 乙 好说。 甲 绕嘴的，我说一个，你就说不上来。 乙 说不上来拜你为师。 甲 你说上来我拜你为师。 乙 好，你说吧。 甲 你听这个。 乙 啊。 甲 “大门外有四辆四轮大马车，你爱拉哪两辆，来拉哪两辆。 乙 好说。 甲 说。 乙 大门外有四辆四轮大马车，你爱拉哪两辆，你给我留两辆。 甲 哎，咱俩一个人两辆。 乙 不是分车吗? 甲 分车呀! 乙 大门外有四辆四轮大马车，你爱拉哪两辆，你拉，你全拉了去得了，我不要啦! 甲 你坐黄包车家去啊! 乙 我走着回去。 甲 你这是挨骂。 乙 “大门外有四辆四轮大马车，你爱拉哪两辆，来拉哪两辆。” 甲 这个算你说上来啦。 乙 哪个都行。 甲 这个好说。“出南门往正南，有一个面铺面向南，面铺门口挂个蓝市棉门帘，摘了蓝布棉门帘，面铺还是面向南，挂上蓝布棉门帘，瞧了瞧，面铺还是面向南。” 乙 这个好说。 甲 说。 乙 出南门往正南，有个面铺面向南，面铺挂着蓝布棉门帘，摘了蓝布棉门帘，面铺卖了八块八毛钱。 甲 八块八，四袋子面。 乙 “出南门往正南，有一个面铺面向南，面铺挂着蓝布棉门帘，摘了蓝布棉门帘，还是个面铺面向南。挂着蓝布棉门帘，瞧了瞧，哎，还是个面铺面向南。” 甲 这个算你说上来了。 乙 哪个我都行。 甲 你再听这一个。 乙 哎。 甲 “会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐哇。” 乙 好说。 甲 说。 乙 你会炖我的炖冻豆腐，你炖我的炖冻豆腐，你不会炖我的炖冻豆腐，你别动我的豆腐。 甲 准动你的豆腐啦? 乙 你会炖我的炖冻豆腐，来炖我的炖冻豆腐，你不会炖冻豆腐，你熬豆腐吃吧! 甲 那就省厨师傅啦。 乙 “你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别混充会炖炖坏了我的炖冻豆腐哇!” 甲 哼!这个也算你说上来啦。 乙 哪一个我都说得上来。 甲 你这是蒙的。再说一个你听。 乙 说。 甲 “你会糊我的粉红活佛龛来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪!” 乙 这个好说。 甲 说。 乙 你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你不会糊我的粉红活佛龛，你就给我看着得啦! 甲 哎，我给你看着什么呀? 乙 别丢啦! 甲 什么呀! 乙 你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你不会糊我的粉红活佛龛，你给我买一个佛爷龛子吧。 甲 那你就别糊啦。 乙 有卖的，先生。 甲 哪儿卖呀? 乙 怎么，非得说上来不可吗? 甲 你说不上来啦。 乙 当着诸位先生，说不上来我拜你为师。 甲 你要说上来，我拜你为师。 乙 好，你听着。 甲 说。 乙 我长年指着这个吃饭。 甲 你说吧。 乙 你会糊我的粉红活佛龛，你来糊我的粉红活佛龛，你要是不会糊我的粉红活佛龛，你别混充会炖炖坏了我的炖冻豆腐哇。 甲 你别挨骂了。 乙 “你会糊我的粉红活佛龛，来糊我的粉红活佛龛，不会糊我的粉红活佛龛，别混充会糊糊坏了我的粉红活佛龛哪!” 甲 我再说个绕嘴的，你就说不上来啦! 乙 说不上来，拜你为师。 甲 你听着。 乙 说吧。 甲 山前住着一个姓颜的，他是两只圆眼;山后住着个姓颜的，也是两只圆眼。山前那个叫颜圆眼，山后那个叫颜眼圆。这两个人上山前头比眼去啦，比出这么一个绕嘴的来。 乙 你说吧。 甲 我说给你听。“山前住的颜圆眼，山后住的颜眼圆，二人山前来比眼，也不知道颜圆眼比颜眼圆的圆眼，也不知道颜眼圆比颜圆眼的眼圆。” 乙 这个好说。 甲 你说。 乙 山前住个颜圆远，山后住的颜远圆。 甲 圆眼眼圆。 乙 他是对头。 甲 哦。 乙 山前住的颜圆眼，山后住的颜眼圆，两人山前前来比圆眼，颜圆眼比不过给一块四毛钱。 甲 你的洋钱又来啦! 乙 四吊多啦。 甲 嗐。 乙 “山前住的颜国眼，山后住的颜眼圆，两人山前来比眼，也不知道颜国眼比颜眼圆的圆眼，也不知道颜眼圆比颜圆眼的眼圆。” 甲 这个算你说上来啦。 乙 这算什么呀? 甲 我再说一个你听。 乙 哎。 甲 山前住一个姓崔的，他是两条粗腿，山后住了一个姓崔的，他是两条腿粗。“山前住的叫崔粗腿，山后住的叫崔腿粗，两人山前来比腿，也不知道崔祖腿比崔腿粗的粗腿，也不知道是崔腿粗比崔粗腿的腿粗。” 乙 这好说。 甲 说。 乙 山前住的崔粗腿，山后住的秃老美。 甲 嘿，秃老美，还没有头发哪! 乙 “山前住的崔祖腿，山后住的崔腿粗，两人山前来比腿，也不知道崔粗腿的粗腿，他是肿腿。 甲 腿肿啦，比你这腿海得多啦，你这是挨骂哪! 乙 “山前住的崔粗腿，山后住的崔腿粗，两人山前来比腿，也不知道崔粗腿的腿比崔腿粗的粗腿，也不知道崔腿粗比崔粗腿的腿粗。” 甲 好，瞧瞧舌头多利落! 乙 也说上来啦! 甲 我再说一个你就说不上来啦! 乙 说不上来我就算拜你为师。 甲 你听这个。“我家有个肥嫩的嫩巴八斤鸡，飞在张家后院里，张家后院有个肥嫩的嫩巴八斤狗，咬了我肥嫩的嫩巴八斤鸡，卖了他肥嫩的嫩巴八斤狗，赔了我肥嫩的嫩巴八斤鸡。” 乙 这好说。 甲 说。 乙 我家有一个肥嫩的嫩大八斤。 甲 大八斤哪?肥嫩的嫩巴八斤鸡。 乙 我家有个肥嫩的嫩巴八斤鸡，飞到张家后院里，张家有个肥嫩的嫩巴八斤狗，咬了我的手，我不走，大众围着瞅，巡警也来瞅，巡警说，你的狗，不上捐，咬了吉坪三的手，连人带拘一齐拉着走，你爸爸和你妈妈害怕，给巡警打的酒、买的白莲藕， 巡警说，我办公事不喝酒，不吃藕，巡警走，我没有走，我在你家喝的酒，吃的藕，我在你家呆了好几宿。 甲 这是什么呀? 乙 不是这个吗? 甲 不对，我们这是狗咬鸡。 乙 哦，狗咬鸡。 甲 嘿! 乙 我跑到狗咬手上去啦。 甲 你那狗咬手跟狗咬鸡差多啦! 乙 你听。 甲 说。 乙 我家有一肥嫩的嫩巴八斤鸡，飞到你们张家后院里，你们张家肥嫩的嫩巴八斤狗，咬了我的肥嫩的嫩巴八斤鸡，因为什么你们狗咬我鸡，我不依，你爸爸和你妈妈抱着肥嫩狗，那天星期一，抱到大街西拖到法兰西，卖了一块七，我还不依，你妈是阎婆惜。 甲 你别挨骂啦!248. 买了布，打了醋，回头看见鹰抓兔。放下布，搁下兔，上前去追鹰和兔，飞了鹰，跑了兔。打翻醋，醋湿布。花猫用爪抓小毛，小毛用手拍花猫，花猫抓破了小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫 ，花猫跑离了小毛。249. 猫鼻子——白猫黑鼻子，黑猫白鼻子；黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子；黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 羊和狼——东边来了一只小山羊，西边来了一只大灰狼，一起走到小桥上，小山羊不让大灰狼，大灰狼不让小山羊，小山羊叫大灰狼让小山羊，大灰狼叫小山羊让大灰狼，羊不让狼，狼不让羊，扑通一起掉到河中央。 盆和瓶——桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 荷花和蛤蟆——一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。 画狮子——有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了“活狮子”。 小花猫——小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 造房子——捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。 毛毛和猫猫——毛毛有一顶红帽，猫猫有一身灰毛。毛毛要猫猫的灰毛，猫猫要毛毛的红帽，毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。250. 汤烫塔——老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 蚕和蝉——这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 六十六头牛——六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼；六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 任命、人名——任命是任命，人名是人名，任命人名不能错，错了人名错任命。 枪和糠——墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。 白果树——我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 好孩子——张家有个小英子，王家有个小柱子。张家的小英子，自己穿衣洗袜子，天天扫地擦桌子，王家的小柱子，捡到一只皮夹子，还给后院大婶子。小英子，小柱子，他们都是好孩子。 送花——华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。251. 2.小猪——小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 3.白石塔——白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 4.花鸭与彩霞——水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 5.四和十——四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿：谁说四十是“细席”，他的舌头没用力；谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 6.鹅过河——哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 7.颠倒歌——咬牛奶，喝面包，夹着火车上皮包。东西街，南北走，出门看见人咬狗。拿起狗来打砖头，又怕砖头咬我手。 8.兜装豆——兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 9.狗与猴——树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。252. 说好四和十得靠舌头和牙齿谁说四十是“细席”，他的舌头没用力；谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 山前有四十四棵死涩柿子树,山后有四十四只石狮子.山前的四十四棵死涩柿子树,涩死了山后的四十四只石狮子.山后的四十四只石狮子,咬死了山前的四十四棵死涩柿子树.不知是山前的四十四棵死涩柿子树涩死了山后的四十四只石狮子.还是山后的四十四只石狮子咬死了山前的四十四棵死涩柿子树. 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼；六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼,翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头,笑死了一旁六十六岁的刘老六.253. 锄完不再出,朱叔没笋煮.竹株又干枯,朱叔痛苦哭. 三月三，小三去登山。上山又下山，下山又上山。登了三次山，跑了三里三。出了一身汗，湿了三件衫。小三山上大声喊：“离天只有三尺三！” 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。254. 剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来；二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子， 山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 还了山当腰三哥三嫂子，两个三斗三升酸枣子。255. 我家有只肥净白净八斤鸡，飞到张家后院里。张家院有只肥净白净八斤狗，咬了我的肥净白净八斤鸡。我拿他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。 石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词，年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 生身亲母亲,谨请您就寝,请您心宁静,身心很要紧,新星伴月明,银光澄清清,尽是清净地,警铃不要惊,您醒我过来,进来敬母亲.256. 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 巴老爷有八十八棵芭蕉树,来了八十八个把式要在巴老爷八十八棵芭蕉树下住.巴老爷拔了八十八棵芭蕉树,不让八十八个把式在八十八棵芭蕉树下住.八十八个把式烧了八十八棵芭蕉树,巴老爷在八十八棵树边哭. 油一缸，豆一筐，老鼠嗅着油豆香。 爬上缸，跳进筐，偷油偷豆两头忙。 又高兴，又慌张，脚一滑，身一晃， 扑通”一声跌进缸。257. 喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 天上一颗星，地下一块冰， 屋上一只鹰，墙上一排钉。 抬头不见天上的星，乒乓乒乓踏碎地下的冰， 啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。 会炖我的炖冻豆腐,来炖我的炖冻豆腐.不会炖我的炖冻豆腐,就别炖我的炖冻豆腐.要是混充会炖我的炖冻豆腐,弄坏了我的炖冻豆腐,那就吃不成炖冻豆腐. 红红糊红粉灯笼， 给军属送光荣灯； 芬芬糊粉红灯笼， 给军属送灯光荣； 红红糊完红粉灯笼， 糊粉红灯笼； 芬芬糊完粉红灯笼， 糊红粉灯笼。258. 男旅客扶着拎篮子的老大娘.女旅客搀着拿笼子的小男孩儿. 牛郎年年恋刘娘,刘娘连连念牛郎;牛郎恋刘娘,刘娘念牛郎,郎恋娘来娘念郎. 教练和主力 蓝教练是女教练， 吕教练是男教练，蓝教练不是男教练， 吕教练不是女教练。蓝南是男篮主力， 吕楠是女篮主力， 吕教练在男篮训练蓝南， 蓝教练在女篮训练吕楠。 夏天天下雨,穿绿雨衣的女小吕,去找不穿绿雨衣的吕小女.穿绿雨衣的女小吕,没找到不穿绿雨衣的吕小女不穿绿雨衣的吕小女,也没见着穿绿雨衣的女小吕.259. 爸爸抱宝宝,跑到布铺买布做长袍,宝宝穿了长袍不会跑.布长袍破了还要用布补,再跑到布铺买布补长袍. 哥挎瓜筐过宽沟,赶快过沟看怪狗,光看怪狗瓜筐扣.瓜滚筐扣哥怪狗。 调到敌岛打特盗,特盗太刁投短刀.挡推顶打短刀掉,踏盗得刀盗*. 断头台倒吊短单刀，歹徒登台偷单刀,断头台塌盗跌倒，对对单刀叮当掉。 南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗；还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。260. 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸;哑巴嘀嘀哒哒吹喇叭. 来个老爷子，手里拿个碟子，碟子里装着茄子，一下碰上了橛子。洒了茄子，摔了老爷子。 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上,板凳偏不让扁担绑在板凳上。 长扁担,短扁担,长扁担比短扁担长半扁担;短扁担比长扁担短半扁担.长扁担捆在短板凳上,短扁担捆在长板凳上;长板凳不能捆比短扁担长半扁担的长扁担,短板凳也不能捆比长扁担短半扁担的短扁担.261. 小江拿着一包糖，小方提着一只缸，上楼梯，脚一滑，打翻了小江手中糖。小方慌忙来帮忙，拾起糖，装进缸，缸里装着一包糖。小江小方端起缸，吃了糖，把楼上。 《瓜和花》长长藤，开花花，娃娃爱花不去掐，瓜藤开花花结瓜，要吃瓜，不掐花，娃娃爱花也爱瓜 《简单绕口令布和裤》一块粗土布，一条粗布裤。哥哥拿布又拿裤，飞针走线来扎布，扎过布，再缝裤，裤子破了用布补。 《上山下山》上一山，下一山，跑了三里三米三，登了一座大高山，山高海拔三百三。上了山，大声喊：我比山高三尺三。 《大鱼小鱼》大渠养大鱼，小渠养小鱼，大渠大鱼吃小鱼，小渠小鱼怕大鱼。有一天，下大雨，小渠流进大渠水，小渠里有大鱼，大渠里没小鱼。262. 《九个酒迷喝醉酒》九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 《酒换油》一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 《兔和肚》白兔是白肚，黑兔是黑肚。白兔白肚不是黑肚，黑兔黑肚不是白肚263. 国国和哥哥，树下分果果。哥哥给国国大果果，国国把大个给哥哥。哥哥让国国，国国让哥哥。都说自己要小个，外婆见了乐呵呵。 《数狮子》公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？ 《拔萝卜》出八十八二十八,八个小孩儿把萝卜拔，你也拔，我也拔，看谁拔得多，看谁拔得大。你拔得不多个儿不小，我拔得不少个儿不大。一个萝卜一个坑儿，算算多少用车拉，一个加俩，俩加仨，七十二个加十八?拿个算盘打一打，一百差俩九十八。264. 哥哥喂蝈蝈，蝈蝈要果果，哥哥给果果，蝈蝈叫哥哥。 《华华和爸爸》画画的是华华，画的是爸爸，华华爱画爸爸爱花，爸爸爱华华画的画。 《小礼和小丽》小礼家有梨，小丽家有李。小礼帮小丽摘李，小丽帮小礼摘梨。 《橡皮泥》丽丽有盒橡皮泥，揉好泥儿捏个梨，捏好梨儿捏狐狸，捏了狐狸还有泥。 《玩沙》两个娃娃玩沙，一个在沙上搭塔，一个沙下挖沙，265. 天连水，水连天。水天一色望无边。蓝蓝的天似绿水，绿绿的水如蓝天。 《看电视》对门田老四，喜欢看电视。电视里演戏，戏里有田老师。 《分果果》多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥，外婆乐呵呵。 《妞妞和牛牛》东头有个李家妞，西头有头刘家牛，刘家牛要吃李家豆，李家妞赶走刘家牛。266. 国国和哥哥，树下分果果。哥哥给国国大果果，国国把大个给哥哥。哥哥让国国，国国让哥哥。都说自己要小个，外婆见了乐呵呵. 《布谷鸟》布谷鸟，叫布谷，布谷布谷，忙忙碌碌，赶快布谷。 《吃菱角》吃菱角，剥菱壳，菱角丢在北壁角。不吃菱角不剥壳，菱角不丢北壁角。 《葱和松》东院想栽葱，西院想栽松。是东院栽葱，还是西院栽松。 《数星星》天上小星星，地上小青青。青青看星星，星星亮晶晶。青青数星星，星星数不清。267. 小礼家有梨，小丽家有李。小礼帮小丽摘李，小丽帮小礼摘梨。 《橡皮泥》丽丽有盒橡皮泥，揉好泥儿捏个梨，捏好梨儿捏狐狸，捏了狐狸还有泥。 《玩沙》两个娃娃玩沙，一个在沙上搭塔，一个沙下挖沙，268. 英文口语绕口令练习一 1.while we were walking, we were watching window washers’ wash washington’s windows with warm washing water. 当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。 2.give me the gift of a grip top sock: a drip-drape, ship-shape, and tip-top sock. 给我一双有禁袜带的袜子：悬挂状的，船行的，品质一流的袜子。 3.betty and bob brought back blue balloons from the big bazaar. betty和bob从大杂货店市场上买了蓝气球。 4.susan shines shoes and socks; she ceased shining shoes and socks for shoes and socks shock susan. susan把鞋子和袜子擦亮，她停止了将鞋子和袜子擦亮，因为鞋子和袜子把susan吓坏了。 5.chop shops stock chops. 印章店备有印章。 6.six shimmering sharks sharply striking shins. 六条闪亮的鲨鱼吸引人的胫骨。 英文口语绕口令练习二 1.don’t pamper damp scamp tramps that camp under ramp lamps. 不要纵容那些斜坡的街灯下露营的湿着身子的流浪街童。 2.i never felt a piece of felt which felt as fine as that felt felt, when first i felt that felt hat‘s felt. 在我了解到那个毡帽的手感后，再也没有觉得哪个毛毡的手感和那次感觉得一样好了。 3.what a shame such a shapely sash should such shabby stitches show? 这幺有形的腰带却用这幺破旧的缝线，多丢人啊。 4.thieves seize skis. the blue bluebird blinks. 小偷抓住了滑雪板。 蓝色的知更鸟在眨眼。 5.I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish. 我希望梦想着你梦想中的梦想,但是如果你梦想着女巫的梦想,我就不想梦想着你梦想中的梦想. 6.Whether the weather be fine or whether the weather be not.Whether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not. 无论是晴天或是阴天. 无论是冷或是暖, 不管喜欢与否,我们都要经受风霜雨露. 英文口语绕口令练习三 1.Betty beat a bit of butter to make a better butter. 贝蒂敲打一小块黄油要做一块更好的奶油面. 2.Few free fruit flies fly from flames. 没有几只果蝇从火焰中飞过去. 3.Rita repeated what Reardon recited when Reardon read the remarks. 当里尔登读评论时,丽塔重复里尔登背诵的东西. 4.Fifty-five flags freely flutter from the floating frigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬. 5.How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话,一个裁纸机能裁多少张纸呢? 6.Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already. 特德昨天给弗莱德送去了十只母鸡,所以弗莱德的新鲜面包已经准备好了. 英文口语绕口令练习四 1.A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net. 一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼,结果他民现他的渔网上有一个大裂口. 2.Franc’s father is frying French fries for his five fire-fighter friends after they finished a fire-fighting in a factory. 在结束对一家工厂的灭火战斗以后,弗兰克的父亲在为他的五个消防队员朋友炸制法式土豆(炸薯条) 3. I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much. 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 4.Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See. 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 5.A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net. 一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口。 6.A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together. 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。269. 简单的英文绕口令一 1.How may saws could a see-saw saw if a see-saw could saw saws? 2.How much oil boil can a gum boil boil if a gum boil can boil oil? 3.I thought a thoughtBut the thought I thought wasn’t the thought I thought I thoughtIf the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much 4.I wish I were what I was when I wished I were what I am 5.I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish 6.I wish you were a fish in my dish 7.If two witches would watch two watches, which witch would watch which watch? 8.If you notice this notice, you will notice that this notice is not worth noticing 9.It’s not the cough that carries you off, it’s the coffin they carry you off in! 10.Little red lorry 11.Miss Smith’s fish-sauce shop seldom sells shellfish 12.Never trouble about trouble until trouble troubles you! 13.Nothing is worth thousands of deaths 14.Picky people pick Peter Pan Peanut ButterPeter Pan Peanut is the peanut picky people pick 15.Ripe white wheat reapers reap ripe white wheat right 16.She said she should sit 17.She sells sea shells on the seashoreThe seashells she sells are seashells she is sure 18.Shut up the shutters and sit in the shop 简单的英文绕口令二 1.Silly sheep weep and sleep 2.Six shining cities, six shining cities, six shining cities 3.Six sick sea-serpents swam the seven seas 4.Six sleek swans swam swiftly southwards 5.Stupid superstition! 6.The batter with the butter is the batter that is better! 7.The great Greek grape growers grow great Greek grapes 8.The soldier’s shoulder surely hurts! 9.There those thousand thinkers were thinking how did the other three thieves go through. 10.There’s a sandwich on the sand which was sent by a sane witch 11.Two tiny tigers take two taxis to town 12.Very well, very well, very well .. 13.What noise annoys an oyster most? A noisy noise annoys an oyster most 14.Willie’s really weary. 简单的英文绕口令三 1.A big black bear sat on a big black bug 2.A big black bug bit a big black bear and made the big black bear bleed blood 3.A big black bug bit a big black dog on his big black nose! 4.A loyal warrior will rarely worry why we rule 5.A noise annoys an oyster, but a noisy noise annoys an oyster more! 6.Ann and Andy’s anniversary is in April 7.Bake big batches of bitter brown bread 8.Big black bugs bleed blue black blood but baby black bugs bleed blue blood 9.Black background, brown background 10.Blake’s black bike’s back brake bracket block broke 11.Blue glue gun, green glue gun 12.Caution: Wide Right Turns 13.Each Easter Eddie eats eighty Easter eggs 14.Elizabeth has eleven elves in her elm tree 15.Elizabeth’s birthday is on the third Thursday of this month 16.Fresh fried fish, Fish fresh fried, Fried fish fresh, Fish fried fresh 17.Freshly fried fresh flesh 18.Green glass globes glow greenly 19.He threw three balls 20.He threw three free throws270. 1. She sells sea shells on the seashore, and shells she sells on the seashore are all sea shells I am sure.她在海边卖海贝壳，她在海边卖的贝壳是海贝壳，我敢肯定。 2. Six silly sisters sell silk to six sickly senior citizens.六个傻乎乎的姐妹把丝绸卖给了六位病歪歪的老年市民。 3. Canners can can what they can can but can’t can things can’t be canned.罐头工人把他们能够制成罐头的东西制成罐头但是不能把无法制成罐头的东西制成罐头。 4. Ten tiny tortoises tried to talk to twenty timid toads.10只小乌龟试着和20只羞怯的癞蛤蟆聊天。 5. Good cookies could be cooked by a good cook if a good cook could cook good cookies.如果一位好厨师能够做好家常小甜饼的话，那么好的家常小甜饼是能够由这个厨师做出来的。 6. The rat-catcher that can’t catch caught rats is not necessarily a bad rat-catcher.捕不到已被逮住的老鼠的捕鼠器并不见得是不好的捕鼠器。 7. A writer named Wright was instructing his little son how to write Wright right. He said,” It’s not right to write Wright as ‘rite’–try to write Wright aright!”一个名叫赖特的作家正在指导他年幼的儿子怎样把赖特先生的姓写对。他说：“把赖特写成‘仪式’是不对的，要尽量把赖特写正确。 8. Jenny and Jimmy went to Jamaica and Germany in January, but Joan and John went to Jordan and Japan in June and July.- 詹尼和吉米一月份去了牙买加和德国，而琼和约翰在六月份和七月份起了约旦和日本。 9. A cricket critically cricked at a critical cricket match, and so this cricket quitted the cricket match quickly.一只蟋蟀在一场关键的斗蟀比赛中发生了严重痉挛，这只蟋蟀很快退出了比赛。 10Peter Piper picked a peck of pickled pepper prepared by his parents and put them in a big paper plate.彼得派泊把他父母腌制的泡菜辣椒取出来很多，并且把它们放在了一个大只纸盘里。 11. A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing-net.一个名叫费希尔的芬兰捕鱼人在一个星期五的下午未能捕到任何鱼，结果他发现他的渔网上有一个大裂口。 12. Bill had a billboard, and Bill also had a board bill. The board bill bored Bill, so that Bill sold the billboard to pay his board bill. So after Bill sold his billboard to pay for his board bill, the bill no longer bored Bill.比尔有一个广告牌，比尔也有一份伙食账单。这伙食账单使比尔感到烦恼。因此比尔把广告牌卖掉去支付他的伙食帐。结果，在比尔卖掉了广告牌付了他的伙食帐以后，伙食帐不再使比尔发愁了。 13. Bill’s big brother is building a beautiful building between the two big brick blocks.比尔的哥哥正在两大排房子之间建造一座漂亮的房子。 14. There are thirty thousand feathers on that thrush’s throat.那只的鸫颈部长着三万根羽毛 15. A flea and a fly were trapped in a flue, and they tried to flee for their life. The flea said to the fly “Let’s flee!” and the fly said to the flea “Let’s fly!” Finally both the flea and fly managed to flee through a flaw in the flue. 一只跳蚤和一只苍蝇被诱进了一根管子里，它们竭力逃命。跳蚤对苍蝇说：“我们逃吧!”苍蝇对跳蚤说：“咱们飞吧!”最后，跳蚤和苍蝇设法通过那管子的一个裂缝逃走了。 16. Please, Paul, pause for applause. 保罗，请停一停，鼓鼓掌吧! 17. Well, tell me this :Does a doctor doctors another doctor the way the doctored doctor wants to be doctored, or does the doctor do the doctoring to doctor the other doctor in his own way? 喂，请告诉我这个：一个医生对另外一个医生诊治的办法是那位被诊治的医生所希望被诊治的那样呢，还是这个做诊治的医生用的是他自己的办法对另外那个医生予以诊治? 18. Can you say these simple words very quickly :”What’s that?”Where? What?””There! That!”你能够很快说出这些简单的用语吗?“那是什么?”“哪里，什么?”“那儿，那个!” 19. Franc’s father is frying French fries for his five fire-fighters friends after they finished a fire-fighting in a factory. 在结束了对一家工厂的灭火战斗以后，弗兰克的父亲在为他的五个消防队员朋友炸薯条。 20. Mr. Black likes to keep that kind of clock on his oak-desk. 布莱尔先生喜欢在他的栎木写字台上摆放那样的钟。 21. Badmin was able to beat Bill at billiards but Bill always beat Badmin badly at badminton. 巴德明在台球上能够打败比尔，但是羽毛球上比尔打败巴德明。 22. “Shall I show you the shop for shoes and shirts?”Shirley said to Shelly. “我带你去逛卖鞋子和衬衣的商店好吗?”雪莉对谢利说。 23. Will you come in? He’s swimming in the river with Tim. 你请进，他正在跟蒂姆在河里游泳。 24. He sent ten men to mend the dent in the engine’s tender. 他派了十个人去修理机车头的煤水车的凹陷。 25. The eggs he sells everyday are better than everybody else sells. 他每天卖的鸡蛋比别的任何人卖的都要好一些。 26. Ask at the next grass path that you pass. 在你要经过的下一条草路上问一问。 27. Where is the watch I put in my pocket to take to the shop because it had stopped? 表停了，我放在衣服的口袋里，准备拿到店里去修的，可现在到哪儿去了? 28. These trees have been beaten by the breeze. 微风一直吹拂着树林。 29. Bob bought a big bag of bread and butter to bait the bear’s babies. 鲍勃买了一大袋面包和黄油去逗小熊宝宝。 30. Do you agree, if you are free, to come to tea with me by the sea你同意吗?如果你有空，到海边一起去喝茶??271. 英文口语绕口令练习一 1.while we were walking, we were watching window washers’ wash washington’s windows with warm washing water. 当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。 2.give me the gift of a grip top sock: a drip-drape, ship-shape, and tip-top sock. 给我一双有禁袜带的袜子：悬挂状的，船行的，品质一流的袜子。 3.betty and bob brought back blue balloons from the big bazaar. betty和bob从大杂货店市场上买了蓝气球。 4.susan shines shoes and socks; she ceased shining shoes and socks for shoes and socks shock susan. susan把鞋子和袜子擦亮，她停止了将鞋子和袜子擦亮，因为鞋子和袜子把susan吓坏了。 5.chop shops stock chops. 印章店备有印章。 6.six shimmering sharks sharply striking shins. 六条闪亮的鲨鱼吸引人的胫骨。 英文口语绕口令练习二 1.don’t pamper damp scamp tramps that camp under ramp lamps. 不要纵容那些斜坡的街灯下露营的湿着身子的流浪街童。 2.i never felt a piece of felt which felt as fine as that felt felt, when first i felt that felt hat‘s felt. 在我了解到那个毡帽的手感后，再也没有觉得哪个毛毡的手感和那次感觉得一样好了。 3.what a shame such a shapely sash should such shabby stitches show? 这幺有形的腰带却用这幺破旧的缝线，多丢人啊。 4.thieves seize skis. the blue bluebird blinks. 小偷抓住了滑雪板。 蓝色的知更鸟在眨眼。 5.I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish. 我希望梦想着你梦想中的梦想,但是如果你梦想着女巫的梦想,我就不想梦想着你梦想中的梦想. 6.Whether the weather be fine or whether the weather be not.Whether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not. 无论是晴天或是阴天. 无论是冷或是暖, 不管喜欢与否,我们都要经受风霜雨露. 英文口语绕口令练习三 1.Betty beat a bit of butter to make a better butter. 贝蒂敲打一小块黄油要做一块更好的奶油面. 2.Few free fruit flies fly from flames. 没有几只果蝇从火焰中飞过去. 3.Rita repeated what Reardon recited when Reardon read the remarks. 当里尔登读评论时,丽塔重复里尔登背诵的东西. 4.Fifty-five flags freely flutter from the floating frigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬. 5.How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话,一个裁纸机能裁多少张纸呢? 6.Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already. 特德昨天给弗莱德送去了十只母鸡,所以弗莱德的新鲜面包已经准备好了.272. 1. A big black bear sat on a big black bug. 2. A big black bug bit a big black bear and made the big black bear bleed blood. 3. A big black bug bit a big black dog on his big black nose! 4. A loyal warrior will rarely worry why we rule. 5. A noise annoys an oyster, but a noisy noise annoys an oyster more! 6. Ann and Andy’s anniversary is in April. 7. Bake big batches of bitter brown bread. 8. Big black bugs bleed blue black blood but baby black bugs bleed blue blood. 9. Black background, brown background. 10. Blake’s black bike’s back brake bracket block broke. 11. Blue glue gun, green glue gun. 12. Caution: Wide Right Turns 13. Each Easter Eddie eats eighty Easter eggs. 14. Elizabeth has eleven elves in her elm tree. 15. Elizabeth’s birthday is on the third Thursday of this month. 16. Fresh fried fish, Fish fresh fried, Fried fish fresh, Fish fried fresh. 17. Freshly fried fresh flesh 18. Green glass globes glow greenly. 19. He threw three balls. 20. He threw three free throws. 21. Here’s an easy game to play. Here’s an easy thing to say: 22. How many cookies could a good cook cook If a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 23. How may saws could a see-saw saw if a see-saw could saw saws? 24. How much oil boil can a gum boil boil if a gum boil can boil oil? 25. I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much. 26. I wish I were what I was when I wished I were what I am. 27. I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish. 28. I wish you were a fish in my dish 29. If two witches would watch two watches, which witch would watch which watch? 30. If you notice this notice, you will notice that this notice is not worth noticing. 31. It’s not the cough that carries you off, it’s the coffin they carry you off in! 32. Little red lorry 33. Miss Smith’s fish-sauce shop seldom sells shellfish. 34. Never trouble about trouble until trouble troubles you! 35. Nothing is worth thousands of deaths. 36. Picky people pick Peter Pan Peanut Butter. Peter Pan Peanut is the peanut picky people pick. 37. Ripe white wheat reapers reap ripe white wheat right. 38. She said she should sit. 39. She sells sea shells on the seashore. The seashells she sells are seashells she is sure. 40. Shut up the shutters and sit in the shop. 41. Silly sheep weep and sleep. 42. Six shining cities, six shining cities, six shining cities. 43. Six sick sea-serpents swam the seven seas. 44. Six sleek swans swam swiftly southwards 45. Stupid superstition! 46. The batter with the butter is the batter that is better! 47. The great Greek grape growers grow great Greek grapes. 48. The soldier’s shoulder surely hurts! 49. There those thousand thinkers were thinking how did the other three thieves go through. 50. There’s a sandwich on the sand which was sent by a sane witch.273. 1.Betty beat a bit of butter to make a better batter. 贝蒂敲打一小块黄油要做一块更好的奶油面。 2. Rita repeated what Reardon recited when Reardon read the remarks. 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13. Few free fruit flies fly from flames. 没有几只果蝇从火焰中飞过去。 3. Fifty-five flags freely flutter from the floating frigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 4. There is no need to light a night light on a light night like tonight. for a bright night light is just like a slight light. 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 5. A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together. 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 6. How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢? 7. Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See. 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 8. If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite. 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。 9. Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already. 特德昨天给弗莱德送去了十只母鸡，所以弗莱德的新鲜面包已经准备好了。 10、Franc’s father is frying French fries for his five fire-fighter friends after they finished a fire-fighting in a factory. 在结束对一家工厂的灭火战斗以后，弗兰克的父亲在为他的五个消防队员朋友炸制法式土豆(炸薯条)。274. 儿童的英文绕口令一 1. Can you can a can as a canner can can a can? 你能够像罐头工人一样装罐头吗? 2. I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish。 我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。 3. I scream, you scream, we all scream for ice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋! 4. How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies。 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 5. The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 6. Whether the weather be fine or whether the weather be not。 Whether the weather be cold or whether the weather be hot。 We’ll weather the weather whether we like it or not。 无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。 7. Peter Piper picked a peck of pickled peppers。 A peck of pickled peppers Peter Piper picked。 If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked? 彼德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿? 8. I thought a thought. But the thought I thought wasn’t the thought I thought I thought。 If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much。 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 9. Amid the mists and coldest frosts, With barest wrists and stoutest boasts,He thrusts his fists against the posts,And still insists he sees the ghosts。 雾蒙蒙，冰霜冻，手腕儿空空，话儿涌，只见他猛所拳头往柱子上砸，直说自己把鬼碰。 10. Badmin was able to beat Bill at billiards, but Bill always beat Badmin badly at badminton。 巴德明在台球上能够打败比尔，但是打羽毛球比尔常常大败巴德明。 11. Betty beat a bit of butter to make a better batter。 贝蒂敲打一小块黄油要做一块更好的奶油面。 12. Rita repeated what Reardon recited when Reardon read the remarks。 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13. Few free fruit flies fly from flames。 没有几只果蝇从火焰中飞过去。 14. Fifty-five flags freely flutter from the floating frigate。 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 15. There is no need to light a night light on a light night like tonight。 for a bright night light is just like a slight light。 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 17. A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together。 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 18. How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢? 19. Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See。 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 20. If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite。 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。 21. Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already。 特德昨天给弗莱德送去了十只母鸡，所以弗莱德的新鲜面包已经准备好了。 22. A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net。 一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口。 23. Franc’s father is frying French fries for his five fire-fighter friends after they finished a fire-fighting in a factory。 在结束对一家工厂的灭火战斗以后，弗兰克的父亲在为他的五个消防队员朋友炸制法式土豆(炸薯条) 儿童的英文绕口令二 1、Betty beat a bit of butter to make a better batter. 贝蒂敲打一小块黄油要做一块更好的奶油面。 2、Rita repeated what Reardon recited when Reardon read the remarks. 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13. Few free fruit flies fly from flames. 没有几只果蝇从火焰中飞过去。 3、Fifty-five flags freely flutter from the floating frigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 4、There is no need to light a night light on a light night like tonight. for a bright night light is just like a slight light. 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 5、A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together. 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 6、How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢? 7、 Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See. 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 8、If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite. 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。 9、sent Fred ten hens yesterday so Fred’s fresh bread is ready already. 特德昨天给弗莱德送去了十只母鸡，所以弗莱德的新鲜面包已经准备好了。 10、Franc’s father is frying French fries for his five fire-fighter friends after they finished a fire-fighting in a factory. 在结束对一家工厂的灭火战斗以后，弗兰克的父亲在为他的五个消防队员朋友炸制法式土豆(炸薯条)275. while we were walking， we were watching window washers‘ washwashington’s windows with warm washing water。 当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。 give me the gift of a grip top sock： a drip-drape， ship-shape，and tip-top sock。 给我一双有禁袜带的袜子：悬挂状的，船行的，品质一流的袜子。 betty and bob brought back blue balloons from the big bazaar。 betty和bob从大杂货店市场上买了蓝气球。 susan shines shoes and socks； she ceased shining shoes and socksfor shoes and socks shock susan。 susan把鞋子和袜子擦亮，她停止了将鞋子和袜子擦亮，因为鞋子和袜子把susan吓坏了。 sarah saw a shot-silk sash shop full of shot-silk sashes as thesunshine shone on the side of the shot-silk sash shop。 萨拉看到闪光丝饰品店挂满了闪光丝饰品，好象太阳在店边上发出刺眼的光芒。 chop shops stock chops。 印章店备有印章。 brad‘s big black bath brush broke。 brad‘s的黑色大浴刷断了。 six shimmering sharks sharply striking shins。 六条闪亮的鲨鱼吸引人的胫骨。 don‘t pamper damp scamp tramps that camp under ramp lamps。 不要纵容那些斜坡的街灯下露营的湿着身子的流浪街童。 i never felt a piece of felt which felt as fine as that feltfelt， when first i felt that felt hat‘s felt。 在我了解到那个毡帽的手感后，再也没有觉得哪个毛毡的手感和那次感觉得一样好了。 what a shame such a shapely sash should such shabby stitchesshow？ 这幺有形的腰带却用这幺破旧的缝线，多丢人啊。 thieves seize skis。 the blue bluebird blinks。 小偷抓住了滑雪板。 蓝色的知更鸟在眨眼。276. 1. Can you can a can as a canner can can a can? 你能够像罐头工人一样装罐头吗? 2. I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish。 我希望梦想着你梦想中的梦想，但是如果你梦想着女巫的梦想，我就不想梦想着你梦想中的梦想。 3. I scream, you scream, we all scream for ice-cream! 我叫喊，你叫喊，我们都喊着要冰淇淋! 4. How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies。 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 5. The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 6. Whether the weather be fine or whether the weather be not。 Whether the weather be cold or whether the weather be hot。 We’ll weather the weather whether we like it or not。 无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。 7. Peter Piper picked a peck of pickled peppers。 A peck of pickled peppers Peter Piper picked。 If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked? 彼德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿? 8. I thought a thought. But the thought I thought wasn’t the thought I thought I thought。 If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much。 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 9. Amid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts。 雾蒙蒙，冰霜冻， 手腕儿空空，话儿涌， 只见他猛所拳头往柱子上砸， 直说自己把鬼碰。 10. Badmin was able to beat Bill at billiards, but Bill always beat Badmin badly at badminton。 巴德明在台球上能够打败比尔，但是打羽毛球比尔常常大败巴德明。 11. Betty beat a bit of butter to make a better batter。 贝蒂敲打一小块黄油要做一块更好的奶油面。 12. Rita repeated what Reardon recited when Reardon read the remarks。 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13. Few free fruit flies fly from flames。 没有几只果蝇从火焰中飞过去。 14. Fifty-five flags freely flutter from the floating frigate。 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 15. There is no need to light a night light on a light night like tonight。 for a bright night light is just like a slight light。 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 17. A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together。 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 18. How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢? 19. Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See。 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 20. If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite。 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。277. 1. She sells sea shells on the seashore, and shells she sells on the seashore are all sea shells I am sure.她在海边卖海贝壳，她在海边卖的贝壳是海贝壳，我敢肯定。 2. Six silly sisters sell silk to six sickly senior citizens.六个傻乎乎的姐妹把丝绸卖给了六位病歪歪的老年市民。 3. Canners can can what they can can but can’t can things can’t be canned.罐头工人把他们能够制成罐头的东西制成罐头但是不能把无法制成罐头的东西制成罐头。 4. Ten tiny tortoises tried to talk to twenty timid toads.10只小乌龟试着和20只羞怯的癞蛤蟆聊天。英文绕口令练习素材 5. Good cookies could be cooked by a good cook if a good cook could cook good cookies.如果一位好厨师能够做好家常小甜饼的话，那么好的家常小甜饼是能够由这个厨师做出来的。 6. The rat-catcher that can’t catch caught rats is not necessarily a bad rat-catcher.捕不到已被逮住的老鼠的捕鼠器并不见得是不好的捕鼠器。 7. A writer named Wright was instructing his little son how to write Wright right. He said,” It’s not right to write Wright as ‘rite’–try to write Wright aright!”一个名叫赖特的作家正在指导他年幼的儿子怎样把赖特先生的姓写对。他说：“把赖特写成‘仪式’是不对的，要尽量把赖特写正确。 8. Jenny and Jimmy went to Jamaica and Germany in January, but Joan and John went to Jordan and Japan in June and July.- 詹尼和吉米一月份去了牙买加和德国，而琼和约翰在六月份和七月份起了约旦和日本。 9. A cricket critically cricked at a critical cricket match, and so this cricket quitted the cricket match quickly.一只蟋蟀在一场关键的斗蟀比赛中发生了严重痉挛，这只蟋蟀很快退出了比赛。 10Peter Piper picked a peck of pickled pepper prepared by his parents and put them in a big paper plate.彼得派泊把他父母腌制的泡菜辣椒取出来很多，并且把它们放在了一个大只纸盘里。 11. A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing-net.一个名叫费希尔的芬兰捕鱼人在一个星期五的下午未能捕到任何鱼，结果他发现他的渔网上有一个大裂口。 12. Bill had a billboard, and Bill also had a board bill. The board bill bored Bill, so that Bill sold the billboard to pay his board bill. So after Bill sold his billboard to pay for his board bill, the bill no longer bored Bill.比尔有一个广告牌，比尔也有一份伙食账单。这伙食账单使比尔感到烦恼。因此比尔把广告牌卖掉去支付他的伙食帐。结果，在比尔卖掉了广告牌付了他的伙食帐以后，伙食帐不再使比尔发愁了。 13. Bill’s big brother is building a beautiful building between the two big brick blocks.比尔的哥哥正在两大排房子之间建造一座漂亮的房子。 14. There are thirty thousand feathers on that thrush’s throat.那只的鸫颈部长着三万根羽毛 15. A flea and a fly were trapped in a flue, and they tried to flee for their life. The flea said to the fly “Let’s flee!” and the fly said to the flea “Let’s fly!” Finally both the flea and fly managed to flee through a flaw in the flue. 一只跳蚤和一只苍蝇被诱进了一根管子里，它们竭力逃命。跳蚤对苍蝇说：“我们逃吧!”苍蝇对跳蚤说：“咱们飞吧!”最后，跳蚤和苍蝇设法通过那管子的一个裂缝逃走了。 16. Please, Paul, pause for applause. 保罗，请停一停，鼓鼓掌吧! 17. Well, tell me this :Does a doctor doctors another doctor the way the doctored doctor wants to be doctored, or does the doctor do the doctoring to doctor the other doctor in his own way? 喂，请告诉我这个：一个医生对另外一个医生诊治的办法是那位被诊治的医生所希望被诊治的那样呢，还是这个做诊治的医生用的是他自己的办法对另外那个医生予以诊治? 18. Can you say these simple words very quickly :”What’s that?”Where? What?””There! That!”你能够很快说出这些简单的用语吗?“那是什么?”“哪里，什么?”“那儿，那个!” 19. Franc’s father is frying French fries for his five fire-fighters friends after they finished a fire-fighting in a factory. 在结束了对一家工厂的灭火战斗以后，弗兰克的父亲在为他的五个消防队员朋友炸薯条。 20. Mr. Black likes to keep that kind of clock on his oak-desk. 布莱尔先生喜欢在他的栎木写字台上摆放那样的钟。 21. Badmin was able to beat Bill at billiards but Bill always beat Badmin badly at badminton. 巴德明在台球上能够打败比尔，但是羽毛球上比尔打败巴德明。 22. “Shall I show you the shop for shoes and shirts?”Shirley said to Shelly. “我带你去逛卖鞋子和衬衣的商店好吗?”雪莉对谢利说。 23. Will you come in? He’s swimming in the river with Tim. 你请进，他正在跟蒂姆在河里游泳。 24. He sent ten men to mend the dent in the engine’s tender. 他派了十个人去修理机车头的煤水车的凹陷。 25. The eggs he sells everyday are better than everybody else sells. 他每天卖的鸡蛋比别的任何人卖的都要好一些。 26. Ask at the next grass path that you pass. 在你要经过的下一条草路上问一问。 27. Where is the watch I put in my pocket to take to the shop because it had stopped? 表停了，我放在衣服的口袋里，准备拿到店里去修的，可现在到哪儿去了? 28. These trees have been beaten by the breeze. 微风一直吹拂着树林。 29. Bob bought a big bag of bread and butter to bait the bear’s babies. 鲍勃买了一大袋面包和黄油去逗小熊宝宝。 30. Do you agree, if you are free, to come to tea with me by the sea你同意吗?如果你有空，到海边一起去喝茶??278. 能够练习英文口语的绕口令大家都知道哪些呢?下面yjbys小编跟大家分享一些英文口语绕口令，以供参考! 英文口语绕口令练习一 1.while we were walking, we were watching window washers’ wash washington’s windows with warm washing water. 当我们走路时，我们看着清洁窗户的人用暖水清洗华盛顿的窗户。 2.give me the gift of a grip top sock: a drip-drape, ship-shape, and tip-top sock. 给我一双有禁袜带的袜子：悬挂状的，船行的，品质一流的袜子。 3.betty and bob brought back blue balloons from the big bazaar. betty和bob从大杂货店市场上买了蓝气球。 4.susan shines shoes and socks; she ceased shining shoes and socks for shoes and socks shock susan. susan把鞋子和袜子擦亮，她停止了将鞋子和袜子擦亮，因为鞋子和袜子把susan吓坏了。 5.chop shops stock chops. 印章店备有印章。 6.six shimmering sharks sharply striking shins. 六条闪亮的鲨鱼吸引人的胫骨。 英文口语绕口令练习二 1.don’t pamper damp scamp tramps that camp under ramp lamps. 不要纵容那些斜坡的街灯下露营的湿着身子的流浪街童。 2.i never felt a piece of felt which felt as fine as that felt felt, when first i felt that felt hat‘s felt. 在我了解到那个毡帽的手感后，再也没有觉得哪个毛毡的手感和那次感觉得一样好了。 3.what a shame such a shapely sash should such shabby stitches show? 这幺有形的腰带却用这幺破旧的缝线，多丢人啊。 4.thieves seize skis. the blue bluebird blinks. 小偷抓住了滑雪板。 蓝色的知更鸟在眨眼。 5.I wish to wish the wish you wish to wish, but if you wish the wish the witch wishes, I won’t wish the wish you wish to wish. 我希望梦想着你梦想中的梦想,但是如果你梦想着女巫的梦想,我就不想梦想着你梦想中的梦想. 6.Whether the weather be fine or whether the weather be not.Whether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not. 无论是晴天或是阴天. 无论是冷或是暖, 不管喜欢与否,我们都要经受风霜雨露. 英文口语绕口令练习三 1.Betty beat a bit of butter to make a better butter. 贝蒂敲打一小块黄油要做一块更好的奶油面. 2.Few free fruit flies fly from flames. 没有几只果蝇从火焰中飞过去. 3.Rita repeated what Reardon recited when Reardon read the remarks. 当里尔登读评论时,丽塔重复里尔登背诵的东西. 4.Fifty-five flags freely flutter from the floating frigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬. 5.How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话,一个裁纸机能裁多少张纸呢? 6.Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already. 特德昨天给弗莱德送去了十只母鸡,所以弗莱德的新鲜面包已经准备好了.279. 1. A big black bug bit a big black bear, made the big black bear bleed blood。 大黑虫咬大黑熊，大黑熊流血了! 2.A bloke’s back bike brake block broke。 一个家伙的脚踏车后制动器坏了。 3.A bitter biting bittern bit a better brother bittern, and the bitter better bittern bit the bitter bittern back. And the bitter bittern, bitten, by the better bitten bittern, said: “I’m a bitter biter bit, alack!” 一只沮丧而尖刻的麻鹊咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鹊对它的兄弟说：“我是一只充满怨恨的麻鹊!我害人终害己了!” 4. How many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 如果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 5. The driver was drunk and drove the doctor’s car directly into the deep ditch. 这个司机喝醉了，他把医生的车开进了一个大深沟里。 6. Whether the weather be fine or whether the weather be not.Whether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not. 无论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。 7. Peter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked? 彼德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿? 8. I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much. 我有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 9. Amid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts. 雾蒙蒙，冰霜冻， 手腕儿空空，话儿涌， 只见他猛所拳头往柱子上砸， 直说自己把鬼碰。 10. Badmin was able to beat Bill at billiards, but Bill always beat Badmin badly at badminton. 巴德明在台球上能够打败比尔，但是打羽毛球比尔常常大败巴德明。 11. Betty beat a bit of butter to make a better butter. 贝蒂敲打一小块黄油要做一块更好的奶油面。 12. Rita repeated what Reardon recited when Reardon read the remarks. 当里尔登读评论时，丽塔重复里尔登背诵的东西。 13. Few free fruit flies fly from flames. 没有几只果蝇从火焰中飞过去。 14. Fifty-five flags freely flutter from the floating frigate. 五十五面旗子在轻轻漂浮的战舰上自由的飘扬。 15. There is no need to light a night light on a light night like tonight. for a bright night light is just like a slight light. 像今夜这样明亮的夜晚，就不需要点一盏夜灯，因为明亮的夜灯也会变得微弱。 17. A pleasant peasant keeps a pleasant pheasant and both the peasant and the pheasant are having a pleasant time together. 一位和气的农民养了一只伶俐的野鸡，而且这位和气的农民和这只伶俐的野鸡在一起度过了一段很美好的时光。 18. How many sheets could a sheet slitter slit if a sheet slitter could slit sheets? 如果裁纸机能裁纸的话，一个裁纸机能裁多少张纸呢? 19. Mr. See owned a saw and Mr. Soar owned a seesaw. Now See’s saw sawed Soar’s seesaw before Soar saw See. 西先生有一个锯，萨先生有一个秋千。现在在萨先生看见西先生之前，西先生的锯锯断了萨先生的秋千。 20. If you’re keen on stunning kites and cunning stunts, buy a cunning stunning stunt kite. 如果你非常相要好的风筝和精彩的表演，就去买一只漂亮的，灵巧的风筝吧。 21. Ted sent Fred ten hens yesterday so Fred’s fresh bread is ready already. 特德昨天给弗莱德送去了十只母鸡，所以弗莱德的新鲜面包已经准备好了。 22. A Finnish fisher named Fisher failed to fish any fish one Friday afternoon and finally he found out a big fissure in his fishing net. 一个名叫费希尔的芬兰渔民在一个星期五的下午未能捕捉到任何鱼，结果他民现他的渔网上有一个大裂口。 23. A flea and a fly flew up in a flue. Said the flea, “Let us fly!” Said the fly, “Let us flee!” So they flew through a flaw in the flue。 一只跳蚤和一只苍蝇飞进烟道里。跳蚤说：“让我们飞吧!”苍蝇说：“让我们逃跑吧!”就这样，它们就飞越了烟道里的一条裂纹。 24.A writer named Wright was instructing his little son how to write Wright right. He said:” It is not right to write Wright as ‘rite’-try to write Wright aright! (一个名叫赖特的作家正在指导他年幼的儿子怎样把赖特写对。他说：“把赖特写成‘仪式’是不对的-要把赖特写正确!”) 25.Ann sent Andy ten hens and Andy sent Ann ten pens。 (安给安迪送了10只母鸡，安迪给安送了10支钢笔。) 26. Canners can can what they can can but can not can things can’t be canned。 (罐头工人能够把他们能做成罐头的东西制成罐头，但是不能把无法制成罐头的东西制成罐头。) 27.Good cookies could be cooked by a good cook if a good cook could cook good cookies。 (如果一位好的厨师能做出美味小甜品的话，那么好吃的小甜品是能够由这位厨师制作出来的。) 28. Jenny and Jimmy went to Jamaica and Germany in January, but Joan and John went to Jordan and Japan in June and July。 (詹妮和吉米一月去了牙买加和德国，而琼和约翰在六、七月去了约旦和日本。) 29.A cricket critically cricked at a critical cricket match, and so this cricket quitted the cricket match quickly。 (一只蟋蟀在一场关键性斗蟋比赛中发生严重的痉挛，于是这只蟋蟀很快退出了比赛。) 30. A tutor who tooted a flute tried to tutor two tooters to toot. Said the two to their tutor, “Is it harder to toot or to tutor two tooters to toot?” 一个吹笛的导师尝试教两个吹笛者吹笛。那两个学吹笛的问导师：“吹笛难，还是教两个学吹笛的人吹笛难呢?” 31. It’s not the cough that carries you off, it’s the coffin they carry you off in! 32. Little red lorry 33. Miss Smith’s fish-sauce shop seldom sells shellfish. 34. Never trouble about trouble until trouble troubles you! 35. Nothing is worth thousands of deaths. 36. Picky people pick Peter Pan Peanut Butter. Peter Pan Peanut is the peanut picky people pick. 37. Ripe white wheat reapers reap ripe white wheat right. 38. She said she should sit. 39. She sells sea shells on the seashore. The seashells she sells are seashells she is sure. 40. Shut up the shutters and sit in the shop. 41. Silly sheep weep and sleep. 42. Six shining cities, six shining cities, six shining cities. 43. Six sick sea-serpents swam the seven seas. 44. Six sleek swans swam swiftly southwards 45. Stupid superstition! 46. The batter with the butter is the batter that is better! 47. The great Greek grape growers grow great Greek grapes. 48. The soldier’s shoulder surely hurts! 49. There those thousand thinkers were thinking how did the other three thieves go through. 50. There’s a sandwich on the sand which was sent by a sane witch.280. 趣味绕口令 中文版： 1、天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 2、一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。 3、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 4、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 5、婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 6、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 7、司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 英文版： 1、 Upper roller lower roller. 2、 I saw a saw that could not saw any other saw I ever saw. 3、 The sixth sick sheik’s sixth sheep’s sick. 4、 A good cook could cook as many cookies as a good cook who could cook cookies. 5、 Black bug bit a big black bear. But where is the big black bear that the big black bug bit? 6、 A big bug bit the little beetle but the little beetle bit the big bug back. 7、 I’m not the fig plucker,but the fig plucker’s son. But I’ll pluck figs until the fig plucker comes. 8、 If one doctor doctors anther doctor, does the doctor who doctors the doctor doctors the doctor the way the doctor is doctoring doctors? Or does the doctor doctor the way the doctor who doctors doctors? 9、 If a sledding snail went down a slippery slide, would a sail or slide down the slide? 10、 Betty bought butter but the butter was bitter, so Betty bought better butter to make the bitter butter better. 11、bitter biting bittern bit a better brother bittern, and the bitter better bittern bit the bitter bittern back. And the bitter bittern, bitten, by the better bitten bittern, said: “I’m a bitter biter bit, alack!” 12、ow many cookies could a good cook cook if a good cook could cook cookies? A good cook could cook as much cookies as a good cook who could cook cookies. 13、hether the weather be fine or whether the weather be not.Whether the weather be cold or whether the weather be hot.We’ll weather the weather whether we like it or not. 14、eter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers, Where’s the peck of pickled peppers Peter Piper picked? 15、 thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much. 16、mid the mists and coldest frosts, With barest wrists and stoutest boasts, He thrusts his fists against the posts, And still insists he sees the ghosts. 翻译： 1、 上面的滚轴，下面的滚轴。 2、 我见到一把锯，这把锯不能锯我曾看到的其他锯。 3、 第六个生病的酋长是第六个信徒的病人。 4、 一位好的厨师可以做出和能做饼干的好厨师一样多的饼干。 5、 黑虫子咬了一只大黑熊。可大黑虫子咬的那只大黑熊在哪儿呢? 6、 一只大黑虫子咬了小甲虫，而小甲虫又反嘴咬了那只大黑虫子。 7、 我不是摘无花果的人，而是摘无花果的人的儿子。但我会摘无花果的人来之前摘无花果。 8、 如果一位医生给另一位医生看病，给医生看病的医生会按照医生给医生看病的方式给那位医生看病吗?或是医生按照医生看病的医生的方式给那位医生看病? 9、 如果一只滑雪橇的蜗牛从光滑的斜坡上滑下来，那蜗牛是从斜坡上滑雪橇下来的还是滑下来的? 10、 贝蒂买了黄油，但黄油是苦的，所以贝蒂买了更好的黄油来使苦黄油变好一些。 11、只沮丧而尖刻的麻鹊咬了它兄弟一口，而没有它那么沮丧的兄弟又咬它一口。那只被咬的沮丧麻鹊对它的兄弟说：“我是一只充满怨恨的麻鹊!我害人终害己了!” 12、果一个好的厨师能做小甜饼，那么他能做多少小甜饼呢?一个好的厨师能做出和其它好厨师一样多的小甜饼。 13、论是晴天或是阴天。 无论是冷或是暖， 不管喜欢与否，我们都要经受风霜雨露。 14、德派柏捏起一撮泡菜。 彼德派柏捏起的是一撮泡菜。 那么彼德派捏起的泡菜在哪儿? 15、有一种想法，但是我的这种想法不是我曾经想到的那种想法。如果这种想法是我曾经想到的想法，我就不会想那么多了。 16、蒙蒙，冰霜冻， 手腕儿空空，话儿涌， 只见他猛所拳头往柱子上砸， 直说自己把鬼碰。281. 【导语】绕口令又称急口令、吃口令、拗口令等。是一种中国传统的语言游戏，由于它是将若干双声、叠词词汇或发音相同、相近的语、词有意集中在一起，组成简单、有趣的语韵，要求快速念出，所以读起来使人感到节奏感强，妙趣横生。《有趣的中文绕口令精选》是无忧考网为大家准备的，希望对大家有帮助。 1、妈妈骂马：妈妈种麻，我去放马，马吃了麻，妈妈骂马。 2、蚕和蝉：这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 3、灰损肥：一堆肥，一堆灰，肥混灰，灰损肥，不要肥混灰，防止灰损肥。 4、兜装豆：兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 5、吃荸荠：荸荠有皮，皮上有泥。洗掉荸荠皮上的泥，削去荸荠外面的皮，小丽、小艺和小奇，欢欢喜喜吃荸荠。 6、小猪：小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 7、南南有个篮：南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 8、学捏梨：盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏泥，比比，真梨、假梨差不离。 9、两只鹅：河边两只鹅，一同过了河;白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 10、窝和锅：树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 1、买菜：小艾和小戴，一起去买菜。小艾把一斤菜给小戴，小戴有比小艾多一倍的菜;小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 2、糊灯笼：红红糊红粉灯笼，给军属送光荣灯;芬芬糊粉红灯笼，给军属送灯光荣;红红糊完红粉灯笼，糊粉红灯笼;芬芬糊完粉红灯笼，糊红粉灯笼。 3、猫鼻子：白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 4、捉兔：一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，了鹰，跑了兔。打翻醋，醋湿布。 5、四个头：天上有日头，地下有石头，嘴里有舌头，瓶口有塞头。天上是日头不是石头，地下是石头不是日头，嘴里是舌头不是塞头，瓶中是塞头不是舌头。 6、一个人：这边一个人，挑了一挑瓶。那边一个人，担了一挑盆。瓶碰烂了盆，盆碰烂了瓶。卖瓶买盆来赔盆，卖盆买瓶来赔瓶。瓶不能赔盆，盆不能赔瓶。 7、倒吊鸟：梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 8、板凳与扁担：板凳宽，扁担长。扁担没有板凳宽，板凳没有扁担长。扁担在绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 9、一场空：抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 10、墙上一根钉：墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。282. 【导语】绕口令是中国民间语言游戏，将声母、韵母或声调极易混同的字，组成反复、重叠、绕口、拗口的句子，要求一口气急速念出。以下是无忧考网为大家准备的，希望对大家有帮助。 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 关于绕口令的产生，可以追寻到5000多年前的黄帝时代。古籍中侥幸保存下来的《弹歌》”晰竹，续竹，飞土”，相传为黄帝时所作。据考证，这是比较接近于原始形态的歌谣，其中，已经有了绕口令的基本成分–双声叠韵词。由此推想，很可能在文字出现以前，绕口令就已经萌动于中国劳动人民的口头语言之中了。 随着语言文字的形成和发展，我们的祖先越来越注意汉字字音前后各部分的异同现象，发现了越来越多的双声叠韵词。这些双声叠韵的关系，处理不好，很容易缠绕混淆;处理好了，又可以产生不同凡响的音韵美。这使得一些人想到寻找规律，练习发音，训练口头表达。于是，他们开始有意识地把一些声韵相同的字组合在一起，故意兜圈子，绕弯子，连续成句子，教儿童念、诵。其中一些音韵响亮而又拗口、诙谐风趣的句子，不仅儿童喜欢，不少青年人也很喜欢。这样，一个人唱出或几个人唱和，就在人民群众中耳口相传，流传开来。在流传过程中，人们又不断修改、加工、充实、完善，使它更近似于一首首幽默诙谐的歌谣，更加妙趣横生。至于谁是绕口令的具体作者和修改者，人们根本没有留意。因此，也就无所谓哪首绕口令是哪个人的作品了。 由于绕口令[3]的逐步完善，在人民群众中日渐流传，一些接近下层人民的文人也开始注意这一通俗的文艺形式。稍后于屈原的楚国作家宋玉，就曾经把双声叠韵的词汇引进了诗歌创作的殿堂。长篇政治抒情诗《九辩》是他的代表作，其中大量采用了声韵相通的词，使得语句音节错综变化，读来音韵谐美，情味悠长。这无疑大大扩展了它的地位和影响。不少文人还在喝茶饮酒的时候，即兴编上几句，当作酒令，或者教给儿童念诵。保留至今的古代绕口令，差不多都是文人模拟中国民间绕口令作的。而且，我们还可以看到唐代诗人温庭筠在1000多年前的《李先生别墅望僧舍宝刹作双声诗》:”牺息消心象;檐楹溢艳阳，帘栊兰露落，邻里柳林凉，高阁过空谷，孤竿隔古岗，潭庭月淡荡，仿佛复芬芳。”宋代大文学家苏轼作过《吃语诗》(“散居剑阁隔锦官”)，明代文学家高启作过《吴宫词》(“筵前怜婵娟”)。从内容上看，这些绕口令大都是酒足饭饱之余的乘兴消遣之作，没有多少价值，从、形式上看，几乎都是咬文-嚼字的文字游戏，书卷气浓重，晦涩难懂，最广大的下层民众和少年儿童只有敬而远之。这大大影响了绕口令的语言价值和文学价值，影响了绕口令的普及和提高。关于古代的绕口令，明代文学家谢肇涮所撰的《文海披沙》卷五，曾作过一些记载。 另一方面，中国民间流传的绕口令保持和发扬了它的通俗浅显的特点，越来越完善，并且被搜集整理出来。清朝末年，意大利驻中国的官员韦大利搜集的《北京儿歌》(1896年出版，英汉对照本)中，就有绕口令《玲珑塔》。何德兰搜集的《孺子歌图》中，也有绕口《秃丫头》。 “五四”新文化运动以后，我国现代文学越来越接近下层人民，随之而起的儿童文学也逐渐成为文艺大军的一个支队，这为绕口令的发展又开辟了一条道路。但是;由于社会意识和创作者思想的局限，不少绕口令的基调还是很低的。例如《螺蛳和骡子》:”胡子担了一担螺蛳，驼子骑了一匹骡子。胡子的螺蛳撞了驼子的骡子，驼子的骡子踩了胡子的骡蛳。胡子要驼子赔胡子的螺蛳，驼子要胡子赔驼子的骡子。胡子骂驼子，驼子打胡子，螺蛳也爬到骡子头上去啃鼻子。”这反映了旧社会”人不为己，天诛地灭”的社会意识，反映了人与人之间*裸的利害关系。新中国建立后，绕口令的思想内容也发生了明显的变化，例如20世纪60年代流传的绕口令《赔钵钵》:”你婆婆借给我婆婆一个钵钵，我婆婆打烂了你婆婆的钵钵。我婆婆买来一个钵钵，还给你婆婆。你婆婆说什么也不要我婆婆赔钵钵，我婆婆硬要把买来的钵钵还给你婆婆。”这就反映了60年代人与人之间的关系，充满了新的时代气息。283. 【导语】传统的绕口令，多只注重字句的谐音，而忽视它的思想内容。很有趣的中文绕口令，以下是无忧考网为大家准备的，快来看看吧~ 1、妈妈骂马 妈妈种麻，我去放马，马吃了麻，妈妈骂马。 2、蚕和蝉 这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 3、灰损肥 一堆肥，一堆灰，肥混灰，灰损肥，不要肥混灰，防止灰损肥。 4、兜装豆 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 5、吃荸荠 荸荠有皮，皮上有泥。洗掉荸荠皮上的泥，削去荸荠外面的皮，小丽、小艺和小奇，欢欢喜喜吃荸荠。 6、小猪 小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 7、南南有个篮 南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 8、学捏梨 盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏泥，比比，真梨、假梨差不离。 9、两只鹅 河边两只鹅，一同过了河;白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 10、窝和锅 树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 11、买菜 小艾和小戴，一起去买菜。小艾把一斤菜给小戴，小戴有比小艾多一倍的菜;小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 12、糊灯笼 红红糊红粉灯笼，给军属送光荣灯;芬芬糊粉红灯笼，给军属送灯光荣;红红糊完红粉灯笼，糊粉红灯笼;芬芬糊完粉红灯笼，糊红粉灯笼。 13、猫鼻子 白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 14、捉兔 一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，了鹰，跑了兔。打翻醋，醋湿布。 15、四个头 天上有日头，地下有石头，嘴里有舌头，瓶口有塞头。天上是日头不是石头，地下是石头不是日头，嘴里是舌头不是塞头，瓶中是塞头不是舌头。 16、一个人 这边一个人，挑了一挑瓶。那边一个人，担了一挑盆。瓶碰烂了盆，盆碰烂了瓶。卖瓶买盆来赔盆，卖盆买瓶来赔瓶。瓶不能赔盆，盆不能赔瓶。 17、倒吊鸟 梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 18、板凳与扁担 板凳宽，扁担长。扁担没有板凳宽，板凳没有扁担长。扁担在绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 19、一场空 抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 20、墙上一根钉 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。284. 【导语】以下是无忧考网为大家精心整理的《》，供您查阅。 九与酒九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 天上一颗星天上一颗星，地下一块冰，屋上一只鹰，墙上一排钉。抬头不见天上的星，乒乓乒乓踏碎地下的冰，啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。 八十八岁公公八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。285. 1、妈妈骂马 妈妈种麻，我去放马，马吃了麻，妈妈骂马。 2、蚕和蝉 这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 3、灰损肥 一堆肥，一堆灰，肥混灰，灰损肥，不要肥混灰，防止灰损肥。 4、兜装豆 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 5、吃荸荠 荸荠有皮，皮上有泥。洗掉荸荠皮上的泥，削去荸荠外面的皮，小丽、小艺和小奇，欢欢喜喜吃荸荠。 6、小猪 小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 7、南南有个篮 南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 8、学捏梨 盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏泥，比比，真梨、假梨差不离。 9、两只鹅 河边两只鹅，一同过了河;白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 10、窝和锅 树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 11、买菜 小艾和小戴，一起去买菜。小艾把一斤菜给小戴，小戴有比小艾多一倍的菜;小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 12、糊灯笼 红红糊红粉灯笼，给军属送光荣灯;芬芬糊粉红灯笼，给军属送灯光荣;红红糊完红粉灯笼，糊粉红灯笼;芬芬糊完粉红灯笼，糊红粉灯笼。 13、猫鼻子 白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 14、捉兔 一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，了鹰，跑了兔。打翻醋，醋湿布。 15、四个头 天上有日头，地下有石头，嘴里有舌头，瓶口有塞头。天上是日头不是石头，地下是石头不是日头，嘴里是舌头不是塞头，瓶中是塞头不是舌头。 16、一个人 这边一个人，挑了一挑瓶。那边一个人，担了一挑盆。瓶碰烂了盆，盆碰烂了瓶。卖瓶买盆来赔盆，卖盆买瓶来赔瓶。瓶不能赔盆，盆不能赔瓶。 17、倒吊鸟 梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 18、板凳与扁担 板凳宽，扁担长。扁担没有板凳宽，板凳没有扁担长。扁担在绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 19、一场空 抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 20、墙上一根钉 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 21、四和十 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿，谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 22、小牛赔油 小牛放学去打球，踢倒老刘一瓶油，小回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛不油。 23、算算看 老杜和老顾，齐走富裕路。老杜养了兔，老顾养了鹿。老顾给老杜十只兔，两家平等同只数;老顾给老杜十只鹿，顾家是杜家一半数。请问老杜养了多少兔，再问老顾养了多少鹿。给你一个简单的。 24、白老八 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 25、酸枣子 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 26、司小四和史小世 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 27、老六放牛 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 28、六十六头牛 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 29、天上七颗星 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。连念七遍就聪明。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 30、喇嘛和哑巴 打南边来了个喇嘛，手里提拉着五斤鳎目。打北边来了个哑巴，腰里别着个喇叭。南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。286. 1、大花碗里扣个大花活蛤蟆。 2、妹照镜子头梳手，门外口袋把驴驮。 3、妈妈种麻，我去放马，马吃了麻，妈妈骂马。 4、还了山当腰三哥三嫂子，两个三斗三升酸枣子。 5、山下三小子，又找山上三老子，借三斗三升酸枣子。 6、老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 7、山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 8、山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子。 9、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 10、河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 11、任命是任命，人名是人名，任命人名不能错，错了人名错任命。 12、给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 13、山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 14、高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 15、一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。 16、树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 17、一只皮鞋，一只蒲鞋，皮鞋补蒲鞋，蒲鞋补皮鞋，皮鞋、蒲鞋，蒲鞋、皮鞋…… 18、桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 19、壁上挂只鼓，鼓里挂只虎，虎爬破了鼓，拿块布来补，是布补虎，还是布补鼓。 20、多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。 21、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 22、好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 23、树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 24、王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。 25、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 26、一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 27、瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 28、八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 29、白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 30、扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。 31、北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 32、颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 33、小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 34、小华和胖娃，两人种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花，小华教胖娃种花，胖娃教小华种瓜。 35、郭老伯、骆老伯，毕老伯、柏老伯，郭骆毕柏四老伯，约着城北买菱角，买得菱角阁上剥，菱角壳戳了四老伯的脚。 36、炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快?还是锤锤快比锤快锤锤得快? 37、华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 38、毛毛有一顶红帽，猫猫有一身灰毛。毛毛要猫猫的灰毛，猫猫要毛毛的红帽。毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。 39、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 40、老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 41、妈妈爱栽花，爸爸爱种瓜;妈妈栽桃花，爸爸种西瓜;桃花红，红桃花，娃娃脸上笑哈哈;爸爸给我吃西瓜，娃娃心里乐开花。 42、南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 43、路边八村八里铺，八户夫妇都姓傅。八户傅，傅八户，八户夫妇做豆腐。傅户做豆腐，夫妇卖豆腐。傅户卖豆腐，八户傅户富。 44、锅树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 45、蒋家砌了一垛墙，杨家养了一只羊，杨家羊，撞塌了蒋家的墙，蒋家的墙，压死了杨家的羊，蒋家要杨家赔墙，杨家要蒋家赔羊。 46、板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 47、哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅，还是河渡鹅。 48、我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 49、小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 50、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。287. 1、大花碗里扣个大花活蛤蟆。 2、妹照镜子头梳手，门外口袋把驴驮。 3、妈妈种麻，我去放马，马吃了麻，妈妈骂马。 4、还了山当腰三哥三嫂子，两个三斗三升酸枣子。 5、山下三小子，又找山上三老子，借三斗三升酸枣子。 6、老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 7、山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 8、山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子。 9、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 10、河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 11、任命是任命，人名是人名，任命人名不能错，错了人名错任命。 12、给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 13、山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 14、高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 15、一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。 16、树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 17、一只皮鞋，一只蒲鞋，皮鞋补蒲鞋，蒲鞋补皮鞋，皮鞋、蒲鞋，蒲鞋、皮鞋…… 18、桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 19、壁上挂只鼓，鼓里挂只虎，虎爬破了鼓，拿块布来补，是布补虎，还是布补鼓。 20、多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。 21、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 22、好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 23、树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 24、王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。 25、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 26、一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 27、瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 28、八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 29、白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 30、扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。288. 1、三哥三嫂子，请借给我三斗三升酸枣子，等我明年树上摘了新枣子，再把借的这三斗三升酸枣子，如数还您三哥三嫂子。 2、天津和北京，两座兄弟城。津京两字韵，不是一个音。津字前鼻韵，京字后鼻音。请你仔细听，发音要分清。 3、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 4、华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 5、南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。? 6、说你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别胡炖乱炖假充会炖看炖坏了我的炖冻豆腐。 7、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 8、清早起来雨稀稀，王七上街去买席，骑着毛驴跑得急，捎带卖蛋又贩梨。一跑跑到小桥西，毛驴一下失了蹄，打了蛋，撒了梨，跑了驴，急的王七眼泪滴，又哭鸡蛋又骂驴。 9、北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 10、小琳琳，爱银铃，琳琳用劲摇银铃，银铃的铃声真好听。风吹银铃叮铃铃，小琳以为铃失灵，银铃笑琳琳真是不机灵! 11、小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破了小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跑离了小毛。 12、学习就怕满，懒，难，心里有了满，懒，难，不看不钻就不前，心里丢掉满，懒，难，永不自满边学边干，蚂蚁也能搬泰山! 13、男演员穿蓝制服，女演员穿棉制服，蓝制服是棉制服，棉制服是蓝制服。男演员穿蓝棉制服，女演员穿棉蓝制服。 14、梁上两对倒吊鸟，泥里两对鸟倒吊，可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 15、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 16、华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 17、有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了“活狮子”。 18、小艾和小戴，一起去买菜。小艾把一斤菜给小戴，小戴有比小艾多一倍的菜;小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 19、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 20、白猫黑鼻子，黑猫白鼻子，黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子，黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 21、小妞妞，叫小秋，梳着两个小抓鬏，小胖胖，叫小牛，穿着一个小兜兜。小秋帮着小牛记扣扣，小牛帮小秋剥豆豆，小秋、小牛手拉手，一块儿玩，一块儿走。 22、蓝教练是女教练，吕教练是男教练，蓝教练不是男教练，吕教练不是女教练。蓝南是男篮主力，吕楠是女篮主力，吕教练在男篮训练蓝南，蓝教练在女篮训练吕楠。 23、拉拉会折喇叭，丫丫会吹喇叭。拉拉只会折喇叭，不会吹喇叭;丫丫只会吹喇叭，不会折喇叭。拉拉教丫丫折喇叭，丫丫教拉拉吹喇叭，两个乐得笑哈哈。 24、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 25、梁上两对倒吊鸟，泥里两对鸟倒吊，可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 26、爸爸抱宝宝，跑到布铺买布做长袍，宝宝穿了长袍不会跑。布长袍破了还要用布补，再跑到布铺买布补长袍。 27、房子里有箱子，箱子里有匣子，匣子里有盒子，盒子里有镯子;镯子外有盒子，盒子外有匣子，匣子外有箱子，箱子外有房子。 28、阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地上石头滚上坡。江里骆驼会下蛋，山上鲤鱼搭成窝。腊月炎热直流汗，六月寒冷打哆嗦。 29、夹着火车上皮包。回头一看人咬狗。拿起狗来打石头，又怕石头咬着手。从来不说颠倒话，口袋驮着骡子走。 30、南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。? 31、一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。 32、清早起来雨稀稀，王七上街去买席，骑着毛驴跑得急，捎带卖蛋又贩梨。一跑跑到小桥西，毛驴一下失了蹄，打了蛋，撒了梨，跑了驴，急的王七眼泪滴，又哭鸡蛋又骂驴。 33、大妹和小妹，一起去收麦。大妹割大麦，小妹割小麦。大妹帮小妹挑小麦，小妹帮大妹挑大麦。大妹小妹收完麦，噼噼啪啪齐打麦。 34、冲冲栽了十畦葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 35、河边两只鹅，一同过了河;白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。289. 1、一堆粪，一堆灰，灰混粪，粪混灰。 2、长虫围着砖堆转，转完砖堆钻砖堆。 3、早招租，晚招租，总找周邹郑曾朱。 4、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。小学二年级绕口令大全 5、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 6、门口有四辆四轮大马车，你爱拉哪两辆来拉哪两辆。 7、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 8、大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子。 9、大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头。 10、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 11、三山撑四水，四水绕三山，三山四水春常在，四水三山四时春。 12、司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻。 13、锅里煮猪肉，肉里包着骨，取肉去猪骨，放上一点醋，都吃熟猪肉。 14、隔着窗子撕字纸，一撕横字纸，再撕竖字纸，撕了四十四张湿字纸。 15、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 16、黄花花黄黄花黄，花黄黄花朵朵黄，朵朵黄花黄又香，黄花花香向太阳。 17、十字路口指示灯，红黄绿色分得清。绿灯行，红灯停。红灯停，绿灯行。 18、八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 19、哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 20、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 21、日头热，晒人肉，晒得心里好难受。晒人肉，好难受，晒得头上直冒油。 22、小华和胖娃，两个种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花。 23、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 24、炮兵攻打八面坡，炮兵排排炮弹齐发射。步兵逼近八面坡，歼敌八千八百八十多。 25、东边庙里有个猫，西边树梢有只鸟。猫鸟天天闹，不知是猫闹树上鸟，还是鸟闹庙里猫。 26、蜻蜓青，青浮萍，青萍上面停蜻蜓，蜻蜓青萍分不清。别把蜻蜓当青萍，别把青萍当蜻蜓。 27、七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。 28、小四约小石学写字，小石约小四看电视。小四不看电视只要学写字，小石不学写字只看电视。 29、毛毛和涛涛，跳高又练跑，毛毛教涛涛练跑，涛涛教毛毛跳高，毛毛学会了跳高，涛涛学会了练跑。 30、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 31、隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸。 32、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 33、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 34、知道就说知道，不知道就说不知道。不要知道的说不知道，也不要不知道说知道，要老老实实，实事求是。 35、四是四，十是十，十四是十四，四十是四十，十不能说成四，四也不能说成十，假使说错了，就可能误事。 36、夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山。290. 难度超高的中文绕口令一 1、白猫与白兔 白猫手里有一顶白帽， 白兔手中有一把白毛。 白猫想拿手里的白帽去换白兔手中的白毛， 白兔不想用手中的白毛去换白猫手里的白帽。 也不知白猫换去了白兔的白毛， 还是白兔换去了白猫的白帽? 2、黑猫、白猫、花猫比毛色 黑猫、白猫、花猫比毛色： 黑猫毛色黑，白猫毛色白， 花猫毛色有黑又有白。 黑猫毛色比白猫毛色黑， 白猫毛色比黑猫毛色白， 花猫毛色有白又有黑。 3、九与酒 九月九， 九个酒迷喝醉酒。 九个酒杯九杯酒， 九个酒迷喝九口。 喝罢九口酒， 又倒九杯酒。 九个酒迷端起酒， “咕咚、咕咚”又九口。 九杯酒， 酒九口， 喝罢九个酒迷醉了酒。 4、天上一颗星 天上一颗星，地下一块冰， 屋上一只鹰，墙上一排钉。 抬头不见天上的星，乒乓乒乓踏碎地下的冰， 啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。 5、八十八岁公公 八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 难度超高的中文绕口令二 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 8、喇嘛和哑巴： 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 9、六十六头牛： 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。 忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 10、老六放牛： 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六291. 1.鸟和猫——树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 2.小猪——小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 3.白石塔——白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 4.花鸭与彩霞——水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 5.四和十——四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿：谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 6.鹅过河——哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 7.颠倒歌——咬牛奶，喝面包，夹着火车上皮包。东西街，南北走，出门看见人咬狗。拿起狗来打砖头，又怕砖头咬我手。 8.兜装豆——兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 9.狗与猴——树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 10.河里有只船——河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 11.汤烫塔——老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 12.蚕和蝉——这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 13.六十六头牛——六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 14.任命、人名——任命是任命，人名是人名，任命人名不能错，错了人名错任命。 15.枪和糠——墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。 16.白果树——我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 17.好孩子——张家有个小英子，王家有个小柱子。张家的小英子，自己穿衣洗袜子，天天扫地擦桌子，王家的小柱子，捡到一只皮夹子，还给后院大婶子。小英子，小柱子，他们都是好孩子。 18.送花——华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 19.皮鞋、蒲鞋——一只皮鞋，一只蒲鞋，皮鞋补蒲鞋，蒲鞋补皮鞋，皮鞋、蒲鞋，蒲鞋、皮鞋…… 20.猫鼻子——白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 21.羊和狼——东边来了一只小山羊，西边来了一只大灰狼，一起走到小桥上，小山羊不让大灰狼，大灰狼不让小山羊，小山羊叫大灰狼让小山羊，大灰狼叫小山羊让大灰狼，羊不让狼，狼不让羊，扑通一起掉到河中央。 22.盆和瓶——桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 23.荷花和蛤蟆——一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。 24.画狮子——有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了“活狮子”。 25.小花猫——小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 26.造房子——捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。 27.毛毛和猫猫——毛毛有一顶红帽，猫猫有一身灰毛。毛毛要猫猫的灰毛，猫猫要毛毛的红帽，毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。 28.斗放豆——黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 29.瘸子——北边来了一个瘸子，背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 30.天上七颗星——天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 31.花和瓜——瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 32.妈妈骂马——妈妈种麻，我去放马，马吃了麻，妈妈骂马。 33.白家伯伯——北贫坡上白家有个伯伯，家里养着一百八十八只白鹅，门口种着一百八十八棵白果，树上住着一百八十八只八哥。八哥在白果树上吃白果，白鹅气得直叫：我饿!我饿! 34.比锤——炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快?还是锤锤快比锤快锤锤得快? 35.窝和锅——树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 36.青龙洞——青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。 37.分果果——多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。 38.小毛与花猫——小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破了小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跑离了小毛。 39.种冬瓜——东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。 40.六叔和六舅——好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 41.高高山上一条藤——高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 42.小牛赔油——小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛不油。 43.植树——老顾大顾和小顾,扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 44.扁担和板凳——板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 45.南南有个篮——南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。292. 二、牛郎恋刘娘，刘娘念牛郎，牛郎年年恋刘娘，刘娘年年念牛郎，郎恋娘来娘念郎，念娘恋娘念郎恋郎，念恋娘郎。 三、1、初入江湖：化肥会挥发 2小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰 —— 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 8、喇嘛和哑巴： 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 9、六十六头牛： 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。 忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 10、老六放牛： 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。 牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 11、天上七颗星： 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。 吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 12、连念七遍就聪明： 天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。 呼噜呼噜扇灭七盏灯，噯唷噯唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 13、司小四和史小世： 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 14、酸枣子： 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子， 山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子， 只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。 过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 15、墙上一根钉： 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 16、板凳与扁担： 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担在绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。 17、白老八： 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 18、鹅和鸽： 天上一群大白鸽，河里一群大白鹅。 白鸽尖尖红嘴壳，白鹅曲项向天歌。 白鸽剪开云朵朵，白鹅拨开浪波波。 鸽乐呵呵，鹅活泼波， 白鹅白鸽碧波蓝天真快乐。 19、水连天： 天连水，水连天， 水天一色望无边， 蓝蓝的天似绿水， 绿绿的水如蓝天。 到底是天连水， 还是水连天? 20、买菜： 小艾和小戴，一起去买菜。 小艾把一斤菜给小戴， 小戴有比小艾多一倍的菜; 小戴把一斤菜给小艾， 小艾、小戴就有一般多的菜。 21、猫鼻子： 白猫黑鼻子， 黑猫白鼻子; 黑猫的白鼻子， 碰破了白猫黑鼻子 白猫的黑鼻子破了 剥了秕谷壳儿补鼻子; 黑猫的白鼻子不破 不剥秕谷壳儿补鼻子。 22、倒吊鸟： 梁上两对倒吊鸟， 泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟， 惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊， 也惦着梁上的两对倒吊鸟。 23、兜装豆： 兜里装豆， 豆装满兜， 兜破漏豆。 倒出豆，补破兜， 补好兜，又装豆， 装满兜，不漏豆。 24、两只鹅： 河边两只鹅， 一同过了河; 白鹅去拾草， 黑鹅来搭窝。 冬天北风刮， 草窝真暖和， 住在草窝里， 哦哦唱支歌。 25、四个头： 天上有日头， 地下有石头， 嘴里有舌头， 瓶口有塞头。 天上是日头不是石头， 地下是石头不是日头， 嘴里是舌头不是塞头， 瓶中是塞头不是舌头。293. 单韵母练习 1、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知鹅过河，还是河渡鹅? 2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 3、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 鼻韵母练习 1、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳偏不让扁担绑于板凳上。 2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 3、任命是任命，人名是人名，任命绝不能说成人名，人名也不能说成任命。 4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 复韵母练习 1、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 唇音练习 1、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 舌尖中音练习 1、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 舌根音、舌面音练习 1、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 2、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 3、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 4、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 翘舌音、平舌音、练习(1) 1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 2、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 3、长虫围着砖堆转，转完砖堆钻砖堆。 4、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 5、早招租，晚招租，总找周邹郑曾朱。 翘舌音、平舌音、练习(2) 1、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 2、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 3、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 4、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 喇嘛和哑吧 从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 枣、卖卵 1、出东门，过大桥，大桥前面一树枣，拿着竿子去打枣，青的多，红的少，一个枣，两个枣，三个枣，四个枣，五个枣，六个枣，七个枣，八个枣，九个枣，十个枣;十个枣，九个枣，八个枣，七个枣，六个枣，五个枣，四个枣，三个枣，两个枣，一个枣，这是一个绕口呤，一口气说完才算好。 2、有个懒汉本姓阮，提个篮子卖鸡卵，“卖卵”“卖卵”使劲喊，谁都不来买鸡卵，不是鸡卵品种乱，而是鸡卵皮太软。卖不出鸡卵难买饭，回家吃饭路又远，胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。 师父四十四、铜勺舀热油 1、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 2、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 河边两只鹅、婆婆和嬷嬷 1、婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 2、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 西河大鼓—西河大鼓是流行华北的一种说唱曲艺，这段《绕口令》由艺人马增芬演唱。 高高山上到有一位老僧,身穿着衲头几千层。 你要问老僧年纪有多么大，曾记得黄河九澄清。 五百年前，澄一澄，总共是四千五百冬。 老僧收了八个徒弟，八个弟子个顶个的有法名。 大徒弟名字就叫青头愣，二徒弟名叫愣头青。 三徒弟名字就叫僧三点，四徒弟名字就叫做点三僧。 五徒弟名叫蹦葫芦棒，六徒弟名叫棒葫芦蹦。 七徒弟名字就叫随风倒，八徒弟就叫做倒随风。 八个徒弟，学会了八中艺，八仙过海，各显其能： 青头愣会打磬，愣头青会撞钟。僧三点会吹管，点三僧会捧笙。 蹦葫芦棒会打鼓，棒葫芦蹦会念经。随风倒他会扫地，这倒随风他会点灯。 老师傅叫他们换上了一换，不知道换成换不成。 这个愣头青他打不了这青头愣的磬，青头愣撞不了愣头青的钟。 点三僧吹不了这僧三点的管，僧三点捧不了点三僧的笙。 棒葫芦蹦打不了蹦葫芦棒的鼓，蹦葫芦棒他念不了棒葫芦蹦的经。 倒随风他扫不了这随风倒的地，随风倒他点不了这倒随风的灯。 老师傅一见有了气，要打徒弟整八名。眼睁睁，八位徒弟个顶个的就要挨打，从外面，又来了五位云游的僧。五位僧人把情讲，罚他们后面去数塔玲珑。玲珑宝塔，十三起儿，临去数单层，回来数双层，谁要是数过来谁就是大师兄。 谁要是数不过来玲珑塔，叫他一夜罚跪，到天明。 玲珑塔来塔玲珑，玲珑宝塔第一层。一张高桌四条腿，一个和尚一本经，一个铙钹一口磬，一个木鱼一盏灯。一个金钟，整四两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第三层。三张高桌十二条腿，三个和尚三本经，三个铙钹三口磬，三个木鱼三盏灯。三个金钟，十二两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第五层。五张高桌二十条腿，五个和尚五本经，五个铙钹五口磬，五个木鱼五盏灯。五个金钟，二十两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第七层。七张高桌二十八条腿，七个和尚七本经，七个铙钹七口磬，七个木鱼七盏灯。七个金钟，二十八两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第九层。九张高桌三十六条腿，九个和尚九本经，九个铙钹九口磬，九个木鱼九盏灯。九个金钟，三十六两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔十一层。十一张高桌条四十四条腿，十一个和尚十一本经，十一个铙钹十一口磬，十一个木鱼十一盏灯。十一个金钟，四十四两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔十三层。十三张高桌五十六条腿，十三个和尚十三本经，十三个铙钹十三口磬，十三个木鱼十三盏灯。十三个金钟，五十六两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔来塔玲珑，玲珑宝塔十二层。十二张高桌四十八条腿，十二个和尚十二本经，十二个铙钹十二口磬，十二个木鱼十二盏灯。十二个金钟，四十八两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第十层。十张高桌四十条腿，十个和尚十本经，十个铙钹十口磬，十个木鱼十盏灯。十个金钟，四十两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第八层。八张高桌三十二条腿，八个和尚八本经，八个铙钹八口磬，八个木鱼八盏灯。八个金钟，三十二两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第六层。六张(转载自http://，请保留此标记。)高桌二十四条腿，六个和尚六本经，六个铙钹六口磬，六个木鱼六盏灯。里个金钟，二十四两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第四层。四张高桌十六条腿，四个和尚四本经，四个铙钹四口磬，四个木鱼四盏灯。四个金钟，十六两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 玲珑塔，塔玲珑，玲珑宝塔第两层。两张高桌八条腿，两个和尚两本经，两个铙钹两口磬，两个木鱼两盏灯。两个金钟，整八两，西北风一刮，纹儿了纹儿了响纹儿了嗡。 僧人正数玲珑塔，抬起头来看分明：天上看，满天星。地上看，有个坑。 坑上看，冻着冰。冰上看，长着松。松上看，落着鹰。山前看，一老僧。 僧前看，一本经。屋里看，点着灯。墙上看，钉着钉。钉上看，挂着弓。 看着看着花了眼，可不好了，西北乾天起了大风。说大风，好大的风，十个人见了九个人惊。刮散了，满天星。刮平了，地上坑。刮化了，坑上冰。刮倒了，冰上松。刮飞了，松上鹰。刮跑了，一老僧。刮碎了，一本经。刮灭了，屋里灯。刮掉了，墙上钉。刮翻了，钉上弓。294. 单韵母练习 1、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 2、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 3、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。 鼻韵母练习 1、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆? 复韵母练习 1、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 2、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 3、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 4、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 唇音练习 1、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 舌尖中音练习 1、你会炖炖冻豆腐，你来炖我的炖冻豆腐;你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 2、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 4、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 舌根音、舌面音练习 1、七加一，再减一，加完减完等于几?七加一，再减一，加完减完还是七。 2、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 3、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 4、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 翘舌音、平舌音、练习(1) 1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 2、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 3、长虫围着砖堆转，转完砖堆钻砖堆。 4、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 5、早招租，晚招租，总找周邹郑曾朱。 翘舌音、平舌音、练习(2) 1、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 2、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 3、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 4、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 喇嘛和哑吧 从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。295. 八座屋 八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 九个酒迷喝醉酒 九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 多少罐? 一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。 两个排 营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来;二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 酸枣子 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子， 山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 还了山当腰三哥三嫂子，两个三斗三升酸枣子。 白老八 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。296. 1、哥哥挎筐过宽沟，快过宽沟看怪狗，光看怪狗瓜筐扣，瓜滚筐扣哥怪狗。 2、八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 3、断头台倒吊短单刀，歹徒登台偷单刀，断头台塌盗跌倒，对对单刀叮当掉。 4、老爷子南边来个老爷子，手里拿碟子，碟子里装茄子，一下碰上了橛子。打了碟子，洒了茄子，摔坏了老爷子。 5、嘴与腿嘴说腿，腿说嘴，嘴说腿爱跑腿，腿说嘴爱卖嘴。光动嘴不动腿，光动腿不动嘴，不如不长腿和嘴。 6、反正话夹着火车上皮包。回头一看人咬狗。拿起狗来打石头，又怕石头咬着手。有个小孩叫小杜，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，飞了鹰，跑了兔。洒了醋，湿了布。 7、哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 8、“绕口令”的特点是“拗口”。它是学习语言艺术(如相声，快板等等)的必修课。可以锻炼人“舌”，“唇”，“齿”的相互配合的技巧，被形象地称为“口腔体操”。这里精选了一批流传较早，较广较经典的绕口令，有的是适合儿童练习的绕口令。 9、练习绕口令从儿童时期开始。尤其是方言地区。初练绕口令速度要慢，务必保证发音准确，在此基础上逐步提高速度。 10、扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。 11、大花碗里扣个大花活蛤蟆。南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 12、喇嘛与哑巴打南边来了个哑巴，腰里别了个喇叭;打北边来了个喇嘛，手里提了个獭犸。提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭;别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭;还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸，哑巴嘀嘀哒哒吹喇叭 13、九与酒九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 14、天上一颗星天上一颗星，地下一块冰，屋上一只鹰，墙上一排钉。抬头不见天上的星，乒乓乒乓踏碎地下的冰，啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。 15、八十八岁公公八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。297. 1.正月里，正月正，姐妹二人去逛灯，大姐名叫粉红女，二姐名叫女粉红。粉红女身穿一件粉红袄，女粉红身穿一件袄粉红。粉红女怀抱一瓶粉红酒，女粉红怀抱一瓶酒粉红。姐妹找了个无人处，推杯换盏饮刘伶。女粉红喝了粉红女的粉红酒，粉红女喝了女粉红的酒粉红，粉红女喝了一个酩酊醉，女粉红喝了一个醉酩酊。女粉红揪着粉红女就打，粉红女揪着女粉红就拧。女粉红撕了粉红女的粉红袄，粉红女就撕了女粉红的袄粉红。姐妹打罢落下手，自己买线自己缝。粉红女买了一条粉红线，女粉红买了一条线粉红。粉红女是反缝缝缝粉红袄，女粉红是缝反缝缝袄粉红。 2.化肥会挥发 黑化肥发灰,灰化肥发黑 黑化肥发灰会挥发;灰化肥挥发会发黑 黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰 3.天上七颗星： 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。 吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 4.、司小四和史小世： 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 5、酸枣子： 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子， 山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子， 只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。 过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 6、墙上一根钉： 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 7、板凳与扁担： 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担在绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。 8、白老八： 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 9、鹅和鸽： 天上一群大白鸽，河里一群大白鹅。 白鸽尖尖红嘴壳，白鹅曲项向天歌。 白鸽剪开云朵朵，白鹅拨开浪波波。 鸽乐呵呵，鹅活泼波， 白鹅白鸽碧波蓝天真快乐。 10、水连天： 天连水，水连天， 水天一色望无边， 蓝蓝的天似绿水， 绿绿的水如蓝天。 到底是天连水， 还是水连天?298. 1、 峰上有蜂，峰上蜂飞蜂蜇凤; 风中有凤，风中蜂飞凤斗峰。 不知到底是峰上蜂蜇凤， 还是风中凤斗蜂。 门角里放着一大垛断短扁豆 2、 1是1，7是7，17是17。 17倒过来，便是71。 71去掉1，变成一个7。 17去掉7，剩下一个1。 7后加个7，便成77。 77倒过来，仍是77。 3、 青草丛，草丛青， 青青草里草青虫。 青虫钻进青草丛， 青草丛青草虫青。 4、 小王和小黄，一块画凤凰。 小王画黄凤凰，小黄画红凤凰。 红凤凰黄凤凰，只只画成活凤凰， 望着小王和小黄。 5、 三娘在山止放三只山羊， 三只山羊翻过山梁三娘翻过山梁去找三只山羊。 三只山羊躲在杉树旁， 三娘找到三只山羊。 6、 凉勺舀热油，热勺舀凉油。 凉勺舀了热油舀凉油，热勺舀了凉油舀热油。 7、 老吕和老徐，上街去买鱼，走到半路天下雨。 二人都没带雨具，顾不得上街去买鱼，先去地方去躲雨。 你婆婆借给我婆婆一个钵钵，我婆婆打烂了你婆婆的钵钵。 我婆婆买来一个钵钵，还给你婆婆。 你婆婆说什么也不要我婆婆赔钵钵，我婆婆硬要把买来的钵钵还给你婆婆。 8、 香肠长，长香肠， 炒香肠，尝香肠， 常炒香肠，常尝香肠。 9、 男篮男穿蓝，女篮女穿绿。 男篮穿蓝练投篮，女篮穿绿练投篮。 男篮篮下天天练，女篮天天练投篮。 男篮女篮一起练，女绿男蓝绿和蓝。 10、 小牛牛，围兜兜， 兜兜里头装豆豆， 吃了豆豆翻跟头， 左边翻个六，漏了九颗豆。 右边翻个九，漏了六颗豆。 问你翻了几个大跟头， 漏了几颗小豆豆?299. b-p：补破皮褥子不如不补破皮褥子（《补皮褥子》） b-p：吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿（《葡萄皮儿》） d：会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，哪就吃不成我的炖冻豆腐（《炖冻豆腐》）。 l：六十六岁刘老六，修了六十六座走马楼，楼上摆了六十六瓶苏合油，门前栽了六十六棵垂杨柳，柳上拴了六十六个大马猴。忽然一阵狂风起，吹倒了六十六座走马楼，打翻了六十六瓶苏合油，压倒了六十六棵垂杨柳，吓跑了六十六个大马猴，气死了六十六岁刘老六（《六十六岁刘老六》）。 d-t：大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子（《大兔子和大肚子》）。 n-l：门口有四辆四轮马车，你爱拉哪两辆来拉哪两辆（《四辆四轮马车》）。 h：华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花（《华华和红红》）。 j、q、x：七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。（《漆匠和锡匠》）。 g-k：哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗（《哥挎瓜筐过宽沟》）。 h-f：一堆粪，一堆灰，灰混粪，粪混灰（《一堆粪》）。 z-zh：隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸（《撕字纸》）。 s-sh：三山撑四水，四水绕三山，三山四水春常在，四水三山四时春（《三山撑四水》）。 z、c、s-j、x司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻（《司机买雌鸡》）。 zh、ch、sh：大车拉小车，小车拉小石头，(.)石头掉下来，砸了小脚指头（《大车拉小车》）。 r：夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山（《说日》）。 sh、四声：石室诗士施史，嗜狮，誓食十狮，氏时时适市，氏视十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮尸，食时，始识十狮尸实是十石狮尸，试释是事实（《施氏食狮史》）。300. 1.桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 2.壁上挂只鼓，鼓里挂只虎，虎爬破了鼓，拿块布来补，是布补虎，还是布补鼓。 3.多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。 4.兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 5.好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 6.树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 7.王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。 8.黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 9.一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 10.瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 11.八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 12.白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 13.扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。 14.北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 15.颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 16.小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 17.小华和胖娃，两人种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花，小华教胖娃种花，胖娃教小华种瓜。 18.郭老伯、骆老伯，毕老伯、柏老伯，郭骆毕柏四老伯，约着城北买菱角，买得菱角阁上剥，菱角壳戳了四老伯的脚。 19.炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快?还是锤锤快比锤快锤锤得快? 20.华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 21.毛毛有一顶红帽，猫猫有一身灰毛。毛毛要猫猫的灰毛，猫猫要毛毛的红帽。毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。 22.四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 23.老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 24.妈妈爱栽花，爸爸爱种瓜;妈妈栽桃花，爸爸种西瓜;桃花红，红桃花，娃娃脸上笑哈哈;爸爸给我吃西瓜，娃娃心里乐开花。 25.南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 26.路边八村八里铺，八户夫妇都姓傅。八户傅，傅八户，八户夫妇做豆腐。傅户做豆腐，夫妇卖豆腐。傅户卖豆腐，八户傅户富。 27.锅树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 28.蒋家砌了一垛墙，杨家养了一只羊，杨家羊，撞塌了蒋家的墙，蒋家的墙，压死了杨家的羊，蒋家要杨家赔墙，杨家要蒋家赔羊。 29.板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 30.哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅，还是河渡鹅。 31.我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 32.小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 33.水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 34.小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破了小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跑离了小毛。 35.青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。 36.三月三，小三去登山。上山又下山，下山又上山。登了三次山，跑了三里三。出了一身汗，湿了三件衫。小三山上大声喊：“离天只有三尺三!” 37.太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地上石头滚上坡。江里骆驼会下蛋，山上鲤鱼搭成窝。腊月炎热直流汗，六月寒冷打哆嗦。 38.一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，飞了鹰，跑了兔。打翻醋，醋湿布。 39.白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 40.九十九头牛，驮着九十九个篓。每篓装着九十九斤油。牛背油篓扭着走，油篓磨坏篓漏油，九十九斤一个篓，还剩六十六斤油。你说漏了几十几斤油? 41.北边来了一个瘸子，背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 42.捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。 43.墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。 44.天上一颗星，地下一块冰，屋上一只鹰，墙上一排钉。抬头不见天上的星，乒乓乒乓踏碎地下的冰，啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。 45.小妞妞，叫小秋，梳着两个小抓鬏，小胖胖，叫小牛，穿着一个小兜兜。小秋帮着小牛记扣扣，小牛帮小秋剥豆豆，小秋、小牛手拉手，一块儿玩，一块儿走。 46.有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了“活狮子”。 47.一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。 48.北贫坡上白家有个伯伯，家里养着一百八十八只白鹅，门口种着一百八十八棵白果，树上住着一百八十八只八哥。八哥在白果树上吃白果，白鹅气得直叫：我饿!我饿! 49.黑化肥发灰，灰化肥发黑。黑化肥发黑不发灰，灰化肥发灰不发黑。南边来个老爷子，手里拿碟子，碟子里装茄子，一下碰上了橛子。打了碟子，洒了茄子，摔坏了老爷子。 50.红红的好朋友蓝蓝会搭红房子，蓝蓝的好朋友红红会搭蓝房子。会搭红房子的蓝蓝，愿帮会搭蓝房子的红红搭红房子，会搭蓝房子的红红，愿帮会搭红房子的蓝蓝搭蓝房子。 51.九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 52.张家有个小英子，王家有个小柱子。张家的小英子，自己穿衣洗袜子，天天扫地擦桌子，王家的小柱子，捡到一只皮夹子，还给后院大婶子。小英子，小柱子，他们都是好孩子。 53.天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 54.东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。 55.小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛还油。 56.清早上街走，走到周家大门口，门里跳出一只大黄狗，朝我哇啦哇啦吼。我拾起石头打黄狗，黄狗跳上来就咬我的手。也不知我手里的石头打没打着周家的大黄狗，周家的大黄狗咬没咬着我的手? 57.四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 58.公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子? 59.东边来了一只小山羊，西边来了一只大灰狼，一起走到小桥上，小山羊不让大灰狼，大灰狼不让小山羊，小山羊叫大灰狼让小山羊，大灰狼叫小山羊让大灰狼，羊不让狼，狼不让羊，扑通一起掉到河中央。 60.东边来个小朋友叫小松，手里拿着一捆葱。西边来个小朋友叫小丛，手里拿着小闹钟。小松手里葱捆得松，掉在地上一些葱。小丛忙放闹钟去拾葱，帮助小松捆紧葱。小松夸小丛像雷锋，小丛说小松爱劳动。 61.葵花、蓖麻胖娃小筐手中拿，来到园中收葵花;小华小篮身上挎，一同进园收蓖麻。胖娃种的葵花花盘大，小华种的蓖麻密麻麻。小华去帮胖娃摘葵花，胖娃去帮小华收蓖麻。小华和胖娃，收了葵花、蓖麻献国家。 62.营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来;二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 63.白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 64.出八十八二十八，八个小孩儿把萝卜拔，你也拔，我也拔，看谁拔得多，看谁拔得大。你拔得不多个儿不小，我拔得不少个儿不大。一个萝卜一个坑儿，算算多少用车拉，一个加俩，俩加仨，七十二个加十八，拿个算盘打一打，一百差俩九十八。 65.八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 66.六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 67.打南边来了个哑巴，腰里别了个喇叭;打北边来了个喇嘛，手里提了个獭犸。提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭;别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭;还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸;哑巴嘀嘀哒哒吹喇叭。 68.司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 69.柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 70.南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。301. b-p：补破皮褥子不如不补破皮褥子(《补皮褥子》) b-p：吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿(《葡萄皮儿》) b-p：八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。(《八百标兵》) d：会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，那就吃不成我的炖冻豆腐(《炖冻豆腐》)。 l：六十六岁刘老六，修了六十六座走马楼，楼上摆了六十六瓶苏合油，门前栽了六十六棵垂杨柳，柳上拴了六十六个大马猴。忽然一阵狂风起，吹倒了六十六座走马楼，打翻了六十六瓶苏合油，压倒了六十六棵垂杨柳，吓跑了六十六个大马猴，气死了六十六岁刘老六(《六十六岁刘老六》)。 d-t：大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子(《大兔子和大肚子》)。 n-l：门口有四辆四轮 大马车，你爱拉哪两辆就来拉哪两辆(《四辆四轮 大马车》)。 h：华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花(《华华和红红》)。 j、q、x：七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。(《漆匠和锡匠》)。 g-k：哥挎瓜筐过宽沟，快过宽沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗(《哥挎瓜筐过宽沟》)。 h-f：一堆粪，一堆灰，灰混粪，粪混灰(《一堆粪》)。 z-zh：隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸(《撕字纸》)。 bs-sh：三山撑四水，四水绕三山，三山四水春常在，四水三山四时春(《三山撑四水》)。 z、c、s-j、x：司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻(《司机买雌鸡》)。 zh、ch、sh：大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头(《大车拉小车》)。 r：夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山(《说日》)。 sh、四声：石室诗士施史，嗜狮，誓食十狮，氏时时适市，氏视十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮尸，食时，始识十狮尸实是十石狮尸，试释是事实(《施氏食狮史》)。 ?韵母 a：门前有八匹大伊犁马，你爱拉哪匹马拉哪匹马(《伊犁马》)。 e：坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅(《鹅》)。 i：一二三，三二一，一二三四五六七。七个阿姨来摘果，七个花篮儿手中提。七棵树上结七样儿，苹果、桃儿、石榴、柿子，李子、栗子、梨(《七棵树上结七样儿》)。 u：鼓上画只虎，破了拿布补。不知布补鼓，还是布补虎(《鼓上画只虎》)。 i-ü：这天天下雨，体育局穿绿雨衣的女小吕，去找穿绿运动衣的女老李。穿绿雨衣的女小吕，没找到穿绿运动衣的女老李，穿绿运动衣的女老李，也没见着穿绿雨衣的女小吕(《女小吕和女老李》) er：要说“尔”专说“尔”/马尔代夫，喀布尔/阿尔巴尼亚，扎伊尔/卡塔尔，尼伯尔/贝尔格莱德，安道尔/萨尔瓦多，伯尔尼/利伯维尔，班珠尔/厄瓜多尔，塞舌尔/哈密尔顿，尼日尔/圣彼埃尔，巴斯特尔/塞内加尔的达喀尔，阿尔及利亚的阿尔及尔。 -i(前)：一个大嫂子，一个大小子。大嫂子跟大小子比包饺子，看是大嫂子包的饺子好，还是大小子包的饺子好，再看大嫂子包的饺子少，还是大小子包的饺子少。大嫂子包的饺子又小又好又不少，大小子包的饺子又小又少又不好(《大嫂子和大小子》)。 -i(后)：知之为知之，不知为不知，不以不知为知之，不以知之为不知，唯此才能求真知(《知之为知之》)。 ai：买白菜，搭海带，不买海带就别买大白菜。买卖改，不搭卖，不买海带也能买到大白菜(《白菜和海带》)。 ei：贝贝飞纸飞机，菲菲要贝贝的纸飞机，贝贝不给菲菲自己的纸飞机，贝贝教菲菲自己做能飞的纸飞机(《贝贝和菲菲》)。 ai-ei：大妹和小妹，一起去收麦。大妹割大麦，小妹割小麦。大妹帮小妹挑小麦，小妹帮大妹挑大麦。大妹小妹收完麦，噼噼啪啪齐打麦(《大妹和小妹》)。 ao：隔着墙头扔草帽，也不知草帽套老头儿，也不知老头儿套草帽(《扔草帽》)。 ou：忽听门外人咬狗，拿起门来开开手;拾起狗来打砖头，又被砖头咬了手;从来不说颠倒话，口袋驮着骡子走(《忽听门外人咬狗》)。 an：出前门，往正南，有个面铺面冲南，门口挂着蓝布棉门帘。摘了它的蓝布棉门帘，面铺面冲南，给他挂上蓝布棉门帘，面铺还是面冲南(《蓝布棉门帘》)。 en：小陈去卖针，小沈去卖盆。俩人挑着担，一起出了门。小陈喊卖针，小沈喊卖盆。也不知是谁卖针，也不知是谁卖盆(《小陈和小沈》)。 ang：海水长，长长长，长长长消(《海水长》)。 eng：郑政捧着盏台灯，彭澎扛着架屏风，彭澎让郑政扛屏风，郑政让彭澎捧台灯(《台灯和屏风》)。 ang—an：张康当董事长，詹丹当厂长，张康帮助詹丹，詹丹帮助张康(《张康和詹丹》)。 eng—en：陈庄程庄都有城，陈庄城通程庄城。陈庄城和程庄城，两庄城墙都有门。陈庄城进程庄人，陈庄人进程庄城。请问陈程两庄城，两庄城门都进人，哪个城进陈庄人，程庄人进哪个城?(《陈庄城和程庄城》) ang—eng：长城长，城墙长，长长长城长城墙，城墙长长城长长(《长城长》)。 ia：天上飘着一片霞，水上飘着一群鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞挽住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞(《鸭和霞》)。 ie：姐姐借刀切茄子，去把儿去叶儿斜切丝，切好茄子烧茄子，炒茄子、蒸茄子，还有一碗焖茄子(《茄子》)。 iao：水上漂着一只表，表上落着一只鸟。鸟看表，表瞪鸟，鸟不认识表，表也不认识鸟(《鸟看表》)。 iou：一葫芦酒，九两六。一葫芦油，六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油(《酒换油》) ian：半边莲，莲半边，半边莲长在山涧边。半边天路过山涧边，发现这片半边莲。半边天拿来一把镰，割了半筐半边莲。半筐半边莲，送给边防连(《半边莲》)。 in：你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧(《土变金》)。 iang：杨家养了一只羊，蒋家修了一道墙。杨家的羊撞倒了蒋家的墙，蒋家的墙压死了杨家的羊。杨家要蒋家赔杨家的羊，蒋家要杨家赔蒋家的墙(《杨家养了一只羊》)。 ing：天上七颗星，树上七只鹰，梁上七个钉，台上七盏灯。拿扇扇了灯，用手拔了钉，举枪打了鹰，乌云盖了星(《天上七颗星》)。 ua：一个胖娃娃，画了三个大花活蛤蟆;三个胖娃娃，画不出一个大花活蛤蟆。画不出一个大花活蛤蟆的三个胖娃娃，真不如画了三个大花活蛤蟆的一个胖娃娃。(《画蛤蟆帽》)。 uo(o)：狼打柴，狗烧火，猫儿上炕捏窝窝，雀儿飞来蒸饽饽(《狼打柴狗烧火》)。 uai：槐树槐，槐树槐，槐树底下搭戏台，人家的姑娘都来了，我家的姑娘还不来。说着说着就来了，骑着驴，打着伞，歪着脑袋上戏台(《槐树槐》)。 uei：威威、伟伟和卫卫，拿着水杯去接水。威威让伟伟，伟伟让卫卫，卫卫让威威，没人先接水。一二三，排好队，一个一个来接水(《接水》)。 uang：王庄卖筐，匡庄卖网，王庄卖筐不卖网，匡庄卖网不卖筐，你要买筐别去匡庄去王庄，你要买网别去王庄去匡庄(《王庄和匡庄》)。 ueng：老翁卖酒老翁买，老翁买酒老翁卖(《老翁和老翁》)。 ong：冲冲栽了十畦葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松?(《栽葱和栽松》) uan—uang：那边划来一艘船，这边漂去一张床，船床河中互相撞，不知船撞床，还是床撞船(《船和床》)。 uan—an：大帆船，小帆船，竖起桅杆撑起船。风吹帆，帆引船，帆船顺风转海湾(《帆船》)。 uen—en：孙伦打靶真叫准，半蹲射击特别神，本是半路出家人，摸爬滚打练成神(《孙伦打靶》)。 üe：真绝，真绝，真叫绝，皓月当空下大雪，麻雀游泳不飞跃，鹊巢鸠占鹊喜悦(《真绝》)。 ün：军车运来一堆裙，一色军用绿色裙。军训女生一大群，换下花裙换绿裙(《换裙子》)。 üan：圆圈圆，圈圆圈，圆圆娟娟画圆圈。娟娟画的圈连圈，圆圆画的圈套圈。娟娟圆圆比圆圈，看看谁的圆圈圆(《画圆圈》)。 iong：小涌勇敢学游泳，勇敢游泳是英雄(《学游泳》)302. 八 座 屋 八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 九个酒迷喝醉酒 九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 多 少 罐? 一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。 两 个 排 营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来;二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 酸 枣 子 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子， 山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 还了山当腰三哥三嫂子，两个三斗三升酸枣子。 白 老 八 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。303. 1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 2、颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 3、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 4、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 5、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 6、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 7、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？ 8、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 9、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。 10、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 11、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 12、青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。 13、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。 14、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 15、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 16、早招租，晚招租，总找周邹郑曾朱。 17、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 18、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？ 19、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 20、老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 21、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？ 22、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 23、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 24、山前有只虎，山下有只猴。虎撵猴，猴斗虎；虎撵不上猴，猴斗不了虎。 25、小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 26、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 27、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 28、太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地上石头滚上坡。江里骆驼会下蛋，山上鲤鱼搭成窝。腊月炎热直流汗，六月寒冷打哆嗦。妹照镜子头梳手，门外口袋把驴驮。 29、东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。 30、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 31、长虫围着砖堆转，转完砖堆钻砖堆。 32、妈妈种麻，我去放马，马吃了麻，妈妈骂马。 33、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 34、墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。 35、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 36、白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 37、我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 38、高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 39、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。 40、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 41、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 42、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 43、一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 44、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆；过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 45、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 46、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 47、七加一，再减一，加完减完等于几？七加一，再减一，加完减完还是七。 48、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 49、营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来；二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 50、九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，”咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。304. 1.桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。 2.壁上挂只鼓，鼓里挂只虎，虎爬破了鼓，拿块布来补，是布补虎，还是布补鼓。 3.多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。 4.兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 5.好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 6.树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 7.王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。 8.黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 9.一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 10.瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 11.八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。 12.白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 13.扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。 14.北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 15.颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 16.小花猫爱画画，先画一朵腊梅花，又画一个小喇叭，带着腊梅花，吹着小喇叭，回家去见妈妈，妈妈见了笑哈哈。 17.小华和胖娃，两人种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花，小华教胖娃种花，胖娃教小华种瓜。 18.郭老伯、骆老伯，毕老伯、柏老伯，郭骆毕柏四老伯，约着城北买菱角，买得菱角阁上剥，菱角壳戳了四老伯的脚。 19.炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快?还是锤锤快比锤快锤锤得快? 20.华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。 21.毛毛有一顶红帽，猫猫有一身灰毛。毛毛要猫猫的灰毛，猫猫要毛毛的红帽。毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。 22.四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 23.老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 24.妈妈爱栽花，爸爸爱种瓜;妈妈栽桃花，爸爸种西瓜;桃花红，红桃花，娃娃脸上笑哈哈;爸爸给我吃西瓜，娃娃心里乐开花。 25.南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 26.路边八村八里铺，八户夫妇都姓傅。八户傅，傅八户，八户夫妇做豆腐。傅户做豆腐，夫妇卖豆腐。傅户卖豆腐，八户傅户富。 27.锅树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 28.蒋家砌了一垛墙，杨家养了一只羊，杨家羊，撞塌了蒋家的墙，蒋家的墙，压死了杨家的羊，蒋家要杨家赔墙，杨家要蒋家赔羊。 29.板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 30.哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅，还是河渡鹅。 31.我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 32.小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 33.水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 34.小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破了小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跑离了小毛。 35.青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。 36.三月三，小三去登山。上山又下山，下山又上山。登了三次山，跑了三里三。出了一身汗，湿了三件衫。小三山上大声喊：“离天只有三尺三!” 37.太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地上石头滚上坡。江里骆驼会下蛋，山上鲤鱼搭成窝。腊月炎热直流汗，六月寒冷打哆嗦。 38.一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，飞了鹰，跑了兔。打翻醋，醋湿布。 39.白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 40.九十九头牛，驮着九十九个篓。每篓装着九十九斤油。牛背油篓扭着走，油篓磨坏篓漏油，九十九斤一个篓，还剩六十六斤油。你说漏了几十几斤油? 41.北边来了一个瘸子，背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 42.捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。 43.墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。 44.天上一颗星，地下一块冰， 屋上一只鹰，墙上一排钉。抬头不见天上的星，乒乓乒乓踏碎地下的冰，啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。 45.小妞妞，叫小秋，梳着两个小抓鬏，小胖胖，叫小牛，穿着一个小兜兜。小秋帮着小牛记扣扣，小牛帮小秋剥豆豆，小秋、小牛手拉手，一块儿玩，一块儿走。 46.有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了“活狮子”。 47.一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。 48.北贫坡上白家有个伯伯，家里养着一百八十八只白鹅，门口种着一百八十八棵白果，树上住着一百八十八只八哥。八哥在白果树上吃白果，白鹅气得直叫：我饿!我饿! 49.黑化肥发灰，灰化肥发黑。黑化肥发黑不发灰，灰化肥发灰不发黑。南边来个老爷子，手里拿碟子，碟子里装茄子，一下碰上了橛子。打了碟子，洒了茄子，摔坏了老爷子。 50.红红的好朋友蓝蓝会搭红房子，蓝蓝的好朋友红红会搭蓝房子。会搭红房子的蓝蓝，愿帮会搭蓝房子的红红搭红房子，会搭蓝房子的红红，愿帮会搭红房子的蓝蓝搭蓝房子。 51.九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 52.张家有个小英子，王家有个小柱子。张家的小英子，自己穿衣洗袜子，天天扫地擦桌子，王家的小柱子，捡到一只皮夹子，还给后院大婶子。小英子，小柱子，他们都是好孩子。 53.天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 54.东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。 55.小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛还油。 56.清早上街走，走到周家大门口，门里跳出一只大黄狗，朝我哇啦哇啦吼。我拾起石头打黄狗，黄狗跳上来就咬我的手。也不知我手里的石头打没打着周家的大黄狗，周家的大黄狗咬没咬着我的手? 57.四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 58.公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子? 59.东边来了一只小山羊，西边来了一只大灰狼，一起走到小桥上，小山羊不让大灰狼，大灰狼不让小山羊，小山羊叫大灰狼让小山羊，大灰狼叫小山羊让大灰狼，羊不让狼，狼不让羊，扑通一起掉到河中央。 60.东边来个小朋友叫小松，手里拿着一捆葱。西边来个小朋友叫小丛，手里拿着小闹钟。小松手里葱捆得松，掉在地上一些葱。小丛忙放闹钟去拾葱，帮助小松捆紧葱。小松夸小丛像雷锋，小丛说小松爱劳动。 61.葵花、蓖麻胖娃小筐手中拿，来到园中收葵花;小华小篮身上挎，一同进园收蓖麻。胖娃种的葵花花盘大，小华种的蓖麻密麻麻。小华去帮胖娃摘葵花，胖娃去帮小华收蓖麻。小华和胖娃，收了葵花、蓖麻献国家。 62.营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来;二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 63.白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 64.出八十八二十八，八个小孩儿把萝卜拔，你也拔，我也拔，看谁拔得多，看谁拔得大。你拔得不多个儿不小，我拔得不少个儿不大。一个萝卜一个坑儿，算算多少用车拉，一个加俩，俩加仨，七十二个加十八， 拿个算盘打一打，一百差俩九十八。 65.八十八岁公公门前有八十八棵竹，八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。八十八岁公公不许八十八只八哥到八十八棵竹上来借宿，八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥，不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 66.六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 67.打南边来了个哑巴，腰里别了个喇叭;打北边来了个喇嘛，手里提了个獭犸。提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭;别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭;还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸;哑巴嘀嘀哒哒吹喇叭。 68.司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 69.柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 70.南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。305. 【导语】绕口令是中国民间语言游戏，将声母、韵母或声调极易混同的字，组成反复、重叠、绕口、拗口的句子，要求一口气急速念出。以下是无忧考网为大家准备的，希望对大家有帮助。 初级版： 红鲤鱼家有头小绿驴叫驴屡屡，绿鲤鱼家有头小红驴叫吕里里，红鲤鱼说他家的驴屡屡要比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里要比红鲤鱼家的驴屡屡红，不只是红鲤鱼比绿鲤鱼的驴绿，还是绿鲤鱼比红鲤鱼的驴红! 丧心病狂版： 广西壮族自治区爱吃红鲤鱼与绿鲤鱼与驴的出租车司机拉着苗族土家族自治州爱喝自制柳奶奶榴莲牛奶的的骨质疏松症患者遇见别着哑巴的喇叭提拉鳎目的喇嘛打败咬死了山前四十四棵死涩柿子树的四十四只石狮子之后终于跑出番帮官方网站摄制组到民族医院就医。 终极*版： 吕小绿家养了红鲤鱼绿鲤鱼和驴。李小莉家养了红驴绿驴和鲤鱼。吕小绿家的红鲤鱼绿鲤鱼和驴要跟李小莉家的红驴绿驴和鲤鱼比一比谁更红谁更绿。吕小绿说他家的绿鲤鱼比李小莉家的绿驴绿，李小莉说她家的绿驴比吕小绿家的绿鲤鱼绿。也不知是吕小绿家的绿鲤鱼比李小莉家的绿驴绿，还是李小莉家的绿驴比吕小绿家的绿鲤鱼绿。绿鲤鱼比绿驴，绿驴比绿鲤鱼。最后，吕小绿要拿绿鲤鱼换李小莉的绿驴，李小莉不愿意用绿驴换吕小绿的绿鲤鱼。红鲤鱼绿鲤鱼和驴，红驴绿驴和鲤鱼。不知是绿鲤鱼比绿驴绿还是绿驴比绿鲤鱼绿。 加强版1： 打南边来了个喇嘛吃葡萄不吐葡萄皮，打北边来了个哑巴留恋榴莲甜，南边吃葡萄不吐葡萄皮的喇嘛出南门往正南，看到个面铺面冲南，面铺上挂着蓝布棉门帘，摘了蓝布面门帘看见一堵粉红墙，粉红墙上画凤凰，红凤凰粉凤凰粉红凤凰花凤凰。北边留恋榴莲甜的哑巴走东门过大桥，大桥前面一树枣，拿着竿子去打枣，一个枣两个枣三个枣四个枣五个枣六个枣七个枣八个枣九个枣十个枣十个枣九个枣八个枣七个枣六个枣五个枣四个枣三个枣两个枣一个枣打完枣往后山，山前有四十四棵紫色柿子树，山后有四十四只石狮子，山前四十四棵紫色柿子树的涩柿子涩死了山后的四十四只石狮子。 加强版2： 喇嘛哑巴往集市，吃葡萄不吐葡萄皮的喇嘛买了个长扁担，留恋榴莲甜的哑巴买了个宽板凳，吃葡萄不吐葡萄皮的喇嘛要拿扁担换留恋榴莲甜的哑巴的板凳留恋榴莲甜的哑巴说：”你不会自己买一个么?”吃葡萄不吐葡萄皮的喇嘛心想这留恋榴莲甜的哑巴还挺横，吃葡萄不吐葡萄皮的喇嘛就急了，抄起扁担打了留恋榴莲甜的哑巴一扁担，留恋榴莲甜的哑巴也急了拿起板凳打了吃葡萄不吐葡萄皮的喇嘛一板凳，不知是吃葡萄不吐葡萄皮的喇嘛拿扁担打了留恋榴莲甜的哑巴一扁担还是留恋榴莲甜的哑巴拿板凳打了吃葡萄不吐葡萄皮的喇嘛一板凳，吃葡萄不吐葡萄皮的喇嘛吐了留恋榴莲甜的哑巴一身葡萄皮，留恋榴莲甜的哑巴一看打不过吃葡萄不吐葡萄皮的喇嘛恼羞成怒抓起一块炖冻豆腐朝吃葡萄不吐葡萄皮的喇嘛扔过去吃葡萄不吐葡萄皮的喇嘛一闪身躲了过去，嘲讽留恋榴莲甜的哑巴说：”你扔你的炖冻豆腐，我躲我的炖冻豆腐，你扔不准炖冻豆腐，就别胡扔乱扔扔坏了人家的炖冻豆腐。”留恋榴莲甜的哑巴说：”你这是欺负我不会说话，你等着。” 加强版3： 留恋榴莲甜的哑巴扔下板凳就走了，吃葡萄不吐葡萄皮的喇嘛拿起留恋榴莲甜的哑巴的板凳继续逛集市喇嘛肚子饿，正好看到有个摊位卖鳎目，喇嘛买了五斤鳎目往北走，正好撞上留恋榴莲甜的哑巴腰里还别着个喇叭，提拉着鳎目的喇嘛要拿鳎目换别喇叭哑巴的喇叭，别喇叭的哑巴不乐意拿喇叭换提拉着鳎目的喇嘛的鳎目，提拉着鳎目的喇嘛偏要拿鳎目换别喇叭哑巴的喇叭，别喇叭的哑巴偏偏不让提拉着鳎目的喇嘛拿鳎目换别喇叭哑巴的喇叭，提拉着鳎目的喇嘛又急了，抡起鳎目打了别喇叭哑巴一鳎目，别喇叭哑巴也急了摘下喇叭打了提拉着鳎目的喇嘛一喇叭，也不知是提拉着鳎目的喇嘛拿鳎目打了别喇叭哑巴一鳎目，还是别喇叭哑巴拿喇叭打了提拉着鳎目的喇嘛一喇叭。306. 1、”北边来了一个瘸子,背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。” 2、一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，飞了鹰，跑了兔。打翻醋，醋湿布。 3、七巷一个漆匠，西巷一个锡匠，七巷漆匠用了西巷锡匠的锡，西巷锡匠拿了七巷漆匠的漆，七巷漆匠气西巷锡匠用了漆，西巷锡匠讥七巷漆匠拿了锡。 4、水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 5、威威、伟伟和卫卫，拿着水杯去接水。威威让伟伟，伟伟让卫卫，卫卫让威威，没人先接水。一二三，排好队，一个一个来接水。 6、槐树槐，槐树槐，槐树底下搭戏台，人家的姑娘都来了，我家的姑娘还不来。说着说着就来了，骑着驴，打着伞，歪着脑袋上戏台。 7、打南来了个瘸子，手里托着个碟子，碟子里装着茄子，地下钉着个橛子，绊倒了瘸子，撒了碟子里的茄子，气得瘸子，撇了碟子，拔了橛子，踩了茄子。 8、出前门，往正南，有个面铺面冲南，门口挂着蓝布棉门帘。摘了它的蓝布棉门帘，棉铺面冲南，给他挂上蓝布棉门帘，面铺还是面冲南。 9、这边一个人，挑了一挑瓶。那边一个人，担了一挑盆。瓶碰烂了盆，盆碰烂了瓶。卖瓶买盆来赔盆，卖盆买瓶来赔瓶。瓶不能赔盆，盆不能赔瓶。 10、小琳琳，爱银铃，琳琳用劲摇银铃，银铃的铃声真好听。风吹银铃叮铃铃，小琳以为铃失灵，银铃笑琳琳真是不机灵！ 1、花鸭与彩霞水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 2、天津和北京，两座兄弟城。津京两字韵，不是一个音。津字前鼻韵，京字后鼻音。请你仔细听，发音要分清。 3、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。 4、小毛抱着花猫，花猫用爪抓小毛，小毛用手拍花猫，花猫抓破了小毛，小毛打疼了花猫，小毛哭，花猫叫，小毛松开了花猫，花猫跑离了小毛。 5、九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 6、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？ 7、槐树槐，槐树槐，槐树底下搭戏台，人家的姑娘都来了，我家的姑娘还不来。说着说着就来了，骑着驴，打着伞，歪着脑袋上戏台。 8、会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，哪就吃不成我的炖冻豆腐。 9、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 10、”北边来了一个瘸子,背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。”307. 【导语】以下是无忧考网为大家精心整理的《》，供您查阅。 第一关：老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农 第二关：牛郎恋刘娘,刘娘恋牛郎,牛郎年年念刘娘,刘娘年年恋牛郎,郎念娘来娘恋郎 第三关：七巷一个漆匠，西巷一个锡匠。七巷漆匠用了西巷锡匠的锡，西巷锡匠拿了七巷漆匠的漆，七巷漆匠气西巷锡匠用了漆，西巷锡匠讥七巷漆匠拿了锡。 第四关：初级：大声说20遍（红凤凰）中级：大声说20遍（粉红凤凰） 第五关：1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发；灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞；灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞；灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰308. 1、妈妈骂马 妈妈种麻，我去放马，马吃了麻，妈妈骂马。 2、蚕和蝉 这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 3、灰损肥 一堆肥，一堆灰，肥混灰，灰损肥，不要肥混灰，防止灰损肥。 4、兜装豆 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 5、吃荸荠 荸荠有皮，皮上有泥。洗掉荸荠皮上的泥，削去荸荠外面的皮，小丽、小艺和小奇，欢欢喜喜吃荸荠。 6、小猪 小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 7、南南有个篮 南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 8、学捏梨 盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏泥，比比，真梨、假梨差不离。 9、两只鹅 河边两只鹅，一同过了河；白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 10、窝和锅 树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。309. 1、紫瓷盘，盛鱼翅， 一盘熟鱼翅，一盘生鱼翅。 迟小池拿了一把瓷汤匙， 要吃清蒸美鱼翅。一口鱼翅刚到嘴， 鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 2、从南边来了个喇嘛，提拉着五斤塔嘛。 从北边来个哑吧，腰里别着个喇叭， 提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭， 别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛， 别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。 也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。 也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 3、石小四和史肖石 石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词， 年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词， 忙递给年十四的石小四， 年十四的石小四见了好报纸， 忙递给年四十的史肖石。 4、游西湖，提锡壶，锡壶掉西湖， 惜乎锡壶;听物理，如雾里， 雾里看物理，勿理物理…… 5、有个懒汉本姓阮，提个篮子卖鸡卵， “卖卵”“卖卵”使劲喊，谁都不来买鸡卵， 不是鸡卵品种乱，而是鸡卵皮太软。 卖不出鸡卵难买饭，回家吃饭路又远， 胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。 6、山前有个严圆眼，山后有个严眼圆， 二人山前来比眼，不知是严圆眼的眼圆， 还是严眼圆比严圆眼的眼圆? 7、四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿，谁说四十是“细席”， 他的舌头没用力;谁说十四是“适时”， 他的舌头没伸直。认真学，常练习，十四、四十、四十四。 8、石、斯、施、史四老师，天天和我在一起。 石老师教我大公无私，斯老师给我精神食粮， 施老师叫我遇事三思，史老师送我知识钥匙。 我感谢石、斯、施史四老师。 9、司小四和史小世，四月十四日十四时四十上集市， 司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。310. 天上七颗星 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。连念七遍就聪明。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 喇嘛和哑巴 打南边来了个喇嘛，手里提拉着五斤鳎目。打北边来了个哑巴，腰里别着个喇叭。南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。311. 1、一个人 这边一个人，挑了一挑瓶。 那边一个人，担了一挑盆。 瓶碰烂了盆，盆碰烂了瓶。 卖瓶买盆来赔盆，卖盆买瓶来赔瓶。 瓶不能赔盆，盆不能赔瓶。 2、倒吊鸟 梁上两对倒吊鸟，泥里两对鸟倒吊。 可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊， 可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 3、板凳与扁担 板凳宽，扁担长。扁担没有板凳宽， 板凳没有扁担长。扁担在绑在板凳上， 板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 4、一场空 抬头看，满天星，低头看，一道坑。 坑里看，栽满葱，葱上看，冻着冰。 屋里看，点着灯，墙上看，钉的钉。 钉上看，挂的弓，弓上看，卧的鹰。 寒冬天，刮大风，刮散了，满天星。 5、墙上一根钉 墙上一根钉，钉上挂条绳， 绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。 滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯， 灯骂绳，瓶说绳，绳说钉， 丁丁当当，乒乓乓乓。 6、四和十 四和十，十和四，十四和四十， 四十和十四。说好四和十得靠舌头和牙齿， 谁说四十是“细席”，他的舌头没用力； 谁说十四是“适时”，他的舌头没伸直。 认真学，常练习，十四、四十、四十四。 7、小牛赔油 小牛放学去打球，踢倒老刘一瓶油， 小回家取来油，向老刘道歉又赔油， 老刘不要小牛还油，小牛硬要把油还给老刘， 老刘夸小牛，小牛直摇头， 你猜老刘让小牛还油，还是不让小牛不油。 8、算算看 老杜和老顾，齐走富裕路。 老杜养了兔，老顾养了鹿。 老顾给老杜十只兔，两家平等同只数； 老顾给老杜十只鹿，顾家是杜家一半数。 请问老杜养了多少兔，再问老顾养了多少鹿。给你一个简单的。 9、白老八 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。 10、酸枣子 山上住着三老子，山下住着三小子， 山腰住着三哥三嫂子。山下三小子， 找山腰三哥三嫂子，借三斗三升酸枣子， 山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子， 只好到山腰找三哥三嫂子， 给山下三小子借了三斗三升酸枣子。 过年山下三小子打下酸枣子， 还了山腰三哥三嫂子，两个三斗三升酸枣子。 11、司小四和史小世 司小四和史小世，四月十四日十四时四十上集市， 司小四买了四十四斤四两西红柿， 史小世买了十四斤四两细蚕丝。 司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。 史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。 司小四说我四十四斤四两西红柿可以增加营养防近视， 史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 12、老六放牛 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴； 来了侯老六，拉了六头牛；来了仇老六， 提了六篓油；来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六， 住上刘老六的六号楼，半夜里， 牛抵猴，猴斗牛，撞倒了仇老六的油， 油坏了尤老六的绸。牛老六帮仇老六收起油， 侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 13、六十六头牛 六十六岁的陆老头，盖了六十六间楼， 买了六十六篓油，养了六十六头牛， 栽了六十六棵垂杨柳。六十六篓油， 堆在六十六间楼；六十六头牛， 扣在六十六棵垂杨柳。忽然一阵狂风起， 吹倒了六十六间楼，翻倒了六十六篓油， 折断了六十六棵垂杨柳，砸死了六十六头牛， 急煞了六十六岁的陆老头。312. 1、妈妈骂马 妈妈种麻，我去放马， 马吃了麻，妈妈骂马。 2、蚕和蝉 这是蚕，那是蝉， 蚕常在叶里藏，蝉常在林里唱。 3、灰损肥 一堆肥，一堆灰，肥混灰， 灰损肥，不要肥混灰，防止灰损肥。 4、兜装豆 兜里装豆，豆装满兜，兜破漏豆。 倒出豆，补破兜，补好兜， 又装豆，装满兜，不漏豆。 5、吃荸荠 荸荠有皮，皮上有泥。 洗掉荸荠皮上的泥，削去荸荠外面的皮， 小丽、小艺和小奇，欢欢喜喜吃荸荠。 6、小猪 小猪扛锄头，吭哧吭哧走。 小鸟唱枝头，小猪扭头瞅， 锄头撞石头，石头砸猪头。 小猪怨锄头，锄头怨猪头。 7、南南有个篮 南南有个篮篮，篮篮装着盘盘， 盘盘放着碗碗，碗碗盛着饭饭。 南南翻了篮篮，篮篮扣了盘盘， 盘盘打了碗碗，碗碗撒了饭饭。 8、学捏梨 盘里放着一个梨，桌上放块橡皮泥。 小丽用泥学捏梨，眼看着梨手捏泥， 比比，真梨、假梨差不离。 9、两只鹅 河边两只鹅，一同过了河； 白鹅去拾草，黑鹅来搭窝。 冬天北风刮，草窝真暖和， 住在草窝里，哦哦唱支歌。 10、窝和锅 树上一个窝，树下一口锅， 窝掉下来打着锅，窝和锅都破， 锅要窝赔锅，窝要锅赔窝， 闹了半天，不知该锅赔窝，还是窝赔锅。 11、买菜 小艾和小戴，一起去买菜。 小艾把一斤菜给小戴，小戴有比小艾多一倍的菜； 小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 12、糊灯笼 红红糊红粉灯笼，给军属送光荣灯； 芬芬糊粉红灯笼，给军属送灯光荣； 红红糊完红粉灯笼，糊粉红灯笼； 芬芬糊完粉红灯笼，糊红粉灯笼。 13、猫鼻子 白猫黑鼻子，黑猫白鼻子； 黑猫的白鼻子，碰破了白猫黑鼻子， 白猫的黑鼻子破了，剥了秕谷壳儿补鼻子； 黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 14、捉兔 一位爷爷他姓顾，上街打醋又买布。 买了布，打了醋，回头看见鹰抓兔。 放下布，搁下醋，上前去追鹰和兔， 了鹰，跑了兔。打翻醋，醋湿布。 15、四个头 天上有日头，地下有石头， 嘴里有舌头，瓶口有塞头。 天上是日头不是石头， 地下是石头不是日头， 嘴里是舌头不是塞头， 瓶中是塞头不是舌头。313. 【导语】绕口令是十分经典的文字游戏项目，今天无忧考网跟大家分享一些非常经典的绕口令，希望对大家有所帮助，下面我们一起来看看吧！ 奋发商店卖混纺，有红混纺，黄混纺， 粉红混纺，花混纺，纷繁的混纺让大娘着了慌。 仿佛进了混纺的大世界，眼也花，手也忙。 吩咐女儿快快挑混纺。 这天天下雨，体育局穿绿雨衣的女小吕，去找穿绿运动衣的女老李。 穿绿雨衣的女小吕，没找到穿绿运动衣的女老李， 穿绿运动衣的女老李，也没见着穿绿雨衣的女小吕。 滚花龙缸盛滚龙虾汤 滚花龙缸盛滚龙虾汤，虾汤鲜，花缸掀。 莎莎告诉佳佳，又去告诉花花，妈妈下班乏了，不要惊吵妈妈。 咱们外边玩耍，手帕反眼蒙毒害，玩玩“过桥摸瞎“。 莎莎拉着佳佳，佳佳拉着花花。 白果打白布白布包白果，白果恨白布，白布打白果，白果打白布。 粉红墙上画凤凰，凤凰画在粉红墙，红凤凰，粉凤凰粉红凤凰，花凤凰。 四是四，十是十，十四是十四，四十是四十。 莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 嘴说腿,腿说嘴， 嘴说腿爱跑腿， 腿说嘴爱卖嘴。 光动嘴不动腿， 光动腿不动嘴， 不如不长腿和嘴。314. 喇嘛和哑巴【篇一】 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)?目，超级难的绕口令大全，绕口令大全超级难。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。 也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 六十六头牛【篇二】 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼；六十六头牛，扣在六十六棵垂杨柳。 忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳， 砸死了六十六头牛，急煞了六十六岁的陆老头。 老六放牛【篇三】 柳林镇有个六号楼，刘老六住在六号楼。 有一天，来了牛老六，牵了六只猴；来了侯老六，拉了六头牛；来了仇老六，提了六篓油； 来了尤老六，背了六匹绸。 牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛， 撞倒了仇老六的油，油坏了尤老六的绸。 牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。315. 1. Silly sheep weep and sleep. 2. Six shining cities, six shining cities, six shining cities. 3. Six sick sea-serpents swam the seven seas. 4. Six sleek swans swam swiftly southwards 5. Stupid superstition! 6.Fresh fried fish, Fish fresh fried, Fried fish fresh, Fish fried fresh. 7.Peter Piper picked a peck of pickled peppers,a peck of pickled peppers Peter Piper picked.If Peter Piper picked a peck of pickled peppers. Where’s the peck of pickled peppers Peter Piper picked? 8.How many good cookies could a good cook cook if a good cook could cook as many good cookies as a good cook could cook? 9.How much wood would a woodchuck chuck if a wooodchuck could chuck wood? A woodchuck would chuck all the wood a woodchuck could chuck if a woodchuck could chuck wood. 10.Great Greek grape growers grow great Greek grapes, but the Greeks do not eat the grapes the great Greek grape growers grow. 11.That black lad was very sad because his dad had died in a bad accident in a factory. 12.The eggs he sells everyday are better than everybody else sells. 13. Ten tiny tigers tied ten tiny ties on their tiny tails. 5. A noise annoys an oyster, but a noisy noise annoys an oyster more! 6. Ann and Andy’s anniversary is in April. 7. Bake big batches of bitter brown bread. 8. Big black bugs bleed blue black blood but baby black bugs bleed blue blood. 9. Black background, brown background. 10. Blake’s black bike’s back brake bracket block broke. 11. Blue glue gun, green glue gun. 12. Caution: Wide Right Turns 13. Each Easter Eddie eats eighty Easter eggs. 14. Elizabeth has eleven elves in her elm tree. 15. Elizabeth’s birthday is on the third Thursday of this month. 16. Fresh fried fish, Fish fresh fried, Fried fish fresh, Fish fried fresh. 17. Freshly fried fresh flesh 18. Green glass globes glow greenly. 19. He threw three balls. 20. He threw three free throws. 21. Here’s an easy game to play. Here’s an easy thing to say: 23. How may saws could a see-saw saw if a see-saw could saw saws? 24. How much oil boil can a gum boil boil if a gum boil can boil oil? 25. I thought a thought. But the thought I thought wasn’t the thought I thought I thought. If the thought I thought I thought had been the thought I thought, I wouldn’t have thought so much.316. 1、化肥会挥发; 黑化肥发灰，灰化肥发黑; 黑化肥发灰会挥发;灰化肥挥发会发黑; 黑化肥发灰挥发会花飞;灰化肥挥发发黑会飞花。 2、嘴说腿，腿说嘴，嘴说腿爱跑腿，腿说嘴爱卖嘴。 光动嘴不动腿，光动腿不动嘴，不如不长腿和嘴。 3、墙上挂面鼓，鼓上画老虎，老虎抓破鼓，拿块布来补。 不知是布补鼓，还是布补虎? 4、铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 5、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 6、长虫围着砖堆转，转完砖堆钻砖堆。 7、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 8、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 9、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南;挂上蓝布棉门帘，面铺还是门朝南。 10、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 11、山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 12、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 13、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 14、河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。 15、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 16、婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。 17、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 18、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 19、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 20、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 21、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 22、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 23、从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 24、石小四和史肖石 石小四，史肖石，一同来到阅览室。 石小四年十四，史肖石年四十。 年十四的石小四爱看诗词，年四十的史肖石爱看报纸。 年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石 25、游西湖，提锡壶，锡壶掉西湖，惜乎锡壶;听物理，如雾里，雾里看物理，勿理物理…… 26、有个懒汉本姓阮，提个篮子卖鸡卵，“卖卵”“卖卵”使劲喊，谁都不来买鸡卵，不是鸡卵品种乱，而是鸡卵皮太软。卖不出鸡卵难买饭，回家吃饭路又远，胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。 27、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆?317. 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子,白猫的黑鼻子破了,剥了秕谷壳儿补鼻子;黑猫的白鼻子不破,不剥秕谷壳儿补鼻子。 北边来了一个瘸子,背着一捆橛子。南边来了一个瘸子,背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 荸荠有皮，皮上有泥。洗掉荸荠皮上的泥，削去荸荠外面的皮，小丽、小艺和小奇，欢欢喜喜吃荸荠。 吃桔子，剥桔子，桔皮丢在垃圾箱里。不吃桔子，不剥桔子，不把桔皮丢在垃圾箱里。 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 发废话会花话费，回发废话话费发，发废话花费话费会后悔，回发废话会费话费，花费话费回发废话会耗费话费。 河边两只鹅，一同过了河;白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 红红糊红粉灯笼，给军属送光荣灯;芬芬糊粉红灯笼，给军属送灯光荣;红红糊完红粉灯笼，糊粉红灯笼;芬芬糊完粉红灯笼，糊红粉灯笼。 老杜和老顾，齐走富裕路。老杜养了兔，老顾养了鹿。老顾给老杜十只兔，两家平等同只数;老顾给老杜十只鹿，顾家是杜家一半数。请问老杜养了多少兔，再问老顾养了多少鹿。给你一个简单的. 老龙恼怒闹老农， 老农恼怒闹老龙。 农怒龙恼农更怒， 龙恼农怒龙怕农 。 梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 打南边来了个喇嘛 手里头提了五斤鳎目 从北边来了个哑巴 腰里头别着个喇叭 这提了鳎目喇嘛 要拿鳎目换那别了喇叭的哑巴他的喇叭 别喇叭的哑巴不乐意拿喇叭 换那提了鳎目喇嘛 他的鳎目 提鳎目喇嘛就急了 轮起了五斤鳎目打了别着喇叭的哑巴一鳎目 别喇叭的哑巴也急了 摘下喇叭打了提了鳎目喇嘛一喇叭 也不知提鳎目喇嘛 打了别着喇叭的哑巴一鳎目 还是那别着喇叭的哑巴 打了提了鳎目喇嘛一喇叭 喇嘛回家炖鳎目 哑巴站着嘀嘀嗒嗒吹喇叭 山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗? 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思， 石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。(一代语言大师赵元任先生的作品) 四和十，十和四，十四和四十，四十和十四。 说好四和十得靠舌头和牙齿。谁说四十是”细席”，他的舌头没用力; 谁说十四是”适时”，他的舌头没伸直。 认真学，常练习，十四、四十、四十四。 谭家谭老汉，挑担到蛋摊，买了半担蛋，挑担到炭摊，买了半担炭，满担是蛋炭。老汉忙回赶，回家炒蛋饭。进门跨门槛，脚下绊一绊，跌了谭老汉，破了半担蛋，翻了半担炭，脏了木门槛。老汉看一看，急得满头汗，连说怎幺办，蛋炭完了蛋，老汉怎吃蛋炒饭。 天空飘着一片霞，水上游来一群鸭。霞是五彩霞，鸭是麻花鸭，麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。318. 1、太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地上石头滚上坡。江里骆驼会下蛋，山上鲤鱼搭成窝。腊月炎热直流汗，六月寒冷打哆嗦。妹照镜子头梳手，门外口袋把驴驮。 2、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？ 3、山前有只虎，山下有只猴。虎撵猴，猴斗虎；虎撵不上猴，猴斗不了虎。 4、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？ 5、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 6、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 7、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 8、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？搞笑绕口令超级难 9、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来；二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 12、我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 13、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 14、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 15、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 16、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆；过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 17、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 18、一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 19、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 20、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 21、长虫围着砖堆转，转完砖堆钻砖堆。 22、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 23、小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 24、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 25、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 26、七加一，再减一，加完减完等于几？七加一，再减一，加完减完还是七。 27、白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 28、妈妈种麻，我去放马，马吃了麻，妈妈骂马。 29、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 30、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 31、早招租，晚招租，总找周邹郑曾朱。 32、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 33、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 34、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 35、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 36、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。 37、九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，”咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 38、墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。 39、颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 40、老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 41、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 42、高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 43、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。 44、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 45、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 46、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。 47、东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。 48、青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。 49、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 50、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。319. 1、妈妈骂马 妈妈种麻，我去放马，马吃了麻，妈妈骂马。 2、蚕和蝉 这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 3、灰损肥 一堆肥，一堆灰，肥混灰，灰损肥，不要肥混灰，防止灰损肥。 4、兜装豆 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 5、吃荸荠 荸荠有皮，皮上有泥。洗掉荸荠皮上的泥，削去荸荠外面的皮，小丽、小艺和小奇，欢欢喜喜吃荸荠。 6、小猪 小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 7、南南有个篮 南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 8、学捏梨 盘里放着一个梨，桌上放块橡皮泥。小丽用泥学捏梨，眼看着梨手捏泥，比比，真梨、假梨差不离。 9、两只鹅 河边两只鹅，一同过了河;白鹅去拾草，黑鹅来搭窝。冬天北风刮，草窝真暖和，住在草窝里，哦哦唱支歌。 10、窝和锅 树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 11、买菜 小艾和小戴，一起去买菜。小艾把一斤菜给小戴，小戴有比小艾多一倍的菜;小戴把一斤菜给小艾，小艾、小戴就有一般多的菜。 12、糊灯笼 红红糊红粉灯笼，给军属送光荣灯;芬芬糊粉红灯笼，给军属送灯光荣;红红糊完红粉灯笼，糊粉红灯笼;芬芬糊完粉红灯笼，糊红粉灯笼。 13、猫鼻子 白猫黑鼻子，黑猫白鼻子;黑猫的白鼻子，碰破了白猫黑鼻子，白猫的黑鼻子破了，剥了秕谷壳儿补鼻子;黑猫的白鼻子不破，不剥秕谷壳儿补鼻子。 14、捉兔 一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，了鹰，跑了兔。打翻醋，醋湿布。 15、四个头 天上有日头，地下有石头，嘴里有舌头，瓶口有塞头。天上是日头不是石头，地下是石头不是日头，嘴里是舌头不是塞头，瓶中是塞头不是舌头。 16、一个人 这边一个人，挑了一挑瓶。那边一个人，担了一挑盆。瓶碰烂了盆，盆碰烂了瓶。卖瓶买盆来赔盆，卖盆买瓶来赔瓶。瓶不能赔盆，盆不能赔瓶。 17、倒吊鸟 梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 18、板凳与扁担 板凳宽，扁担长。扁担没有板凳宽，板凳没有扁担长。扁担在绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。 19、一场空 抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 20、墙上一根钉 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 21、四和十 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿，谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 22、小牛赔油 小牛放学去打球，踢倒老刘一瓶油，小回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛不油。 23、算算看 老杜和老顾，齐走富裕路。老杜养了兔，老顾养了鹿。老顾给老杜十只兔，两家平等同只数;老顾给老杜十只鹿，顾家是杜家一半数。请问老杜养了多少兔，再问老顾养了多少鹿。给你一个简单的。 24、白老八 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 25、酸枣子 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 26、司小四和史小世 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 27、老六放牛 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 28、六十六头牛 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 29、天上七颗星 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。连念七遍就聪明。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 30、喇嘛和哑巴 打南边来了个喇嘛，手里提拉着五斤鳎目。打北边来了个哑巴，腰里别着个喇叭。南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 31、《施氏食狮史》 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏 适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。 氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。(一代语言大师赵元任先生的作品) 32、小毛与花猫 小毛抱着花猫 ， 花猫用爪抓小毛， 小毛用手拍花猫， 花猫抓破了小毛， 小毛打疼了花猫， 小毛哭，花猫叫， 小毛松开了花猫 ， 花猫跑离了小毛。 33、鸟和猫 树上一只鸟， 地上一只猫。 地上的猫想咬树上的鸟， 树上的鸟想啄猫的毛。320. 1.山前住着个崔粗腿，山后边住着个崔腿粗，俩人山前来比腿，也不知崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的粗腿。山前住着个严圆眼，山后边住着个严眼圆，俩人山前来比眼，也不知严圆眼比严眼圆的眼圆，还是严眼圆比严圆眼的圆眼。 2.闲来没事出城西，树木朗林数不齐，一二三四五六七，七六五四三二一，六城四，三二一，五四三二一，四三二一三二一，二一一，一个一，数了半天一棵树，一棵树长了七个枝，七个枝结了七样果，结的是槟子橙子桔子柿子李子栗子梨，槟子橙子桔子柿子李子栗子梨! 3.出南门，面正南，有一个面铺面冲南，面铺门口挂着一个蓝布棉门帘，摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧面铺还是面冲南。 4.我家有个肥净白净八斤鸡，飞到张家后院里，张家后院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡，卖了他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。 5.这个绕口令儿最难唱，咱们唱的是山前有四十四个小狮子，山后边有四十四棵紫色柿子树，山前四十四个小狮子吃了山后边四十四棵紫色柿子树的涩柿子，山前四十四个小狮子让山后边四十四棵紫色柿子树的涩柿子给涩死了。 6.顺南边来了个喇嘛，手里提了五斤塌目，顺北边来了个哑巴，腰里别着个喇叭，提了塌目的喇嘛要拿五斤塌目去换北边哑巴腰里别着的喇叭，别着的喇叭的哑巴不愿意拿喇叭去换提了塌目喇嘛他的塌目，提了塌目的喇嘛就急了，拿起了五斤塌目打了别着的喇叭哑巴一塌目，别着的喇叭的哑巴也急了，顺腰里摘下喇叭，打了提了塌目喇嘛一喇叭，也不知道喇嘛的塌目打了别着的喇叭的哑巴一塌目，还是别着的喇叭的哑巴打了提了塌目的喇嘛一喇叭，喇嘛回家炖塌目，哑巴回家吹喇叭。 7.一道黑，两道黑，三四五六七道黑，八九道黑十道黑，我买个烟袋乌木杆儿，抓住两头一道黑，二姑娘描眉去打鬓，照着个镜子两道黑，粉皮墙写川字儿，横瞧竖瞧三道黑，象牙的桌子乌木的腿儿，放在炕上四道黑，买个小鸡不下蛋，圈在笼里捂到黑，挺好的骡子不吃草，拉到街上遛到黑，买个小驴不驮磨，配上鞍韂骑到黑，姐俩南洼去割麦，丢了镰刀拔到黑，月窠儿的孩子得了疯病，点起个艾条灸到黑，卖瓜子的打瞌睡，呼啦啦拉撒了那么一大堆，他的笤帚簸箕不凑手，这么一个一个拾到黑。 8.南边来个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子，没留神那橛子绊倒了瘸子，撒了瘸子茄子，砸了瘸子碟子，瘸子爬起来要捡茄子，北边来个醉老爷子，腰里掖着烟袋别子，过来要买瘸子茄子，瘸子不乐意卖给醉老爷子茄子，老爷子一生气抢了瘸子茄子，瘸子拔起橛子，追老爷子，快给瘸子茄子，不给瘸子茄子，招呼手里橛子，毛腰捡茄子拾碟子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，就打瘸子，瘸子拿起橛子砍老爷子，也不知老爷子的烟袋别子打了瘸子茄子，也不知瘸子橛子打了老爷子烟袋别子。 9.正月里，正月正，姐妹二人去逛灯，大姑娘名叫粉红女，二姑娘名叫女粉红，粉红女身穿一件粉红袄，女粉红身穿一件袄粉红，粉红女怀抱一瓶粉红酒，女粉红怀抱一瓶酒粉红，姐俩找了个无人处，推杯换盏饮刘伶，女粉红喝了粉红女的粉红酒，粉红女喝了女粉红的酒粉红，粉红女喝了一个酩酊醉，女粉红喝了一个醉酩酊，女粉红揪着粉红女就打，粉红女揪着女粉红就拧，女粉红撕了粉红女的粉红袄，粉红女就撕了女粉红的袄粉红，姐妹打罢落下手，自己买线自己缝，粉红女买了一条粉红线，女粉红买了一条线粉红，粉红女是反缝缝缝粉红袄，女粉红是缝反缝缝袄粉红。 10.数九寒天冷风嗖，转年春打六九头，正月十五是龙灯会，有一对狮子滚绣球，三月三王母娘娘蟠桃会，大闹天宫孙猴儿又把那个仙桃偷，五月端午是端阳日，白蛇许仙不到头，七月初七传说本是一个天河配，牛郎织女泪交流，八月十五云遮月，月里的嫦娥犯忧愁，要说愁，净说愁，唱上一段绕口令儿名字就叫十八愁，狼也愁，虎是愁，象也愁，鹿也愁，骡子也愁马也愁，猪也愁，狗是愁，牛也愁，羊也愁，鸭子也愁鹅也愁，蛤蟆愁，螃蟹愁，蛤蜊愁，乌龟愁，鱼愁虾愁不一样，您听我个个说根由，虎愁不敢把这高山下，狼愁野心耍滑头，象愁脸憨皮又厚，鹿愁长了一对七叉八叉大犄角，马愁鞴鞍行千里，骡子愁它是一世休，羊愁从小它把胡子长，牛愁愁的犯牛轴，狗愁改不了那净吃屎，猪愁离不开那臭水沟，鸭子愁扁了它的嘴，鹅愁脑瓜门儿上长了一个奔了头，蛤蟆愁长了一身脓疱疥，螃蟹愁的净横搂，蛤蜊愁闭关自守，乌龟愁的胆小尽缩头，鱼愁离水不能游，虾愁空枪乱扎没准头。321. 1.整人搞笑绕口令 2.八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。 3.南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口; 他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 4.轻率找三个工具，比如三个杯子吧，你敲第一个时让你的伴侣说”忘”，敲第二个说”情”，第三个说”水”，美其名曰试验你伴侣的反映速率，频频然后，不断的敲第一个，你的伴侣如果随着说”忘，忘，忘，忘，汪，汪，汪，汪，汪，……”呵呵，效验就出来了。 5.乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑;乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。 6.一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个八个九个半罐，请你算算是多少罐。 7.一个伴侣，让他先说遍”耗子”，然后再说遍”鼠老”，待他说完”耗子，耗子，耗子，鼠老，鼠老，鼠老”然后，当即问他”猫最怕啥子”，几乎可以保证他会答”耗子”。 8.在乎你的我只在乎我在乎的你是否在乎在乎你的我，我在乎的你是否和在乎你的我在乎我在乎的你一样在乎在乎你的我一样! 9.小槐树，结樱桃，杨柳树上结辣椒。吹着鼓，打着号，抬着大车扛着轿。苍蝇 踏死驴，蚂蚁踩塌桥。葫芦沉了底，石头水上漂。小鸡叼个饿老雕，老鼠拉个大狸猫。你说好笑不好笑? 10.油一缸，豆一筐，老鼠嗅着油豆香。爬上缸，跳进筐，偷油偷豆两头忙。又高兴，又慌张，脚一滑，身一晃，“扑通，一块跌进缸。 11.描只花猫，花猫花毛。描只黑猫，黑猫黑毛。 描只白猫，白猫白毛。描只灰猫，灰猫灰毛。 12.金钱花，十八朵，大姨妈，来接我，猪拿柴，狗烧火，猫儿煮饭笑死我! 13.一楼住着管得宽，二楼住着潘不管。潘不管乱倒垃圾一大片，还说弄脏楼道他不管。管得宽要管潘不管，潘不管不让管得宽管， 14.管得宽说我非要管管潘不管。 15.朱家有个金柱子，曲家有个金锯子。曲家的主人，抱住了朱家的举人，金锯子锯断了金柱子。 16.老方扛着个黄幌子，老黄扛着个方幌子，老方要拿老黄的方幌子，老黄要拿老方的黄幌子，老黄老方不相让，方幌子碰破了黄幌子，黄幌子碰破了方幌子。 17.东海鱼 仓多鱼群聚，大鱼小鱼鱼游鱼碰鱼。渔民吕玉撒网去捕鱼，还没捕完天下雨。雨珠打鱼，鱼遇雨，吕玉雨中忙捕鱼。 18.古铜钱，挂门帘;门帘高，买铡刀;铡刀快，切青菜;青菜青，买张弓;弓没弦，买只船;船没头，买头牛;牛没爪，买匹马;马没鞍，买只鸢;鸢没肚，买只兔;兔没蹄，买只鸡;鸡不叫，狗不咬，都叫狸花猫偷着吃了。 19.哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河。哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 20.哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 21.蓝衣布履刘兰柳，布履蓝衣柳半刘，兰柳拉犁来犁地，半刘播种来拉耧。 22.老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 23.老齐欲想去卖鱼，巧遇老吕去牵驴，老齐要用老吕的驴去驮鱼，老吕说老齐要用我老吕的驴驮鱼就得给我鱼，要不给我鱼就别用我老吕的驴去驮鱼，二人争来争去都误了去赶集。 24.老鼠遇老虎，老虎咬老鼠。老鼠躲老虎，老虎咬不着老鼠，老鼠躲过了老虎。 25.梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 26.一班有个黄贺，二班有个王克，黄贺王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻，。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。322. 司小四和史小世 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝，普通话绕口令大全。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 酸枣子 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。山下三小子，找山腰三哥三嫂子，借三斗三升酸枣子，山腰三哥三嫂子，借给山下三小子三斗三升酸枣子。山下三小子，又找山上三老子，借三斗三升酸枣子，山上三老子，还没有三斗三升酸枣子，只好到山腰找三哥三嫂子，给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，还了山腰三哥三嫂子，两个三斗三升酸枣子。 板凳与扁担 板凳宽，扁担长。扁担没有板凳宽，板凳没有扁担长。扁担在绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上吃桔子吃桔子，剥桔子，桔皮丢在垃圾箱里。不吃桔子，不剥桔子，不把桔皮丢在垃圾箱里。 墙上一根钉 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 妈妈骂马 妈妈种麻，我去放马，马吃了麻，妈妈骂马。 白老八 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 【声母】 b-p：补破皮褥子不如不补破皮褥子(《补皮褥子》) b-p：吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿(《葡萄皮儿》) d：会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，哪就吃不成我的炖冻豆腐(《炖冻豆腐》)。 l：六十六岁刘老六，修了六十六座走马楼，楼上摆了六十六瓶苏合油，门前栽了六十六棵垂杨柳，柳上拴了六十六个大马猴。忽然一阵狂风起，吹倒了六十六座走马楼，打翻了六十六瓶苏合油，压倒了六十六棵垂杨柳，吓跑了六十六个大马猴，气死了六十六岁刘老六(《六十六岁刘老六》)。 d-t：大兔子，大肚子，大肚子的大兔子，要咬大兔子的大肚子(《大兔子和大肚子》)。 n-l：门口有四辆四轮大马车，你爱拉哪两辆来拉哪两辆(《四辆四轮大马车》)。 h：华华有两朵黄花，红红有两朵红花。华华要红花，红红要黄花。华华送给红红一朵黄花，红红送给华华一朵红花(《华华和红红》)。 j、q、x：七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。(《漆匠和锡匠》)。 g-k：哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗(《哥挎瓜筐过宽沟》)。 h-f：一堆粪，一堆灰，灰混粪，粪混灰(《一堆粪》)。 z-zh：隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸(《撕字纸》)。 s-sh：三山撑四水，四水绕三山，三山四水春常在，四水三山四时春(《三山撑四水》)。 z、c、s-j、x司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻(《司机买雌鸡》)。 zh、ch、sh：大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头(《大车拉小车》)。 r：夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山(《说日》)。 sh、四声：石室诗士施史，嗜狮，誓食十狮，氏时时适市，氏视十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮尸，食时，始识十狮尸实是十石狮尸，试释是事实(《施氏食狮史》)。 普通话绕口令练习的目的主要是为了帮助大家达到口齿灵活、语音准确、吐字流畅、颗粒饱满、圆润集中、字正腔圆的表达效果。训练时，要求大家一定要按照正确的发音部位和发音方法练。一方面要注意纠正自己的发声缺点、弱点、毛病;另一方面还要利用和发挥自己的长处，扬长避短，绕口令《普通话绕口令大全》。这些绕口令练起来有些绕口、难发，但它却是学说好普通话必不可少的练习材料，通过绕口令的练习不仅可以加强咬字器官的力度和提高咬字器官的灵活度，同时也可以有效地锻炼呼吸控制能力。练习时，最初应特别注意字音质量，要把音发准，劲使稳，打开韵腹，利索收音，做到吐字准确、清晰、圆润。然后由慢到快，逐渐加速，可按音、字、词、句、段五步练习法循序渐进。我们知道，绕口令练习并非只是耍嘴皮子，而是既练“嘴劲”，又要练“心劲”，所以不能一味求快。在训练中，我们还要注意结合气息控制练习。在开口前要注意放松喉部、气息下沉。“运行”当中要补气自如，轻松流畅，字音速度由慢渐快，要做到慢而不断，快而不乱。最后还要注意做到内容清楚、感情充沛。因为气是发声的动力，气息调整不好，字的“运行”就会发生故障，声音的质量也就无法保证。 声母绕口令练习 普通话声母的发音过程有三个阶段：成阻、持阻、除阻。声母的发音部位不同，吐字时的着力点就不一样，比如“b、P、m”，发音时着力点在双唇，“d、t”的着力点在舌尖，舌尖的弹力。因此发声母时不要拖长，要咬住、弹开。我们在每段绕绕口令题旁都标有“b、p、m”、“d、t”、“n、l”、“g、k”、“s、sh”等声母字样来说明此段绕口令是专门训练所标声母的绕口令。例如：《八百标兵》一段绕口令题旁标有“b、p”的声母，就说明“b、p”字母在练习过程中是重点训练的内容，训练双唇有力集中。又如：《短刀》一段绕口令题旁标有“d、t”的声母，就说明“d、t”在练习过程中是重点训练的内容，训练舌尖的弹力等等。 八百标兵(b、p) 八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 炮兵和步兵(b、p、m) 炮兵攻打八面坡，炮兵排排炮弹齐发射。步兵逼近八面坡，歼敌八千八百八十多。 一平盆面(b、p) 一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 巴老爷芭蕉树(b、p) 巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住，八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 老六放牛(n，l) 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 颠倒歌(d，t，l) 太阳从西往东落，听我唱个颠倒歌。 天上打雷没有响，地下石头滚上坡; 江里骆驼会下蛋，山里鲤鱼搭成窝; 腊月苦热直流汗，六月暴冷打哆嗦; 姐在房中手梳头，门外口袋把驴驮 白石塔(b，d，t) 白石塔，白石搭，白石搭白塔， 白塔白石搭，搭好白石塔，白塔白又大。 哥挎瓜筐过宽沟(g、k) 哥挎瓜筐过宽沟，赶快过沟看怪狗，光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 哥哥捉鸽(g、k、h) 哥哥过河捉个鸽，回家割鸽来请客，客人吃鸽称鸽肉，哥哥请客乐呵呵。 老爷堂上一面鼓(g、k、h) 老爷堂上一面鼓，鼓上一只皮老虎，皮老虎抓破了鼓，就拿块破布往上补，只见过破布补破裤，哪见过破布补破鼓 四和十(s，sh) 四和十，十和四，十四和四十，四十和十四。说好四和十得舌头和牙齿谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 石小四和史肖石(s，sh) 石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 数狮子(s，sh) 公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子? 韵母绕口令练习 普通话韵母是音节的主要成分，它的发音非常重要。单韵母只有一个音素比较简单，而复韵母和鼻韵母却有两个或三个音素，并且很多都有韵尾，要特别注意归音问题，发韵母时，要求韵腹要拉开立起，韵尾要归音到家。我们在每段绕口令题旁标有“a”、“ao”、“ang”、“ing”等韵母字样来说明此段绕口令是专门训练所标韵母的绕口令。例如《胖娃娃和蛤蟆》一段绕口令题旁标有“a”的韵母，又如《老老道小老道》一段绕口令题旁标有“ao”的韵母，就说明“a”、“ao”在练习过程中是重点训练的内容。 胖娃娃和蛤蟆(a) 一个胖娃娃，捉了三个大花活蛤蟆，三个胖娃娃，捉了一个大花活蛤蟆，捉了一个大花活蛤蟆的三个胖娃娃，真不如捉了三个大花活蛤蟆的一个胖娃娃。323. 1、太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地上石头滚上坡。江里骆驼会下蛋，山上鲤鱼搭成窝。腊月炎热直流汗，六月寒冷打哆嗦。妹照镜子头梳手，门外口袋把驴驮。 2、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？ 3、山前有只虎，山下有只猴。虎撵猴，猴斗虎；虎撵不上猴，猴斗不了虎。 4、坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？ 5、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 6、老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。 7、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 8、公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？ 9、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 10、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 11、营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来；二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 12、我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 13、四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 14、小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。 15、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 16、出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆；过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 17、你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。 18、一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 19、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 20、字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 21、长虫围着砖堆转，转完砖堆钻砖堆。 22、石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。 23、小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。 24、老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。 25、你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。 26、七加一，再减一，加完减完等于几？七加一，再减一，加完减完还是七。 27、白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 28、妈妈种麻，我去放马，马吃了麻，妈妈骂马。 29、山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 30、哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 31、早招租，晚招租，总找周邹郑曾朱。 32、石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。 33、紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 34、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 35、山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 36、三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。 37、九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，”咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 38、墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。 39、颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 40、老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 41、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 42、高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 43、磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。 44、一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 45、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 46、有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。 47、东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。 48、青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。 49、扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。 50、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。324. 黑化肥与灰化肥绕口令一 灰化肥 黑化肥 化肥会挥发 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发；灰化肥挥发会发黑 黑化肥挥发发灰会花飞；灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞；灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 黑化肥与灰化肥绕口令二 灰花飞买了个黑化肥， 黑华飞也买了个灰化肥。 灰花飞种地需要黑华飞的灰化肥 ，黑华飞种地也需要灰花飞的黑化肥 。灰花飞与灰化肥 ，黑华飞与黑化肥 。灰花飞的黑化肥， 黑华飞的灰化肥 。灰花飞要拿灰花飞的黑化肥换黑华飞买的的灰化肥，黑华飞也要拿黑华飞的灰化肥换灰花飞的黑化肥。究竟是灰花飞换了黑华飞的灰化肥，还是黑华飞换了灰花飞的黑化肥!灰花飞不是黑华飞，灰化肥不是黑化肥。灰花飞买的是黑化肥不是灰化肥 ，黑华飞买的是灰化肥不是黑化肥。黑华飞发灰变不成灰花飞，灰花飞发黑也变不成黑华飞。黑化肥可以发灰变成灰化肥， 灰化肥发黑也可以变成黑化肥。黑灰化肥与 黑华飞 与灰花飞之间的关系要认清 ! 绕口令简介 绕口令又称急口令、吃口令、拗口令等。是一种汉族传统的语言游戏，由于它是将若干双声、叠词词汇或发音相同、相近的语、词有意集中在一起，组成简单、有趣的语韵，要求快速念出，所以读起来使人感到节奏感强，妙趣横生。绕口令是汉族民间语言游戏，将声母、韵母或声调极易混同的字，组成反覆、重叠、绕口、拗口的句子，要求一口气急速念出。 特点概述 绕口令的特点是将若干双声、叠韵词汇或者发音相同、相近的语词和容易混淆的字有意集中在一起，组合成简单、有趣的韵语，形成一种读起来很绕口，但又妙趣横生的语言艺术。值得一提的是，绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、 口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。如:“山前有个严圆眼，山后有个杨眼圆，二人山前山后来比眼；不知严圆眼比杨眼圆的眼圆，还是杨眼圆比严圆眼的眼圆。”有一首《算卦的和挂蒜的》，听起来也很有韵味:“街上有个算卦的，还有一个挂蒜的。算卦的算卦，挂蒜的卖蒜。算卦的叫挂蒜的算卦，挂蒜的叫算卦的买蒜。算卦的不买挂蒜的蒜，挂蒜的也不算算卦的卦。”听罢这两段绕口令，定然会使人感到妙趣横生。325. 黑化肥绕口令 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 黑化肥绕口令带拼音 1.初入江湖： huàfãihuìhuīfā 化 肥 会 挥 发 2.小有名气： hēihuàfãifāhuī 3.名动一方： huīhuàfãifāhēi黑 化 肥 发 灰 ， 灰 化 肥 发 黑。 hēihuàfãifāhuīhuìhuīfā fāhuìfāhēi 发 会 发 黑。 4.天下闻名： huīhuàfãihuī黑 化 肥 发 灰 会 挥 发 ; 灰 化 肥 挥 hēihuàfãihuīfāfāhuīhuìhuāfēi 黑 化 肥 挥 发 发 灰 会 花 飞 ; huīhuàfãihuīfāfāhēihuìfēihuā 灰 化 肥 挥 发 发 黑 会 飞 花 。 5、一代宗师： hēihuīhuàfãihuìhuīfāfāhuīhēihuìwãihuāfēi 黑 灰 化 肥 会 挥 发 发 灰 黑 讳 为 花 飞 ; huīhēihuàfãihuìhuīfāfāhēihuīwãihuìfēihuā灰 黑 化 肥 会 挥 发 发 黑 灰 为 讳 飞 花 。 6、超凡入圣： 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 其他绕口令 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里，红鲤鱼说他家的李屡屡要比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里要比红鲤鱼家的李屡屡红，到底是红鲤鱼比绿鲤鱼的驴绿，还是绿鲤鱼比红鲤鱼的驴红。 说你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别胡炖乱炖假充会炖看炖坏了我的炖冻豆腐。 我家有个肥净白净八斤鸡，飞到张家后院里，张家后院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡，卖了他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。 出南门，面正南，有一个面铺面冲南，面铺门口挂着一个蓝布棉门帘，摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧面铺还是面冲南。 说扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。326. 扁担和板凳 bǎndèngkuāncánsīkěyǐzhīchóuzhīduànyòuchōusījīnsìliǎngxīhóngshìkěyǐzēngjiāyíngyǎngfángjìnshìshǐxiǎoshìshuōwǒshísìjīnsìliǎngxìsìliǎngxìcánsībùhuànsīxiǎosìsìshísìjīnsìliǎngxīhóngshìsīxiǎosìshuōwǒsìshísìsìshísìjīnsìliǎngxīhóngshìhuànshǐxiǎoshìshísìjīnsìliǎngxìcánsīshǐxiǎoshìshísìjīnsìshísìjīnsìliǎngxīhóngshìshǐxiǎoshìmǎileshísìjīnsìliǎngxìcánsīsīxiǎosìyàonásīxiǎosìhéshǐxiǎoshìsìyuèshísìrìshísìshísìshíshàngjíshìsīxiǎosìmǎile板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担 bǎndèngbùràngbiǎndanbǎngzàibǎndèngshàngbiǎndanchángbǎndèngbǐbiǎndankuānbiǎndanbǐbǎndèngchángbiǎndanyàobǎngzàibǎndèngshàng要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 biǎndanpiānyàobǎndèngràngbiǎndanbǎngzàibǎndèngshàng 化肥会挥发 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发;灰化肥挥发会发黑 黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 hēihuàhēihuīhuàféihuīhuìhuīfāfāhuīhēihuìwéihēihuīhuāhuìhuífēi huìhuìhuīfāfāhēihuīwéihuìfēihuāhuíhuàwéihuīhuīwéihuìfēihuāhuàwéihuīhēihuīhuàféihuīhuìhuīfāfāhuīhēihuìwéihēihuīhuāhuìfēihuīhēihuàféihuìhuìhuīfāfāhēihēihuīhuàféihuìhuīfāfāhuīhēihuìwéihuāfēihuīhēihuàféihuìhuīfāfāhēihuīwéihuìfēihuāhēihuàféihuīfāfāhuīhuìhuāfēihuīhuàféihuīfāfāhēihuìfēihuāhēihuàféifāhuīhuìhuīfāhuīhuàféihuīfāhuìfāhēihēihuàféifāhuīhuīhuàféifāhēi黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥huīhuàhuīhēihuàféi会会挥发发黑灰为讳飞花回化为灰 三山撑四水 sānshānchēngsìshuǐ shíchūn三山撑四水，四水绕三山，三山四水春常在，四水三山四sìshuǐràosānshānsānshānsìshuǐchūnchángzàisìshuǐsānshānsì时春 四和十 四是四,十是十，十四是十四，四十是四十，谁能分得清,请来试一试。 四 和 十 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头héyáchǐshuíshuōsìshíshìtādeshétouméiyònglì chángliànxíshuíshuōshísìshìsìhéshíshíhésìshísìhésìshísìshíhéshísìshuōhǎosìhéshídékàoshétoushìsìshìsìshíshìshíshísìshìshísìsìshíshìsìshíshuínéngfēndéqīngqǐngláishìyí和牙齿谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 老六放牛 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵leliùzhīhóuláilehóulǎoliùlāleliùtóuniúláilechóulǎoliùtíleliùlǒuyóuliǔlínzhènyǒugèliùhàolóuliúlǎoliùzhùzàiliùhàolóuyǒuyìtiānláileniúlǎoliùqiāntādeshétouméishēnzhírènzhēnxué了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上liúlǎoliùdeliùhàolóubànyèlǐniúdǐhóuhóudòuniúzhuàngdǎolechóulǎoliùdeyóuleyóulǎoliùbèileliùpǐchóuniúlǎoliùhóulǎoliùchóulǎoliùyóulǎoliùzhùshànglái刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，yóuhuàileyóulǎoliùdechóu油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六xǐdiàochóushàngyóushuānhǎoniúkànhǎohóuyìtóngshànglóuqùhējiǔniúlǎoliùbāngchóulǎoliùshōuqǐyóuhóulǎoliùbāngyóulǎoliù洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 酸枣子 shānshàngzhùzhesānlǎozi山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 shānxiàzhùzhesānxiǎozishānyāozhùzhesāngēsānsǎozi shānxiàsānxiǎozi山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子， 山jiègěishānxiàsānxiǎozisāndòusānshēngsuānzǎozǐzhǎoshāndāngyāosāngēsānsǎozijièsāndòusānshēngsuānzǎozǐshāndāngyāosāngēsānsǎozi当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三yòuzhǎoshānshàngsānlǎozijièsāndòusānshēngsuānzǎozǐshānshàngsānlǎozishānxiàsān小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 给shānxiàsānxiǎozijièlesāndòusānshēngsuānzǎozǐháiméiyǒusāndòusānshēngsuānzǎozǐzhǐhǎodàoshāndāngyāozhǎosāngēsānsǎozigěixiǎozi山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣zǐháileshāndāngyāosāngēsānsǎoziliǎnggèsāndòusānshēngsuānzǎozǐguòniánshānxiàsānxiǎozidǎxiàsuānzǎo子，还了山当腰三哥三嫂子，两个三斗三升酸枣子。 石小四和史肖石 石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。niánshísìdeshíxiǎosìàikànshīcíshíxiǎosìshǐxiāoshíyìtóngláidàoyuèlǎnshìshíxiǎosìniánshísìshǐxiāoshíniánsìshí年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的mángdìgěiniánshísìdeshíxiǎosìniánshísìdeshíxiǎosìjiànniánsìshídeshǐxiāoshíàikànzhǐniánsìshídeshǐxiāoshífāxiànlehǎoshīcí史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。 六十六头牛 lehǎobàozhǐmángdìgěiniánsìshídeshǐxiāoshí 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六tóuniúliùshíliùsuìdelùlǎotóugàileliùshíliùjiānlóumǎileliùshíliùlǒuyóuyǎngleliùshíliù头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六tóuniúzāileliùshíliùkēchuíyángliǔliùshíliùlǒuyóuduīzàiliùshíliùjiānlóuliùshíliù头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间kòuzàiliùshíliùkēchuíyángliǔhūrányízhènkuángfēngqǐchuīdǎoleliùshíliùjiān 楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六tóuniúlóufāndǎoleliùshíliùlǒuyóuzhéduànleliùshíliùkēchuíyángliǔzásǐleliùshíliù头牛，急煞了六十六岁的陆老头。 老六放牛 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵leliùzhīláilehóulǎoliùlāleliùtóuniúláilechóulǎoliùtíleliùlǒuyóuliǔlínzhènyǒugèliùhàolóuliúlǎoliùzhùzàiliùhàolóuyǒuyìtiānláileniúlǎoliùqiānjíshàleliùshíliùsuìdelùlǎotóu了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上liúlǎoliùdeliùhàolóubànyèlǐniúdǐhóuhóudòuniúzhuàngdǎolechóulǎoliùdeyóuleyóulǎoliùbèileliùpǐchóuniúlǎoliùhóulǎoliùchóulǎoliùyóulǎoliùzhùshànglái刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，yóuhuàileyóulǎoliùdechóu油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六xǐdiàochóushàngyóushuānhǎoniúkànhǎohóuyìtóngshànglóuqùhējiǔniúlǎoliùbāngchóulǎoliùshōuqǐyóuhóulǎoliùbāngyóulǎoliù洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 凤凰 粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰花fènghuángfěnhóngqiángshànghuàfènghuánghóngfènghuángfěnfènghuángfěnhóngfènghuánghuā凤凰。 数枣 chūdōngménguòdàqiáodàqiáoqiánmianyīshùzǎopàpèngpàobīngpàobābǎibiāobīngbēnběipōběipōpàobīngbìngpáipǎopàobīngpàbǎbiāobīngpèngbiāobīng出东门，过大桥，大桥前面一树枣，拿着竿子去打枣，青的多，红的少，一个枣，两个枣，三个枣，四个枣，五个枣，六个枣， bāgèzǎojiǔgèshígèzǎoshígèzǎojiǔgèzǎobāgèzǎoqīgèyīgèzǎoliǎnggèzǎosāngèzǎosìgèzǎowǔgèzǎoliùgèzǎonázhegānziqùdǎzǎoqīngdeduōhóngdeshǎo七个枣，八个枣，九个枣，十个枣;十个枣，九个枣，八个枣，七个zǎoqīgèzǎo枣，六个枣，五个枣，四个枣，三个枣，两个枣，一个枣，这是一gèràokǒulìngyìkǒuqìshuōwáncáisuànhǎoliùgèzǎowǔgèzǎosìgèzǎosāngèzǎoliǎnggèzǎoyīgèzǎozhèshìyī个绕口呤，一口气说完才算好。 师父四十四 shānlǐyǒugèsì山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子sìshísìdeshīfudàoshìlǐqùbànshìsānshísāndedìzǐyòngleshānwàiyǒugèshìdìzǐsānshísānshīfusìshísìsānshísāndedìzǐ在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。 瘸子 běibiānláileyīgèquézibēizheyīkǔnjuézisìshísìjiànshìyònglesìshísìxiǎoshícáixiělesānshísāngèzìsìshísìxiǎoshísìshísìdeshīfuzǒulesānshísānlǐdìzǒulesānshísānlǐdìjiùbànlezàisìlǐliànxiězì北边来了一个瘸子,背着一捆橛子。南边来了一个瘸子,背着一筐nánbianláileyīgèquézibēizheyīkuāng327. 灰化肥黑化肥绕口令 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发;灰化肥挥发会发黑 黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰 延伸阅读：绕口令2则 打南边来了个哑巴，腰里别了个喇叭; 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭; 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭; 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸; 哑巴嘀嘀哒哒吹喇叭 八十八岁公公门前有八十八棵竹， 八十八只八哥要到八十八岁公公门前的八十八棵竹上来借宿。 八十八岁公公不许八十八只八哥到八十八棵竹上来借宿， 八十八岁公公打发八十八个金弓银弹手去射杀八十八只八哥， 不许八十八只八哥到八十八岁公公门前的八十八棵竹上来借宿。328. 导语:绕口令,不仅能有效地锻炼孩子的口才,增强孩子的记忆力,还能培养孩子的反应能力。下面是无忧考网为大家精心整理的关于儿童绕口令练习大全，欢迎阅读! 小牛扣扣使劲揪， 小妞扣扣对准扣眼扣， 小牛和小妞， 谁学会了扣纽扣? 小齐吹气球，小于玩皮球。 小齐要拿气球换小于的皮球， 小于不拿皮球换小齐的气球。 黑兔和白兔， 上山采蘑菇， 小猴和小鹿， 一齐来帮助， 猴和兔，兔和鹿， 高高兴兴采蘑菇。 绿青蛙，叫呱呱， 蹦到地里看西瓜。 西瓜夸蛙唱得好， 蛙夸西瓜长得大。 有个孩子叫阿牛， 阿牛上山放老牛， 老牛哞哞叫阿牛， 阿牛回家骑老牛。 布谷鸟， 叫布谷， 布谷布谷， 忙忙碌碌， 赶快布谷。 吃菱角，剥菱壳， 菱角丢在北壁角。 不吃菱角不剥壳， 菱角不丢北壁角。 东院想栽葱， 西院想栽松。 是东院栽葱， 还是西院栽松。 天上小星星， 地上小青青。 青青看星星， 星星亮晶晶。 青青数星星， 星星数不清。 天连水，水连天。 水天一色望无边。 蓝蓝的天似绿水， 绿绿的水如蓝天。 对门田老四， 喜欢看电视。 电视里演戏， 戏里有田老师。 多多和哥哥， 坐下分果果。 哥哥让多多， 多多让哥哥， 外婆乐呵呵。 东头有个李家妞， 西头有头刘家牛， 刘家牛要吃李家豆， 李家妞赶走刘家牛。 哥哥喂蝈蝈， 蝈蝈要果果， 哥哥给果果， 蝈蝈叫哥哥。 画画的是华华， 画的是爸爸， 华华爱画爸爸爱花， 爸爸爱华华画的画。 小礼家有梨， 小丽家有李。 小礼帮小丽摘李， 小丽帮小礼摘梨。 丽丽有盒橡皮泥， 揉好泥儿捏个梨， 捏好梨儿捏狐狸， 捏了狐狸还有泥。 两个娃娃玩沙， 一个在沙上搭塔， 一个沙下挖沙， 国国和哥哥， 树下分果果。 哥哥给国国大果果， 国国把大个给哥哥。 哥哥让国国， 国国让哥哥。 都说自己要小个， 外婆见了乐呵呵。 公园有四排石狮子， 每排是十四只大石狮子， 每只大石狮子背上是一只小石狮子， 每只大石狮子脚边是四只小石狮子， 史老师领四十四个学生去数石狮子， 你说共数出多少只大石狮子和多少只小石狮子? 出八十八二十八, 八个小孩儿把萝卜拔， 你也拔，我也拔， 看谁拔得多，看谁拔得大。 你拔得不多个儿不小， 我拔得不少个儿不大。 一个萝卜一个坑儿， 算算多少用车拉， 一个加俩，俩加仨， 七十二个加十八? 拿个算盘打一打， 一百差俩九十八。 九月九， 九个酒迷喝醉酒。 九个酒杯九杯酒， 九个酒迷喝九口。 喝罢九口酒， 又倒九杯酒。 九个酒迷端起酒， “咕咚、咕咚”又九口。 九杯酒， 酒九口， 喝罢九个酒迷醉了酒。 一葫芦酒九两六， 一葫芦油六两九。 六两九的油， 要换九两六的酒， 九两六的酒， 不换六两九的油。329. 导语：绕口令是一种有趣的民间游戏。下面是无忧考网为大家精心整理的关于绕口令黑化肥会发黑，欢迎阅读! 绕口令黑化肥会发黑 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 其他绕口令： 1.鸟和猫——树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 2.小猪——小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。 3.白石塔——白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。 4.花鸭与彩霞——水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 5.四和十——四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿：谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 6.鹅过河——哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河，哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 7.颠倒歌——咬牛奶，喝面包，夹着火车上皮包。东西街，南北走，出门看见人咬狗。拿起狗来打砖头，又怕砖头咬我手。 8.兜装豆——兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 9.狗与猴——树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。 10.河里有只船——河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。 11.汤烫塔——老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 12.蚕和蝉——这是蚕，那是蝉，蚕常在叶里藏，蝉常在林里唱。 13.六十六头牛——六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 14.任命、人名——任命是任命，人名是人名，任命人名不能错，错了人名错任命。 15.枪和糠——墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。330. 导语:你听过绕口令黑化肥吗?下面是无忧考网为大家精心整理的关于绕口令黑化肥，欢迎阅读!【绕口令黑化肥】化肥会挥发。黑化肥发灰，灰化肥发黑。黑化肥发灰会挥发，灰化肥挥发会发黑。黑化肥挥发发灰会花飞，灰化肥挥发发黑会飞花。黑灰化肥会挥发发灰黑讳为花飞，灰黑化肥会挥发发黑灰为讳飞花。黑灰化肥灰会挥发发灰黑讳为黑灰花会飞，灰黑化肥会会挥发发黑灰为讳飞花化为灰。黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞，灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。【拓展阅读】【绕口令】是我国一种传统的语言游戏,又称“急口令”、“吃口令”、“拗口令”。由于它是将若干双声、叠词词汇或发音相同、相近的语、词有意集中在一起，组成简单、有趣的语韵，要求快速念出，所以读起来使人感到节奏感强，妙趣横生。绕口令是民间语言游戏，将声母、韵母或声调极易混同的字，组成反覆、重叠、绕口、拗口的句子，要求一口气急速念出。【绕口令的特点】是将若干双声、叠韵词汇或者发音相同、相近的语词和容易混淆的字有意集中在一起，组合成简单、有趣的韵语，形成一种读起来很绕口，但又妙趣横生的语言艺术。值得一提的是，绕口令是语言训练的好教材，认真练习绕口令可以使头脑反应灵活、用气自如、吐字清晰、口齿伶俐，可以避免口吃，更可作为休闲逗趣的语言游戏。如:“山前有个严圆眼，山后有个杨眼圆，二人山前山后来比眼;不知严圆眼比杨眼圆的眼圆，还是杨眼圆比严圆眼的眼圆。”有一首《算卦的和挂蒜的》，听起来也很有韵味:“街上有个算卦的，还有一个挂蒜的。算卦的算卦，挂蒜的卖蒜。算卦的叫挂蒜的算卦，挂蒜的叫算卦的买蒜。算卦的不买挂蒜的蒜，挂蒜的也不算算卦的卦。”听罢这两段绕口令，定然会使人感到妙趣横生。【绕口令的结构方式】有对偶式和一贯式两种。对偶式两句对偶，平行递进，如《四和十》:“四是四，十是十;要想说对四，舌头碰牙齿;要想说对十，舌头别伸直;要想说对四和十，多多练习十和四。”对偶式的绕口令最有名的是民间流传的绕口联，如:“童子打桐子，桐子落，童子乐;丫头啃鸭头，鸭头咸，丫头嫌。”这副绕口联同音异义，颇为绕口，实属巧对妙联。“求自在不自在，知自在自然自在;悟如来想如来，非如来如是如来。”上联下联各列出四个“自在”和“如来”，而四次出现的含义各不相同，耐人寻味。一贯式的绕口令一气呵成，环环相扣，句句深入，如:“远望一堆灰，灰上蹲个龟，龟上蹲个鬼。鬼儿无事挑担水，湿了龟的尾，龟要鬼赔龟的尾，鬼要龟赔鬼的水。”“黑化肥发灰，灰化肥发黑。黑化肥发灰会挥发，灰化肥挥发会发黑，灰化肥发黑挥发会发灰。”“一面小花鼓，鼓上画老虎。宝宝敲破鼓，妈妈拿布补，不知是布补鼓，还是布补虎。”“墙上一根钉，钉上挂条绳，滑落绳下瓶，打碎瓶下灯，砸破灯下盆。瓶打灯，灯打盆，盆骂灯，灯骂瓶，瓶骂绳，绳骂钉，钉怪绳，绳怪瓶，瓶怪灯，灯怪盆。叮叮当当当当叮，乒乒乓乓乓乓乒!”可以看出，绕口令多是诙谐而活泼，节奏感较强，富有音乐效果。有的用方言朗读更具有浓郁乡土特色，毛泽东同志生前也喜欢绕口令。有一次，他跟中南海文工团一个姓余的四川籍女兵学起了川语绕口令:“一出南门走六步，碰到六舅和六叔。好六叔，好六舅，借我六升六斗好绿豆。过了秋，再还六叔六舅六升六斗好绿豆。”川语的“六”和“绿”与“陆”音近似。毛泽东越念越感兴趣，并把“过了秋”念为“收了秋”，经此无意中一字妙改，把谷豆收获的景象体现了出来。传统的绕口令，多只注重字句的谐音，而忽视它的思想内容。如今，民间文艺工作者在创作绕口令时，注入了新的时代气息，有的具有益智助思的作用，如《数狮子》:“公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子?”念起一段不知道从哪里听来的、发人深省的绕口令:“一些事没有人做，一些人没有事做，一些没有事做的议论做事的做的事;议论做事的总是没事，一些做事的总有做不完的事，一些没有事做的不做事不碍事，一些有事做的做了事却有麻烦事;一些不做事的挖空心思惹事，让做事的做不成事，大家都不做事是不想做事的做事;做事的做不成事伤心，不做事的不做事开心。”此类的绕口令散发出一股浓烈的辛辣味，起到了鞭挞假、丑、恶，歌颂真、善、美的作用，赋予绕口令崭新内容和艺术“笑果”。 很多主持人播音员常常会以绕口令来训练自己的说话吐词。可锻炼人的说话速度，使人不结巴。331. 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰332. 1、初入江湖：化肥会挥发2、小有名气：黑化肥发灰，灰化肥发黑3、名动一方：黑化肥发灰会挥发；灰化肥挥发会发黑4、天下闻名：黑化肥挥发发灰会花飞；灰化肥挥发发黑会飞花5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞；灰黑化肥会挥发发黑灰为讳飞花6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰这就是江湖上鼎鼎大名的黑化肥绕口令全文,据说能达到天外飞仙级别的万里挑一,敢不敢挑战自己?333. 化肥会挥发 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发;灰化肥挥发会发黑 黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 {胖子和瘦子} 有个小孩叫胖子，割草丢了灰兔子。 有个小孩叫瘦子，玩水丢了花裤子。 胖子去找灰兔子，拾到一条花裤子。 瘦子去找花裤子，抓住一只灰兔子。 胖子把花裤子还给了瘦子，瘦子把灰兔子还给胖子。 一个胖子瞧见一个瘦子，一个瘦子看见一个胖子。 胖子挑着个担子，担子里放着梨子和柿子; 瘦子提着个篮子，篮子里放着罐子和盘子。 胖子走近那个瘦子，瘦子走近那个胖子。 胖子用担子撞瘦子的篮子，篮子里，罐子撞盘子，盘子撞罐子; 瘦子用篮子撞胖子的担子，担子里，梨子撞柿子，柿子撞梨子。 胖子的担子撞瘦子的篮子，没撞坏瘦子的篮子，却撞坏了篮子里的盘子和罐子; 瘦子的篮子撞胖子的担子，没撞坏胖子的担子，却撞坏了担子里的柿子和梨子。 不知是怪胖子和瘦子，还是怪胖子的担子和瘦子的篮子?反正不能怪担子里的梨子和柿子，也不能怪篮子里的罐子和盘子。334. 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥黑会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥灰会挥发发黑灰为讳飞花回化为灰335. 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 这就是江湖上鼎鼎大名的黑化肥绕口令全文,据说能达到天外飞仙级别的万里挑一,敢不敢挑战自己?336. 化肥会挥发 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发;灰化肥挥发会发黑 黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰337. 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥黑会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥灰会挥发发黑灰为讳飞花回化为灰 老龙和老农 老龙恼怒闹老农， 老农恼怒闹老龙。 农怒龙恼农更怒， 龙恼农怒龙怕农 。338. 1.初入江湖:化肥会挥发 2.小有名气:黑化肥发灰，灰化肥发黑 3.名动一方:黑化肥发灰会挥发;灰化肥挥发会发黑 4.天下闻名:黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5.一代宗师:黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6.超凡入圣:黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥灰会挥发发黑灰为 讳飞花化为灰 7.天外飞仙:黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥灰会挥发发黑灰为讳飞花回化为灰 南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。339. 1、初入江湖：化肥会挥发 2、小有名气：黑化肥发灰，灰化肥发黑 3、名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 4、天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞罚郸窜肝诃菲撮十郸姜花回化为灰340. 初入江湖：化肥会挥发 小有名气：黑化肥发灰，灰化肥发黑 名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰 喇嘛和哑巴： 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。341. 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上,板凳偏不让扁担绑在板凳上。长扁担,短扁担,长扁担比短扁担长半扁担;短扁担比长扁担短半扁担.长扁担捆在短板凳上,短扁担捆在长板凳上;长板凳不能捆比短扁担长半扁担的长扁担,短板凳也不能捆比长扁担短半扁担的短扁担。 《化肥会挥发》 1、化肥会挥发。 2、黑化肥发灰，灰化肥发黑。 3、黑化肥发灰会挥发;灰化肥挥发会发黑。 4、黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花。 5、黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花。 6、黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰。 7、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。342. 一位爷爷他姓顾，上街打醋又买布。 买了布，打了醋，回头看见鹰抓兔。 放下布，搁下醋，上前去追鹰和兔， 飞了鹰，跑了兔。打翻醋，醋湿布。 黑化肥 化肥会挥发 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发;灰化肥挥发会发黑 黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰343. 1、化肥会挥发 2、黑化肥发灰，灰化肥发黑 3、黑化肥发灰会挥发;灰化肥挥发会发黑 4、黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 5、黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 6、黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 7、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰344. 化肥会挥发 黑化肥发灰,灰化肥发黑 黑化肥发灰会挥发;灰化肥挥发会发黑 黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰天连水 天连水，水连天，水天无边波涟涟， 蓝蓝的在似绿水，绿绿的水似蓝天， 到底是天连水，还是水连天?麻子谣 麻家爷爷挑着一对麻叉口， 走到麻家婆婆的家门口。 麻家婆婆的一对麻花狗， 咬破了麻家爷爷的麻叉口， 麻家婆婆拿来麻针、麻线， 来补麻家爷爷的麻叉口。345. 黑化肥发灰，灰化肥发黑 黑化肥发灰会挥发；灰化肥挥发会发黑 黑化肥挥发发灰会花飞；灰化肥挥发发黑会飞花 黑灰化肥会挥发发灰黑讳为花飞；灰黑化肥会挥发发黑灰为讳飞花 黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰346. 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭;别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知 是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭;还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。喇嘛回家炖獭犸,哑巴嘀嘀哒哒吹喇叭 . 哥哥弟弟坡前坐，坡上卧着一只鹅，坡下流着一条河。哥哥说：宽宽的河，弟弟说：白白的鹅。鹅要过河，河要渡鹅。不知是鹅过河，还是河渡鹅。 哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 瓜棚挂瓜，瓜挂瓜棚。风刮瓜，瓜碰棚。风刮棚，棚碰瓜。 黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 “黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰347.2，八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。3，断头台倒吊短单刀，歹徒登台偷单刀，断头台塌盗跌倒，对对单刀叮当掉。 348.八百标兵奔北坡，炮兵并排北边跑。炮兵怕把标兵碰，标兵怕碰炮兵炮。寡妇马华莎，光汉贾家嘉。马华莎脸上麻，贾家嘉独眼瞎，两人登记成了家。贾家嘉不嫌马华莎麻，马华莎不嫌贾家嘉瞎.伯伯簸谷子，簸去谷秕子。婆婆簸谷子，簸去秕谷子。伯伯和婆婆，簸谷作种子。阿拉屋里有只白脚白鼻头白尾巴花白猫，隔壁大伯伯啦也有只白脚白鼻头白尾巴花白猫。阿拉个只白脚白鼻头白尾巴花白猫，去咬杀了隔壁大伯伯啦个只白脚白鼻头白尾巴花白猫。阿拉个只白脚白鼻头白尾巴花白猫，去赔给了大伯伯啦个只白脚白鼻头白尾巴花白猫，阿拉个只白脚白鼻头白尾巴花白猫白里格白养了—遭。 349.八百标兵奔北坡,炮兵并排北边跑,炮兵怕把标兵碰,标兵怕碰炮兵炮.哥哥弟弟坡前坐,坡上卧着一只鹅,坡下流着一条河,哥哥说:宽宽的河,弟弟说:白白的鹅.鹅要过河,河要渡鹅.不知是鹅过河,还是河渡鹅.嘴说腿,腿说嘴,嘴说腿爱跑腿,腿说嘴爱卖嘴.光动嘴不动腿,光动腿不动嘴,不如不长腿和嘴. 350. 八百标兵奔北坡， 炮兵并排北边跑。 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 升级版： 八了百了标了兵了奔了北了坡， 炮了兵了并了排了北了边了跑。 炮了兵了怕了把了标了兵了碰， 标了兵了怕了碰了炮了兵了炮。 2.六十六绕口令 在苏州有一个六十六条胡同口 那么住着一个六十六岁的刘老六， 他家有六十六座好高楼， 在那楼上有六十六篓桂花油， 篓上蒙着六十六匹绿皱绸， 绸上绣着六十六个大绒球， 楼底下钉着六十六根檀木轴， 在那轴上拴着六十六条大青牛， 牛旁边蹲着六十六个大马猴。 这个刘老六他坐在门口正把那牛头啃， 打南边来了这么两条狗， 两条狗抢骨头抢成仇， 碰倒了六十六座好高楼; 碰洒了六十六篓桂花油; 油了那六十六匹绿皱绸; 脏了那六十六个大绒球; 拉躺下六十六根檀木轴; 吓惊了六十六条大青牛; 吓跑了六十六个大马猴。 这正是狗啃油楼篓油漏， 狗不啃油楼篓不漏油!351.八百标兵奔北坡，炮兵并排北边跑。炮兵怕把标兵碰，标兵怕碰炮兵炮。寡妇马华莎，光汉贾家嘉。马华莎脸上麻，贾家嘉独眼瞎，两人登记成了家。贾家嘉不嫌马华莎麻，马华莎不嫌贾家嘉瞎.伯伯簸谷子，簸去谷秕子。婆婆簸谷子，簸去秕谷子。伯伯和婆婆，簸谷作种子。 352. 八百标兵奔北坡， 炮兵并排北边跑。 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 八了百了标了兵了奔了北了坡， 炮了兵了并了排了北了边了跑。 炮了兵了怕了把了标了兵了碰， 标了兵了怕了碰了炮了兵了炮。 六十六 在苏州有一个六十六条胡同口 那么住着一个六十六岁的刘老六， 他家有六十六座好高楼， 在那楼上有六十六篓桂花油， 篓上蒙着六十六匹绿皱绸， 绸上绣着六十六个大绒球， 楼底下钉着六十六根檀木轴， 在那轴上拴着六十六条大青牛， 牛旁边蹲着六十六个大马猴。 这个刘老六他坐在门口正把那牛头啃， 打南边来了这么两条狗， 两条狗抢骨头抢成仇， 碰倒了六十六座好高楼; 碰洒了六十六篓桂花油; 油了那六十六匹绿皱绸; 脏了那六十六个大绒球; 拉躺下六十六根檀木轴; 吓惊了六十六条大青牛; 吓跑了六十六个大马猴。 这正是狗啃油楼篓油漏， 狗不啃油楼篓不漏油!353. 旧版： 八百标兵奔北坡， 炮兵并排北边跑。 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 升级版： 八了百了标了兵了奔了北了坡， 炮了兵了并了排了北了边了跑。 炮了兵了怕了把了标了兵了碰， 标了兵了怕了碰了炮了兵了炮。354.哥哥挎筐过宽沟,快过宽沟看怪狗,光看怪狗瓜筐扣,瓜滚筐扣哥怪狗.八百标兵奔北坡,炮兵并排北边跑,炮兵怕把标兵碰,标兵怕碰炮兵炮.哥哥弟弟坡前坐,坡上卧着一只鹅,坡下流着一条河,哥哥说:宽宽的河,弟弟说:白白的鹅.鹅要过河,河要渡鹅.不知是鹅过河,还是河渡鹅.嘴说腿,腿说嘴,嘴说腿爱跑腿,腿说嘴爱卖嘴.光动嘴不动腿,光动腿不动嘴,不如不长腿和嘴. 355.哥哥弟弟坡前坐,坡上卧着一只鹅,坡下流着一条河,哥哥说:宽宽的河,弟弟说:白白的鹅.鹅要过河,河要渡鹅.不知是鹅过河,还是河渡鹅.嘴说腿,腿说嘴,嘴说腿爱跑腿,腿说嘴爱卖嘴.光动嘴不动腿,光动腿不动嘴,不如不长腿和嘴.夹着火车上皮包.回头一看人咬狗.拿起狗来打石头,又怕石头咬着手.断头台倒吊短单刀,歹徒登台偷单刀,断头台塌盗跌倒,对对单刀叮当掉.有个小孩叫小杜,上街打醋又买布.买了布,打了醋,回头看见鹰抓兔.放下布,搁下醋,上前去追鹰和兔,飞了鹰,跑了兔.洒了醋,湿了布. 356.八百标兵奔北坡，炮兵并排北边跑。炮兵怕把标兵碰，标兵怕碰炮兵炮。寡妇马华莎，光汉贾家嘉。马华莎脸上麻，贾家嘉独眼瞎，两人登记成了家。贾家嘉不嫌马华莎麻，马华莎不嫌贾家嘉瞎.伯伯簸谷子，簸去谷秕子。婆婆簸谷子，簸去秕谷子。伯伯和婆婆，簸谷作种子。阿拉屋里有只白脚白鼻头白尾巴花白猫，隔壁大伯伯啦也有只白脚白鼻头白尾巴花白猫。阿拉个只白脚白鼻头白尾巴花白猫，去咬杀了隔壁大伯伯啦个只白脚白鼻头白尾巴花白猫。阿拉个只白脚白鼻头白尾巴花白猫，去赔给了大伯伯啦个只白脚白鼻头白尾巴花白猫，阿拉个只白脚白鼻头白尾巴花白猫白里格白养了—遭。 357. 八百标兵奔北坡炮兵并排北边跑炮兵怕把标兵碰标兵怕碰炮兵炮 这个绕口令，虽然很常见，似乎很多人都会，但是它的生命力如此顽强，是有它的道理！这个绕口令，最练习双唇的力量，与灵活度。所以这个绕口令，每天都要练一练。日积月累，会很有帮助的！358. b-p：吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿(《葡萄皮儿》) b-p：八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。(《八百标兵》) d：会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖冻豆腐，炖坏了我的炖冻豆腐，那就吃不成我的炖冻豆腐(《炖冻豆腐》)。359.八百标兵奔北坡， 炮兵并排北边跑。 炮兵怕把标兵碰， 标兵怕碰炮兵炮。哥哥挎筐过宽沟哥哥挎筐过宽沟， 快过宽沟看怪狗。 光看怪狗瓜筐扣， 瓜滚筐扣哥怪狗。洞庭山上有根藤洞庭山上有根藤， 藤上系着小铜铃。 风吹藤动铜铃动， 风停藤静铜铃停。 360. 巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住，八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 白塔白石搭，搭好白石塔，白塔白又大。 东边庙里有个猫，西边树梢有只鸟。猫鸟天天闹，不知是猫闹树上鸟，还是鸟闹庙里猫。 高高山上有座庙，庙里住着两老道，一个年纪老，一个年纪少。庙前长着许多草，有时候老老道煎药，小老道采药;有时候小老道煎药，老老道采药。 哥哥过河捉个鸽，回家割鸽来请客，客人吃鸽称鸽肉，哥哥请客乐呵呵。 哥挎瓜筐过宽沟，赶快过沟看怪狗，光看怪狗瓜筐扣，瓜滚筐空哥怪狗。 黄花花黄黄花黄，花黄黄花朵朵黄，朵朵黄花黄又香，黄花花香向太阳。 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。361. 2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。362. 扁担宽，板凳长，扁担想绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要绑在板凳上，板凳偏偏不让扁担绑在板凳上，到底是扁担宽还是板凳长。 八百标兵奔北坡，炮兵并排北边跑。炮兵怕把标兵碰，标兵怕碰炮兵炮。 天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。 石狮寺有四十四只石狮子，不知到底是四十四只石狮子，还是四十四只死狮子。 蒋家羊杨家墙，蒋家羊撞倒了杨家墙，杨家墙压死了蒋家羊，杨家要蒋家赔墙蒋家要杨家赔羊。 前山有个严圆眼，后山有个圆眼严，两人上山来比眼，不知严圆眼的眼圆?还是圆眼严的眼圆? 一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒;九两六的酒，不换六两九的油。 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。363. 八百标兵奔北坡，炮兵并排北边跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 炮兵和步兵(b、p、m) 炮兵攻打八面坡，炮兵排排炮弹齐发射。步兵逼近八面坡，歼敌八千八百八十多。 一平盆面(b、p) 一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 巴老爷芭蕉树(b、p) 巴老爷有八十八棵芭蕉树来了八十八个把式要在巴老爷八十八棵芭蕉树下住。巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住，八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。 老六放牛 (n，l) 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒364. 【新版】：八百标兵奔北坡，北坡八百炮兵炮。 标兵怕碰炮兵炮，炮兵怕把标兵碰。 【简单版】 八百标兵奔北坡， 炮兵并排北边跑。 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 【升级版】 八了百了标了兵了奔了北了坡， 炮了兵了并了排了北了边了跑。 炮了兵了怕了把了标了兵了碰， 标了兵了怕了碰了炮了兵了炮。 【拓展阅读】 在苏州有一个六十六条胡同口 那么住着一个六十六岁的刘老六， 他家有六十六座好高楼， 在那楼上有六十六篓桂花油， 篓上蒙着六十六匹绿皱绸， 绸上绣着六十六个大绒球， 楼底下钉着六十六根檀木轴， 在那轴上拴着六十六条大青牛， 牛旁边蹲着六十六个大马猴。 这个刘老六他坐在门口正把那牛头啃， 打南边来了这么两条狗， 两条狗抢骨头抢成仇， 碰倒了六十六座好高楼; 碰洒了六十六篓桂花油; 油了那六十六匹绿皱绸; 脏了那六十六个大绒球; 拉躺下六十六根檀木轴; 吓惊了六十六条大青牛; 吓跑了六十六个大马猴。 这正是狗啃油楼篓油漏， 狗不啃油楼篓不漏油!365. 【四是四】四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 【妈妈骂马】妈妈种麻，我去放马，马吃了麻，妈妈骂马。 【八百标兵】八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 比锤——炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快?还是锤锤快比锤快锤锤得快? 【倒吊鸟】梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。366. 初入江湖：化肥会挥发 小有名气：黑化肥发灰，灰化肥发黑 名动一方：黑化肥发灰会挥发;灰化肥挥发会发黑 天下闻名：黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 一代宗师：黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花 超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰 天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰 (2)八百标兵 八百标兵奔北坡， 炮兵并排北边跑， 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 (3)看怪狗 哥哥挎筐过宽沟， 快过宽沟看怪狗， 光看怪狗瓜筐扣， 瓜滚筐扣哥怪狗。 (4)小杜 有个小孩叫小杜， 上街打醋又买布。 买了布，打了醋， 回头看见鹰抓兔。 放下布，搁下醋， 上前去追鹰和兔， 飞了鹰，跑了兔。 洒了醋，湿了布。367. 八百标兵奔北坡， 炮兵并排北边跑， 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 八百标兵奔北坡， 北坡八百炮兵炮， 标兵怕碰炮兵炮， 炮兵怕把标兵碰。 八了百了标了兵了奔了北了坡， 炮了兵了并了排了北了边了跑， 炮了兵了怕了把了标了兵了碰， 标了兵了怕了碰了炮了兵了炮。368. 【四是四】四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 【妈妈骂马】妈妈种麻，我去放马，马吃了麻，妈妈骂马。 【八百标兵】八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。 比锤——炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快?还是锤锤快比锤快锤锤得快? 【倒吊鸟】梁上两对倒吊鸟，泥里两对鸟倒吊。可怜梁上的两对倒吊鸟，惦着泥里的两对鸟倒吊，可怜泥里的两对鸟倒吊，也惦着梁上的两对倒吊鸟。 【好孩子】张家有个小英子，王家有个小柱子。张家的小英子，自己穿衣洗袜子，天天扫地擦桌子，王家的小柱子，捡到一只皮夹子，还给后院大婶子。小英子，小柱子，他们都是好孩子。369. 炮兵并排北边跑。 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 八了百了标了兵了奔了北了坡， 炮了兵了并了排了北了边了跑。 炮了兵了怕了把了标了兵了碰， 标了兵了怕了碰了炮了兵了炮。 在苏州有一个六十六条胡同口 那么住着一个六十六岁的刘老六， 他家有六十六座好高楼， 在那楼上有六十六篓桂花油， 篓上蒙着六十六匹绿皱绸， 绸上绣着六十六个大绒球， 楼底下钉着六十六根檀木轴， 在那轴上拴着六十六条大青牛， 牛旁边蹲着六十六个大马猴。 这个刘老六他坐在门口正把那牛头啃， 打南边来了这么两条狗， 两条狗抢骨头抢成仇， 碰倒了六十六座好高楼; 碰洒了六十六篓桂花油; 油了那六十六匹绿皱绸; 脏了那六十六个大绒球; 拉躺下六十六根檀木轴; 吓惊了六十六条大青牛; 吓跑了六十六个大马猴。 这正是狗啃油楼篓油漏， 狗不啃油楼篓不漏油!370. 炮兵并排北边跑。 炮兵怕把标兵碰， 标兵怕碰炮兵炮。 八了百了标了兵了奔了北了坡， 炮了兵了并了排了北了边了跑。 炮了兵了怕了把了标了兵了碰， 标了兵了怕了碰了炮了兵了炮。 关于凤凰绕口令 红凤凰，粉凤凰，红粉凤凰，粉红凤凰。 黄凤凰飞，红凤凰飞，红凤凰飞走了粉红凤凰飞。 山前住一个姓崔的，他是两条粗腿，山后住了一个姓崔的，他是两条腿粗。 “山前住的叫崔粗腿，山后住的叫崔腿粗，两人山前来比腿，也不知道崔粗腿比崔腿粗的粗腿，也不知道是崔腿粗比崔粗腿的腿粗。”371. 【导语】以下是无忧考网为大家精心整理的《》，供您查阅。 打南边来了一个喇嘛，手里提着五斤鳎(tǎ)蚂，打北边来了一个哑巴，腰里别着一个喇叭。提搂鳎蚂的喇嘛要拿鳎蚂去换别着喇叭的哑巴的喇叭，别着喇叭的哑巴不愿意拿喇叭去换提搂鳎蚂的喇嘛的鳎蚂。 提搂鳎蚂的喇嘛抡起鳎蚂就给了别着喇叭的哑巴一鳎蚂，别着喇叭的哑巴抽出喇叭就给了提搂鳎蚂的喇嘛一喇叭，也不知是提搂鳎蚂的喇嘛打了别着喇叭的哑巴，还是别着喇叭的哑巴打了提搂鳎蚂的喇嘛。 喇嘛回家炖鳎蚂，哑巴回家滴滴答答吹喇叭。 刘奶奶找牛奶奶买牛奶， 牛奶奶给刘奶奶拿牛奶， 刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶， 牛奶奶说柳奶奶的牛奶会流奶， 柳奶奶听见了大骂牛奶奶你的才会流奶， 柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶， 大骂再也不买柳奶奶和牛奶奶的牛奶。372. 【导语】以下是由无忧考网精心为大家整理的文章《》，希望能帮助到您。 打南边来了个哑巴,腰里别了个喇叭; 打北边来了个喇嘛,手里提了个獭犸. 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭; 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸. 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭; 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸. 喇嘛回家炖獭犸; 哑巴嘀嘀哒哒吹喇叭373. 喇嘛和哑巴 打南边来个喇嘛， 手里提拉着五斤鳎目。 打北边来个哑巴， 腰里别着个喇叭。 南边提拉鳎目的喇嘛要拿鳎目换北边别喇叭的哑巴的喇叭， 哑巴不乐意拿喇叭换喇嘛的鳎目， 喇嘛非要换别喇叭的哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目， 哑巴摘下喇叭打了提拉鳎目喇嘛一喇叭。 也不知提拉鳎目的喇嘛抽了别喇叭哑巴一鳎目， 也不知别喇叭哑巴打了提拉鳎目的喇嘛一喇叭。 喇嘛炖鳎目。哑巴嘀嘀哒哒吹喇叭。 扩展阅读： 盆平饼 一平盆面烙一平盆饼， 盆平饼， 饼平盆。 白拐棒棍儿 打南边来个白胡子老头儿， 手拄个绷白的白拐棒棍儿。 玲珑塔 玲珑塔， 塔玲珑， 玲珑宝塔第一层。 瘸子 北边来了一个瘸子,背着一捆橛子。 南边来了一个瘸子，背着一筐茄子。 背橛子的瘸子打了 背茄子的瘸子一橛子。 背茄子的瘸子打了 背橛子的瘸子一茄子。 小秋和小牛 小妞妞，叫小秋，梳着两个小抓鬏， 小胖胖，叫小牛，穿着一个小兜兜。 小秋帮着小牛记扣扣， 小牛帮小秋剥豆豆， 小秋、小牛手拉手， 一块儿玩，一块儿走。 胡苏夫和吴夫苏 胡庄有个胡苏夫， 吴庄有个吴夫苏。 胡庄的胡苏夫爱读诗书， 吴庄的吴夫苏爱读古书， 胡苏夫的书屋摆满了诗书， 吴夫苏的书屋放满了古书。 王婆夸瓜又夸花 王婆卖瓜又卖花， 一边卖来一边夸， 又夸花，又夸瓜， 夸瓜大，大夸花， 瓜大，花好，笑哈哈。 任命、人名 任命是任命， 人名是人名， 任命人名不能错， 错了人名错任命。 白布和白果 白布包白果， 白果恨白布， 白布打白果， 白果打白布， 不知白布打痛了白果， 还是白果打痛了白布。 小小酒盅 一只极小极小酒盅， 小小酒盅装小小酒瓶细花花雕酒， 小小酒瓶倒小小细花酒盅， 小小花雕倒不满小酒盅， 算算几个小小酒盅装几瓶小小酒瓶的细花小酒盅。374. 绕口令哑巴和喇嘛全文 打南边儿来了个喇嘛，手里提着五斤鳎目。 打北边儿来了个哑巴，腰里别着个喇叭。南边儿提溜鳎目的喇嘛， 要拿鳎目换北边儿别喇叭的哑巴的喇叭。 哑巴不乐意拿喇叭换提溜鳎目的喇嘛的鳎目， 喇嘛非要拿鳎目换别喇叭的哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭的哑巴一鳎目，哑巴摘下喇叭打了提溜鳎目的喇嘛一喇叭。 也不知是提溜鳎目的喇嘛抽了别喇叭的哑巴几鳎目， 还是别喇叭的哑巴打了提溜鳎目的喇嘛几喇叭。 只知道，喇嘛炖鳎目，哑巴滴滴答答吹喇叭。 延伸阅读：新说喇嘛和哑 从南边来了一个高高大大的喇嘛，手里提着五斤比目鱼的啦。 从北边来了一个阿巴阿巴，背上背着一个伸缩喇叭。 南边提着比目鱼的啦的高高大大的喇嘛，要拿比目鱼的啦换北边背伸缩喇叭的阿巴阿巴的伸缩喇叭。 阿巴阿巴不愿拿伸缩喇叭换高高大大的喇嘛的比目鱼的啦。 高高大大的喇嘛非要换背伸缩喇叭阿巴阿巴的伸缩喇叭。 高高大大的喇嘛抡起比目鱼的啦抽了背伸缩喇叭阿巴阿巴一比目鱼的啦，阿巴阿巴摘下伸缩喇叭打了提比目鱼的啦的高高大大的喇嘛一伸缩喇叭。也不知是提着比目鱼的啦的高高大大的喇嘛抽了背伸缩喇叭的阿巴阿巴一比目鱼的啦，还是背伸缩喇叭的阿巴阿巴打了提比目鱼的啦的高高大大的喇嘛一伸缩喇叭。 高高大大的喇叭回家炖比目鱼的啦。 阿巴阿巴滴滴答答吹伸缩喇叭。375. 喇嘛和哑巴 打南边来个喇嘛， 手里提拉着五斤鳎目。 打北边来个哑巴， 腰里别着个喇叭。 南边提拉鳎目的喇嘛要拿鳎目换北边别喇叭的哑巴的喇叭， 哑巴不乐意拿喇叭换喇嘛的鳎目， 喇嘛非要换别喇叭的哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目， 哑巴摘下喇叭打了提拉鳎目喇嘛一喇叭。 也不知提拉鳎目的喇嘛抽了别喇叭哑巴一鳎目， 也不知别喇叭哑巴打了提拉鳎目的喇嘛一喇叭。 喇嘛炖鳎目。哑巴嘀嘀哒哒吹喇叭。扩展阅读： 盆平饼 一平盆面烙一平盆饼， 盆平饼， 饼平盆。 白拐棒棍儿 打南边来个白胡子老头儿， 手拄个绷白的白拐棒棍儿。 玲珑塔 玲珑塔， 塔玲珑， 玲珑宝塔第一层。 瘸子 北边来了一个瘸子,背着一捆橛子。 南边来了一个瘸子，背着一筐茄子。 背橛子的瘸子打了 背茄子的瘸子一橛子。 背茄子的瘸子打了 背橛子的瘸子一茄子。 小秋和小牛 小妞妞，叫小秋，梳着两个小抓鬏， 小胖胖，叫小牛，穿着一个小兜兜。 小秋帮着小牛记扣扣， 小牛帮小秋剥豆豆， 小秋、小牛手拉手， 一块儿玩，一块儿走。 胡苏夫和吴夫苏 胡庄有个胡苏夫， 吴庄有个吴夫苏。 胡庄的胡苏夫爱读诗书， 吴庄的吴夫苏爱读古书， 胡苏夫的书屋摆满了诗书， 吴夫苏的书屋放满了古书。 王婆夸瓜又夸花 王婆卖瓜又卖花， 一边卖来一边夸， 又夸花，又夸瓜， 夸瓜大，大夸花， 瓜大，花好，笑哈哈。 任命、人名 任命是任命， 人名是人名， 任命人名不能错， 错了人名错任命。 白布和白果 白布包白果， 白果恨白布， 白布打白果， 白果打白布， 不知白布打痛了白果， 还是白果打痛了白布。 小小酒盅 一只极小极小酒盅， 小小酒盅装小小酒瓶细花花雕酒， 小小酒瓶倒小小细花酒盅， 小小花雕倒不满小酒盅， 算算几个小小酒盅装几瓶小小酒瓶的细花小酒盅。376. 导语:绕口令又称急口令、吃口令、拗口令等。下面是无忧考网为大家精心整理的关于绕口令喇嘛，欢迎阅读!打南边来个喇嘛，手里提拉着五斤鳎目。打北边来个哑巴，腰里别着个喇叭。南边提拉鳎目的喇嘛要拿鳎目换北边别喇叭的哑巴的喇叭，哑巴不乐意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭的哑巴的喇叭。喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉鳎目喇嘛一喇叭。也不知提拉鳎目的喇嘛抽了别喇叭哑巴一鳎目，也不知别喇叭哑巴打了提拉鳎目的喇嘛一喇叭。喇嘛炖鳎目。哑巴嘀嘀哒哒吹喇叭。一平盆面烙一平盆饼，盆平饼，饼平盆。白拐棒棍儿打南边来个白胡子老头儿，手拄个绷白的白拐棒棍儿。玲珑塔，塔玲珑，玲珑宝塔第一层。北边来了一个瘸子,背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。小妞妞，叫小秋，梳着两个小抓鬏，小胖胖，叫小牛，穿着一个小兜兜。小秋帮着小牛记扣扣，小牛帮小秋剥豆豆，小秋、小牛手拉手，一块儿玩，一块儿走。胡庄有个胡苏夫，吴庄有个吴夫苏。胡庄的胡苏夫爱读诗书，吴庄的吴夫苏爱读古书，胡苏夫的书屋摆满了诗书，吴夫苏的书屋放满了古书。王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。任命是任命，人名是人名，任命人名不能错，错了人名错任命。白布包白果，白果恨白布，白布打白果，白果打白布，不知白布打痛了白果，还是白果打痛了白布。一只极小极小酒盅，小小酒盅装小小酒瓶细花花雕酒，小小酒瓶倒小小细花酒盅，小小花雕倒不满小酒盅，算算几个小小酒盅装几瓶小小酒瓶的细花小酒盅。377.九与酒九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。天上一颗星天上一颗星，地下一块冰， 屋上一只鹰，墙上一排钉。抬头不见天上的星，乒乓乒乓踏碎地下的冰，啊嘘啊嘘赶走了屋上的鹰，唏哩唏哩拔掉了墙上的钉。 378.九与酒九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 379. 大花碗里扣个大花活蛤蟆.南边来了他大大伯子家的大搭拉尾巴耳朵狗,北边来了他二大伯子家的二搭拉尾巴耳朵狗.他大大伯家的大搭拉尾巴耳朵狗,咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗,也咬了他大大伯家的大搭拉尾巴耳朵狗一口.不知是他大大伯家的大搭拉尾巴耳朵狗,先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗,先咬了他大大伯家的大搭拉尾巴耳朵狗.喇嘛与哑巴打南边来了个哑巴,腰里别了个喇叭;打北边来了个喇嘛,手里提了个獭犸.提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭;别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸.不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭;还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸.喇嘛回家炖獭犸;哑巴嘀嘀哒哒吹喇叭 380. 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)?目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。 也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。381. 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。382. 打南边来了个喇嘛，手里提拉着五斤鳎目。打北边来了个哑巴，腰里别着个喇叭。南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。383. 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。连念七遍就聪明。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 有一个姓布，手提一块布，叁步做二步，走到双叉路，当钱一千五。又到双叉路，为看做头路。担着一担醋，顶街下街来卖醋。卖呀卖，卖到蕃薯路，看着一只免，赶紧放落醋，去追兔，掠看兔，更找无布，气看竟落裤，用裤来包兔。这只兔真不识礼数，给我咬破裤，咬到烂糊糊，真可恶，出手要掠，慢半步。赶紧放落醋，去追兔，追前追后追归哺，追一下无突好，推倒醋，啊，裤又更咬到烂糊糊，醋泼落地，沉落土，兔仔走到内山路，真真气死彼个姓布。 打南边来了个喇嘛，手里头提了五斤鳎目，从北边来了个哑巴腰里头别着个喇叭，这提了鳎目喇嘛，要拿鳎目换那别了喇叭的哑巴他的喇叭，别喇叭的哑巴不乐意拿喇叭，换那提了鳎目喇嘛他的鳎目，提鳎目喇嘛就急了，轮起了五斤鳎目打了别着喇叭的哑巴一鳎目，别喇叭的哑巴也急了，摘下喇叭打了提了鳎目喇嘛一喇叭，也不知提鳎目喇嘛，打了别着喇叭的哑巴一鳎目，还是那别着喇叭的哑巴，打了提了鳎目喇嘛一喇叭，喇嘛回家炖鳎目，哑巴站着嘀嘀嗒嗒吹喇叭。384. 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。连念七遍就聪明。天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，嗳唷嗳唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 喇嘛和哑巴 打南边来了个喇嘛，手里提拉着五斤鳎目。打北边来了个哑巴，腰里别着个喇叭。南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。385. 从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。386. 从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。387. 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)?目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。 也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 六十六头牛 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。 忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳， 砸死了六十六头牛， 急煞了六十六岁的陆老头。388. 打南边来了个哑巴，腰里别了个喇叭; 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭; 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭; 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸;哑巴嘀嘀哒哒吹喇叭. 【男旅客和女旅客】 男旅客穿着蓝上装,女旅客穿着呢大衣. 男旅客扶着拎篮子的老大娘. 女旅客搀着拿笼子的小男孩儿. 【牛郎和刘娘】 牛郎年年恋刘娘,刘娘连连念牛郎; 牛郎恋刘娘,刘娘念牛郎, 郎恋娘来娘念郎. 【教练和主力】 蓝教练是女教练， 吕教练是男教练， 蓝教练不是男教练， 吕教练不是女教练。 蓝南是男篮主力， 吕楠是女篮主力， 吕教练在男篮训练蓝南， 蓝教练在女篮训练吕楠。389. 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。 {喇嘛和哑巴2} 从南边来了个喇嘛，提拉着五斤塔嘛。 从北边来个哑吧，腰里别着个喇叭。 提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭， 别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛， 别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。 也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。 也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。 提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。390. 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。391. 打南边来了个喇嘛，手里提拉着五斤鳎目。 打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。 也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。392. 打南边来个喇嘛， 手里提拉着五斤鳎目。 打北边来个哑巴， 腰里别着个喇叭。 南边提拉鳎目的喇嘛要拿鳎目换北边别喇叭的哑巴的喇叭， 哑巴不乐意拿喇叭换喇嘛的鳎目， 喇嘛非要换别喇叭的哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目， 哑巴摘下喇叭打了提拉鳎目喇嘛一喇叭。 也不知提拉鳎目的喇嘛抽了别喇叭哑巴一鳎目， 也不知别喇叭哑巴打了提拉鳎目的喇嘛一喇叭。 喇嘛炖鳎目。哑巴嘀嘀哒哒吹喇叭。393. 从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。 出东门，过大桥，大桥前面一树枣，拿着竿子去打枣，青的多，红的少，一个枣，两个枣，三个枣，四个枣，五个枣，六个枣，七个枣，八个枣，九个枣，十个枣;十个枣，九个枣，八个枣，七个枣，六个枣，五个枣，四个枣，三个枣，两个枣，一个枣，这是一个绕口呤，一口气说完才算好。 有个懒汉本姓阮，提个篮子卖鸡卵，“卖卵”“卖卵”使劲喊，谁都不来买鸡卵，不是鸡卵品种乱，而是鸡卵皮太软。卖不出鸡卵难买饭，回家吃饭路又远，胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。394. 引导语：绕口令又称急口令、吃口令、拗口令等。下面是无忧考网为大家精心整理的关于绕口令红凤凰粉凤凰，欢迎阅读! 粉红墙上画凤凰， 凤凰画在粉红墙。 红凤凰、粉凤凰， 红粉凤凰、花凤凰。 红凤凰粉凤凰， 红粉凤凰粉红凤凰。 红凤凰粉凤凰， 红粉凤凰粉红凤凰! 小王和小黄，一块画凤凰。 小王画黄凤凰，小黄画红凤凰。 红凤凰黄凤凰，只只画成活凤凰， 望着小王和小黄。 粉红墙上画凤凰， 先画一个红凤凰， 再画一个黄凤凰， 黄凤凰上面画上红， 红凤凰上面画上黄， 红凤凰成了红黄凤凰， 黄凤凰成了黄红凤凰， 粉红墙上分不清， 哪个是红凤凰， 哪个是黄凤凰? 红凤凰， 绿凤凰， 粉红凤凰黄凤凰。 凤凰飞，飞凤凰， 凤凰山里出凤凰。 凤凰山上凤花香， 凤凰台上落凤凰。 红凤凰，蓝凤凰， 粉红凤凰黄凤凰。 凤凰落在凤凰台， 凤凰山上凤花香。 春天里，杏花黄， 奶奶给我剪凤凰。 我和妹妹手挽手， 一起来把歌儿唱： 一进门，粉白墙， 刚刚芳芳贴凤凰， 红凤凰，蓝凤凰， 粉红凤凰黄凤凰。 凤凰姊，绣凤凰， 绣个金凤凰放金光， 绣个银凤凰放银光， 绣个粉红凤凰放粉红光， 绣个红凤凰放红光， 绣个黄凤凰放黄光， 凤凰姊，绣凤凰， 绣的凤凰会放光。395. 红凤凰粉凤凰，红粉凤凰粉红凤凰。红凤凰粉凤凰，红粉凤凰粉红凤凰! 猪吃我屎，我猪吃屎 猪吃我屎，我猪吃屎，猪吃我屎，我猪吃屎，猪吃我屎，我猪吃屎，吃我屎，我吃猪屎! 肥嫩的嫩巴八斤鸡 我家有个肥嫩的嫩巴八斤鸡，飞在张家后院里，张家后院有个肥嫩的嫩巴八斤狗，咬了我肥嫩的嫩巴八斤鸡，卖了他肥嫩的嫩巴八斤狗， 赔了我肥嫩的嫩巴八斤鸡。 崔粗腿和崔腿粗 山前住的叫崔粗腿，山后住的叫崔腿粗，两人山前来比腿，也不知道崔祖腿比崔腿粗的粗腿，也不知道是崔腿粗比崔粗腿的腿粗。396. 2、早招租，晚招租，总找周邹郑曾朱。 3、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 4、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 5、大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。 6、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 7、磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 8、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 9、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 10、山前有只虎，山下有只猴。虎撵猴，猴斗虎;虎撵不上猴，猴斗不了虎。397. 粉红墙上画凤凰，凤凰画在粉红墙。红凤凰、黄凤凰，红粉凤凰花凤凰。 《缝裤缝》一条裤子八条缝，横缝上面有竖缝，缝了横缝缝竖缝，缝了竖缝缝横缝。 《化肥会挥发》化肥会挥发。黑化肥发灰，灰化肥发黑。黑化肥发灰会挥发，灰化肥挥发会发黑。黑化肥发灰挥发会花飞，灰化肥挥发发黑会飞花。398. 2、粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。 3、吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。 4、八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。399. 2、巴老爷有八十八棵芭蕉树，来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。(锻炼唇力) 3、门口吊刀，刀倒吊着。(反复说，锻炼舌的顶力) 4、门前有四辆四轮大马车，你爱拉哪两辆就拉哪两辆，拉两辆，留两辆。(反复说后两句，锻炼舌的弹力和灵活) 5、哥跨瓜筐过宽沟，快过宽沟观怪狗， 光看怪狗瓜筐扣，瓜滚筐空哥怪狗。(锻炼舌根的力量和灵活) 6、山前有个催粗腿，山后有个催腿粗， 俩人山前来比腿，不知是催粗腿比催腿粗的腿粗， 还是催腿粗比催腿粗的腿粗。 7、粉红墙上画凤凰，凤凰画在粉红墙。 红凤凰、粉凤凰，红粉凤凰花凤凰。 8、老龙恼怒闹老农，老农恼怒闹老龙。农怒龙恼农更怒，龙恼农怒龙怕农。 9、牛郎恋刘娘，刘娘恋牛郎。牛郎年年念刘娘，刘娘年年恋牛郎。郎念娘来娘恋娘 10、七巷一个漆匠，西巷一个锡匠。七巷漆匠用了西巷锡匠的锡，西巷锡匠拿了七巷漆匠的漆，巷漆匠气西巷锡匠用了漆，西巷锡匠讥七巷漆匠拿了锡。 11、化肥会挥发 12、黑化肥发灰，灰化肥发黑 13、黑化肥发灰会挥发;灰化肥挥发会发黑 14、黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花 15、黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花400. 凤凰山上凤花香，凤凰台上落凤凰。红凤凰，蓝凤凰，粉红凤凰黄凤凰。凤凰落在凤凰台，凤凰山上凤花香。凤凰山上放凤凰凤凰山上放凤凰，凤凰山下凤凰唱。碰见凤凰数凤凰，粉红凤同黄凤凰。红凤凰绿凤凰黄凤凰红凤凰，绿凤凰，粉红凤凰黄凤凰。凤凰飞，飞凤凰，凤凰山里出凤凰。小妞妞赶集小妞妞，去赶集，集上有人卖鸭梨；卖的那梨真叫甜，集上有人在卖镰；卖的那镰真叫快，集上有人在卖菜；卖的那菜真叫鲜，集上有人在卖烤烟；卖的那烟真叫好，集上有人在卖红枣；卖的那枣真叫红，集上有人卖大绳；卖的那绳真叫长，集上有人卖香糖；卖的那糖真叫香，集上有人卖鲜姜；卖的那姜真叫辣，集上有人卖年画；卖的那画真好看，集上有人卖大蒜；卖的大蒜个个大，集上有人卖红蜡；卖的那蜡真叫粗；集上有人卖小猪；小花猪，猛一叫，吓了妞妞一大跳。 401. 凤凰山上凤花香，凤凰台上落凤凰。红凤凰，蓝凤凰，粉红凤凰黄凤凰。凤凰落在凤凰台，凤凰山上凤花香。凤凰山上放凤凰凤凰山上放凤凰，凤凰山下凤凰唱。碰见凤凰数凤凰，粉红凤同黄凤凰。红凤凰绿凤凰黄凤凰红凤凰，绿凤凰，粉红凤凰黄凤凰。凤凰飞，飞凤凰，凤凰山里出凤凰。小妞妞赶集小妞妞，去赶集，集上有人卖鸭梨；卖的那梨真叫甜，集上有人在卖镰；卖的那镰真叫快，集上有人在卖菜；卖的那菜真叫鲜，集上有人在卖烤烟；卖的那烟真叫好，集上有人在卖红枣；卖的那枣真叫红，集上有人卖大绳；卖的那绳真叫长，集上有人卖香糖；卖的那糖真叫香，集上有人卖鲜姜；卖的那姜真叫辣，集上有人卖年画；卖的那画真好看，集上有人卖大蒜；卖的大蒜个个大，集上有人卖红蜡；卖的那蜡真叫粗；集上有人卖小猪；小花猪，猛一叫，吓了妞妞一大跳。李力丽黎礼立夫妻去赶集李力丽,黎礼立,夫妻双双去赶集,李力丽的丈夫黎礼立,赶集去卖竹蔑席,黎礼立的妻子李力丽,赶集去卖肥母鸡.黎礼立卖了竹蔑席买只电视机,李力丽卖了肥母鸡买件呢子衣. 402. 一条裤子七道缝，横缝上面有竖缝，缝了横缝缝竖缝，缝了竖缝缝横缝。 ② 画凤凰 粉红墙上画凤凰，红凤凰，黄凤凰，红粉凤凰花凤凰。 ③ 买卖混纺 买混纺，卖混纺，红混纺，黄混纺，粉红混纺，黄粉混纺，红粉混纺最畅销。 ④ 风吹灰飞 风吹灰飞，灰飞花上花堆灰，风吹花灰灰飞去，灰在风里飞呀飞 普通话声母难点音字词绕口令训练普通话。403. 老龙恼怒闹老农， 老农恼怒闹老龙。 农怒龙恼农更怒， 龙恼农怒龙怕农 。 牛郎和刘娘 牛郎恋刘娘 刘娘恋牛郎 牛郎年年念刘娘 刘娘年年恋牛郎 郎念娘来娘恋郎 巷漆和漆匠 七巷一个漆匠，西巷一个锡匠。 七巷漆匠用了西巷锡匠的锡， 西巷锡匠拿了七巷漆匠的漆， 七巷漆匠气西巷锡匠用了漆， 西巷锡匠讥七巷漆匠拿了锡。 红凤凰 初级 大声说20便(红凤凰) 中级 大声说20便 (粉红凤凰) 高级 大声说10便(红凤凰.黄凤凰.粉红凤凰花凤凰)404. 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵leliùzhīláilehóulǎoliùlāleliùtóuniúláilechóulǎoliùtíleliùlǒuyóuliǔlínzhènyǒugèliùhàolóuliúlǎoliùzhùzàiliùhàolóuyǒuyìtiānláileniúlǎoliùqiānjíshàleliùshíliùsuìdelùlǎotóu了六只猴;来了侯老六，拉了六头牛;来了仇老六，提了六篓油;来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上liúlǎoliùdeliùhàolóubànyèlǐniúdǐhóuhóudòuniúzhuàngdǎolechóulǎoliùdeyóuleyóulǎoliùbèileliùpǐchóuniúlǎoliùhóulǎoliùchóulǎoliùyóulǎoliùzhùshànglái刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，yóuhuàileyóulǎoliùdechóu油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六xǐdiàochóushàngyóushuānhǎoniúkànhǎohóuyìtóngshànglóuqùhējiǔniúlǎoliùbāngchóulǎoliùshōuqǐyóuhóulǎoliùbāngyóulǎoliù洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。 凤凰 粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰花fènghuángfěnhóngqiángshànghuàfènghuánghóngfènghuángfěnfènghuángfěnhóngfènghuánghuā凤凰。405. 粉红墙上画凤凰， 凤凰画在粉红墙。 红凤凰、黄凤凰， 红粉凤凰花凤凰。 《缝裤缝》 一条裤子八条缝， 横缝上面有竖缝， 缝了横缝缝竖缝， 缝了竖缝缝横缝。 《化肥会挥发》 化肥会挥发。 黑化肥发灰，灰化肥发黑。 黑化肥发灰会挥发， 灰化肥挥发会发黑。 黑化肥发灰挥发会花飞，406. 红粉凤凰粉红凤凰。 红凤凰粉凤凰， 红粉凤凰粉红凤凰! 天上七颗星， 地下七块冰， 树上七只鹰， 梁上七根钉， 台上七盏灯。 呼噜呼噜扇灭七盏灯， 噯唷噯唷拔掉七根钉， 呀嘘呀嘘赶走七只鹰， 抬起一脚踢碎七块冰， 飞来乌云盖没七颗星。 一连念七遍就聪明。407.红凤凰绿凤凰黄凤凰 红凤凰， 绿凤凰， 粉红凤凰黄凤凰。 凤凰飞，飞凤凰， 凤凰山里出凤凰。小妞妞赶集 小妞妞，去赶集， 集上有人卖鸭梨；卖的那梨真叫甜， 集上有人在卖镰；卖的那镰真叫快， 集上有人在卖菜；卖的那菜真叫鲜， 集上有人在卖烤烟；卖的那烟真叫好， 集上有人在卖红枣；卖的那枣真叫红， 集上有人卖大绳；卖的那绳真叫长， 集上有人卖香糖；卖的那糖真叫香， 集上有人卖鲜姜；卖的那姜真叫辣， 集上有人卖年画；卖的那画真好看， 集上有人卖大蒜；卖的大蒜个个大， 集上有人卖红蜡；卖的那蜡真叫粗； 集上有人卖小猪；小花猪， 猛一叫，吓了妞妞一大跳。李力丽黎礼立夫妻去赶集 李力丽,黎礼立, 夫妻双双去赶集, 李力丽的丈夫黎礼立, 赶集去卖竹蔑席, 黎礼立的妻子李力丽, 赶集去卖肥母鸡. 黎礼立卖了竹蔑席买只电视机, 李力丽卖了肥母鸡买件呢子衣. 小齐、小吉和小余跟着小鞠去赶集 小齐、小吉和小余， 跟着小鞠去赶集， 路上遇见一头小毛驴， 在嘁哩喀喳啃树皮。 小齐和小吉， 小余和小鞠， 一齐跑过去， 小齐和小吉把小毛驴送到村西饲养棚里面去。高个子矮个子穿高跟鞋 高个子穿的半高跟，矮个子穿的高高跟。 高个子不穿高高跟，比矮个子穿高高跟高半高跟， 矮个子穿上高高跟，比高个子穿半高跟还矮半高跟。 408. 一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。 任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅? 磨房磨墨，墨碎磨房一磨墨;梅香添煤，煤爆梅香两眉灰。 出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆;过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。 哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。 山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗?409. 红凤凰， 绿凤凰， 粉红凤凰黄凤凰。 凤凰飞，飞凤凰， 凤凰山里出凤凰。 凤凰山上放凤凰 凤凰山上放凤凰， 凤凰山下凤凰唱。 碰见凤凰数凤凰， 粉红凤同黄凤凰。 芳芳贴凤凰 春天里，杏花黄， 奶奶给我剪凤凰。 我和妹妹手挽手， 一起来把歌儿唱： 一进门，粉白墙， 刚刚芳芳贴凤凰， 红凤凰，蓝凤凰， 粉红凤凰黄凤凰。 凤凰姊绣凤凰 凤凰姊，绣凤凰， 绣个金凤凰放金光， 绣个银凤凰放银光， 绣个粉红凤凰放粉红光， 绣个红凤凰放红光， 绣个黄凤凰放黄光， 凤凰姊，绣凤凰， 绣的凤凰会放光。410. 小黄画5只小红凤凰 小华画5只小黄凤凰 红凤凰加黄凤凰 共有几只小凤凰 小黄画5只小红凤凰 小华画5只小黄凤凰 红凤凰加黄凤凰 共有几只小凤凰 粉红墙上画凤凰，凤凰画在粉红墙。 红凤凰、粉凤凰，红粉凤凰、花凤凰。 红凤凰,黄凤凰,红粉凤凰,粉红凤凰,花粉花凤凰。 凤凰山上凤花香 凤凰山上凤花香， 凤凰台上落凤凰。 红凤凰，蓝凤凰， 粉红凤凰黄凤凰。 凤凰落在凤凰台， 凤凰山上凤花香。411. 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 司小四和史小世四月十四日十四时四十上集市司小四买了四十四斤四两西红柿史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 粉红女买了个粉红凤凰 女粉红买了个凤凰粉红 粉红女要那女粉红的凤凰粉红 女粉红不让粉红女要拿女粉红的凤凰粉红 粉红女偏要拿女粉红的凤凰粉红 正所谓粉红红粉凤凰好 红粉粉红凤凰妙 商量片刻 粉红女想拿粉红女的粉红凤凰换女粉红买的凤凰粉红 女粉红也想拿女粉红买的凤凰粉红换粉红女买的粉红凤凰 然后 粉红女把粉红女买的粉红凤凰送给了女粉红 女粉红也把女粉红买的凤凰粉红送给了粉红女 最后粉红女回家反缝缝缝凤凰粉红 女粉红回家缝反缝缝粉红凤凰!412. 凤凰姊，绣凤凰，绣个金凤凰放金光，绣个银凤凰放银光，绣个粉红凤凰放粉红光，绣个红凤凰放红光，绣个黄凤凰放黄光，凤凰姊，绣凤凰，绣的凤凰会放光。芳芳贴凤凰春天里，杏花黄，奶奶给我剪凤凰。我和妹妹手挽手，一起来把歌儿唱：一进门，粉白墙，刚刚芳芳贴凤凰，红凤凰，蓝凤凰，粉红凤凰黄凤凰。 413. 凤凰山上凤花香，凤凰台上落凤凰。红凤凰，蓝凤凰，粉红凤凰黄凤凰。凤凰落在凤凰台，凤凰山上凤花香。凤凰山上放凤凰凤凰山上放凤凰，凤凰山下凤凰唱。碰见凤凰数凤凰，粉红凤同黄凤凰。红凤凰绿凤凰黄凤凰红凤凰，绿凤凰，粉红凤凰黄凤凰。凤凰飞，飞凤凰，凤凰山里出凤凰。 414. 凤凰姊，绣凤凰， 绣个金凤凰放金光， 绣个银凤凰放银光， 绣个粉红凤凰放粉红光， 绣个红凤凰放红光， 绣个黄凤凰放黄光， 凤凰姊，绣凤凰， 绣的凤凰会放光。415. 红凤凰， 绿凤凰， 粉红凤凰黄凤凰。 凤凰飞，飞凤凰， 凤凰山里出凤凰。 凤凰山上放凤凰 凤凰山上放凤凰， 凤凰山下凤凰唱。 碰见凤凰数凤凰， 粉红凤同黄凤凰。 芳芳贴凤凰 春天里，杏花黄， 奶奶给我剪凤凰。 我和妹妹手挽手， 一起来把歌儿唱： 一进门，粉白墙， 刚刚芳芳贴凤凰， 红凤凰，蓝凤凰， 粉红凤凰黄凤凰。416. 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿 谁说四十是“细席”， 他的舌头没用力; 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。 我知道但是你不知道，你不知道但是我知道; 我知道你不知道但是你不知道我知道; 我明知道你不知道但我还是不知道你知道不知道，你不知道我知道所以你也不知道我知道不知道; 到底谁知道谁不知道，反正我知道你就是不知道。417. 2、六叔和六舅——好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。 3、扁担和板凳——板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 4、天上七颗星——天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 5、四和十——四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿：谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。418. 2.四和十四和十十和四十四和四十四十和十四说好四和十得靠舌头和牙齿谁说四十是细席他的舌头没用力谁说十四是适时他的舌头4.没伸直认真学常练习十四、四十、四十四3.牛和柳河边一棵柳，柳下一头牛，牛要去顶柳，柳条缠牛头。4.松和钟丛岭种青松,青松挂铜钟，风行松动铜铃鸣，风停松静钟声停。5.帆船帆船翻，翻帆船，竖起桅杆撑开帆。风吹帆,，帆引船，帆船顺风转海湾。6.打铁张打铁，李打铁，打把刀，送姐姐。姐姐留我歇，我不歇，我在张家学打铁。7.实事求是知道就是知道，不知道就是不知道。不要知道说不知道，也不要不知道说知道。实事求是一定要做到，这才是不折不扣的真知道。8.牛皮好绷鼓手里起泡泡，泡里出青草，青草好饲草，牛皮好绷鼓，绷来鼓，急鼓鼓，十八夜里敲铜鼓。9.河里有只船河里有只船船上挂白帆风吹帆张船向前无风帆落停下船10.兜装豆兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。11.颠倒歌咬牛奶，喝面包，夹着火车上皮包。东西街，南北走，出门看见人咬狗。拿起狗来打砖头，又怕砖头咬我手。 419.哥哥挎筐过宽沟,快过宽沟看怪狗,光看怪狗瓜筐扣,瓜滚筐扣哥怪狗.八百标兵奔北坡,炮兵并排北边跑,炮兵怕把标兵碰,标兵怕碰炮兵炮.哥哥弟弟坡前坐,坡上卧着一只鹅,坡下流着一条河,哥哥说:宽宽的河,弟弟说:白白的鹅.鹅要过河,河要渡鹅.不知是鹅过河,还是河渡鹅. 420.打枣出东门，过大桥，大桥底下一树枣。拿着竿子去打枣，青的多，红的少：一个枣、两个枣、三个枣、四个枣、五个枣、六个枣、七个枣、八个枣、九个枣、十个枣;十个枣、九个枣、八个枣、七个枣、六个枣、五个枣、四个枣、三个枣、两个枣、一个枣。一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 421. 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿。谁说四十是”细席”，他的舌头没用力;谁说十四是”适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛还油 。422. 抬头看，满天星，低头看，一道坑。坑里看，栽满葱，葱上看，冻着冰。屋里看，点着灯，墙上看，钉的钉。钉上看，挂的弓，弓上看，卧的鹰。寒冬天，刮大风，刮散了，满天星。 墙上一根钉 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 四和十 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿，谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。423. 八只小白兔， 住在八棱八角八座屋。 八个小孩要逮八只小白兔， 吓得小白兔， 不敢再住八棱八角八座屋。 四和十 四和十，十和四，十四和四十， 四十和十四。 说好四和十得靠舌头和牙齿， 谁说四十是细席， 他的舌头没用力;谁说十四是适时， 他的舌头没伸直。认真学，常练习， 十四、四十、四十四。 424. 石斯施史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石斯施史四老师。 一班有个黄贺，二班有个王克，黄贺王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。 小牛放学去打球，踢倒老刘一瓶油，小回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛不油。 闲来没事我出城西，树木琳琅我数不齐，一二三四五六七，七六五四三二一，六五四，三二一，五四三二一，四三二一三二一，二一一，一个一，数了半天一棵树，一棵树上七个枝，七个枝。 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿。谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四四十四十四。 天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 东边大婆婆之家有一只白鼻头大白猫。西边二婆婆家也有一只白鼻头大白猫。一天东边大婆婆家的白鼻头大白猫和西边二婆婆家的白鼻头大白猫相打，也不晓得东边大婆婆家的白鼻头大白猫赢的呢?还是西边二婆婆家的白鼻头大白猫赢的? 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。 龚先生东方走来肩了一棵松，翁先生西方走来拿了一只钟。龚先生的松撞破了翁先生的钟，翁先生扭住了龚先生的一棵松。龚先生要翁先生放了他的松，翁先生要龚先生赔了他的钟。龚先生不肯赔还翁先生的钟，翁先生不肯放还龚先生的松。 谭家谭老汉，挑担到蛋摊，买了半担蛋，挑担到炭摊，买了半担炭，满担是蛋炭。老汉忙回赶，回家炒蛋饭。进门跨门槛，脚下绊一绊，跌了谭老汉，破了半担蛋，翻了半担炭，脏了木门槛。老汉看一看，急得满头汗，连说怎幺办，蛋炭完了蛋，老汉怎吃蛋炒饭。425. 水中映着彩霞， 水面游着花鸭。 霞是五彩霞， 鸭是麻花鸭。 麻花鸭游进五彩霞， 五彩霞网住麻花鸭。 乐坏了鸭， 拍碎了霞， 分不清是鸭还是霞。 四和十 四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿 谁说四十是“细席”， 他的舌头没用力; 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。426. 河里有只船河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。种南瓜东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。酒换油一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。九个酒迷喝醉酒九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，咕咚、咕咚又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 427.打枣出东门，过大桥，大桥底下一树枣。拿着竿子去打枣，青的多，红的少：一个枣、两个枣、三个枣、四个枣、五个枣、六个枣、七个枣、八个枣、九个枣、十个枣;十个枣、九个枣、八个枣、七个枣、六个枣、五个枣、四个枣、三个枣、两个枣、一个枣。一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 428. 四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿 谁说四十是细席， 他的舌头没用力; 谁说十四是适时， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。 蚕和蝉绕口令 这是蚕， 那是蝉， 蚕常在叶里藏， 蝉常在林里唱。429. 水中映着彩霞， 水面游着花鸭。 霞是五彩霞， 鸭是麻花鸭。 麻花鸭游进五彩霞， 五彩霞网住麻花鸭。 乐坏了鸭， 拍碎了霞， 分不清是鸭还是霞。 四和十 四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿 谁说四十是“细席”， 他的舌头没用力; 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。 鹅过河 哥哥弟弟坡前坐， 坡上卧着一只鹅， 坡下流着一条河， 哥哥说：宽宽的河， 弟弟说：白白的鹅。 鹅要过河， 河要渡鹅。 不知是鹅过河， 还是河渡鹅。 颠倒歌 咬牛奶，喝面包， 夹着火车上皮包。 东西街，南北走， 出门看见人咬狗。 拿起狗来打砖头， 又怕砖头咬我手。 430. 四十和四十， 十四和十四。 说好四个数字， 全靠舌头和牙齿。 谁说四十是“细席”， 他的舌头没用力; 谁说十四是“实世”， 他的舌头没伸直。 认真学，常练习， 十、四、十四、四十、四十四。 打枣 出东门， 过大桥， 大桥底下一树枣。 拿着竿子去打枣， 青的多， 红的少： 一个枣、两个枣、三个枣、四个枣、五个枣、六个枣、七个枣、八个枣、九个枣、十个枣; 十个枣、九个枣、八个枣、七个枣、六个枣、五个枣、四个枣、三个枣、两个枣、一个枣。 一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半， 六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。 给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，431. 黑化肥发灰，灰化肥发黑. 黑化肥发黑不发灰，灰化肥发灰不发黑. 南边来个老爷子， 手里拿碟子，碟子里装茄子， 一下碰上了橛子.打了碟子， 洒了茄子，摔坏了老爷子. 四和十 四是四，十是十， 十四是十四，四十是四十， 谁能分得清，请来试一试. 哥哥挎筐过宽沟， 快过宽沟看怪狗， 光看怪狗瓜筐扣， 瓜滚筐扣哥怪狗. 八百标兵奔北坡， 八百标兵奔北坡， 炮兵并排北边跑， 炮兵怕把标兵碰， 标兵怕碰炮兵炮.432. 四十和四十， 十四和十四。 说好四个数字， 全靠舌头和牙齿。 谁说四十是“细席”， 他的舌头没用力; 谁说十四是“实世”， 他的舌头没伸直。 认真学，常练习， 十、四、十四、四十、四十四。 打枣 出东门， 过大桥， 大桥底下一树枣。 拿着竿子去打枣， 青的多， 红的少： 一个枣、两个枣、三个枣、四个枣、五个枣、六个枣、七个枣、八个枣、九个枣、十个枣; 十个枣、九个枣、八个枣、七个枣、六个枣、五个枣、四个枣、三个枣、两个枣、一个枣。 一个半罐是半罐，两个半罐是一罐;三个半罐是一罐半，四个半罐是两罐;五个半罐是两罐半，六个半罐是三满罐;七个、八个、九个半罐，请你算算是多少罐。433. 小猪扛锄头， 吭哧吭哧走。 小鸟唱枝头， 小猪扭头瞅， 锄头撞石头， 石头砸猪头。 小猪怨锄头， 锄头怨猪头。 普通话绕口令-四和十 四和十，十和四， 十四和四十，四十和十四。 说好四和十得靠舌头和牙齿 谁说四十是“细席”， 他的舌头没用力; 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。 普通话绕口令-六十六头牛 六十六岁的陆老头， 盖了六十六间楼， 买了六十六篓油， 养了六十六头牛， 栽了六十六棵垂杨柳。 六十六篓油， 堆在六十六间楼; 六十六头牛， 扣在六十六棵垂杨柳。 忽然一阵狂风起， 吹倒了六十六间楼， 翻倒了六十六篓油， 折断了六十六棵垂杨柳， 砸死了六十六头牛， 急煞了六十六岁的陆老头。434. 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿谁说四十是“细席”， 他的舌头没用力; 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。 《鹅过河》 哥哥弟弟坡前坐， 坡上卧着一只鹅， 坡下流着一条河， 哥哥说：宽宽的河， 弟弟说：白白的鹅。 鹅要过河， 河要渡鹅。 不知是鹅过河， 还是河渡鹅。 《颠倒歌》 咬牛奶，喝面包， 夹着火车上皮包。 东西街，南北走， 出门看见人咬狗。 拿起狗来打砖头， 又怕砖头咬我手。 《兜装豆》 兜里装豆， 豆装满兜， 兜破漏豆。 倒出豆，补破兜， 补好兜，又装豆， 装满兜，不漏豆。 《虎、兔、鹿、猪、鼠 》 山上一只虎， 草里一只兔， 树下一只鹿， 路上一头猪， 洞中一只鼠，虎、兔、鹿、猪、鼠， 大家别说错。435. 〔捉兔〕 一位爷爷他姓顾，上街打醋又买布。买了布，打了醋，回头看见鹰抓兔。放下布，搁下醋，上前去追鹰和兔，了鹰，跑了兔。打翻醋，醋湿布。 〔四和十〕 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿 ,谁说四十是“细席”，他的舌头没用力;谁说十四是“适时”，他的舌头没伸直 〔枪和糠〕 墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙 , 〔小牛赔油〕 小牛放学去打球，踢倒老刘一瓶油，小回家取来油，向老刘道歉又赔油,老刘不要小牛还油,小牛硬要把油还给老刘，老刘夸小牛，小牛直摇头，你猜老刘让小牛还油，还是不让小牛不油436. 《四和十》 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿谁说四十是“细席”， 他的舌头没用力; 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。 《鹅过河》 哥哥弟弟坡前坐， 坡上卧着一只鹅， 坡下流着一条河， 哥哥说：宽宽的河， 弟弟说：白白的鹅。 鹅要过河， 河要渡鹅。 不知是鹅过河， 还是河渡鹅。437. 水中映着彩霞， 水面游着花鸭。 霞是五彩霞， 鸭是麻花鸭。 麻花鸭游进五彩霞， 五彩霞网住麻花鸭。 乐坏了鸭， 拍碎了霞， 分不清是鸭还是霞。四和十，十和四， 十四和四十，四十和十四。 说好四和十得*舌头和牙齿 谁说四十是“细席”， 他的舌头没用力; 谁说十四是“适时”， 他的舌头没伸直。 认真学，常练习， 十四、四十、四十四。哥哥弟弟坡前坐， 坡上卧着一只鹅， 坡下流着一条河， 哥哥说：宽宽的河， 弟弟说：白白的鹅。 鹅要过河， 河要渡鹅。 不知是鹅过河， 还是河渡鹅。 捉兔小猪白石塔 一位爷爷他姓顾， 上街打醋又买布。 买了布，打了醋， 回头看见鹰抓兔。 放下布，搁下醋， 上前去追鹰和兔， 飞了鹰，跑了兔。 打翻醋，醋湿布。小猪扛锄头， 吭哧吭哧走。 小鸟唱枝头， 小猪扭头瞅， 锄头撞石头， 石头砸猪头。 小猪怨锄头， 锄头怨猪头。白石白又滑， 搬来白石搭白塔。 白石塔， 白石塔， 白石搭石塔， 白塔白石搭。 搭好白石塔， 白塔白又滑。438. 【导语】绕口令往往能开动脑筋让我们的大脑更加的活跃，更加灵敏。这不仅仅是一种让我们感到愉悦的事情，更是一件锻炼自身的事情。以下是无忧考网为大家准备的，希望对大家有帮助。 凳宽扁担宽，板凳长。 扁担想绑在板凳上，板凳不让扁担绑在板凳上。 扁担偏要绑在板凳上，板凳偏偏不让扁担绑在那板凳上。 也不知是扁担绑在了板凳上，还是板凳绑在了扁担上。 一捆葱 东边来个小朋友叫小松，手里拿着一捆葱。 西边来个小朋友叫小丛，手里拿着小闹钟。 小松手里葱捆提松，掉在地上一些葱。 小丛忙放闹钟去拾葱，帮助小松捆紧葱。 小松夸小丛像雷锋，小丛说小松爱劳动。 小牛赔油 小牛放学去打球，踢倒老刘一瓶油， 小牛回家取来油，向老刘道歉又赔油， 老刘不要小牛还油，小牛硬要把油还给老刘， 老刘夸小牛，小牛直摇头， 你猜老刘让小牛还油，还是不让小牛还油。 送花 华华有两朵红花，红红有两朵黄花， 华华想要黄花，红红想要红花， 华华送给红红一朵红花，红红送给华华一朵黄花。 老伯 郭老伯、骆第伯、毕老伯、柏老伯，郭骆毕柏四老伯， 约着城北买菱角，买菱角阁上剥，菱角壳戳了四老伯了脚。 收葵花 葵花、蓖麻胖娃小筐手中拿，来到园中收葵花； 小华小篮身上挎，一同走进园中收蓖麻。 胖娃种的葵花花盘大，小华种的蓖麻密麻麻。 小华去帮胖娃摘葵花，胖娃去帮小华收葵花。 小华和胖娃，收了葵花、蓖麻献国家。 荷花和 一朵粉红大荷花，趴着一只活， 八朵粉红大荷花，趴着八只活*。 看花和吃瓜 妈妈爱栽花，爸爸爱种瓜；妈妈载桃花， 爸爸种西瓜；桃花红，红桃花，娃娃脸上笑哈哈 爸爸给我吃西瓜，娃娃心里乐开花。439. 2、毛毛和猫猫——毛毛有一顶红帽，猫猫有一身灰毛。毛毛要猫猫的灰毛，猫猫要毛毛的红帽，毛毛把红帽交给猫猫，猫猫给毛毛几根灰毛。 3、斗放豆——黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 4、瘸子——北边来了一个瘸子，背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。 5、天上七颗星——天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。440. 板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 八楼八角树 出城门，走八步，有棵八棱八角树。八个八哥飞上树，八棱八角树上住。树下孩子直发悉，手拿弹弓射大树。打得八哥离开树，八棱八角掉下树。 白花瓜绿青蛙 田里长着一片瓜，塘里跳出一群蛙。瓜是白花瓜，蛙是绿青蛙，白花瓜挡住绿青蛙，绿青蛙跳过白花瓜，累坏了蛙，碰坏了瓜，剩下坏瓜和累蛙。 长方歌 长方的砖，长方的墙。长方的窗，长方的床。长方的楼房亮堂堂，请你帮忙想一想，除了砖、墙、窗、床和楼房，还有什么是长方。441. 提灯笼小凤提着圆灯笼，小龙提着方灯笼。小凤的圆灯笼上画着龙，小龙的方灯笼上画着凤，小凤要拿圆龙灯笼换小龙的方凤灯笼。 442.大花碗里扣个大花活蛤蟆。南边来了他大大伯子家的大搭拉尾巴耳朵狗，北边来了他二大伯子家的二搭拉尾巴耳朵狗。他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口;他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗;还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。 443.扁但是扁的，板凳是板的。扁担不是板凳，板凳不是扁担。别把扁担说成板凳，别把板凳说成扁担。一很长扁担，一根短扁担，长扁担比短扁担长半扁担，短扁担比长扁担短半扁担。路上走着个扛短扁担的，对面来了个搬短板凳的。是扛短扁担的打搬短板凳的，还是搬短板凳的打扛短扁担的?扁但是扁的，板凳有板的。扁担扁，扁的不都是扁担，板凳板，有板的不都是板凳扁担不是板凳，板凳不是扁担，别把扁担说成板凳别把板凳说成扁担 444. 高高山上一条藤——高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 小牛赔油——小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛不油。 植树——老顾大顾和小顾,扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 扁担和板凳——板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 南南有个篮——南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。445. 板凳比扁担宽，扁担比板凳长， 扁担要绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要板凳让扁担绑在板凳上。446. 捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。447. 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担在绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。 白老八 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。448. 水中映着彩霞，水面游着花鸭。霞是五彩霞，鸭是麻花鸭。麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。 紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。 捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给兔子。 扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。449. 小牛赔油——小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛不油。 植树——老顾大顾和小顾,扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 扁担和板凳——板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 南南有个篮——南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。450. 2、妹照镜子头梳手，门外口袋把驴驮。3、妈妈种麻，我去放马，马吃了麻，妈妈骂马。4、还了山当腰三哥三嫂子，两个三斗三升酸枣子。5、山下三小子，又找山上三老子，借三斗三升酸枣子。6、老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。7、山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。8、山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子。9、山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。10、河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。11、任命是任命，人名是人名，任命人名不能错，错了人名错任命。12、给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子，13、山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子，14、高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。15、一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。16、树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。17、一只皮鞋，一只蒲鞋，皮鞋补蒲鞋，蒲鞋补皮鞋，皮鞋、蒲鞋，蒲鞋、皮鞋……18、桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。19、壁上挂只鼓，鼓里挂只虎，虎爬破了鼓，拿块布来补，是布补虎，还是布补鼓。20、多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。21、兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。22、好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。23、树上卧只猴，树下蹲条狗。猴跳下来撞了狗，狗翻起来咬住猴，不知是猴咬狗，还是狗咬猴。24、王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。25、黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。26、一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。27、瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。28、八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。29、白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。30、扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上，板凳偏不让扁担绑在板凳上。451. 板凳宽，扁担长。扁担没有板凳宽，板凳没有扁担长。扁担在绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。452. 扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担要绑在板凳上。板凳不让扁担绑在板凳上。扁担偏要绑在板凳上。板凳偏不让扁担绑在板凳上。 有个好孩子，拿张图画纸，来到石院子，学画石狮子。一天来画一次石狮子，十天来画十次石狮子。次次画石狮子，天天画石狮子，死狮子画成了活狮子。 杂志社出杂志，杂志出在杂志社，有政治常识、历史常识、写作指导、诗词注释、还有那：植树造林、治理沼泽、栽种花草、生产手册、种种杂志数十册。 石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。453. 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担在绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。 2、白老八 白老八门前栽了八颗白果树， 从北边飞来了八个白八哥儿不知在哪住。 白老八拿了八个巴达棍儿要打八个白八哥儿， 八个八哥儿飞上了八颗白果树， 不知道白老八拿这八个巴达棍儿打着了八个白八哥儿， 还是打着了八颗白果树。454. 小牛赔油——小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛不油。 植树——老顾大顾和小顾,扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 扁担和板凳——板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 南南有个篮——南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。 鸟和猫——树上一只鸟，地上一只猫。地上的猫想咬树上的鸟，树上的鸟想啄猫的毛。 蒋、墙、杨、羊——蒋家砌了一垛墙，杨家养了一只羊，杨家羊，撞塌了蒋家的墙，蒋家的墙，压死了杨家的羊，蒋家要杨家赔墙，杨家要蒋家赔羊。455. 墙上一根钉，钉上挂条绳，绳下吊个瓶，瓶下放盏灯。 掉下墙上钉，脱掉钉上绳。滑落绳下瓶，打碎瓶下灯。 瓶打灯，灯打瓶，瓶说灯，灯骂绳，瓶说绳，绳说钉，丁丁当当，乒乓乓乓。 板凳与扁担： 板凳宽，扁担长。 扁担没有板凳宽， 板凳没有扁担长。 扁担在绑在板凳上， 板凳不让扁担绑在板凳上， 扁担偏要扁担绑在板凳上。456. 打北边来了个喇嘛，手里提了个獭犸。 提着獭犸的喇嘛要拿獭犸换别着喇叭的哑巴的喇叭； 别着喇叭的哑巴不愿拿喇叭换提着獭犸的喇嘛的獭犸。 不知是别着喇叭的哑巴打了提着獭犸的喇嘛一喇叭； 还是提着獭犸的喇嘛打了别着喇叭的哑巴一獭犸。 喇嘛回家炖獭犸;哑巴嘀嘀哒哒吹喇叭. 来个老爷子，手里拿个碟子，碟子里装着茄子，一下碰上了橛子。洒了茄子，摔了老爷子。 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上,板凳偏不让扁担绑在板凳上。 长扁担,短扁担,长扁担比短扁担长半扁担;短扁担比长扁担短半扁担.长扁担捆在短板凳上,短扁担捆在长板凳上;长板凳不能捆比短扁担长半扁担的长扁担,短板凳也不能捆比长扁担短半扁担的短扁担.457.扁但是扁的，板凳是板的。扁担不是板凳，板凳不是扁担。别把扁担说成板凳，别把板凳说成扁担。一很长扁担，一根短扁担，长扁担比短扁担长半扁担，短扁担比长扁担短半扁担。路上走着个扛短扁担的，对面来了个搬短板凳的。是扛短扁担的打搬短板凳的，还是搬短板凳的打扛短扁担的? 458. 扁担是扁的，板凳是板的。扁担不是板凳，板凳不是扁担。别把扁担说成板凳，别把板凳说成扁担。扁担和板凳打架路上走着个扛短扁担的,对面来了个搬短板凳的。是扛短扁担的打搬短板凳的,还是搬短板凳的打扛短扁担的?扁担不是板凳扁担是扁的，板凳有板的。扁担扁，扁的不都是扁担，板凳板，有板的不都是板凳。扁担不是板凳，板凳不是扁担，别把扁担说成板凳，别把板凳说成扁担。 459. bǎndèngkuāncánsīkěyǐzhīchóuzhīduànyòuchōusījīnsìliǎngxīhóngshìkěyǐzēngjiāyíngyǎngfángjìnshìshǐxiǎoshìshuōwǒshísìjīnsìliǎngxìsìliǎngxìcánsībùhuànsīxiǎosìsìshísìjīnsìliǎngxīhóngshìsīxiǎosìshuōwǒsìshísìsìshísìjīnsìliǎngxīhóngshìhuànshǐxiǎoshìshísìjīnsìliǎngxìcánsīshǐxiǎoshìshísìjīnsìshísìjīnsìliǎngxīhóngshìshǐxiǎoshìmǎileshísìjīnsìliǎngxìcánsīsīxiǎosìyàonásīxiǎosìhéshǐxiǎoshìsìyuèshísìrìshísìshísìshíshàngjíshìsīxiǎosìmǎile板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担bǎndèngbùràngbiǎndanbǎngzàibǎndèngshàngbiǎndanchángbǎndèngbǐbiǎndankuānbiǎndanbǐbǎndèngchángbiǎndanyàobǎngzàibǎndèngshàng要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 biǎndanpiānyàobǎndèngràngbiǎndanbǎngzàibǎndèngshàng460. 扁担和板凳扁担是扁的，板凳是板的。扁担不是板凳，板凳不是扁担。别把扁担说成板凳，别把板凳说成扁担。扁担和板凳打架路上走着个扛短扁担的,对面来了个搬短板凳的。是扛短扁担的打搬短板凳的,还是搬短板凳的打扛短扁担的?扁担不是板凳扁担是扁的，板凳有板的。扁担扁，扁的不都是扁担，板凳板，有板的不都是板凳。扁担不是板凳，板凳不是扁担，别把扁担说成板凳，别把板凳说成扁担。 461.八斤鸡和八斤狗我家有个肥净白净八斤鸡，飞到张家后院里。张家院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。我拿他的肥净白净八斤狗赔了我的肥净白净八斤鸡。一条裤子七道缝儿一条裤子七道缝，斜缝竖缝和横缝，缝了斜缝缝竖缝，缝了竖缝缝斜缝画凤凰粉红墙上画凤凰 凤凰画在粉红墙 红凤凰、粉凤凰 红粉凤凰花凤凰 462. 2、一平盆面，烙一平盆饼，饼碰盆，盆碰饼。 3、任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。 4、山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆?463. bǎndèngkuāncánsīkěyǐzhīchóuzhīduànyòuchōusījīnsìliǎngxīhóngshìkěyǐzēngjiāyíngyǎngfángjìnshìshǐxiǎoshìshuōwǒshísìjīnsìliǎngxìsìliǎngxìcánsībùhuànsīxiǎosìsìshísìjīnsìliǎngxīhóngshìsīxiǎosìshuōwǒsìshísìsìshísìjīnsìliǎngxīhóngshìhuànshǐxiǎoshìshísìjīnsìliǎngxìcánsīshǐxiǎoshìshísìjīnsìshísìjīnsìliǎngxīhóngshìshǐxiǎoshìmǎileshísìjīnsìliǎngxìcánsīsīxiǎosìyàonásīxiǎosìhéshǐxiǎoshìsìyuèshísìrìshísìshísìshíshàngjíshìsīxiǎosìmǎile板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担 bǎndèngbùràngbiǎndanbǎngzàibǎndèngshàngbiǎndanchángbǎndèngbǐbiǎndankuānbiǎndanbǐbǎndèngchángbiǎndanyàobǎngzàibǎndèngshàng要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。 biǎndanpiānyàobǎndèngràngbiǎndanbǎngzàibǎndèngshàng464. 【导语】绕口令又称急口令、吃口令、拗口令等。是一种中国传统的语言游戏，由于它是将若干双声、叠词词汇或发音相同、相近的语、词有意集中在一起，组成简单、有趣的语韵，要求快速念出，所以读起来使人感到节奏感强，妙趣横生。以下是无忧考网为大家准备的，希望对大家有帮助。 刘奶奶找牛奶奶买牛奶, 牛奶奶给刘奶奶拿牛奶, 刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶, 牛奶奶说柳奶奶的牛奶会流奶， 柳奶奶听见了大骂牛奶奶你的才会流奶, 柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶, 大骂再也不买柳奶奶和牛奶奶的牛奶。 《石室诗士施氏》 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。(一代语言大师赵元任先生的作品) 《四和十》 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿。谁说四十是”细席”，他的舌头没用力;谁说十四是”适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 《谭家谭老汉》 谭家谭老汉，挑担到蛋摊，买了半担蛋，挑担到炭摊，买了半担炭，满担是蛋炭。老汉忙回赶，回家炒蛋饭。进门跨门槛，脚下绊一绊，跌了谭老汉，破了半担蛋，翻了半担炭，脏了木门槛。老汉看一看，急得满头汗，连说怎幺办，蛋炭完了蛋，老汉怎吃蛋炒饭。 《扁担长，板凳宽》 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上,板凳偏不让扁担绑在板凳上。长扁担,短扁担,长扁担比短扁担长半扁担;短扁担比长扁担短半扁担.长扁担捆在短板凳上,短扁担捆在长板凳上;长板凳不能捆比短扁担长半扁担的长扁担,短板凳也不能捆比长扁担短半扁担的短扁担。 《化肥会挥发》 1、化肥会挥发。 2、黑化肥发灰，灰化肥发黑。 3、黑化肥发灰会挥发;灰化肥挥发会发黑。 4、黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花。 5、黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花。 6、黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰。 7、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。 报菜名 蒸羊羔、蒸熊掌、蒸鹿尾儿、烧花鸭、烧雏鸡儿、烧子鹅、卤煮咸鸭、酱鸡、腊肉、松花、小肚儿、晾肉、香肠、什锦苏盘、熏鸡、白肚儿、清蒸八宝猪、江米酿鸭子、罐儿野鸡、罐儿鹌鹑、卤什锦、卤子鹅、卤虾、烩虾、炝虾仁儿、山鸡、兔脯、菜蟒– 银鱼、清蒸哈什蚂、烩鸭腰儿、烩鸭条儿、清拌鸭丝儿、黄心管儿、焖白鳝、焖黄鳝、豆豉鲇鱼、锅烧鲇鱼、烀皮甲鱼、锅烧鲤鱼、抓炒鲤鱼– 软炸里脊、软炸鸡、什锦套肠、麻酥油卷儿、熘鲜蘑、熘鱼脯儿、熘鱼片儿、熘鱼肚儿、醋熘肉片儿、熘白蘑、烩三鲜、炒银鱼、烩鳗鱼、清蒸火腿、炒白虾、炝青蛤、炒面鱼、炝芦笋、芙蓉燕菜、炒肝尖儿、南炒肝关儿、油爆肚仁儿、汤爆肚领儿、炒金丝、烩银丝、糖熘饹炸儿– 糖熘荸荠、蜜丝山药、拔丝鲜桃、熘南贝、炒南贝、烩鸭丝、烩散丹、清蒸鸡、黄焖鸡、大炒鸡、熘碎鸡、香酥鸡，炒鸡丁儿、熘鸡块儿、三鲜丁儿、八宝丁儿、清蒸玉兰片、炒虾仁儿、炒腰花儿、炒蹄筋儿– 锅烧海参、锅烧白菜、炸海耳、浇田鸡、桂花翅子、清蒸翅子、炸飞禽、炸葱、炸排骨、烩鸡肠肚儿、烩南荠、盐水肘花儿，拌瓤子、炖吊子、锅烧猪蹄儿、烧鸳鸯、烧百合、烧苹果、酿果藕、酿江米、炒螃蟹 瘸子和醉老爷子 打南边来了个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子的茄子，砸了瘸子的碟子，瘸子毛腰拾茄子。 打北边来了个醉老爷子，腰里掖着个烟袋别子，过来要买瘸子的茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子的茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知是老爷子的烟袋别子打了瘸子的茄子，还是瘸子用橛子打了老爷子烟袋别子。 喇嘛和哑巴 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。465. 《刘奶奶绕口令》 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶。 扩展阅读： 《石室诗士施氏》 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。(一代语言大师赵元任先生的作品) 《四和十》 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿。谁说四十是”细席”，他的舌头没用力;谁说十四是”适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 《谭家谭老汉》 谭家谭老汉，挑担到蛋摊，买了半担蛋，挑担到炭摊，买了半担炭，满担是蛋炭。老汉忙回赶，回家炒蛋饭。进门跨门槛，脚下绊一绊，跌了谭老汉，破了半担蛋，翻了半担炭，脏了木门槛。老汉看一看，急得满头汗，连说怎幺办，蛋炭完了蛋，老汉怎吃蛋炒饭。 《扁担长，板凳宽》 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上,板凳偏不让扁担绑在板凳上。长扁担,短扁担,长扁担比短扁担长半扁担;短扁担比长扁担短半扁担.长扁担捆在短板凳上,短扁担捆在长板凳上;长板凳不能捆比短扁担长半扁担的长扁担,短板凳也不能捆比长扁担短半扁担的短扁担。 《化肥会挥发》 1、化肥会挥发。 2、黑化肥发灰，灰化肥发黑。 3、黑化肥发灰会挥发;灰化肥挥发会发黑。 4、黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花。 5、黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花。 6、黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰。 7、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。 《喇嘛和哑巴》 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)?目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。 也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。466. 刘奶奶绕口令 刘奶奶找牛奶奶买榴莲牛奶， 牛奶奶给刘奶奶拿榴莲牛奶， 刘奶奶说牛奶奶的榴莲牛奶不如柳奶奶的榴莲牛奶， 牛奶奶说柳奶奶的榴莲牛奶会流奶， 柳奶奶听见了痛骂牛奶奶你的榴莲牛奶才会流奶。 柳奶奶和牛奶奶泼榴莲牛奶吓坏了刘奶奶。 刘奶奶找牛奶奶买牛奶, 牛奶奶给刘奶奶拿牛奶, 刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶, 牛奶奶说柳奶奶的牛奶会流奶, 柳奶奶听见了痛骂牛奶奶你的才会流奶, 柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶, 痛骂再也不买柳奶奶和牛奶奶的牛奶扩展阅读： 绕口令《天上看，满天星》 天上看，满天星;地下看，有个坑;坑里看，有盘冰。坑外长着—老松，松上落着一只鹰，松下坐着一老衲，僧前放着—部经，经前点着一盏灯，墙上钉着一根钉，钉上挂着一张弓。说起风，就起风，刮得男女老小难把眼睛睁。刮散了天上的星，刮平了地的坑，刮化了坑里的冰，刮倒了坑外的松，刮飞了松上的鹰，刮走了松下的僧，刮乱了僧前的经，刮灭了经前的灯，刮失落了墙上的钉，刮翻了钉上的弓。 绕口令《瘸子和矬子》 小山屋南面来了个瘸子，腰里别着个橛子，北边来了个矬子，肩上挑着担茄子。别橛子的瘸子要用橛子换挑茄子的矬子的茄子，挑茄子的矬子不给别橛子的瘸子茄子。别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子，挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 绕口令《演员屈服》 男演员穿蓝屈服，女演员穿棉屈服。蓝屈服是棉屈服，棉屈服是蓝屈服。男演员穿蓝棉屈服，女演员穿棉蓝屈服。 绕口令《提灯笼绕口令》 提灯笼小凤提着圆灯笼，小龙提着方灯笼。小凤的圆灯笼上画着龙，小龙的方灯笼上画着凤，小凤要拿圆龙灯笼换小龙的方凤灯笼。467. 《刘奶奶绕口令》 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶。 《石室诗士施氏》 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。(一代语言大师赵元任先生的作品) 《四和十》 四和十，十和四，十四和四十，四十和十四。 说好四和十得靠舌头和牙齿。谁说四十是”细席”，他的舌头没用力; 谁说十四是”适时”，他的舌头没伸直。 认真学，常练习，十四、四十、四十四。 《谭家谭老汉》 谭家谭老汉，挑担到蛋摊，买了半担蛋，挑担到炭摊，买了半担炭，满担是蛋炭。老汉忙回赶，回家炒蛋饭。进门跨门槛，脚下绊一绊，跌了谭老汉，破了半担蛋，翻了半担炭，脏了木门槛。老汉看一看，急得满头汗，连说怎幺办，蛋炭完了蛋，老汉怎吃蛋炒饭。 《扁担长，板凳宽》 扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽。扁担要绑在板凳上,板凳偏不让扁担绑在板凳上。长扁担,短扁担,长扁担比短扁担长半扁担;短扁担比长扁担短半扁担.长扁担捆在短板凳上,短扁担捆在长板凳上;长板凳不能捆比短扁担长半扁担的长扁担,短板凳也不能捆比长扁担短半扁担的短扁担。 《化肥会挥发》 1、化肥会挥发。 2、黑化肥发灰，灰化肥发黑。 3、黑化肥发灰会挥发;灰化肥挥发会发黑。 4、黑化肥挥发发灰会花飞;灰化肥挥发发黑会飞花。 5、黑灰化肥会挥发发灰黑讳为花飞;灰黑化肥会挥发发黑灰为讳飞花。 6、黑灰化肥灰会挥发发灰黑讳为黑灰花会飞;灰黑化肥会会挥发发黑灰为讳飞花化为灰。 7、黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞;灰化灰黑化肥会挥发发黑灰为讳飞花回化为灰。 《喇嘛和哑巴》 打南边来了个喇嘛，手里提拉着五斤鳎(tǎ)?目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。 哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。 喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。 也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。468. 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。 六十六篓油，堆在六十六间楼;六十六头牛，扣在六十六棵垂杨柳。 忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。469. 牛奶奶给刘奶奶拿榴莲牛奶，刘奶奶说牛奶奶的榴莲牛奶不如柳奶奶的榴莲牛奶，牛奶奶说柳奶奶的榴莲牛奶会流奶，柳奶奶听见了痛骂牛奶奶你的榴莲牛奶才会流奶。柳奶奶和牛奶奶泼榴莲牛奶吓坏了刘奶奶。 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶,柳奶奶听见了痛骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,痛骂再也不买柳奶奶和牛奶奶的牛奶470. 版本二：刘奶奶找牛奶奶买牛奶，牛奶奶给刘奶奶拿牛奶，刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶，牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶，柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶，大骂再也不买柳奶奶和牛奶奶的牛奶。471. 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶。472. 刘奶奶找牛奶奶买榴莲牛奶， 牛奶奶给刘奶奶拿榴莲牛奶， 刘奶奶说牛奶奶的榴莲牛奶不如柳奶奶的榴莲牛奶， 牛奶奶说柳奶奶的榴莲牛奶会流奶， 柳奶奶听见了痛骂牛奶奶你的榴莲牛奶才会流奶。 柳奶奶和牛奶奶泼榴莲牛奶吓坏了刘奶奶。 刘奶奶找牛奶奶买牛奶, 牛奶奶给刘奶奶拿牛奶, 刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶, 牛奶奶说柳奶奶的牛奶会流奶, 柳奶奶听见了痛骂牛奶奶你的才会流奶, 柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶, 痛骂再也不买柳奶奶和牛奶奶的牛奶473. 版本二：刘奶奶找牛奶奶买牛奶，牛奶奶给刘奶奶拿牛奶，刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶，牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶，柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶，大骂再也不买柳奶奶和牛奶奶的牛奶。474. 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶。 《石室诗士施氏》 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。(一代语言大师赵元任先生的作品) 《四和十》 四和十，十和四，十四和四十，四十和十四。 说好四和十得靠舌头和牙齿。谁说四十是”细席”，他的舌头没用力; 谁说十四是”适时”，他的舌头没伸直。 认真学，常练习，十四、四十、四十四。475. 试试吃吃此十翅，吃此十翅是翅痴。次次吃翅吃十翅，三种鸡翅翅翅吃! 刘奶奶和牛奶奶刘奶奶找牛奶奶买榴莲牛奶，牛奶奶给刘奶奶拿榴莲牛奶，刘奶奶说牛奶奶的榴莲牛奶不如柳奶奶的榴莲牛奶，牛奶奶说柳奶奶的榴莲牛奶会流奶，柳奶奶听见了大骂牛奶奶你的榴莲牛奶才会流奶。柳奶奶和牛奶奶泼榴莲牛奶吓坏了刘奶奶。476. 刘奶奶找牛奶奶买牛奶， 牛奶奶给刘奶奶拿牛奶， 刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶， 牛奶奶说柳奶奶的牛奶会流奶， 柳奶奶听见了大骂牛奶奶你的才会流奶， 柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶， 大骂再也不买柳奶奶和牛奶奶的牛奶。 《上山下山》 上一山，下一山， 跑了三里三米三， 登了一座大高山， 山高海拔三百三。 上了山，大声喊： 我比山高三尺三。477. 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶478. 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶 【绕口令：小碗碗和大碗碗】 小碗碗的绿豆汤、芝麻糕、云片糕， 还有大碗碗的莲子、红枣、桂圆汤。479. 刘奶奶找牛奶奶买榴莲牛奶，牛奶奶给刘奶奶拿榴莲牛奶，刘奶奶说牛奶奶的榴莲牛奶不如柳奶奶的榴莲牛奶，牛奶奶说柳奶奶的榴莲牛奶会流奶，柳奶奶听见了痛骂牛奶奶你的榴莲牛奶才会流奶。柳奶奶和牛奶奶泼榴莲牛奶吓坏了刘奶奶。 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶,柳奶奶听见了痛骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,痛骂再也不买柳奶奶和牛奶奶的牛奶 绕口令是我们生产中进修中乡村碰见的一种言语体式格局，有良多绕口令长短常有心思也长短常可笑的，牛奶奶和刘奶奶的绕口令也是一度成为网友们都比拟热衷的绕口令。下面小编就为你清点了一些绕口令，这些绕口令绝对爆笑网络，那么牛奶奶和刘奶奶绕口令你能说若干句呢？480. 刘奶奶找牛奶奶买榴莲牛奶，牛奶奶给刘奶奶拿榴莲牛奶，刘奶奶说牛奶奶的榴莲牛奶不如柳奶奶的榴莲牛奶，牛奶奶说柳奶奶的榴莲牛奶会流奶，柳奶奶听见了痛骂牛奶奶你的榴莲牛奶才会流奶。柳奶奶和牛奶奶泼榴莲牛奶吓坏了刘奶奶。 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶,柳奶奶听见了痛骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,痛骂再也不买柳奶奶和牛奶奶的牛奶481. 刘奶奶找牛奶奶买榴莲牛奶，牛奶奶给刘奶奶拿榴莲牛奶，刘奶奶说牛奶奶的榴莲牛奶不如柳奶奶的榴莲牛奶，牛奶奶说柳奶奶的榴莲牛奶会流奶，柳奶奶听见了大骂牛奶奶你的榴莲牛奶才会流奶。柳奶奶和牛奶奶泼榴莲牛奶吓坏了刘奶奶。 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶,柳奶奶听见了大骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶 演员制服 男演员穿蓝制服，女演员穿棉制服。蓝制服是棉制服，棉制服是蓝制服。男演员穿蓝棉制服，女演员穿棉蓝制服。482. 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里，红鲤鱼说他家的李屡屡要比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里要比红鲤鱼家的李屡屡红，到底是红鲤鱼比绿鲤鱼的驴绿，还是绿鲤鱼比红鲤鱼的驴红。 刘奶奶 刘奶奶找牛奶奶买榴莲牛奶，牛奶奶给刘奶奶拿榴莲牛奶，刘奶奶说牛奶奶的榴莲牛奶不如柳奶奶的榴莲牛奶，牛奶奶说柳奶奶的榴莲牛奶会流奶，柳奶奶听见了大骂牛奶奶你的榴莲牛奶才会流奶。柳奶奶和牛奶奶泼榴莲牛奶吓坏了刘奶奶。 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶,刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶,牛奶奶说柳奶奶的牛奶会流奶,柳奶奶听见了大骂牛奶奶你的才会流奶,柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶。483. 刘奶奶找牛奶奶买牛奶， 牛奶奶给刘奶奶拿牛奶， 刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶， 牛奶奶说柳奶奶的牛奶会流奶， 柳奶奶听见了大骂牛奶奶你的才会流奶， 柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶， 大骂再也不买柳奶奶和牛奶奶的牛奶。484. 刘奶奶找牛奶奶买牛奶,牛奶奶给刘奶奶拿牛奶, 刘奶奶说牛奶奶的牛奶不如柳奶奶的牛奶, 牛奶奶说柳奶奶的牛奶会流奶，柳奶奶听见了大骂牛奶奶你的才会流奶, 柳奶奶和牛奶奶泼牛奶吓坏了刘奶奶,大骂再也不买柳奶奶和牛奶奶的牛奶。 翘舌音、平舌音、练习(1) 1、天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。 2、三山屹四水，四水绕三山;三山四水春常在，四水三山四时春。 3、长虫围着砖堆转，转完砖堆钻砖堆。 4、师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。 5、早招租，晚招租，总找周邹郑曾朱。485. 导语：红鲤鱼与绿鲤鱼与驴绕口令是最难的绕口令，无忧考网为大家精心搜集了一篇“红鲤鱼与绿鲤鱼与驴绕口令”，欢迎大家参考借鉴，希望可以帮助到大家！ 您能快速念出来吗?大陆网路最近疯传一段号称「最难绕口令」，其中「红鲤鱼与绿鲤鱼与驴」这短短9个字，就让不少网友直呼投降，「饶了我吧」、「舌头打结了啦」。 其实不只这9个字，还有所谓的进阶版，「红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里，红鲤鱼说他家的李屡屡要比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里要比红鲤鱼家的李屡屡红，不只是红鲤鱼比绿鲤鱼的驴绿，还是绿鲤鱼比红鲤鱼的驴红。」 根据大陆网友上传的自拍影片，有不少人在「红鲤鱼与绿鲤鱼与驴」这句话就卡住;但也有人流畅地、一字不差念完整段绕口令;还有人成功挑战自己创立的「混搭版」。 广西壮族自治区爱吃红鲤鱼与绿鲤鱼与驴的出租车司机拉着苗族土家族自治州爱喝自制柳奶奶榴莲牛奶的的骨质疏松症患者遇见别着哑巴的喇叭提拉鳎目的喇嘛打败咬死了山前四十四棵死涩柿子树的四十四只石狮子之后终于跑出番帮官方网站摄制组到民族医院就医。 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里，红鲤鱼说他家的李屡屡比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里比红鲤鱼家的李屡屡红，不知是绿鲤鱼比红鲤鱼的驴红，还是红鲤鱼比绿鲤鱼的驴绿!486. 说你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别胡炖乱炖假充会炖看炖坏了我的炖冻豆腐。 我家有个肥净白净八斤鸡，飞到张家后院里，张家后院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡，卖了他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。 出南门，面正南，有一个面铺面冲南，面铺门口挂着一个蓝布棉门帘，摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧面铺还是面冲南。 说扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。487. 说你会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，别胡炖乱炖假充会炖看炖坏了我的炖冻豆腐。 我家有个肥净白净八斤鸡，飞到张家后院里，张家后院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡，卖了他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。 出南门，面正南，有一个面铺面冲南，面铺门口挂着一个蓝布棉门帘，摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧面铺还是面冲南。 说扁担长，板凳宽，板凳没有扁担长，扁担没有板凳宽，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。488. 绿鲤鱼家有头小红驴叫吕里里 红鲤鱼说他家的李屡屡要比绿鲤鱼家的吕里里绿 绿鲤鱼说他家的吕里里要比红鲤鱼家的李屡屡红 不知是红鲤鱼比绿鲤鱼的驴绿 还是绿鲤鱼比红鲤鱼的驴红489. 初级版： 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里，红鲤鱼说他家的李屡屡比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里比红鲤鱼家的李屡屡红，不知是绿鲤鱼比红鲤鱼的驴红，还是红鲤鱼比绿鲤鱼的驴绿! 学会了这个你就可以是一个初级绕口令小能手了! 丧心病狂版：广西壮族自治区爱吃红鲤鱼与绿鲤鱼与驴的出租车司机拉着苗族土家族自治州爱喝自制柳奶奶榴莲牛奶的的骨质疏松症患者遇见别着哑巴的喇叭提拉鳎目的喇嘛打败咬死了山前四十四棵死涩柿子树的四十四只石狮子之后终于跑出番帮官方网站摄制组到民族医院就医。 这个丧心病狂版的估计就要傻眼了! 终极变态版：吕小绿家养了红鲤鱼绿鲤鱼和驴。李小莉家养了红驴绿驴和鲤鱼。吕小绿家的红鲤鱼绿鲤鱼和驴要跟李小莉家的红驴绿驴和鲤鱼比一比谁更红谁更绿。吕小绿说他家的绿鲤鱼比李小莉家的绿驴绿，李小莉说她家的绿驴比吕小绿家的绿鲤鱼绿。也不知是吕小绿家的绿鲤鱼比李小莉家的绿驴绿，还是李小莉家的绿驴比吕小绿家的绿鲤鱼绿。绿鲤鱼比绿驴，绿驴比绿鲤鱼。最后，吕小绿要拿绿鲤鱼换李小莉的绿驴，李小莉不愿意用绿驴换吕小绿的绿鲤鱼。红鲤鱼绿鲤鱼和驴，红驴绿驴和鲤鱼。不知是绿鲤鱼比绿驴绿还是绿驴比绿鲤鱼绿。490. 吕小绿家养了红鲤鱼绿鲤鱼和驴。 李小莉家养了红驴绿驴和鲤鱼。 吕小绿家的红鲤鱼绿鲤鱼和驴要跟李小莉家的红驴绿驴和鲤鱼比一比谁更红谁更绿。 吕小绿说他家的绿鲤鱼比李小莉家的绿驴绿，李小莉说她家的绿驴比吕小绿家的绿鲤鱼绿。 也不知是吕小绿家的绿鲤鱼比李小莉家的绿驴绿，还是李小莉家的绿驴比吕小绿家的绿鲤鱼绿。 绿鲤鱼比绿驴，绿驴比绿鲤鱼。最后，吕小绿要拿绿鲤鱼换李小莉的绿驴，李小莉不愿意用绿驴换吕小绿的绿鲤鱼。 红鲤鱼绿鲤鱼和驴，红驴绿驴和鲤鱼。 不知是绿鲤鱼比绿驴绿还是绿驴比绿鲤鱼绿。491. 红鲤鱼家有头小绿驴叫李屡屡， 绿鲤鱼家有头小红驴叫吕里里， 红鲤鱼说他家的李屡屡要比绿鲤鱼家的吕里里绿， 绿鲤鱼说他家的吕里里要比红鲤鱼家的李屡屡红， 到底是红鲤鱼比绿鲤鱼的驴绿， 还是绿鲤鱼比红鲤鱼的驴红。 【红鲤鱼与绿鲤鱼的绕口令二】 吕小绿家养了红鲤鱼绿鲤鱼和驴, 李小莉家养了红驴绿驴和鲤鱼. 吕小绿说他家的绿鲤鱼比李小莉家绿驴绿, 李小莉说她家的绿驴比吕小绿家的绿鲤鱼绿. 也不知是吕小绿家的绿鲤鱼比李小莉家的绿驴绿, 还是李小莉家的绿驴比吕小绿家的绿鲤鱼绿.绿鲤鱼比绿驴, 绿驴比绿鲤鱼,不知是绿鲤鱼比绿驴绿还是绿驴比绿鲤鱼绿492. 红鲤鱼家有头小绿驴叫李屡屡， 绿鲤鱼家有头小红驴叫吕里里， 红鲤鱼说他家的李屡屡要比绿鲤鱼家的吕里里绿， 绿鲤鱼说他家的吕里里要比红鲤鱼家的李屡屡红， 不只是红鲤鱼比绿鲤鱼的驴绿， 还是绿鲤鱼比红鲤鱼的驴红! 《石室诗士施氏》 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏拭室。氏始试食十狮尸。食时，始识十狮尸，实是十石狮尸。试释是事。(一代语言大师赵元任先生的作品)493. 红鲤鱼家有头小绿驴叫李屡屡， 绿鲤鱼家有头小红驴叫吕里里， 红鲤鱼说他家的李屡屡要比绿鲤鱼家的吕里里绿， 绿鲤鱼说他家的吕里里要比红鲤鱼家的李屡屡红， 不只是红鲤鱼比绿鲤鱼的驴绿， 还是绿鲤鱼比红鲤鱼的驴红!494. 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里， 红鲤鱼说他家的李屡屡比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里比红鲤鱼家的李屡屡红， 不知是绿鲤鱼比红鲤鱼的驴红，还是红鲤鱼比绿鲤鱼的驴绿! 红鲤鱼与绿鲤鱼与驴高难度版 广西壮族自治区爱吃红鲤鱼与绿鲤鱼与驴的出租车司机拉着苗族土家族自治州爱喝自制柳奶奶榴莲牛奶的的骨质疏松症患者遇见别着哑巴的喇叭提拉鳎目的喇嘛打败咬死了山前四十四棵死涩柿子树的四十四只石狮子之后终于跑出番帮官方网站摄制组到民族医院就医。495. 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里， 红鲤鱼说他家的李屡屡比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里比红鲤鱼家的李屡屡红， 不知是绿鲤鱼比红鲤鱼的驴红，还是红鲤鱼比绿鲤鱼的驴绿! 红鲤鱼与绿鲤鱼与驴高难度版 广西壮族自治区爱吃红鲤鱼与绿鲤鱼与驴的出租车司机拉着苗族土家族自治州爱喝自制柳奶奶榴莲牛奶的的骨质疏松症患者遇见别着哑巴的喇叭提拉鳎目的喇嘛打败咬死了山前四十四棵死涩柿子树的四十四只石狮子之后终于跑出番帮官方网站摄制组到民族医院就医。496. 红鲤鱼说他家的李屡屡要比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里要比红鲤鱼家的李屡屡红， 到底是红鲤鱼比绿鲤鱼的驴绿，还是绿鲤鱼比红鲤鱼的驴红。 说你会炖我的炖冻豆腐，来炖我的炖冻豆腐， 不会炖我的炖冻豆腐，别胡炖乱炖假充会炖看炖坏了我的炖冻豆腐。 我家有个肥净白净八斤鸡，飞到张家后院里， 张家后院有个肥净白净八斤狗，咬了我的肥净白净八斤鸡， 卖了他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。 出南门，面正南，有一个面铺面冲南， 面铺门口挂着一个蓝布棉门帘，摘了蓝布棉门帘， 看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧面铺还是面冲南。 说扁担长，板凳宽，板凳没有扁担长， 扁担没有板凳宽，扁担要绑在板凳上， 板凳不让扁担绑在板凳上，扁担偏要扁担绑在板凳上。497. 广西壮族自治区爱吃红鲤鱼与绿鲤鱼与驴的出租车司机拉着苗族土家族自治州爱喝自制柳奶奶榴莲牛奶的的骨质疏松症患者遇见别着哑巴的喇叭提拉鳎目的喇嘛打败咬死了山前四十四棵死涩柿子树的四十四只石狮子之后终于跑出番帮官方网站摄制组到民族医院就医。498. 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里， 红鲤鱼说他家的李屡屡比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里比红鲤鱼家的李屡屡红， 不知是绿鲤鱼比红鲤鱼的驴红，还是红鲤鱼比绿鲤鱼的驴绿!499. 广西壮族自治区爱吃红鲤鱼与绿鲤鱼与驴的出租车司机拉着苗族土家族自治州爱喝自制柳奶奶榴莲牛奶的的骨质疏松症患者遇见别着哑巴的喇叭提拉鳎目的喇嘛打败咬死了山前四十四棵死涩柿子树的四十四只石狮子之后终于跑出番帮官方网站摄制组到民族医院就医。 绕口令版本二 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里，红鲤鱼说他家的李屡屡比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里比红鲤鱼家的李屡屡红，不知是绿鲤鱼比红鲤鱼的驴红，还是红鲤鱼比绿鲤鱼的驴绿!500. 广西壮族自治区爱吃红鲤鱼与绿鲤鱼与驴的出租车司机拉着苗族土家族自治州爱喝自制柳奶奶榴莲牛奶的的骨质疏松症患者遇见别着哑巴的喇叭提拉鳎目的喇嘛打败咬死了山前四十四棵死涩柿子树的四十四只石狮子之后终于跑出番帮官方网站摄制组到民族医院就医。 绕口令版本二 红鲤鱼家有头小绿驴叫李屡屡，绿鲤鱼家有头小红驴叫吕里里，红鲤鱼说他家的李屡屡比绿鲤鱼家的吕里里绿，绿鲤鱼说他家的吕里里比红鲤鱼家的李屡屡红，不知是绿鲤鱼比红鲤鱼的驴红，还是红鲤鱼比绿鲤鱼的驴绿!501.502. 三山撑四水，四水绕三山，三山四水春常在，四水三山四时春（《三山撑四水》）。 司机买雌鸡，仔细看雌鸡，四只小雌鸡，叽叽好欢喜，司机笑嘻嘻（《司机买雌鸡》）。 大车拉小车，小车拉小石头，石头掉下来，砸了小脚指头（《大车拉小车》）。 夏日无日日亦热，冬日有日日亦寒，春日日出天渐暖，晒衣晒被晒褥单，秋日天高复云淡，遥看红日迫西山（《说日》）。 四声：石室诗士施史，嗜狮，誓食十狮，氏时时适市，氏视十狮，恃矢势，使是十狮逝世，氏拾是十狮尸，适石室，石室湿，氏使侍拭石室，石室拭，氏始试食十狮尸，食时，始识十狮尸实是十石狮尸，试释是事实（《施氏食狮史》）。 503. 七巷一个漆匠，西巷一个锡匠，七巷漆匠偷了西巷锡匠的锡，西巷锡匠偷了七巷漆匠的漆。（《漆匠和锡匠》）。 哥挎瓜筐过宽沟，赶快过沟看怪狗。光看怪狗瓜筐扣，瓜滚筐空哥怪狗（《哥挎瓜筐过宽沟》）。 一堆粪，一堆灰，灰混粪，粪混灰（《一堆粪》）。 504.505. 老吕和老徐，上街去买鱼，走到半路天下雨。 二人都没带雨具，顾不得上街去买鱼，先找地方去躲雨。 炖我的炖冻豆腐 你会炖我的炖冻豆腐， 来炖我的炖冻豆腐， 你不会炖我的炖冻豆腐剧假充会炖我的炖冻豆腐， 胡炖，乱炖，炖坏了我的炖冻豆腐啊! 师部司令部指示 师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。506. 碗架子上扣着大花碗， 大花碗底下扣着个大花活虾蟆。 兜装豆 兜里装豆， 豆装满兜， 兜破漏豆。 倒出豆， 补破兜， 补好兜， 又装豆， 装满兜， 不漏豆。 买肉和买油 尤大嫂去买肉， 冉大妈去买油， 尤大嫂买肉不买油， 冉大妈买油不买肉。 俩人集上碰了头， 尤大嫂请冉大妈到家吃炖肉， 冉大妈请尤大嫂去她家喝蜂蜜白糖加香油。507. 小陈去卖针，小沈去卖盆。 俩人挑着担，一起出了门。 小陈喊卖针，小沈喊卖盆。 也不知是谁卖针，也不知是谁卖盆。 白鹅下河 东边一条河， 西边一群鹅， 鹅儿鹅儿唱着歌， 一只狐狸来追鹅， 鹅飞鹅跑跳下河。508. 出西门走七步， 拾到鸡皮补皮裤。 是鸡皮补皮裤， 不是鸡皮不必补皮裤。 分清巾金睛景 小金到北京看风景， 小京到天津买纱巾， 看风景，用眼睛， 还带一个望远镜。 买纱巾，带现金， 到了天津把商店进 买纱巾，用现金， 看风景，用眼睛， 巾、金、睛、景要分清。509. 天上一群大白鸽，河里一群大白鹅。 白鸽尖尖红嘴壳，白鹅曲项向天歌。 白鸽剪开云朵朵，白鹅拨开浪波波。 鸽乐呵呵，鹅活泼波， 白鹅白鸽碧波蓝天真快乐。 画狮子 有个好孩子，拿张图画纸， 来到石院子，学画石狮子。 一天来画一次石狮子， 十天来画十次石狮子。 次次画石狮子，天天画石狮子， 死狮子画成了活狮子。 羊 和 狼 东边来了一只小山羊， 西边来了一只大灰狼， 一起走到小桥上， 小山羊不让大灰狼， 大灰狼不让小山羊， 小山羊叫大灰狼让小山羊， 大灰狼叫小山羊让大灰狼， 羊不让狼，狼不让羊， 扑通一起掉到河中央。 510. 白猫黑鼻子，黑猫白鼻子; 黑猫的白鼻子，碰破了白猫黑鼻子， 白猫的黑鼻子破了， 剥了秕谷壳儿补鼻子; 黑猫的白鼻子不破， 不剥秕谷壳儿补鼻子。 鸟 和 猫 树上一只鸟， 地上一只猫。 地上的猫想咬树上的鸟， 树上的鸟想啄猫的毛。 黄狗咬我手 清早上街走，走到周家大门口， 门里跳出一只大黄狗， 朝我哇啦哇啦吼。 我拾起石头打黄狗， 黄狗跳上来就咬我的手。 也不知我手里的石头 打没打着周家的大黄狗， 周家的大黄狗咬没咬着我的手? 511. 小毛抱着花猫，花猫用爪抓小毛， 小毛用手拍花猫，花猫抓破了小毛， 小毛打疼了花猫，小毛哭，花猫叫， 小毛松开了花猫，花猫跑离了小毛。 小 花 猫 小花猫爱画画，先画一朵腊梅花， 又画一个小喇叭，带着腊梅花， 吹着小喇叭，回家去见妈妈， 妈妈见了笑哈哈。 毛毛和猫猫 毛毛有一顶红帽，猫猫有一身灰毛。 毛毛要猫猫的灰毛， 猫猫要毛毛的红帽。 毛毛把红帽交给猫猫， 猫猫给毛毛几根灰毛。 512. 山顶有座白庙， 白庙里有只白猫。 白庙外有顶白帽， 白猫看见了白帽， 叨着白帽跑进了白庙。 小鱼大雁 小鱼入鱼网鱼网捕鱼鱼难逃， 大雁过雁塔雁塔留雁雁不留。 捉 兔 一位爷爷他姓顾，上街打醋又买布。 买了布，打了醋，回头看见鹰抓兔。 放下布，搁下醋，上前去追鹰和兔， 飞了鹰，跑了兔。打翻醋，醋湿布。 513. 树上卧只猴， 树下蹲条狗。 猴跳下来撞了狗， 狗翻起来咬住猴， 不知是猴咬狗， 还是狗咬猴。 老鼠嗅着油豆香 油一缸，豆一筐， 老鼠嗅着油豆香。 爬上缸，跳进筐， 偷油偷豆两头忙。 又高兴，又慌张， 脚一滑，身一晃， “扑通”一声跌进缸。 蚕和蝉 爬来爬去是蚕， 飞来飞去是蝉。 蚕常在桑叶里藏， 蝉藏在树林里唱。 514. 【导语】绕口令要让人舌头拐不过弯，内容又不是讲不通说不顺的句子，而对联讲究的是对仗和押韵，在要求上也是挺多的。以下是无忧考网为大家准备的，希望对大家有帮助。 李：那没错 何：据说你们这个相声演员也有基本功 李：我们是四门功课 何：哪四门？ 李：说学逗唱 何：说学逗唱。那么这个说的方面，您都能说点什么呢？ 李：那说得太多了 何：给我们介绍介绍 李：我们能说个绷绷绷啊蹦蹦蹦啊憋死牛啊绕口令啊说个字意猜个谜语对个春联这个都能说 何：会的不少啊！这么着吧，今天来的观众不少 李：对 何：很热情 李：没错儿 何：我代表观众我烦您给我们表演一段 李：您让我来一什么 何：您给我们来个绷绷绷 李：这绷不了 何：蹦蹦蹦 李：蹦不动 何：憋死牛呢？ 李：我憋死了 何：哪个行啊？ 李：前面那都是话佐料啊 何：哪个最拿手？ 李：打绕口令开始都行 何：哦，绕口令 李：绕口令拿手啊 何：您会绕口令吗 李：这多新鲜 何：我看不透我看不透 李：介小我们都得学 何：我知道绕口令，那得是小薄片子嘴儿，我这个嘴儿 李：行，别抿了别抿了 何：小薄片子嘴儿知道吗 李：还小薄片子嘴儿 何：就您这嘴唇皇上的妈 李：这怎么讲啊 何：太厚 李：那也比你这城墙拐弯强多了 何：我招你惹你了 李：这嘴唇后没关系 何：我说你条件不行 李：那嘴里头利索啊 何：真利索假利索？ 李：真利索 何：来一个我听听啊，你来一个我听听啊 李：我来一个？ 何：啊~（对观众）怎么样各位?（鼓掌）诶~~还不是跟你吹 李：怎么？ 何：要讲究说绕口令，你跟我比，你撞枪口上了 李：是啊？ 何：我把你好有一比 李：比作何来呢？ 何：比作何来啊，好比啊，你这个王奶奶碰上我这个玉奶奶了 李：这话怎么讲？ 何：你还差一点 李：怎么叫差一点呢 何：王跟玉差一点 李：哦这字差一点 何：不行 李：那你要这么说的话，说绕口令你跟我碰到一块儿，我拿你也好有一比 何：比作何来啊 李：你是这个马奶奶碰见冯奶奶了 何：这怎么讲呢 李：你还差两点呢 何：呵~这么个差两点。要讲究说绕口令你跟我比啊，我把你比作你这个王奶奶啊碰上我这个王奶奶了 李：怎么讲？ 何：你还差三点了 李：嘿~要说绕口令我拿你还好有一比 何：比作何来啊？ 李：你是这个能奶奶碰见熊奶奶了 何：这是？ 李：你还差四点呢你 何：哦~要讲究说绕口令你跟我比啊我把你比作你这个王奶奶啊跟我这个汪太太碰在一起了 李：怎么讲？ 何：你还差五点呢 李：不对啊王跟汪差三点啊 何：太太那两点不算吗？ 李：嘿~这两点也算 何：那是啊 李：那我拿你还好有一比 何：比作何来啊 李：你是这个王奶奶碰见王麻子了你还差好些点呢你 何：甭斗嘴 李：诶~甭呛火 何：试试你说一个我就说得上来 李：我在这随便说一个，你就不一定说得上来 何：我说完了以后比你那还清楚 李：是这话啊 何：当然了 李：那没说着绕口令之前呢，我得先讲个小故事 何：哦小故事 李：这绕口令打这故事里头来 何：我听听 李：我们这后台有两个演员 何：哪位？ 李：刚才给您说相声的，一个小曹一个教大刘，这俩人好开玩笑，经常在后台追着打着玩，有一天这大刘追着小曹满世界跑，这小曹躲在门后头，在这旮旯这地方，发现一个短的扁担，这小曹抱着这扁担出门要迎这大刘。您听我这绕口令。 何：完了？ 李：完了 何：哪句绕嘴？啊~哪句绕嘴 李：我还没说呢 何：那你这干吗呢 李：我跟你说这故事 何：哦故事 李：这绕口令打这故事里头来 何：这就出来了？ 李：这就出来了 何：我听听！ 李：你听听 何：怎么说法呢 李：说从门旮旯后头出来个抱小短扁担的 何：这个？ 李：就这个怎么了 何：打门旮旯出来个抱小短扁担的 李：嘿~ 何：比你那真着 李：是啊 何：哈哈哈哈…这有什么啊这个 李：别忙说上来不算完 何：怎么不算完 李：您当说一个就算完了 何：不就这个吗 李：这不算功夫 何：什么功夫 李：讲究的是一口气我们说它十个 何：多少 李：十个 何：你这气力行吗 李：说完了还不算完，一拍胸脯横大鼻梁还得饶上一句 何：哪句 李：哈哈哈我可没缓气 何：哦？这可是气力活 李：这是功夫啊 何：我听您这十个 李：我先来一遍 何：我给您数着 李：您可得照我这学 何：十个啊 李：十个不多 何：行行 李：听这个 何：你说得上来我就说得上来 李：是这话说打门旮旯后头打门旮旯后头打门旮旯后头打门旮旯后头打门旮旯后头打门旮旯后头打门旮旯后头打门旮旯后头打门旮旯后头打门旮旯后头出来个抱小短扁担的哈哈哈我可没缓气 （观众掌声） 何：别鼓掌啦！ 李：怎么 何：十个门旮旯那十根扁担呢 李：怎么我劈了烧火你甭管 何：就这个 李：这你就不一定说得上来 何：谁说的 李：你说一个我听听 何：你说多少个 李：十个 何：十个啊我一口气 李：说多少 何：说它二十五个 李：霍~翻上一番都多 何：二十五个完了饶十六个哈哈 李：十六个哈哈？ 何：十六个哈哈横打鼻梁我可没缓气 李：哦那许你这气力比我这长啊 何：你看我这气力吧 李：那我可给你数着 何：你数着啊 李：二十五个 何：当然了 李：还十六个哈哈？ 何：十六个哈哈 李：咱们数这哈哈 何：来着啊我先运运气啊 李：运足了没有啊 何：没问题了 李：现在能开始了吧 何：听着吧打门旮旯后头出来个抱小短扁担的清楚不清楚？ 李：清楚 何：一个 李：这么说啊？！ 何：啊～ 李：一个一个分开了说，那我能说一万多个呢 何：你说一个我听听 李：甭来这个你连着一口气 何：一口气？ 李：知道吗？ 何：当然了 李：说一个我听听 何：我说出来就比你清楚 李：是啊？说吧 何：听着吧。二十五个？ 李：二十五个 何：十六个哈哈？ 李：这不是你说的嘛！ 何：听着啊打门旮旯后头出来个抱小短扁担的打门旮旯后头出来个抱小短扁担的打门旮旯后头出来个抱小短扁担的打门旮旯后头出来个抱小短扁担的打门旮旯后头出来个抱小短扁担的打门旮旯后头出来个抱小短扁担的打门旮旯后头出来个抱小短扁担的…….（数手指没声音了）哈哈哈哈哈…..没缓气 （观众“噫～～”小伟感谢大伙） 李：行了行了你，别谢谢了。还没缓气，什么玩意啊这叫 何：功夫功夫 李：你这才全嚼了呢 何：这个这个说简单 李：哦，说还简单 何：真正复杂的、难度大的唱 李：唱绕口令？ 何：诶～快扁有这么一段 李：您先等会儿快什么 何：快扁 李：快扁？没见过 何：怎么没见过 李：那叫快板 何：诶~有一段绕口令 李：那是基本功的节目 何：基本功。你学过吗 李：嘿～您撞枪口上了，头一段我就学的是这个 何：咱来来 李：咱们俩来来？ 何：一人唱半段看谁嘴快，看谁嘴里头干净 李：这可叫打擂 何：那可不 李：前后半段这么唱 何：那可不 李：我还让你个便宜 何：什么便宜 李：我来前半段 何：行，我接后半段 李：我让你休息会儿 何：可以可以 李：我唱完了是你的 何：会打板吗？ 李：多新鲜阿唱快板的不会打板？！ 何：得打齐了 李：俩人打齐了 何：打齐了 李：打不齐那叫那叫什么玩艺儿啊 何：行不行 李：没问题 何：咱来来 李：来吧 何：还掳胳膊挽袖子 李：你看唱快板讲究把这袖口得挽起来啊 何：是这个架式。咱来来啊 李：来吧 何：咱可得打齐了 李：没问题 何：直功直令的 李：错不了 何：你前半段我后半段 李：上下本分开 何：准保比你唱得清楚 李：那不一定 何：赶板跺字 （两人打板） 李：高高山上有一位老僧，身披着衲头几千层。您若问老僧年高迈，曾记得黄河九澄清。五百年前清一澄，倒有这么四千五百层。老僧收了八个徒弟，这么八个可有法名。大徒弟名字就叫青头愣，二徒弟他名叫愣头青。三徒弟名叫僧三点，四徒弟他名叫点三僧。五徒弟名叫蹦葫芦棒，六徒弟名叫棒葫芦蹦。七徒弟名字就叫随风化，八徒弟他的名字就叫做化随风。老师傅教了八宗艺，八仙过海各显其能：青头愣会敲磬，愣头青会撞钟。僧三点会吹管，点三僧会捧笙。蹦葫芦棒会打鼓，棒葫芦蹦会念经。随风化会扫地，这个化随风会点灯。老师傅让他们换一换，要想交换万不能。老师傅一见有了气，要打徒弟整八名。眼看着八位僧人要挨打，又来了五位云游僧。凑齐僧人十三位，一起到后院数玲珑。这个后院有座玲珑塔，咱们上去数单层，回来数双层。谁要是数罢谁就是个大师兄。 玲珑塔来塔玲珑，玲珑宝塔第一层，一张高桌四条腿，一个和尚一本经，一副铙钹一口磬，一个木头鱼子一盏灯，一个金钟整四两，被那风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔咱们隔过了二层数三层，三张高桌十二条腿，三个和尚三本经，三副铙钹三口磬，三个木头鱼子三盏灯，三个金钟十二两，被那风儿响哗啷。玲珑塔，塔玲珑，玲珑宝塔第五层，五张高桌二十条腿，五个和尚五本经，五副铙钹五口磬，五个木头鱼子五盏灯，五个金钟，二十两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔第七层，七张高桌二十八条腿，七个和尚七本经，这个七副铙钹七口磬，七个木头鱼子七盏灯，七个金钟，二十八两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔第九层，九张高桌三十六条腿，九个和尚九本经，九副铙钹九口磬，九个木头鱼子九盏灯。九个金钟，三十六两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔十一层，十一张高桌条四十四条腿，十一个和尚十一本经，十一副铙钹十一口磬，十一个木头鱼子十一盏灯，十一个金钟，四十四两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔到了尖的十三层，十三张高桌五十二条腿，十三个和尚十三本经，十三副铙钹十三口磬，十三个木头鱼子十三盏灯，十三个金钟，五十二两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔往回数十二层，十二张高桌四十八条腿，十二个和尚十二本经，十二副铙钹十二口磬，十二个木头鱼子十二盏灯，十二个金钟，四十八两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔第十层，十张高桌四十条腿，十个和尚十本经，十副铙钹十口磬，十个木头鱼子十盏灯。十个金钟，四十两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔第八层，八张高桌三十二条腿，八个和尚八本经，八副铙钹八口磬，八个木头鱼子八盏灯，八个金钟，三十二两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔第六层，六张高桌二十四条腿，六个和尚六本经，六副铙钹六口磬，六个木头鱼子六盏灯，六个金钟，二十四两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔第四层。四张高桌十六条腿，四个和尚四本经，四副铙钹四口磬，四个木头鱼子四盏灯。四个金钟，十六两，风儿一刮响哗啷。玲珑塔，塔玲珑，玲珑宝塔第二层，两张高桌八条腿，两个和尚两本经，两副铙钹两口磬，两个木头鱼子两盏灯，两个金钟整八两，风儿一刮响哗啷。 僧人数罢玲珑塔，抬起头来看分明：天上看，满天星。地上看，一个坑.坑里看，冻着冰。冰上看，立着松。松上看，落着鹰。山前看，一老僧。僧前看，一本经。屋里看，点着灯。墙上看，钉着钉。钉上看，挂着弓。看着看着花了眼，西北变天起了大风。说大风，好大的风，十个人见了九个人惊。刮散了，满天星。刮平了，地上坑。刮化了，坑中冰。刮倒了，冰上松。刮飞了，松上鹰。刮走了，一老僧。刮碎了，僧前经。刮灭了，屋里灯。刮掉了，墙上钉。刮翻了，钉上弓。直刮的：星散坑平冰化松倒鹰飞僧走经碎灯灭钉掉弓崩这么一段绕口令。 李：接这个 何：（打板）再～见～（要下台） 李：（拽回来）可气不可气啊？再见还在板上 何：短小精干 李：什么短小精干阿？！太短了 何：太短了？ 李：跟我这长短得差不多 何：我这后边长着呢 李：你唱啊 何：我唱就比你强 李：不一定 何：你看你唱的慈心泪都快下来了知道吗 李：那不是唱的，那就这毛病 何：你听我这个阿赶板跺字 李：是吗 何：赶板跺字 李：来吧 何：你听我这个啊 李：唱吧 何：（打板）数九寒天冷风嗖，转年这个春打六九头，正月十五是龙灯会，有一对狮子滚绣球，三月三十王母娘娘的蟠桃会，大闹天宫孙悟空就把这个仙桃偷，五月单五端阳日，白蛇许仙不到头，七月七传说本是天河配，牛郎织女泪交流，八月十五云遮月，月里的嫦娥犯了忧愁，要说愁，咱们净说愁，我唱一段绕口令儿一十八愁，说虎也愁，狼是愁，象也愁，这个鹿也愁，骡子也愁马也愁，牛也愁，羊也愁，猪也愁，狗也愁，鸭子也愁鹅也愁，愁，螃蟹愁，蛤蜊愁，乌龟愁，鱼愁虾愁各有分由。虎愁不敢把那高山下，狼愁这个野心耍滑头，象愁脸憨皮又厚，鹿愁头上长犄角，马愁鞴鞍行千里，骡子愁它本是一世休，羊愁从小它把胡子长，牛愁愁的犯牛轴，狗愁改不了那净吃屎，猪愁离不开那臭水沟，鸭子愁扁了它的嘴，鹅愁愁来愁去长了个大奔头，愁长了一身脓疱疥，螃蟹愁的净横搂，蛤蜊愁闭关自守，乌龟愁的不敢露头，鱼愁离水不能走，这个虾愁空枪乱扎没准头。 可是那位说你净瞎诌，您说我诌来我就诌，闲来没事啊溜溜舌头啊，说什么上山吱扭扭，什么下山乱点头，什么有头无有尾，这个什么有尾无有头，什么有腿家中坐，什么没腿游九州，赵州桥什么人修，玉石的栏杆什么人留，什么人骑驴桥上走，什么人推车轧道沟，什么人拖刀桥上站，什么人勒马看春秋，什么人白，什么人黑，什么人的胡子一大堆，什么圆圆在天边，什么圆圆在眼前，什么圆圆长街卖，什么圆圆道两边，什么鸟穿青又穿白，什么鸟穿出皂靴来，什么鸟身披十样锦，什么鸟身披麻布口袋？什么开花节节高，什么开花毛着腰，什么开花无人见，什么开花嘴上嘟着一嘴毛。双扇门，单扇开，我自己破闷儿自己猜。车子上山吱扭扭，瘸子下山乱点头，有头无有尾，蝎子有尾无有头，板凳有腿儿家中坐，粮船没腿儿游九州，赵州桥鲁班修，玉石栏杆圣人留，张果老骑驴桥上走，柴王爷推车轧道沟，周仓扛刀桥上站，关二爷勒马看春秋，罗成白，敬德黑，张飞的胡子一大堆，月亮圆圆在天边，眼镜圆圆在眼前，烧饼圆圆长街卖，车轱辘圆圆道两边，喜鹊穿青又穿白，乌鸦穿出皂靴来，野鸡身披十样锦，鹌鹑身披麻布口袋，芝麻开花节节高，柳树开花毛着腰，橡子开花无人见，老玉米开花嘴上嘟着一嘴毛。 说扁担长，板凳宽。扁担没有板凳宽，板凳没有扁担长。扁担偏要扁着绑在板凳上，这个板凳偏不让扁担扁着绑在板凳上，扁担偏要扁着绑在板凳上。 出南门，奔正南，有个面铺面冲南，面铺门口挂着一个蓝布棉门帘，挂着这个蓝布棉门帘，瞧了瞧面铺面冲南，摘了这个蓝布棉门帘，瞧了瞧面铺还是面冲南。 出西门走七步，捡块鸡皮补皮裤，是鸡皮补皮裤，不是鸡皮不必补皮裤。 出西门本正西，树木琅林长不齐，一二三四五六七，七六五四三二一，六五四三二一，五四三二一，四三二一，三二一，二一一，一个一，数了半天一棵树，这个一棵树上长七枝，七枝结了七样果，结的是槟子、橙子、橘子、柿子、李子、栗子、梨。 哎哟喂！一点都不累（没底气地说）515. 八公庙里的八棵白果树上有八个八哥儿窝， 八公庙里的八个和尚拿八根金箍棒打八个八哥儿， 不许八个八哥儿再到八公庙里的八棵白果树上做八个八歌儿窝。 虎和鼓 墙上挂面鼓， 鼓上画老虎， 老虎抓破鼓， 拿块布来补。 不知是布补鼓， 还是布补虎? 于琳琳爱捏泥 于琳琳爱捏泥， 揉揉泥，团团泥， 揉来揉去不起急。 捏了一只小狐狸， 又捏七只小小鸡。 小狐狸、小小鸡， 全都送给小弟弟。 516. 钉钉棚 钉钉棚，棚钉钉。 钉钉棚棚上有钉， 棚钉钉钉钉钉棚。 517. 帆船 帆船翻，翻帆船，竖起桅杆撑开帆。风吹帆,，帆引船，帆船顺风转海湾。 黄碗合活鸭 黄碗合活鸭。(念五遍)红鸡和灰鸡红鸡公尾巴灰，灰鸡公尾巴红。 518.519. 宝宝掰包谷， 宝宝掰，宝宝抱。 宝宝掰包谷包谷掉， 宝宝抱包谷宝宝笑。 瓜卖花 婆婆卖瓜又卖花， 一过卖来一边夸， 夸瓜大，夸花美， 人们买瓜又买花， 乐得婆婆笑哈哈。 喇嘛提蛤蟆、哑巴别着喇叭 打南边儿来了个喇嘛， 手里提着个蛤蟆， 打北边儿来了个哑巴， 腰里别着喇叭。 手里提蛤蟆的喇嘛， 要拿蛤蟆换哑巴腰里的喇叭; 腰里别喇叭的哑巴， 不拿喇叭换喇嘛手里的蛤蟆。 提蛤蟆的喇嘛， 打了哑巴一蛤蟆; 别喇叭的哑巴， 打了喇嘛一喇叭。 520. 峰上风， 峰下枫。 峰上风吹蜂会飞，峰下枫， 峰下枫挡峰上风。破瓦和骡马 楼上一块破瓦， 楼下一匹骡马， 破瓦落下来打了骡马， 骡马跳起来踩了破瓦。老伯 郭老伯、骆第伯、毕老伯、柏老伯， 郭骆毕柏四老伯，约着城北买菱角， 买菱角阁上剥，菱角壳戳了四老伯了脚。 521. 一个跛子，牵着驴子; 一个驼子，拉着车子; 一个瞎子，抱着孩子。 跛子的驴子，撞着驼子的车子; 驼子的车子，碰倒瞎子的孩子; 瞎子要打驼子，驼子要打跛子。 刘小牛去打油 刘小牛去打油， 买了油，往回走; 油瓶满，往外流， 多给了半斤油， 急坏了刘小牛。 多的油，不能留， 回到商店大退油; 叔叔摸摸小牛头， 阿姨拉拉小牛手， 齐声夸资刘小牛。 贾家养虾 贾家有女初出嫁，嫁到夏家学养虾， 喂养的对虾个头儿大，卖到市场直加价。 贾家爹爹会养鸭，鸭子虽肥伤庄稼。 邻里吵架不融洽，贾家也学养对虾。 小虾卡住了鸭子牙，大鸭咬住了虾的夹。 夏家公公劝，贾家爹爹压，大鸭不怕吓， 小虾装得嗲，夏家贾家没办法。 522. 老爷爷年纪老， 小宝宝年纪小。 老爷爷要看报， 小宝宝要吃糕。 老爷爷给宝宝拿糕， 小宝宝给爷爷拿报。 老爷爷看报眯眯笑， 小宝宝吃糕味道好。 红凤凰粉凤凰 红凤凰粉凤凰， 红粉凤凰粉红凤凰。 红凤凰粉凤凰， 红粉凤凰粉红凤凰! 523. 一支山歌山乱说多， 油煎豆腐骨头多， 太湖当中挑野菜， 大山顶上摸田螺， 摸个田螺笆斗大， 摆了摇篮里骗外婆。 吃核桃 我敲桃壳你剥肉， 吃掉桃肉甩掉壳。 桃壳甩得门角落， 门角落头有桃壳。 天上看，满天星 天上看，满天星; 地下看，有个坑; 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。 524.买来一桶油，跑来一头牛，踢翻桶里油，牛角都是油。天上看，满天星；地下看，有个坑；坑里看，有盘冰。坑外长着—老松，松上落着一只鹰，松下坐着一老僧，僧前放着—部经，经前点着一盏灯，墙上钉着一根钉，钉上挂着一张弓。说刮风，就刮风，刮得男女老少难把眼睛睁。刮散了天上的星，刮平了地的坑，刮化了坑里的冰，刮倒了坑外的松，刮飞了松上的鹰，刮走了松下的僧，刮乱了僧前的经，刮灭了经前的灯，刮掉了墙上的钉，刮翻了钉上的弓。这是一段星散、坑平、冰化、松倒、鹰飞、僧走、经乱、灯火、钉掉、弓翻的。 525. 望月空，满天星，光闪闪，亮晶晶，好象那，小银灯，仔细看，看分明，大大小小，密密麻麻，闪闪烁烁，数也数不清。 葱葱栽了十颗葱，松松栽了十棵松。冲冲说栽松不如栽葱，松松说栽葱不如栽松。是栽松不如栽葱，还是栽葱不如栽松? 辛厂长，申厂长，同乡不同行。辛厂长声声讲生产，申厂长常常闹思想。辛厂长一心只想革新厂，申厂长满口只讲加薪饷。526. 望月空，满天星，光闪闪，亮晶晶，好象那，小银灯，仔细看，看分明，大大小小，密密麻麻，闪闪烁烁，数也数不清。 补桶 桐木桶，桶有洞，补洞用桐不用铜。用铜补洞补不住，用桐补桶桶无洞。 聋童 朦胧彩霓虹，玲珑小聋童。聋童采柠檬，聋童不懵懂。 弯弯丘斑斑鸠 弯前弯后弯弯丘，弯丘弯角里躲着个斑斑鸠。有个弯背的弯老头儿，在弯丘弯角里弯腰捡了个弯砖头。弯老头弯里投砖头， 专打弯丘弯角里那个斑斑鸠。527.望月空满天星望月空，满天星，光闪闪，亮晶晶，好象那，小银灯，仔细看，看分明，大大小小，密密麻麻，闪闪烁烁，数也数不清。砸缸小光和小刚，抬着水桶上岗。上山岗，歇歇凉，拿起竹竿玩打仗。乒乒乒，乓乓乓，打来打去砸了缸。小光怪小刚，小刚怪小光，小光小刚都怪丿竿和水缸。 528.隔着窗子撕字纸，一撕横字纸，再撕竖字 纸，撕了四十四张湿字纸。 小猪扛锄头，吭哧吭哧走。小鸟唱枝头，小猪扭头瞅，锄头撞石头，石头砸猪头。小猪怨锄头，锄头怨猪头。老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。 529. 天上看，满天星;地下看，有个坑;坑里看，有盘冰。坑外长着—老松，松上落着一只鹰，松下坐着一老衲，僧前放着—部经，经前点着一盏灯，墙上钉着一根钉，钉上挂着一张弓。说起风，就起风，刮得男女老小难把眼睛睁。刮散了天上的星，刮平了地的坑，刮化了坑里的冰，刮倒了坑外的松，刮飞了松上的鹰，刮走了松下的僧，刮乱了僧前的经，刮灭了经前的灯，刮失落了墙上的钉，刮翻了钉上的弓。530. 卖蒜的算卦，算卦的买蒜。 算卦的不买卖蒜的蒜， 卖蒜的不算算卦的卦。关于满天星的绕口令 抬头看，满天星， 低头看，一道坑。 坑里看，栽的葱， 葱上看，冻的冰。 屋里看，点着灯， 墙上看，钉的钉。 钉上看，挂的弓， 弓上看，卧的鹰。 寒冷天，刮大风， 刮散了，满天星。 刮平了，地下坑， 刮倒了，坑里葱。 刮消了，葱上冰， 刮灭了，屋里灯。 刮断了，墙上钉， 刮掉了，钉上弓； 刮飞了，弓上鹰。 这才是：星散、坑平葱倒 冰消、灯灭、钉断、弓掉、鹰飞。 得棒呛一场空。毛毛的红帽、猫猫的灰毛 毛毛有一顶红帽， 猫猫有一身灰毛。 毛毛要猫猫的灰毛， 猫猫要毛毛的红帽。 毛毛把红帽交给猫猫， 猫猫抽了几根灰毛送给毛毛。毛毛穿袍袍、苗苗戴帽帽一块追猫猫 毛毛穿袍袍， 苗苗戴帽帽。 毛毛和苗苗， 一块追猫猫。 猫猫喵喵叫， 急得蹦又跳。 猫猫抓破毛毛花袍袍， 猫猫抓破苗苗花帽帽。 苗苗给毛毛补袍袍， 毛毛给苗苗补帽帽。 531.树上的松鼠－－蹿上跳下 树上的松鼠－－蹿上跳下演员制服 男演员穿蓝制服， 女演员穿棉制服， 蓝制服是棉制服， 棉制服是蓝制服。 男演员穿蓝棉制服， 女演员穿棉蓝制服。天上看，满天星 天上看，满天星； 地下看，有个坑； 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。瘸子和矬子 小山屋 南面来了个瘸子，腰里别着个橛子， 北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子， 挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子， 挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 532. 男演员穿蓝屈服，女演员穿棉屈服。蓝屈服是棉屈服，棉屈服是蓝屈服。男演员穿蓝棉屈服，女演员穿棉蓝屈服。 绕口令《天上看，满天星》天上看，满天星；地下看，有个坑；坑里看，有盘冰。坑外长着—老松，松上落着一只鹰，松下坐着一老衲，僧前放着—部经，经前点着一盏灯，墙上钉着一根钉，钉上挂着一张弓。说起风，就起风，刮得男女老小难把眼睛睁。刮散了天上的星，刮平了地的坑，刮化了坑里的冰，刮倒了坑外的松，刮飞了松上的鹰，刮走了松下的僧，刮乱了僧前的经，刮灭了经前的灯，刮失落了墙上的钉，刮翻了钉上的弓。 绕口令《瘸子和矬子》小山屋南面来了个瘸子，腰里别着个橛子，北边来了个矬子，肩上挑着担茄子。别橛子的瘸子要用橛子换挑茄子的矬子的茄子，挑茄子的矬子不给别橛子的瘸子茄子。别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子，挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 绕口令《提灯笼绕口令》提灯笼小凤提着圆灯笼，小龙提着方灯笼。小凤的圆灯笼上画着龙，小龙的方灯笼上画着凤，小凤要拿圆龙灯笼换小龙的方凤灯笼。533. 天上看，满天星;地下看，有个坑;坑里看，有盘冰。坑外长着—老松，松上落着一只鹰，松下坐着一老僧，僧前放着—部经，经前点着一盏灯，墙上钉着一根钉，钉上挂着一张弓。说刮风，就刮风，刮得男女老少难把眼睛睁。刮散了天上的星，刮平了地的坑，刮化了坑里的冰，刮倒了坑外的松，刮飞了松上的鹰，刮走了松下的僧，刮乱了僧前的经，刮灭了经前的灯，刮掉了墙上的钉，刮翻了钉上的弓。 瘸子和矬子 小山屋南面来了个瘸子，腰里别着个橛子，北边来了个矬子，肩上挑着担茄子。别橛子的瘸子要用橛子换挑茄子的矬子的茄子，挑茄子的矬子不给别橛子的瘸子茄子。别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子，挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。534. 望月空，满天星，光闪闪，亮晶晶， 好象那，小银灯，仔细看，看分明， 大大小小，密密麻麻，闪闪烁烁， 数也数不清。 字纸里裹着细银丝 字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。 六叔和六舅 出南门，走六步，见着六叔和六舅， 叫声六叔和六舅，借我六斗六升好绿豆; 过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。535. 天上看，满天星，地下看，有个坑，坑里看，有盘冰。坑外长着一老松，松上落着一架鹰，鹰下坐着一老僧，僧前点着一盏灯，灯前搁着一部经，墙上钉着一根钉，钉上挂着一张弓。说刮风，就刮风，刮的男女老少难把眼睛睁。刮散了天上的星，刮平了地上的坑，刮化了坑里的冰，刮断了坑外的松，刮飞了松上的鹰，刮走了鹰下的僧，刮灭了僧前的灯，刮乱了灯前的经，刮掉了墙上的钉，刮翻了钉上的弓。只刮得：星散、坑平、冰化、松倒、鹰飞、僧走、灯灭、经乱、钉掉、弓翻还不停，请来了玉皇大帝孙悟空，制服了风婆天下宁。大家听，听分明，我说的是个绕口令，我说的是个绕口令。536. 望月空，满天星，光闪闪，亮晶晶， 好象那，小银灯，仔细看，看分明， 大大小小，密密麻麻，闪闪烁烁， 数也数不清。补桶桐木桶，桶有洞， 补洞用桐不用铜。 用铜补洞补不住， 用桐补桶桶无洞。聋童朦胧彩霓虹， 玲珑小聋童。 聋童采柠檬， 聋童不懵懂。 537. 小凤提着圆灯笼， 小龙提着方灯笼。 小凤的圆灯笼上画着龙， 小龙的方灯笼上画着凤， 小凤要拿圆龙灯笼换小龙的方凤灯笼。 【演员制服】 男演员穿蓝制服， 女演员穿棉制服， 蓝制服是棉制服， 棉制服是蓝制服。 男演员穿蓝棉制服， 女演员穿棉蓝制服。 【天上看，满天星】 天上看，满天星; 地下看，有个坑; 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。 538. 天上看，满天星; 地下看，有个坑; 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。 【瘸子和矬子】 小山屋 南面来了个瘸子，腰里别着个橛子， 北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子， 挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子， 挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。 539. 天上看，满天星; 地下看，有个坑; 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。 缝裤缝 一条裤子七道缝， 斜缝竖缝和横缝， 缝了斜缝缝竖缝， 缝了竖缝缝横缝。540. 天上看见满天星， 地上看有个坑， 坑里面有块冰， 坑旁种着一棵松， 松上落着一只鹰， 松下坐着一老僧， 僧前点着一盏灯， 灯旁放着一本经， 墙上钉着一根钉， 钉上挂着一张弓。 说刮风就刮风， 刮的是男女老少难把眼睛睁。 刮散了天上的星， 刮平了地上的坑， 刮化了坑里的冰， 刮倒了坑旁的松， 刮飞了松上的鹰， 刮走了松下的僧， 刮灭了僧前的灯， 刮乱了灯旁的经， 刮掉了墙上的钉， 刮翻了钉上的弓。 只刮的是： 星散、坑平、冰化、松倒、鹰飞、 僧走、灯灭、经乱、钉掉、弓翻， 这么一个绕口令。541. 女演员穿棉制服， 蓝制服是棉制服， 棉制服是蓝制服， 搞笑绕口令，最搞笑的绕口令大全。 男演员穿蓝棉制服， 女演员穿棉蓝制服。 天上看，满天星 天上看，满天星; 地下看，有个坑; 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。542. (ing) 望月空，满天星，光闪闪，亮晶晶，好像那，小银灯，仔细看，看分明，大大小小，密密麻麻，闪闪烁烁，数也数不清。 蜻蜓青萍分不清 (ing) 蜻蜓青，青浮萍，青萍上面停蜻蜓，蜻蜓青萍分不清。别把蜻蜓当青萍，别把青萍当蜻蜓。 指示灯 十字路口指示灯，红黄绿色分得清。绿灯行，红灯停。红灯停，绿灯行。 一三五七九贰肆陆扒拾，。青玉案元夕东风夜放花千树更吹落星如雨宝马雕车香满路凤箫声动玉壶光转一夜鱼龙舞蛾儿雪柳黄金缕笑语盈盈暗香去众里寻他千百度暮然回首那人却在灯火阑珊处543. 男演员穿蓝制服， 女演员穿棉制服， 蓝制服是棉制服， 棉制服是蓝制服。 男演员穿蓝棉制服， 女演员穿棉蓝制服。 【天上看，满天星】 天上看，满天星; 地下看，有个坑; 坑里看，有盘冰。 坑外长着—老松，松上落着一只鹰， 松下坐着一老僧，僧前放着—部经， 经前点着一盏灯，墙上钉着一根钉， 钉上挂着一张弓。说刮风，就刮风， 刮得男女老少难把眼睛睁。 刮散了天上的星，刮平了地的坑， 刮化了坑里的冰，刮倒了坑外的松， 刮飞了松上的鹰，刮走了松下的僧， 刮乱了僧前的经，刮灭了经前的灯， 刮掉了墙上的钉，刮翻了钉上的弓。 【瘸子和矬子】 小山屋 南面来了个瘸子，腰里别着个橛子， 北边来了个矬子，肩上挑着担茄子。 别橛子的瘸子要用橛子换挑茄子的矬子的茄子， 挑茄子的矬子不给别橛子的瘸子茄子。 别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子， 挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。544. 有个小孩叫小杜 上街打醋又买布 买了布 打了醋 回头看见鹰抓兔 放下布 搁下醋 上前去追鹰和兔 飞了鹰 跑了兔 洒了醋 湿了布 嘴说腿 腿说嘴 嘴说腿 爱跑腿 腿说嘴 爱卖嘴 光动嘴 不动腿 光动腿 不动嘴 不如不长腿和嘴 到底是那嘴说腿 还是腿说嘴545. 上街打醋又买布 买了布 打了醋 回头看见鹰抓兔 放下布 搁下醋 上前去追鹰和兔 飞了鹰 跑了兔 洒了醋 湿了布 嘴说腿 腿说嘴 嘴说腿 爱跑腿 腿说嘴 爱卖嘴 光动嘴 不动腿 光动腿 不动嘴 不如不长腿和嘴 到底是那嘴说腿 还是腿说嘴546. 有个小孩叫小杜 上街打醋又买布 买了布 打了醋 回头看见鹰抓兔 放下布 搁下醋 上前去追鹰和兔 飞了鹰 跑了兔 洒了醋 湿了布 嘴说腿 腿说嘴 嘴说腿 爱跑腿 腿说嘴 爱卖嘴 光动嘴 不动腿 光动腿 不动嘴 不如不长腿和嘴 到底是那嘴说腿 还是腿说嘴 动物绕口令 鹅和鸽 天上一群大白鸽，河里一群大白鹅。 白鸽尖尖红嘴壳，白鹅曲项向天歌。 白鸽剪开云朵朵，白鹅拨开浪波波。 鸽乐呵呵，鹅活泼波，白鹅白鸽碧波蓝天真快乐。547. 有个小孩叫小杜 上街打醋又买布 买了布 打了醋 回头看见鹰抓兔 放下布 搁下醋 上前去追鹰和兔 飞了鹰 跑了兔 洒了醋 湿了布 嘴说腿 腿说嘴 嘴说腿 爱跑腿 腿说嘴 爱卖嘴 光动嘴 不动腿 光动腿 不动嘴 不如不长腿和嘴 到底是那嘴说腿 还是腿说嘴 扁担宽 板凳长 扁担宽 板凳长 扁担想绑在板凳上 板凳不让扁担绑在板凳上 扁担偏要绑在板凳上 板凳偏偏不让扁担绑在那板凳上 到底扁担宽还是板凳长 鹅过河 哥哥弟弟坡前坐 坡上卧着一只鹅 坡下流着一条河 哥哥说 宽宽的河 弟弟说 白白的鹅 鹅要过河 河要渡鹅 不知是那鹅过河548. 有个小孩叫小杜 上街打醋又买布 买了布 打了醋 回头看见鹰抓兔 放下布 搁下醋 上前去追鹰和兔 飞了鹰 跑了兔 洒了醋 湿了布 嘴说腿 腿说嘴 嘴说腿 爱跑腿 腿说嘴 爱卖嘴 光动嘴 不动腿 光动腿 不动嘴 不如不长腿和嘴 到底是那嘴说腿 还是腿说嘴 扁担宽 板凳长 扁担宽 板凳长 扁担想绑在板凳上 板凳不让扁担绑在板凳上 扁担偏要绑在板凳上 板凳偏偏不让扁担绑在那板凳上 到底扁担宽还是板凳长 鹅过河 哥哥弟弟坡前坐 坡上卧着一只鹅 坡下流着一条河 哥哥说 宽宽的河 弟弟说 白白的鹅 鹅要过河 河要渡鹅 不知是那鹅过河549. 有个小孩叫小杜 上街打醋又买布 买了布 打了醋 回头看见鹰抓兔 放下布 搁下醋 上前去追鹰和兔 飞了鹰 跑了兔 洒了醋 湿了布 嘴说腿 腿说嘴 嘴说腿 爱跑腿 腿说嘴 爱卖嘴 光动嘴 不动腿 光动腿 不动嘴 不如不长腿和嘴 到底是那嘴说腿 还是腿说嘴 扁担宽 板凳长 扁担宽 板凳长 扁担想绑在板凳上 板凳不让扁担绑在板凳上 扁担偏要绑在板凳上 板凳偏偏不让扁担绑在那板凳上 到底扁担宽还是板凳长550. 龚先生东方走来肩了一棵松， 翁先生西方走来拿了一只钟。 龚先生的松撞破了翁先生的钟， 翁先生扭住了龚先生的一棵松。 龚先生要翁先生放了他的松， 翁先生要龚先生赔了他的钟。 龚先生不肯赔还翁先生的钟， 翁先生不肯放还龚先生的松。551. 白兔是白肚， 黑兔是黑肚。 白兔白肚不是黑肚， 黑兔黑肚不是白肚。552. 【导语】绕口令是中国民间语言游戏，将声母、韵母或声调极易混同的字，组成反复、重叠、绕口、拗口的句子，要求一口气急速念出。以下是无忧考网为大家准备的，希望对大家有帮助。 《阿牛放牛》 有个孩子叫阿牛， 阿牛上山放老牛， 老牛哞哞叫阿牛， 阿牛回家骑老牛。 《扣纽扣》 小牛扣扣使劲揪， 小妞扣扣对准扣眼扣， 小牛和小妞， 谁学会了扣纽扣? 《气球换皮球》 小齐吹气球，小于玩皮球。 小齐要拿气球换小于的皮球， 小于不拿皮球换小齐的气球。 儿童经典好玩的绕口令 《采蘑菇》 黑兔和白兔， 上山采蘑菇， 小猴和小鹿， 一齐来帮助， 猴和兔，兔和鹿， 高高兴兴采蘑菇。 《蛙和瓜》 绿青蛙，叫呱呱， 蹦到地里看西瓜。 西瓜夸蛙唱得好， 蛙夸西瓜长得大。 儿童经典绕口令 《鹅过河》 哥哥弟弟坡前坐， 坡上卧着一只鹅， 坡下流着一条河， 哥哥说：宽宽的河， 弟弟说：白白的鹅。 鹅要过河， 河要渡鹅。 不知是鹅过河， 还是河渡鹅。 《颠倒歌》 咬牛奶，喝面包， 夹着火车上皮包。 东西街，南北走， 出门看见人咬狗。 拿起狗来打砖头， 又怕砖头咬我手。 《兜装豆》 兜里装豆， 豆装满兜， 兜破漏豆。 倒出豆，补破兜， 补好兜，又装豆， 装满兜，不漏豆。553. 【导语】唐诗宋词绕口令大家知道多少呢?下面是无忧考网为大家整理的唐诗宋词绕口令，希望大家喜欢! 一个破烂鼓，扯点布来补， 不知是破布补烂鼓，还是烂鼓补破布， 只见布补鼓，鼓补布，补来补去，鼓不成鼓，布不成布， 唐诗宋词绕口令。 盘儿里摆着一个梨， 桌上放块橡皮泥， 小立用泥学捏梨，看着梨，手捏泥， 一会儿捏成一个梨，比一比，真梨假梨差不离。 山前住着个严园眼，山后住着袁眼园， 二人山前来比眼，不知道是严园眼比袁眼园的眼圆， 还是袁眼园比严园眼的眼圆 打南来了个瘸子，手里托着个碟子， 碟子里装着茄子，地下钉着个橛子， 绊倒了瘸子，撒了碟子里的茄子， 气得瘸子撇了碟子，拨了橛子，踩了茄子。 金蝉操琴蝴蝶舞， 青蛙蝈蝈打锣鼓， 农村八月多欢乐， 满场满院堆五谷。 一个破烂鼓，扯点布来补， 不知是破布补烂鼓，还是烂鼓补破布， 只见布补鼓，鼓补布，补来补去，鼓不成鼓，布不成布。 石室诗士施氏，嗜狮，誓食十狮。 氏时时适市视狮。十时，适十狮适市。 是时，适施氏适市。氏视是十狮， 恃矢势，使是十狮逝世。氏拾是十狮尸， 适石室。石室湿，氏使侍拭室。 石室拭，氏始试十狮尸，食时， 始识是十狮尸，实十石狮尸。试释是事。 半边莲，莲半边，半边莲长在山涧边。 半边天路过山涧边，发现这片半边莲。 半边天拿来一把镰，割了半筐半边莲。 半筐半边莲，送给边防连。 铜勺舀热油，铁勺舀凉油。 铜勺舀了热油舀凉油， 铁勺舀了凉油舀热油。 一勺热油一勺凉油， 热油凉油都是油。 八只小白兔， 住在八棱八角八座屋， 资料共享平台。 八个小孩要逮八只小白兔， 吓得小白兔， 不敢再住八棱八角八座屋。 四和十，十和四，十四和四十， 四十和十四。 说好四和十得靠舌头和牙齿， 谁说四十是细席， 他的舌头没用力;谁说十四是适时， 他的舌头没伸直。认真学，常练习， 十四、四十、四十四。 你也勤来我也勤， 生产同心土变金。 工人农民亲兄弟， 心心相印团结紧。 嘴说腿，腿说嘴， 嘴说腿爱跑腿， 腿说嘴爱卖嘴。 光动嘴不动腿， 光动腿不动嘴， 不如不长腿和嘴。 天上七颗星，树上七只鹰， 梁上七个钉，台上七盏灯。 拿扇扇了灯，用手拔了钉， 举枪打了鹰，乌云盖了星。 知之为知之，不知为不知， 不以不知为知之，不以知之为不知， 唯此才能求真知。 天上一颗星， 地上一个人， 星照人，人瞧星， 星照不清人， 人瞧不清星。 花花画扇画， 扇画花花画， 花花画扇扇花花， 扇花扇画花花画。 花枝弄影罩窗纱， 窗纱映日斜。 斜日映纱窗罩影， 罩影弄枝花。 长清黄，长渚苍， 苍鹭常落长渚唱。 苍鹭常唱长渚苍， 苍鹭常唱长渚黄。 青草丛，草丛青， 青青草里草青虫。 青虫钻进青草丛， 青草丛青草虫青。 京剧叫京剧， 警句叫警句。 京剧不能叫警句， 警句不能叫京剧。554. 苍鹭常落长渚唱 长清黄，长渚苍， 苍鹭常落长渚唱。 苍鹭常唱长渚苍， 苍鹭常唱长渚黄。 小凤提着圆灯笼， 小龙提着方灯笼。 小凤的圆灯笼上画着龙， 小龙的方灯笼上画着凤， 小凤要拿圆龙灯笼换小龙的方凤灯笼。 京剧叫京剧， 警句叫警句。 京剧不能叫警句， 警句不能叫京剧。555. 一个破烂鼓，扯点布来补， 不知是破布补烂鼓，还是烂鼓补破布， 只见布补鼓，鼓补布，补来补去，鼓不成鼓，布不成布。 盘儿里摆着一个梨绕口令 盘儿里摆着一个梨， 桌上放块橡皮泥， 小立用泥学捏梨，看着梨，手捏泥， 一会儿捏成一个梨，比一比，真梨假梨差不离。 山前住着个严园眼绕口令 山前住着个严园眼，山后住着袁眼园， 二人山前来比眼，不知道是严园眼比袁眼园的眼圆， 还是袁眼园比严园眼的眼圆556. 打南来了个瘸子，手里托着个碟子， 碟子里装着茄子，地下钉着个橛子， 绊倒了瘸子，撒了碟子里的茄子， 气得瘸子撇了碟子，拨了橛子，踩了茄子。 金蝉操琴蝴蝶舞绕口令 金蝉操琴蝴蝶舞， 青蛙蝈蝈打锣鼓， 农村八月多欢乐， 满场满院堆五谷。 一个破烂鼓绕口令 一个破烂鼓，扯点布来补， 不知是破布补烂鼓，还是烂鼓补破布， 只见布补鼓，鼓补布，补来补去，鼓不成鼓，布不成布。557. 石室诗士施氏，嗜狮，誓食十狮。氏时时适市视狮。十时，适十狮适市。是时，适施氏适市。氏视是十狮，恃矢势，使是十狮逝世。氏拾是十狮尸，适石室。石室湿，氏使侍拭室。石室拭，氏始试十狮尸，食时，始识是十狮尸，实十石狮尸。试释是事。558. 出西门走七步， 扒鸡皮补皮裤， 不知是皮裤补鸡皮， 还是鸡皮补皮裤? 八座屋 八只小白兔， 住在八棱八角八座屋。 八个小孩要逮八只小白兔， 吓得小白兔， 不敢再住八棱八角八座屋。 藤萝花和喇叭花 华华园里有一株藤萝花, 佳佳园里有一株喇叭花。 佳佳的喇叭花， 绕住了华华的藤萝花， 华华的藤萝花， 缠住了佳佳的喇叭花。 也不知道是藤萝花先绕住了喇叭花， 还是喇叭花先缠住了藤萝花。559. 蜜蜂酿蜂蜜， 蜂蜜养蜜蜂。 蜜养蜜蜂蜂酿蜜， 蜂酿蜂蜜蜜养蜂。 小毛与花猫 小毛抱着花猫，花猫用爪抓小毛， 小毛用手拍花猫，花猫抓破了小毛， 小毛打疼了花猫，小毛哭，花猫叫， 小毛松开了花猫，花猫跑离了小毛。 黄狗咬我手 清早上街走，走到周家大门口， 门里跳出一只大黄狗， 朝我哇啦哇啦吼。 我拾起石头打黄狗， 黄狗跳上来就咬我的手。 也不知我手里的石头 打没打着周家的大黄狗， 周家的大黄狗咬没咬着我的手? 小花猫 小花猫爱画画，先画一朵腊梅花， 又画一个小喇叭，带着腊梅花， 吹着小喇叭，回家去见妈妈， 妈妈见了笑哈哈。 铜勺铁勺舀油 铜勺舀热油，铁勺舀凉油。 铜勺舀了热油舀凉油， 铁勺舀了凉油舀热油。 一勺热油一勺凉油， 热油凉油都是油。560. 京剧叫京剧， 警句叫警句。 京剧不能叫警句， 警句不能叫京剧。561. 楼上一块破瓦， 楼下一匹骡马， 破瓦落下来打了骡马， 骡马跳起来踩了破瓦。562. 【导语】中国话博大精深，绕口令也是中国文化的一种，秀出你的好舌头跟朋友比比，谁能最快念出下面的绕口令吧。以下是无忧考网为大家准备的，希望对大家有帮助。 张家有个小英子， 王家有个小柱子。 张家的小英子， 自己穿衣洗袜子， 天天扫地擦桌子， 王家的小柱子， 捡到一只皮夹子， 还给后院大婶子。 小英子，小柱子， 他们都是好孩子。 白石白又滑，搬来白石搭白塔。 白石塔，白石塔，白石搭石塔， 白塔白石搭。搭好白石塔，白塔白又滑。 老唐端蛋汤，踏凳登宝塔， 只因凳太滑，汤洒汤烫塔。 桌上放个盆，盆里有个瓶， 砰砰啪啪，啪啪砰砰， 不知是瓶碰盆，还是盆碰瓶。 河里有只船，船上挂白帆， 风吹帆张船向前，无风帆落停下船。 墙上一个窗，窗上一支枪，窗下一箩糠。 枪落进了糠，糠埋住了枪。 窗要糠让枪，糠要枪上墙，墙要枪上窗。 互相不退让，糠赶不走枪，枪也上不了窗和墙。 炉东有个锤快锤， 炉西有个锤锤快， 两人炉前来比赛， 不知是锤快锤比锤锤快锤得快? 还是锤锤快比锤快锤锤得快? 八百标兵奔北坡， 北坡炮兵并排跑， 炮兵怕把标兵碰， 标兵怕碰炮兵炮。563. 【导语】传统的绕口令，多只注重字句的谐音，而忽视它的思想内容。以下是无忧考网为大家准备的，希望对大家有帮助。 1、植树 老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 2、白果树 我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 3、高高山上一条藤 高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 4、一捆葱 东边来个小朋友叫小松，手里拿着一捆葱。西边来个小朋友叫小丛，手里拿着小闹钟。小松手里葱捆得松，掉在地上一些葱。小丛忙放闹钟去拾葱，帮助小松捆紧葱。小松夸小丛像雷锋，小丛说小松爱劳动。 5、兜装豆 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 6、种冬瓜 东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。 7、葵花 葵花、蓖麻胖娃小筐手中拿，来到园中收葵花；小华小篮身上挎，一同进园收蓖麻。胖娃种的葵花花盘大，小华种的蓖麻密麻麻。小华去帮胖娃摘葵花，胖娃去帮小华收蓖麻。小华和胖娃，收了葵花、蓖麻献国家。 8、荷花和 一朵粉红大荷花，趴着一只活，八朵粉红大荷花，趴着八只活*。 9、花和瓜 瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 10、看花和吃瓜 妈妈爱栽花，爸爸爱种瓜；妈妈栽桃花，爸爸种西瓜；桃花红，红桃花，娃娃脸上笑哈哈；爸爸给我吃西瓜，娃娃心里乐开花。 11、护树 北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 12、石榴树上结辣椒 颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 13、黑豆放黑斗 黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。564. 贝贝背水杯，水杯贝贝背。贝贝背水杯背背水杯。水杯贝贝背，贝贝背水杯。肥混肥黑肥混灰肥，灰肥混黑肥。黑肥混灰肥，黑肥灰又黑。黑肥混灰肥，肥比黑肥灰；灰肥混黑肥，肥比灰肥黑。乌鸦说黑猪乌鸦站在黑猪背上说黑猪黑，黑猪说乌鸦比黑猪还要黑；乌鸦说它身比黑猪黑嘴不黑，黑猪听罢笑得嘿嘿嘿嘿。皮鞋 蒲鞋一只皮鞋，一只蒲鞋，皮鞋补蒲鞋，蒲鞋补皮鞋，皮鞋，蒲鞋，蒲鞋，皮鞋。白帽和白毛白猫手里有一顶白帽，白兔手中有一把白毛，白猫想拿手里的白帽，去换白兔手中的白毛，白兔不愿拿手中的白毛，去换白猫手里的白帽。俩白脖子陈州有个陈白脖子，毫州有个毫白脖子。陈州的陈白脖子和毫州的毫白脖子比白脖子。陈州的陈白脖子比不过毫州的毫白脖子，毫州的毫白脖子的白脖子，比不过陈州的陈白脖子的长脖子。白老八白老八门前栽了八棵白果树，从北边来了八个白八哥儿，白老八拿了八个巴达棍儿，565. 王婆卖瓜又卖花，一边卖来一边夸。又夸花，又夸瓜，夸瓜大，大夸花，夸来夸去没人来理她。瓜棚挂瓜瓜棚挂瓜，瓜挂瓜棚。风刮瓜，瓜碰棚。风刮棚，棚碰瓜。霍湖、郭海和汪活霍湖、郭海和汪活，三人一起烧茶喝。霍湖点火，郭海烧锅，汪活劈柴火，郭海问汪活为何未劈柴火？霍湖怪郭海，郭海怪汪活，汪活怪劈柴火为何劈不破？菠萝与陀螺坡上长菠萝，坡下玩陀螺。坡上掉菠萝，菠萝砸陀螺。砸破陀螺补陀螺，顶破菠萝剥菠萝。锅摞锅锅摞锅，摞锅摞。一共摞了六摞锅，六摞锅上摞六十六张罗面罗，罗面罗里摆六十六个调羹勺。瘸子和矬子南面来了个瘸子，腰里别着个橛子，北边来了个矬子，肩上挑着担茄子。别橛子的瘸子要用橛子换挑茄子的矬子的茄子，挑茄子的矬子不给别橛子的瘸子茄子。别橛子的瘸子抽出腰里的橛子打了挑茄子的矬子一橛子，挑茄子的矬子拿起茄子打了别橛子的瘸子一茄子。吊刀楼上吊刀刀倒吊着。（重复五遍）慢表表慢，慢表，慢表慢半秒。慢半秒，拨半秒，拨过半秒多半秒；多半秒，拨半秒，拨过半秒少半秒。拨来拨去是慢表，慢表表慢慢半秒。雕和箫一把雕刀，雕出好箫。刀是小雕刀，箫是“玉屏箫”。好箫出好调，箫靠好刀雕，刀要艺巧高。描庙东描庙，西描庙，左描庙，右描庙，调转头来描描庙。前描庙，后描庙。这一描，那一描，描得判官满脸毛。566. 贾家有女初出嫁，嫁到夏家学养虾，喂养的对虾个头儿大，卖到市场直加价。贾家爹爹会养鸭，鸭子虽肥伤庄稼。邻里吵架不融洽，贾家也学养对虾。小虾卡住了鸭子牙，大鸭咬住了虾的夹。夏家公公劝，贾家爹爹压，大鸭不怕吓，小虾装得嗲，夏家贾家没办法。分不清是鸭还是霞天空飘着一片霞，水上游来一群鸭。霞是五彩霞，鸭是麻花鸭，麻花鸭游进五彩霞，五彩霞网住麻花鸭。乐坏了鸭，拍碎了霞，分不清是鸭还是霞。孩子和鞋了孩子是孩子，鞋子是鞋子，孩子不是鞋子，鞋子不是孩子。是孩子穿鞋子，不是鞋子穿孩子。谁分不清鞋子和孩子，谁就念不准鞋子和孩子。杰杰和姐姐杰杰和姐姐，花园里面捉蝴蝶。杰杰去捉花中蝶，姐姐去捉叶上蝶。瓜瓜笑娃娃金瓜瓜，银瓜瓜，瓜棚上面结满瓜，瓜瓜落下来，打着小娃娃，娃娃叫妈妈，娃娃怪瓜瓜，瓜瓜笑娃娃。567. 朦胧彩霓虹，玲珑小聋童。聋童采柠檬，聋童不懵懂。谭老汉买蛋和炭谭家谭老汉，挑担到蛋摊，买了半担蛋，挑担到炭摊，买了半担炭，满担是蛋炭。老汉忙回赶，回家炒蛋饭。进门跨门槛，脚下绊一绊，跌了谭老汉，破了半担蛋，翻了半担炭，脏了木门槛。老汉看一看，急得满头汗，连说怎幺办，蛋炭完了蛋，老汉怎吃蛋炒饭。风吹藤动铜铃响东洞庭，西洞庭，洞庭山上一条藤，藤条顶上挂铜铃， 风吹藤动铜铃响，风停藤定铜铃静。炖冻豆腐会炖我的炖冻豆腐，来炖我的炖冻豆腐，不会炖我的炖冻豆腐，就别炖我的炖冻豆腐。要是混充会炖我的炖豆腐，那就吃不成我的炖冻豆腐。汤烫塔老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。568. 出八十八二十八,八个小孩儿把萝卜拔，你也拔，我也拔，看谁拔得多，看谁拔得大。你拔得不多个儿不小，我拔得不少个儿不大。一个萝卜一个坑儿，算算多少用车拉，一个加俩，俩加仨，七十二个加十八， 拿个算盘打一打，一百差俩九十八。 九个酒迷喝醉酒 九月九，九个酒迷喝醉酒。九个酒杯九杯酒，九个酒迷喝九口。喝罢九口酒，又倒九杯酒。九个酒迷端起酒，“咕咚、咕咚”又九口。九杯酒，酒九口，喝罢九个酒迷醉了酒。 酒 换 油 一葫芦酒九两六，一葫芦油六两九。六两九的油，要换九两六的酒，九两六的酒，不换六两九的油。 牛 驮 油 九十九头牛，驮着九十九个篓。每篓装着九十九斤油。牛背油篓扭着走，油篓磨坏篓漏油，九十九斤一个篓，还剩六十六斤油。你说漏了几十几斤油？ 十 和 四 四是四，十是十，十四是十四，四十是四十。莫把四字说成十，休将十字说成四。若要分清四十和十四，经常练说十和四。 数 狮 子 公园有四排石狮子，每排是十四只大石狮子，每只大石狮子背上是一只小石狮子，每只大石狮子脚边是四只小石狮子，史老师领四十四个学生去数石狮子，你说共数出多少只大石狮子和多少只小石狮子？569. 天上七颗星，地下七块冰，树上七只鹰，梁上七根钉，台上七盏灯。呼噜呼噜扇灭七盏灯，噯唷噯唷拔掉七根钉，呀嘘呀嘘赶走七只鹰，抬起一脚踢碎七块冰，飞来乌云盖没七颗星。一连念七遍就聪明。 天上七颗星 天上七颗星，地上七块冰，台上七盏灯，树上七只莺，墙上七枚钉。吭唷吭唷拔脱七枚钉。喔嘘喔嘘赶走七只莺。乒乒乓乓踏坏七块冰。一阵风来吹来七盏灯。一片乌云遮掉七颗星。 白 老 八 白老八门前栽了八颗白果树，从北边飞来了八个白八哥儿不知在哪住。白老八拿了八个巴达棍儿要打八个白八哥儿，八个八哥儿飞上了八颗白果树，不知道白老八拿这八个巴达棍儿打着了八个白八哥儿，还是打着了八颗白果树。 八 座 屋 八只小白兔，住在八棱八角八座屋。八个小孩要逮八只小白兔，吓得小白兔，不敢再住八棱八角八座屋。570. 六十六岁的陆老头，盖了六十六间楼，买了六十六篓油，养了六十六头牛，栽了六十六棵垂杨柳。六十六篓油，堆在六十六间楼；六十六头牛，扣在六十六棵垂杨柳。忽然一阵狂风起，吹倒了六十六间楼，翻倒了六十六篓油，折断了六十六棵垂杨柳，砸死了六十六头牛，急煞了六十六岁的陆老头。 老六放牛 柳林镇有个六号楼，刘老六住在六号楼。有一天，来了牛老六，牵了六只猴；来了侯老六，拉了六头牛；来了仇老六，提了六篓油；来了尤老六，背了六匹绸。牛老六、侯老六、仇老六、尤老六，住上刘老六的六号楼，半夜里，牛抵猴，猴斗牛，撞倒了仇老六的油，油坏了尤老六的绸。牛老六帮仇老六收起油，侯老六帮尤老六洗掉绸上油，拴好牛，看好猴，一同上楼去喝酒。571. 三月三，小三去登山。上山又下山，下山又上山。登了三次山，跑了三里三。出了一身汗，湿了三件衫。小三山上大声喊：“离天只有三尺三！” 司小四和史小世 司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。司小四说我四十四斤四两西红柿可以增加营养防近视，史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。 四 和 十 四和十，十和四，十四和四十，四十和十四。说好四和十得靠舌头和牙齿谁说四十是“细席”，他的舌头没用力；谁说十四是“适时”，他的舌头没伸直。认真学，常练习，十四、四十、四十四。 石小四和史肖石 石小四，史肖石，一同来到阅览室。石小四年十四，史肖石年四十。年十四的石小四爱看诗词，年四十的史肖石爱看报纸。年四十的史肖石发现了好诗词，忙递给年十四的石小四，年十四的石小四见了好报纸，忙递给年四十的史肖石。572. 一个半罐是半罐，两个半罐是一罐；三个半罐是一罐半，四个半罐是两罐；五个半罐是两罐半，六个半罐是三满罐；七个、八个、九个半罐，请你算算是多少罐。 两 个 排 营房里出来两个排，直奔正北菜园来，一排浇波菜，二排砍白菜。剩下八百八十八棵大白菜没有掰。一排浇完了波菜，又把八百八十八棵大白菜掰下来；二排砍完白菜，把一排掰下来的八百八十八棵大白菜背回来。 酸 枣 子 山上住着三老子，山下住着三小子，山腰住着三哥三嫂子。 山下三小子，找山当腰三哥三嫂子，借三斗三升酸枣子， 山当腰三哥三嫂子，借给山下三小子三斗三升酸枣子。 山下三小子，又找山上三老子，借三斗三升酸枣子， 山上三老子，还没有三斗三升酸枣子，只好到山当腰找三哥三嫂子， 给山下三小子借了三斗三升酸枣子。过年山下三小子打下酸枣子， 还了山当腰三哥三嫂子，两个三斗三升酸枣子。573. 小溪流水哗啦啦，小华手拿簸萁去小溪里捞河虾，一捞捞起一只大河虾和半簸萁烂泥沙。虾儿跳水响哗哗，小花簸萁里只剩泥沙没有虾。妈妈骂马妈妈种麻，我去放马，马吃了麻，妈妈骂马。六叔和六舅好六叔和好六舅，借给六斗六升绿绿豆。打罢秋，接住豆，再还六叔六舅六斗六升绿绿豆。小秋和小牛 小妞妞，叫小秋，梳着两个小抓鬏，小胖胖，叫小牛，穿着一个小兜兜。小秋帮着小牛记扣扣，小牛帮小秋剥豆豆，小秋、小牛手拉手，一块儿玩，一块儿走。 574. 小牛放学去打球，踢倒老刘一瓶油，小牛回家取来油，向老刘道歉又赔油，老刘不要小牛还油，小牛硬要把油还给老刘，老刘夸小牛，小直摇头，你猜老刘让小牛还油，还是不让小牛还油。送 花华华有两朵红花，红红有两朵黄花，华华想要黄花，红红想要红花，华华送给红红一朵红花，红红送给华华一朵黄花。好 孩 子张家有个小英子，王家有个小柱子。张家的小英子，自己穿衣洗袜子，天天扫地擦桌子，王家的小柱子，捡到一只皮夹子，还给后院大婶子。小英子，小柱子，他们都是好孩子。任命、人名任命是任命，人名是人名，任命人名不能错，错了人名错任命。四 老 伯郭老伯、骆老伯，毕老伯、柏老伯，郭骆毕柏四老伯，约着城北买菱角，买得菱角阁上剥，菱角壳戳了四老伯的脚。 575. 王婆卖瓜又卖花，一边卖来一边夸，又夸花，又夸瓜，夸瓜大，大夸花，瓜大，花好，笑哈哈。分 果 果多多和哥哥，坐下分果果。哥哥让多多，多多让哥哥。都说要小个，外婆乐呵呵。南南有个篮南南有个篮篮，篮篮装着盘盘，盘盘放着碗碗，碗碗盛着饭饭。南南翻了篮篮，篮篮扣了盘盘，盘盘打了碗碗，碗碗撒了饭饭。瘸 子北边来了一个瘸子,背着一捆橛子。南边来了一个瘸子，背着一筐茄子。背橛子的瘸子打了背茄子的瘸子一橛子。背茄子的瘸子打了背橛子的瘸子一茄子。小华和胖娃小华和胖娃，两人种花又种瓜，小华会种花不会种瓜，胖娃会种瓜不会种花，小华教胖娃种花，胖娃教小华种瓜。白家伯伯北贫坡上白家有个伯伯，家里养着一百八十八只白鹅，门口种着一百八十八棵白果，树上住着一百八十八只八哥。八哥在白果树上吃白果，白鹅气得直叫：我饿！我饿！ 576. 天上一群大白鸽，河里一群大白鹅。白鸽尖尖红嘴壳，白鹅曲项向天歌。白鸽剪开云朵朵，白鹅拨开浪波波。鸽乐呵呵，鹅活泼波，白鹅白鸽碧波蓝天真快乐。小鱼大雁小与入鱼网鱼网捕鱼鱼难逃，大雁过雁塔雁塔留雁雁不留。雾早晨下大雾，山里看不见路，急坏了小猪、小兔和小鹿。小兔领小猪，小猪拉小鹿，拉着藤，扶着树，一步一步走山路。秋风婆婆来帮助，呼——呼——呼—— 一下吹散满天雾。猫吃桃河边有座窑，窑上有个槽，槽里放件袍，袍包个桃。对岸有只猫，想吃窑上槽里袍包桃，可惜岸上没有桥。过不了河，上不了窑，够不找槽，咬不住袍，吃不了桃。白庙、白猫、白帽山顶有座白庙，白庙里有只白猫。白庙外有顶白帽，白猫看见了白帽，叨着白帽跑进了白庙。牛和油买来一桶油，跑来一头牛，踢翻桶里油，牛角都是油。鼠吃豆和油鼠咬豆囤囤漏豆，鼠啃油篓篓漏油篓油，豆囤漏豆鼠啃豆，油篓漏油鼠吸油。 577. 妈妈爱栽花，爸爸爱种瓜；妈妈栽桃花，爸爸种西瓜；桃花红，红桃花，娃娃脸上笑哈哈；爸爸给我吃西瓜，娃娃心里乐开花。护 树北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。石榴树上结辣椒颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。黑豆放黑斗黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。 578. 东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。收 葵 花葵花、蓖麻胖娃小筐手中拿，来到园中收葵花；小华小篮身上挎，一同进园收蓖麻。胖娃种的葵花花盘大，小华种的蓖麻密麻麻。小华去帮胖娃摘葵花，胖娃去帮小华收蓖麻。小华和胖娃，收了葵花、蓖麻献国家。荷花和蛤蟆一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。花 和 瓜瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 579. 老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。白果树我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。高高山上一条藤高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。一 捆 葱东边来个小朋友叫小松，手里拿着一捆葱。西边来个小朋友叫小丛，手里拿着小闹钟。小松手里葱捆得松，掉在地上一些葱。小丛忙放闹钟去拾葱，帮助小松捆紧葱。小松夸小丛像雷锋，小丛说小松爱劳动。兜 装 豆兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 580. .棚和瓶洪家地下有个棚，冯家房上有个瓶。 冯洪两家猫打架，弄倒了洪家的棚，打碎了冯家的瓶。 冯家要赔洪家的棚，洪家要赔冯家的瓶。 不知冯家要赔洪家的棚，还是洪家要赔冯家的瓶。碰碰车碰碰车，车碰碰，坐着朋朋和平平。 平平开车碰朋朋，朋朋开车碰平平，不知是平平碰朋朋，还是朋朋碰平平。 东边一座楼东边一座楼，楼上两人打拳头。 拳头打，打拳头。来了一个人，拉了一头牛，将牛拴在楼脚下，看他两人打拳头。 拳头打，打拳头。又来了一个人，领了一只猴，将猴放在牛脚下，看他两人打拳头。 拳头打，打拳头。又来了一个人，挑了一担油，将油放在猴脚下，看他两人打拳头。 拳头打，打拳头。又来了一个人，挑了一担绸，将绸放在油脚下，看他两人打拳头。 拳头打，打拳头，两人打垮车边楼。 垮子楼，压倒牛，牛一蹲，蹲倒猴，猴一抓，抓倒油，油一泼，泼上绸。 绸问油，卖油买绸来赔绸；油问猴，卖猴买油来赔油； 猴问牛，卖牛买猴来赔猴；牛问楼，卖楼买牛来赔牛。 只问绸扯油来油扯猴，猴扯牛来牛扯楼。猴子吃掉小桃子树上有只小桃子，树下有只小猴子。风吹桃树哗哗响，树上掉下小桃子。 桃子打着小猴子，猴子吃掉小桃子。 581. 嘴和腿嘴说腿，腿说嘴，嘴说腿爱跑腿，腿说嘴爱卖嘴。 光动嘴不动腿，光动腿不动嘴，不如不长腿和嘴。铜勺铁勺舀油铜勺舀热油，铁勺舀凉油。铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。 一勺热油一勺凉油，热油凉油都是由。 狗南边来了他大大伯子家的大搭拉尾巴耳朵狗， 北边来了他二大伯子家的二搭拉尾巴耳朵狗。 他大大伯家的大搭拉尾巴耳朵狗，咬了他二大伯家的二搭拉尾巴耳朵狗一口； 他二大伯家的二搭拉尾巴耳朵狗，也咬了他大大伯家的大搭拉尾巴耳朵狗一口。 不知是他大大伯家的大搭拉尾巴耳朵狗，先咬了他二大伯家的二搭拉尾巴耳朵狗； 还是他二大伯家的二搭拉尾巴耳朵狗，先咬了他大大伯家的大搭拉尾巴耳朵狗。水连天天连水，水连天，水天一色望无边。兰兰的天似绿水，绿绿的水如蓝天。 到底是天连水，还是水连天？ 582. 蒋家砌了一垛墙，杨家养了一只羊，杨家羊，撞塌了蒋家的墙，蒋家的墙，压死了杨家的羊，蒋家要杨家赔墙，杨家要蒋家赔羊。 种 冬 瓜东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。颠 倒 歌太阳从西往东落，听我唱个颠倒歌。天上打雷没有响，地上石头滚上坡。江里骆驼会下蛋，山上鲤鱼搭成窝。腊月炎热直流汗，六月寒冷打哆嗦。妹照镜子头梳手，门外口袋把驴驮。青 龙 洞 青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。 583. 锅树上一个窝，树下一口锅，窝掉下来打着锅，窝和锅都破，锅要窝赔锅，窝要锅赔窝，闹了半天，不知该锅赔窝，还是窝赔锅。 扁担和板凳板凳宽，扁担长，板凳比扁担宽，扁担比板凳长，扁担要绑在板凳上，板凳不让扁担绑在板凳上，扁担偏要板凳让扁担绑在板凳上。造 房 子捡颗小石子，在地上画个方格子，画好了格子造房子，画个大方格子造个大房子，画个小方格子造个小房子，楼上的房子分给鸽子，楼下的房子分给小兔子。搭 房 子红红的好朋友蓝蓝会搭红房子，蓝蓝的好朋友红红会搭蓝房子。会搭红房子的蓝蓝，愿帮会搭蓝房子的红红搭红房子，会搭蓝房子的红红，愿帮会搭红房子的蓝蓝搭蓝房子。青 龙 洞青龙洞中龙做梦，青龙做梦出龙洞，做了千年万载梦，龙洞困龙在深洞。自从来了新愚公，愚公捅开青龙洞，青龙洞中涌出龙，龙去农田做农工。 皮鞋、蒲鞋一只皮鞋，一只蒲鞋，皮鞋补蒲鞋，蒲鞋补皮鞋，皮鞋、蒲鞋，蒲鞋、皮鞋…… 584. 白石白又滑，搬来白石搭白塔。白石塔，白石塔，白石搭石塔，白塔白石搭。搭好白石塔，白塔白又滑。汤 烫 塔老唐端蛋汤，踏凳登宝塔，只因凳太滑，汤洒汤烫塔。盆 和 瓶桌上放个盆，盆里有个瓶，砰砰啪啪，啪啪砰砰，不知是瓶碰盆，还是盆碰瓶。河里有只船河里有只船，船上挂白帆，风吹帆张船向前，无风帆落停下船。枪 和 糠墙上一个窗，窗上一支枪，窗下一箩糠。枪落进了糠，糠埋住了枪。窗要糠让枪，糠要枪上墙，墙要枪上窗。互相不退让，糠赶不走枪，枪也上不了窗和墙。比 锤炉东有个锤快锤，炉西有个锤锤快，两人炉前来比赛，不知是锤快锤比锤锤快锤得快？还是锤锤快比锤快锤锤得快？ 585. 绿葡萄又甜又酸， 紫葡萄又酸又甜。 绿葡萄说：绿葡萄比紫葡萄酸， 紫葡萄说：紫锻萄比绿葡萄甜。 不知你是爱吃绿葡萄的酸， 还是爱吃紫葡萄的甜?586. 张家有八百八十八只大公骆驼， 李家有八百八十八只大母骆驼。 李家要用他家里的四百四十四只大母骆驼， 来换张家里的四百四十四只大公骆驼。 两家换完了， 李家成了八百八十八只大公母骆驼， 张家也成了八百十八只大母公骆驼。 两家骆驼合一起， 还是八百八十八只大公骆驼和八十八只大母百骆驼， 共合是一千七百七十六只大公母骆驼。587. 伯伯簸谷子， 簸去谷秕子。 婆婆簸谷子， 簸去秕谷子。 伯伯和婆婆， 簸谷作种子。588. 从前有个猪八戒， 走到百花桥娘头， 跑到百花店里头， 坐勒八仙台娘头， 吃腊铜钱八元八角八分八厘八、八、八、八、八……589. 皮子包呢子， 呢子包皮子。 呢子外有皮子， 皮子里有呢子。590. 盘盘坐，分果果。 果果青，分花生。 花生香，分白糖。 白糖粘，分盐蛋。 盐蛋咸，吃不完。591. 一块土粗布， 一条粗布裤， 哥哥屋里补布裤， 飞针走线自己做。 粗布裤上补粗布， 土粗布补粗布裤， 哥哥穿上粗布裤， 艰苦朴素牢记住。592. 【导语】以下是无忧考网为大家整理的关于植物绕口令，欢迎大家阅读！ 换斑竹 斑竹林里头看干斑竹， 包谷林里头有干包谷， 潘家三虎直进包谷林，掰了一担干包谷， 回家路过斑竹要，换了三根干斑竹。 看花和吃瓜 妈妈爱栽花， 爸爸爱种瓜; 妈妈栽桃花， 爸爸种西瓜; 桃花红，红桃花， 娃娃脸上笑哈哈; 爸爸给我吃西瓜， 娃娃心里乐开花。 白果树 我从伯伯门前过， 看见伯爹伯妈前种着白果树， 白果树上站着百十百个白斑鸠， 我就捡了百十百块白石头， 打那百十百个白斑鸠。 青草丛 青草丛，草丛青， 青青草里草青虫; 青虫钻进青草丛， 青草丛青草虫青。 高高山上一条藤 高高山上一条藤， 藤条头上挂铜铃， 风吹藤动铜铃动， 风停藤停铜铃停。593. 【导语】经常说绕口令，能够提高语言表达力，并使思维更具敏捷性、灵活性和准确性。下面是无忧考网为大家整理的关于植物绕口令，欢迎大家阅读！ 百棵白果树上结了一百八十八个 白皮、白把、白肉、白籽、白花、白色白果; 百棵白果树上歇了一百八十八个 白头、白颈、白翅、白腿、白脚、白花家八哥。 绿葡萄又甜又酸， 紫葡萄又酸又甜。 绿葡萄说：绿葡萄比紫葡萄酸， 紫葡萄说：紫锻萄比绿葡萄甜。 不知你是爱吃绿葡萄的酸， 还是爱吃紫葡萄的甜? 八株毛竹八个节， 八只桠枝八张叶， 八只八哥住啦八株毛竹八个节里八只桠枝八张叶里歇。 八个姑娘掮了八个棒条， 勿许给那八只八哥住啦八株毛竹个节里八只桠枝八张叶里歇。 小花小筐手里拿， 种了葵花收葵花。 小华小篮身上挎， 种了蓖麻收蓖麻。 小花的葵花花盘大， 摘葵花小华帮小花; 小华的蓖麻密麻麻， 收蓖麻小花帮小华。 红花儿，花儿红。 黄花儿，花儿黄。 红花儿黄花儿黄又红， 黄花儿红花儿红又黄。 红葫芦红，黄葫芦黄。 红葫芦比黄葫芦红， 黄葫芦比红葫芦黄。 山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 巴老爷有八十八颗芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八颗芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八颗芭蕉树， 巴老爷在八十八棵树边哭。 红红的红红萝卜， 白白的白白萝卜。 红红的红红萝卜比白白的白白萝卜红， 白白的白白萝卜比红红的红红萝卜白。 红红的红红萝卜拌白白的白白萝卜， 白白的白白萝卜拦红红的红红萝卜。 红红的红红萝卜又红又白， 白白的白白萝卜又白又红。 你是爱吃又红又白的红红的红红萝卜， 还是爱吃又白又红的白白的白白萝卜。 瓜蔓开花，瓜花结瓜。 要想吃瓜，别掐瓜花。 瓜蔓开花花结瓜， 瓜花结瓜圆又大。 东门董家采了冬瓜， 西门胥家采了西瓜。 这人道：“东门董家采的冬瓜大过西门胥家采的大西瓜”。 那人说道：“西门胥家采的西瓜大过东门董家采的大冬瓜。” 粗树和粗竹，山麓比谁粗。 粗竹说粗竹比粗树粗， 粗树说粗树比粗竹粗， 不知到底是粗竹粗过粗树， 还是粗树粗过粗竹?594. 绕口令：植物绕口令 花和瓜 瓜藤开花像喇叭， 娃娃爱花不去掐。 瓜藤开花，瓜花结花。 没花就没瓜。 吃瓜要爱花， 娃娃爱花也爱瓜。 柿子、李子、栗子、梨 一二三四五六七，七六五四三二一， 七个阿姨来摘果，七只篮子手中提， 七种果子摆七样， 苹果、桃儿、石榴、柿子、李子、栗子、梨。 果果开花一朵朵 绿秧棵，开花朵， 花朵朵朵结果果。 果果开花一朵朵， 朵朵花朵像云朵。 种冬瓜 东门童家门东董家， 童、董两家同种冬瓜， 童家知道董家冬瓜大， 来到董家学种冬瓜。 门东董家懂种冬瓜， 来教东门童家种冬瓜。 童家、董家都懂得种冬瓜， 童、董两家的冬瓜比桶大。 豆地有豆 豆地有豆， 低头捡豆， 豆捡在手， 豆装豆篓。 浇花 浇花浇花快浇花， 你不浇花不开花。 一盆水，一壶茶， 浇好水，开好花。 两盆水，两壶茶， 花开好，花开大。 植 树 老顾大顾和小顾， 扛锄植树走出屋。 漫天大雾罩峡谷， 雾像灰布满路铺， 大顾关注喊小顾。 老顾扛锄又提树， 雾里植树尽义务。595. 植 树 老顾大顾和小顾，扛锄植树走出屋。漫天大雾罩峡谷，雾像灰布满路铺，大顾关注喊小顾。老顾扛锄又提树，雾里植树尽义务。 白果树 我从伯伯门前过，看见伯爹伯妈门前种着白果树，白果树上站着百十百个白斑鸠，我就拣了百十百块白石头，打那百十百个白斑鸠。 高高山上一条藤 高高山上一条藤，藤条头上挂铜铃。风吹藤动铜铃动，风停藤停铜铃停。 一 捆 葱 东边来个小朋友叫小松，手里拿着一捆葱。西边来个小朋友叫小丛，手里拿着小闹钟。小松手里葱捆得松，掉在地上一些葱。小丛忙放闹钟去拾葱，帮助小松捆紧葱。小松夸小丛像雷锋，小丛说小松爱劳动。 兜 装 豆 兜里装豆，豆装满兜，兜破漏豆。倒出豆，补破兜，补好兜，又装豆，装满兜，不漏豆。 种 冬 瓜 东门童家门东董家，童、董两家，同种冬瓜，童家知道董家冬瓜大，来到董家学种冬瓜。门东董家懂种冬瓜，来教东门童家种冬瓜。童家、董家都懂得种冬瓜，童、董两家的冬瓜比桶大。 收 葵 花 葵花、蓖麻胖娃小筐手中拿，来到园中收葵花;小华小篮身上挎，一同进园收蓖麻。胖娃种的葵花花盘大，小华种的蓖麻密麻麻。小华去帮胖娃摘葵花，胖娃去帮小华收蓖麻。小华和胖娃，收了葵花、蓖麻献国家。 荷花和蛤蟆 一朵粉红大荷花，趴着一只活蛤蟆，八朵粉红大荷花，趴着八只活蛤蟆。 花 和 瓜 瓜藤开花像喇叭，娃娃爱花不去掐。瓜藤开花瓜花结花，没花就没瓜。吃瓜要爱花，娃娃爱花也爱瓜。 看花和吃瓜 妈妈爱栽花，爸爸爱种瓜;妈妈栽桃花，爸爸种西瓜;桃花红，红桃花，娃娃脸上笑哈哈;爸爸给我吃西瓜，娃娃心里乐开花。 护 树 北风吹摇路边树，小陆上前把树护。一个木竿路旁竖，一根绳子拴捆住。树有木竿做支柱，木竿支树树稳固。 石榴树上结辣椒 颠倒话，话颠倒，石榴树上结辣椒。东西大路南北走，碰见兔子去咬狗。拿住狗，打砖头，砖头咬住我的手。 黑豆放黑斗 黑豆放在黑斗里，黑斗里边放黑豆，黑豆放黑斗，黑斗放黑豆，不知黑豆放黑斗，还是黑斗放黑豆。596. 绿葡萄比紫葡萄 绿葡萄又甜又酸， 紫葡萄又酸又甜。 绿葡萄说：绿葡萄比紫葡萄酸， 紫葡萄说：紫锻萄比绿葡萄甜。 不知你是爱吃绿葡萄的酸， 还是爱吃紫葡萄的甜? 八株毛竹 八株毛竹八个节， 八只桠枝八张叶， 八只八哥住啦八株毛竹八个节里八只桠枝八张叶里歇。 八个姑娘掮了八个棒条， 勿许给那八只八哥住啦八株毛竹个节里八只桠枝八张叶里歇。 小花的葵花和小华的蓖麻 小花小筐手里拿， 种了葵花收葵花。 小华小篮身上挎， 种了蓖麻收蓖麻。 小花的葵花花盘大， 摘葵花小华帮小花; 小华的蓖麻密麻麻， 收蓖麻小花帮小华。 红花黄花 红花儿，花儿红。 黄花儿，花儿黄。 红花儿黄花儿黄又红， 黄花儿红花儿红又黄。 红葫芦黄葫芦 红葫芦红，黄葫芦黄。 红葫芦比黄葫芦红， 黄葫芦比红葫芦黄。 山上五棵树 山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 巴老爷和芭蕉树 巴老爷有八十八颗芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八颗芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八颗芭蕉树， 巴老爷在八十八棵树边哭。 红萝卜白萝卜 红红的红红萝卜， 白白的白白萝卜。 红红的红红萝卜比白白的白白萝卜红， 白白的白白萝卜比红红的红红萝卜白。 红红的红红萝卜拌白白的白白萝卜， 白白的白白萝卜拦红红的红红萝卜。 红红的红红萝卜又红又白， 白白的白白萝卜又白又红。 你是爱吃又红又白的红红的红红萝卜， 还是爱吃又白又红的白白的白白萝卜。 瓜蔓瓜花 瓜蔓开花，瓜花结瓜。 要想吃瓜，别掐瓜花。 瓜蔓开花花结瓜， 瓜花结瓜圆又大。 东门董家的冬瓜和西门胥家的西瓜 东门董家采了冬瓜， 西门胥家采了西瓜。 这人道：“东门董家采的冬瓜大过西门胥家采的大西瓜”。 那人说道：“西门胥家采的西瓜大过东门董家采的大冬瓜。”597. 导语：绕口令又称急口令、吃口令、拗口令等。是一种中国传统的语言游戏，由于它是将若干双声、叠词词汇或发音相同、相近的语、词有意集中在一起，组成简单、有趣的语韵，下面是无忧考网小编整理的绕口令：植物绕口令，欢迎来参考！ 花和瓜 瓜藤开花像喇叭， 娃娃爱花不去掐。 瓜藤开花，瓜花结花。 没花就没瓜。 吃瓜要爱花， 娃娃爱花也爱瓜。 柿子、李子、栗子、梨 一二三四五六七，七六五四三二一， 七个阿姨来摘果，七只篮子手中提， 七种果子摆七样， 苹果、桃儿、石榴、柿子、李子、栗子、梨。 果果开花一朵朵 绿秧棵，开花朵， 花朵朵朵结果果。 果果开花一朵朵， 朵朵花朵像云朵。 种冬瓜 东门童家门东董家， 童、董两家同种冬瓜， 童家知道董家冬瓜大， 来到董家学种冬瓜。 门东董家懂种冬瓜， 来教东门童家种冬瓜。 童家、董家都懂得种冬瓜， 童、董两家的冬瓜比桶大。 豆地有豆 豆地有豆， 低头捡豆， 豆捡在手， 豆装豆篓。 浇花 浇花浇花快浇花， 你不浇花不开花。 一盆水，一壶茶， 浇好水，开好花。 两盆水，两壶茶， 花开好，花开大。 植 树 老顾大顾和小顾， 扛锄植树走出屋。 漫天大雾罩峡谷， 雾像灰布满路铺， 大顾关注喊小顾。 老顾扛锄又提树， 雾里植树尽义务。598. 导语：关于植物的绕口令有哪些呢，下面无忧考网小编为大家搜集的一篇“最新植物绕口令大全”，供大家参考借鉴，希望可以帮助到有需要的朋友! 绿葡萄又甜又酸， 紫葡萄又酸又甜。 绿葡萄说：绿葡萄比紫葡萄酸， 紫葡萄说：紫锻萄比绿葡萄甜。 不知你是爱吃绿葡萄的酸， 还是爱吃紫葡萄的甜? 八株毛竹八个节， 八只桠枝八张叶， 八只八哥住啦八株毛竹八个节里八只桠枝八张叶里歇。 八个姑娘掮了八个棒条， 勿许给那八只八哥住啦八株毛竹个节里八只桠枝八张叶里歇。 小花小筐手里拿， 种了葵花收葵花。 小华小篮身上挎， 种了蓖麻收蓖麻。 小花的葵花花盘大， 摘葵花小华帮小花; 小华的蓖麻密麻麻， 收蓖麻小花帮小华。 红花儿，花儿红。 黄花儿，花儿黄。 红花儿黄花儿黄又红， 黄花儿红花儿红又黄。 红葫芦红，黄葫芦黄。 红葫芦比黄葫芦红， 黄葫芦比红葫芦黄。 山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 巴老爷有八十八颗芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八颗芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八颗芭蕉树， 巴老爷在八十八棵树边哭。 红红的红红萝卜， 白白的白白萝卜。 红红的红红萝卜比白白的白白萝卜红， 白白的白白萝卜比红红的红红萝卜白。 红红的红红萝卜拌白白的白白萝卜， 白白的白白萝卜拦红红的红红萝卜。 红红的红红萝卜又红又白， 白白的白白萝卜又白又红。 你是爱吃又红又白的红红的红红萝卜， 还是爱吃又白又红的白白的白白萝卜。 瓜蔓开花，瓜花结瓜。 要想吃瓜，别掐瓜花。 瓜蔓开花花结瓜， 瓜花结瓜圆又大。 东门董家的冬瓜和西门胥家的西瓜 东门董家采了冬瓜， 西门胥家采了西瓜。 这人道：“东门董家采的冬瓜大过西门胥家采的大西瓜”。 那人说道：“西门胥家采的西瓜大过东门董家采的大冬瓜。”599. 百棵白果树 百棵白果树上结了一百八十八个 白皮、白把、白肉、白籽、白花、白色白果; 百棵白果树上歇了一百八十八个 白头、白颈、白翅、白腿、白脚、白花家八哥。 绿葡萄比紫葡萄 绿葡萄又甜又酸， 紫葡萄又酸又甜。 绿葡萄说：绿葡萄比紫葡萄酸， 紫葡萄说：紫锻萄比绿葡萄甜。 不知你是爱吃绿葡萄的酸， 还是爱吃紫葡萄的甜? 八株毛竹 八株毛竹八个节， 八只桠枝八张叶， 八只八哥住啦八株毛竹八个节里八只桠枝八张叶里歇。 八个姑娘掮了八个棒条， 勿许给那八只八哥住啦八株毛竹个节里八只桠枝八张叶里歇。 小花的葵花和小华的蓖麻 小花小筐手里拿， 种了葵花收葵花。 小华小篮身上挎， 种了蓖麻收蓖麻。 小花的葵花花盘大， 摘葵花小华帮小花; 小华的蓖麻密麻麻， 收蓖麻小花帮小华。 红花黄花 红花儿，花儿红。 黄花儿，花儿黄。 红花儿黄花儿黄又红， 黄花儿红花儿红又黄。 红葫芦黄葫芦 红葫芦红，黄葫芦黄。 红葫芦比黄葫芦红， 黄葫芦比红葫芦黄。 山上五棵树 山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 巴老爷和芭蕉树 巴老爷有八十八颗芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八颗芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八颗芭蕉树， 巴老爷在八十八棵树边哭。 红萝卜白萝卜 红红的红红萝卜， 白白的白白萝卜。 红红的红红萝卜比白白的白白萝卜红， 白白的白白萝卜比红红的红红萝卜白。 红红的红红萝卜拌白白的白白萝卜， 白白的白白萝卜拦红红的红红萝卜。 红红的红红萝卜又红又白， 白白的白白萝卜又白又红。 你是爱吃又红又白的红红的红红萝卜， 还是爱吃又白又红的白白的白白萝卜。 瓜蔓瓜花 瓜蔓开花，瓜花结瓜。 要想吃瓜，别掐瓜花。 瓜蔓开花花结瓜， 瓜花结瓜圆又大。 东门董家的冬瓜和西门胥家的西瓜 东门董家采了冬瓜， 西门胥家采了西瓜。 这人道：“东门董家采的冬瓜大过西门胥家采的大西瓜”。 那人说道：“西门胥家采的西瓜大过东门董家采的大冬瓜。” 粗树和粗竹 粗树和粗竹，山麓比谁粗。 粗竹说粗竹比粗树粗， 粗树说粗树比粗竹粗， 不知到底是粗竹粗过粗树， 还是粗树粗过粗竹?600. 导语：关于植物的绕口令有哪些呢，下面无忧考网小编为大家搜集的一篇“最新植物绕口令大全”，供大家参考借鉴，希望可以帮助到有需要的朋友! 绿葡萄又甜又酸， 紫葡萄又酸又甜。 绿葡萄说：绿葡萄比紫葡萄酸， 紫葡萄说：紫锻萄比绿葡萄甜。 不知你是爱吃绿葡萄的酸， 还是爱吃紫葡萄的甜? 八株毛竹八个节， 八只桠枝八张叶， 八只八哥住啦八株毛竹八个节里八只桠枝八张叶里歇。 八个姑娘掮了八个棒条， 勿许给那八只八哥住啦八株毛竹个节里八只桠枝八张叶里歇。 小花小筐手里拿， 种了葵花收葵花。 小华小篮身上挎， 种了蓖麻收蓖麻。 小花的葵花花盘大， 摘葵花小华帮小花; 小华的蓖麻密麻麻， 收蓖麻小花帮小华。 红花儿，花儿红。 黄花儿，花儿黄。 红花儿黄花儿黄又红， 黄花儿红花儿红又黄。 红葫芦红，黄葫芦黄。 红葫芦比黄葫芦红， 黄葫芦比红葫芦黄。 山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 巴老爷有八十八颗芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八颗芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八颗芭蕉树， 巴老爷在八十八棵树边哭。 红红的红红萝卜， 白白的白白萝卜。 红红的红红萝卜比白白的白白萝卜红， 白白的白白萝卜比红红的红红萝卜白。 红红的红红萝卜拌白白的白白萝卜， 白白的白白萝卜拦红红的红红萝卜。 红红的红红萝卜又红又白， 白白的白白萝卜又白又红。 你是爱吃又红又白的红红的红红萝卜， 还是爱吃又白又红的白白的白白萝卜。 瓜蔓开花，瓜花结瓜。 要想吃瓜，别掐瓜花。 瓜蔓开花花结瓜， 瓜花结瓜圆又大。 东门董家的冬瓜和西门胥家的西瓜 东门董家采了冬瓜， 西门胥家采了西瓜。 这人道：“东门董家采的冬瓜大过西门胥家采的大西瓜”。 那人说道：“西门胥家采的西瓜大过东门董家采的大冬瓜。”601. 山上有棵松，松上挂张弓， 半夜三更起了风，只剩松树没了弓。 吃桔子 吃桔子，剥桔子，桔皮丢在垃圾箱里; 不吃桔子，不剥桔子，不把桔子皮丢在垃圾箱里。 北风吹摇路边树，小陆上前把树护， 一个木竿路旁竖，一根绳子拴捆住 ， 树有木竿做支柱，木支树树稳固。 斑竹林里头看干斑竹， 包谷林里头有干包谷， 潘家三虎直进包谷林，掰了一担干包谷， 回家路过斑竹要，换了三根干斑竹。 妈妈爱栽花， 爸爸爱种瓜; 妈妈栽桃花， 桃花红，红桃花， 娃娃脸上笑哈哈; 爸爸给我吃西瓜， 娃娃心里乐开花。 我从伯伯门前过， 看见伯爹伯妈前种着白果树， 白果树上站着百十百个白斑鸠， 我就捡了百十百块白石头， 打那百十百个白斑鸠。 青草丛，草丛青， 青青草里草青虫; 青虫钻进青草丛， 青草丛青草虫青。 高高山上一条藤 高高山上一条藤， 藤条头上挂铜铃， 风吹藤动铜铃动， 风停藤停铜铃停。 我敲桃壳你剥肉， 吃掉桃肉甩掉壳。 桃壳甩得门角落， 门角落头有桃壳。 瓜藤开花像喇叭， 娃娃爱花不去掐。 瓜藤开花瓜花结花 没花就没瓜。 吃瓜要爱花， 娃娃爱花也爱瓜。 一二三四五六七，七六五四三二一， 七个阿姨来摘果，七只篮子手中提 ， 七种果子摆七样， 苹果、桃儿、石榴、柿子、李子、栗子、梨。 绿秧棵，开花朵， 花朵朵朵结果果。 果果开花一朵朵， 朵朵花朵像云朵。602. 导语：有关植物的绕口令有哪些呢，下面无忧考网为大家精心搜集了关于植物的绕口令大全，欢迎大家参考借鉴，希望可以帮助到大家! 百棵白果树上结了一百八十八个 白皮、白把、白肉、白籽、白花、白色白果; 百棵白果树上歇了一百八十八个 白头、白颈、白翅、白腿、白脚、白花家八哥。 绿葡萄又甜又酸， 紫葡萄又酸又甜。 绿葡萄说：绿葡萄比紫葡萄酸， 紫葡萄说：紫锻萄比绿葡萄甜。 不知你是爱吃绿葡萄的酸， 还是爱吃紫葡萄的甜? 八株毛竹八个节， 八只桠枝八张叶， 八只八哥住啦八株毛竹八个节里八只桠枝八张叶里歇。 八个姑娘掮了八个棒条， 勿许给那八只八哥住啦八株毛竹个节里八只桠枝八张叶里歇。 小花的葵花和小华的蓖麻 小花小筐手里拿， 种了葵花收葵花。 小华小篮身上挎， 种了蓖麻收蓖麻。 小花的葵花花盘大， 摘葵花小华帮小花; 小华的蓖麻密麻麻， 收蓖麻小花帮小华。 红花儿，花儿红。 黄花儿，花儿黄。 红花儿黄花儿黄又红， 黄花儿红花儿红又黄。 红葫芦红，黄葫芦黄。 红葫芦比黄葫芦红， 黄葫芦比红葫芦黄。 山上五棵树，架上五壶醋， 林中五只鹿，箱里五条裤。 伐了山上树，搬下架上的醋， 射死林中的鹿，取出箱中的裤。 巴老爷有八十八颗芭蕉树， 来了八十八个把式要在巴老爷八十八棵芭蕉树下住。 巴老爷拔了八十八颗芭蕉树， 不让八十八个把式在八十八棵芭蕉树下住。 八十八个把式烧了八十八颗芭蕉树， 巴老爷在八十八棵树边哭。 红红的红红萝卜， 白白的白白萝卜。 红红的红红萝卜比白白的白白萝卜红， 白白的白白萝卜比红红的红红萝卜白。 红红的红红萝卜拌白白的白白萝卜， 白白的白白萝卜拦红红的红红萝卜。 红红的红红萝卜又红又白， 白白的白白萝卜又白又红。 你是爱吃又红又白的红红的红红萝卜， 还是爱吃又白又红的白白的白白萝卜。 瓜蔓开花，瓜花结瓜。 要想吃瓜，别掐瓜花。 瓜蔓开花花结瓜， 瓜花结瓜圆又大。 东门董家的冬瓜和西门胥家的西瓜 东门董家采了冬瓜， 西门胥家采了西瓜。 这人道：“东门董家采的冬瓜大过西门胥家采的大西瓜”。 那人说道：“西门胥家采的西瓜大过东门董家采的大冬瓜。” 粗树和粗竹，山麓比谁粗。 粗竹说粗竹比粗树粗， 粗树说粗树比粗竹粗， 不知到底是粗竹粗过粗树， 还是粗树粗过粗竹?603. 绕口令，是一种语言游戏，主要是将声调容易混淆的文字编成句子，念起来有些拗口，而说快了容易发生错误。下面是无忧考网为大家精心整理的关于植物的绕口令，欢迎阅读! 1 出城门，走八步，有棵八棱八角树。 八个八哥飞上树，八棱八角树上住。 树下孩子直发悉，手拿弹弓射大树。 打得八哥离开树，八棱八角掉下树。 2 山上有棵松，松上挂张弓， 半夜三更起了风，只剩松树没了弓。 3 吃桔子，剥桔子，桔皮丢在垃圾箱里; 不吃桔子，不剥桔子，不把桔子皮丢在垃圾箱里。 4 北风吹摇路边树，小陆上前把树护， 一个木竿路旁竖，一根绳子拴捆住 ， 树有木竿做支柱，木支树树稳固。 5 斑竹林里头看干斑竹， 包谷林里头有干包谷， 潘家三虎直进包谷林，掰了一担干包谷， 回家路过斑竹要，换了三根干斑竹。 6 妈妈爱栽花， 爸爸爱种瓜; 妈妈栽桃花， 爸爸种西瓜; 桃花红，红桃花， 娃娃脸上笑哈哈; 爸爸给我吃西瓜， 娃娃心里乐开花。 7 我从伯伯门前过， 看见伯爹伯妈前种着白果树， 白果树上站着百十百个白斑鸠， 我就捡了百十百块白石头， 打那百十百个白斑鸠。 8 青草丛，草丛青， 青青草里草青虫; 青虫钻进青草丛， 青草丛青草虫青。 9 高高山上一条藤， 藤条头上挂铜铃， 风吹藤动铜铃动， 风停藤停铜铃停。 10 我敲桃壳你剥肉， 吃掉桃肉甩掉壳。 桃壳甩得门角落， 门角落头有桃壳。 11 瓜藤开花像喇叭， 娃娃爱花不去掐。 瓜藤开花瓜花结花 没花就没瓜。 吃瓜要爱花， 娃娃爱花也爱瓜。 12 一二三四五六七，七六五四三二一， 七个阿姨来摘果，七只篮子手中提 ， 七种果子摆七样， 苹果、桃儿、石榴、柿子、李子、栗子、梨。 13 绿秧棵，开花朵， 花朵朵朵结果果。 果果开花一朵朵， 朵朵花朵像云朵。 14 东门童家门东董家， 童、董两家同种冬瓜， 童家知道董家冬瓜大， 来到董家学种冬瓜。 门东董家懂种冬瓜， 来教东门童家种冬瓜。 童家、董家都懂得种冬瓜， 童、董两家的冬瓜比桶大。 15 豆地有豆， 低头捡豆， 豆捡在手， 豆装豆篓。604. 斑竹林里头看干斑竹， 包谷林里头有干包谷， 潘家三虎直进包谷林，掰了一担干包谷， 回家路过斑竹要，换了三根干斑竹。 看花和吃瓜 妈妈爱栽花， 爸爸爱种瓜; 妈妈栽桃花， 爸爸种西瓜; 桃花红，红桃花， 娃娃脸上笑哈哈; 爸爸给我吃西瓜， 娃娃心里乐开花。 白果树 我从伯伯门前过， 看见伯爹伯妈前种着白果树， 白果树上站着百十百个白斑鸠， 我就捡了百十百块白石头， 打那百十百个白斑鸠。 青草丛 青草丛，草丛青， 青青草里草青虫; 青虫钻进青草丛， 青草丛青草虫青。 高高山上一条藤 高高山上一条藤， 藤条头上挂铜铃， 风吹藤动铜铃动， 风停藤停铜铃停。605. 出城门，走八步，有棵八棱八角树。 八个八哥飞上树，八棱八角树上住。 树下孩子直发悉，手拿弹弓射大树。 打得八哥离开树，八棱八角掉下树。山上有棵松 山上有棵松，松上挂张弓， 半夜三更起了风，只剩松树没了弓。 吃桔子 吃桔子，剥桔子，桔皮丢在垃圾箱里; 不吃桔子，不剥桔子，不把桔子皮丢在垃圾箱里。 护树 北风吹摇路边树，小陆上前把树护， 一个木竿路旁竖，一根绳子拴捆住 ， 树有木竿做支柱，木支树树稳固。606. 小波拿簸箕，簸箕簸玉米皮。会簸簸箕能簸出玉米皮，小波不会簸簸箕，簸不出玉米皮。 607. 先簸秕谷子，后簸谷秕子。会簸秕谷子，就簸谷秕子。不会簸秕谷子，就不簸谷秕子。簸完秕谷子，再簸谷秕子。簸箕簸灰簸箕簸灰，风小灰回，风大灰飞。簸箕簸灰，风大灰飞，风小灰回。 608. 白果果我走白家门前过，白家门前一棵白果树，树上结了白果果，白果树上歇了只白八哥。 609. 高高山上一条藤高高山上一条藤，藤条头上挂铜铃，风吹藤动铜铃动，风停藤停铜铃停。拔萝卜出八十八二十八，八个小孩儿把萝卜拔，你也拔，我也拔，看谁拔得多，看谁拔得大。你拔得不多个儿不小，我拔得不少个儿不大。一个萝卜一个坑儿，算算多少用车拉，一个加俩，俩加仨，七十二个加十八，拿个算盘打一打，一百差俩九十八。 610. 吃菱角吃菱角，剥菱壳，菱角丢在北壁角。不吃菱角不剥壳，菱角不丢北壁角。采蘑菇黑兔和白兔，上山采蘑菇，小猴和小鹿，一齐来帮助，猴和兔，兔和鹿，高高兴兴采蘑菇。 611. 童子打桐子，桐子落，童子乐；丫头啃鸭头，鸭头咸，丫头嫌。朱叔锄竹笋朱家一株竹，竹笋初长出，朱叔处处锄，锄出笋来煮，锄完不再出，朱叔没笋煮，竹株又干枯。 612. 出城门，走八步，有棵八棱八角树。八个八哥飞上树，八棱八角树上住。树下孩子直发悉，手拿弹弓射大树。打得八哥离开树，八棱八角掉下树。吃葡萄青葡萄，紫葡萄，青葡萄没籽葡萄紫，吃葡萄不吐葡萄皮，不吃葡萄倒吐葡萄皮。 613. 棉花白，雪花白，棉花像雪花，雪花像棉花。棉花不是雪花，雪花不是棉花，冷冰冰的是雪花，暖烘烘的是棉花。瓜卖花婆婆卖瓜又卖花，一过卖来一边夸，夸瓜大，夸花美，人们买瓜又买花，乐得婆婆笑哈哈。 614. 豆地有豆，低头捡豆，豆捡在手，豆装豆篓。瓜爸爸种瓜瓜儿大，妈妈摘瓜摘大瓜，奶奶切瓜分大家，大家吃瓜笑哈哈。有豆有扣小篓篓，有豆豆还有扣扣，娃娃想拿豆豆却拿起扣扣，又想拿起扣扣却又拿起豆豆，豆豆扣扣，都让娃娃放回篓篓。 615.葱和松东院想栽葱，西院想栽松。是东院栽葱，还是西院栽松。 616. 半边莲半边莲，莲半边，半边莲长在山涧边。半边天路过山涧边，发现这片半边莲。半边天拿来一把镰，割了半筐半边莲。半筐半边莲，送给边防连。 617.瓜棚挂瓜瓜棚挂瓜，瓜挂瓜棚。风刮瓜棚瓜棚动，棚动瓜动瓜碰棚。水上漂着一只瓢，水上漂着一只瓢，瓢上落着一只鸟，鸟看瓢，瓢瞪鸟，鸟不认识瓢，瓢也不认识鸟。 618.花生生花新生农业社，生产落花生。花生生花生，花生花生生。生了数百升，升升盛花生。声声话花生，人人夸花生。 619.一捆葱东边来个小朋友叫小松，手里拿着一捆葱。西边来个小朋友叫小丛，手里拿着小闹钟。小松手里葱捆得松，掉在地上一些葱。小丛忙放闹钟去拾葱，帮助小松捆紧葱。小松夸小丛像雷锋，小丛说小松爱劳动。]]></content>
      <categories>
        <category>其它</category>
        <category>读书</category>
      </categories>
      <tags>
        <tag>日常生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爬取心灵毒鸡汤、你好污啊 网站数据并存入本地txt文件]]></title>
    <url>%2F2019%2F07%2Fspider%2Fcases%2F%E6%9C%89%E6%AF%92%E6%AE%B5%E5%AD%90%E7%88%AC%E8%99%AB%2F</url>
    <content type="text"><![CDATA[心灵毒鸡汤 网站如下：https://www.nihaowua.com/home.html 代码如下： `pythonimport requestsimport randomfrom lxml import etree 安装：pip install fake_useragentfrom fake_useragent import UserAgent def get_random_ua(): #随机UA ua = UserAgent() return ua.random headers = { &#39;User-Agent&#39;: get_random_ua() } url = &#39;https://www.nihaowua.com/home.html&#39; def main(): #写入txt文本程序 count = 0 while True: try: with open(&quot;soup.txt&quot;, &quot;a&quot;, encoding=&#39;utf-8&#39;) as f: res = requests.get(url=url, headers=headers, timeout=10) selector = etree.HTML(res.text) content = selector.xpath(&#39;//section/div/*/text()&#39;)[0] text = str(count) + str(content) f.write(text + &#39;\n&#39;) count += 1 print(&#39;*****正在爬取中，这是第{}次爬取，内容为：{}&#39;.format(count, content)) except Exception as e: print(&#39;exception:&#39;, e) continue if __name__ == &#39;__main__&#39;: main() ``` 执行结果如下： 存入文本中的数据如下： 毒鸡汤网站如下：http://www.nows.fun/ import requests from lxml import etree from fake_useragent import UserAgent def get_random_ua(): # 随机UA ua = UserAgent() return ua.random headers = { &#39;User-Agent&#39;: get_random_ua() } url = &#39;http://www.nows.fun/&#39; def main(): # 写入txt文本程序 count = 0 while True: try: with open(&quot;soup_v1.txt&quot;, &quot;a&quot;, encoding=&#39;utf-8&#39;) as f: res = requests.get(url=url, headers=headers, timeout=10) selector = etree.HTML(res.text) content = selector.xpath(&#39;//span[@id=&quot;sentence&quot;]/text()&#39;)[0] text = str(count) + str(content) f.write(text + &#39;\n&#39;) count += 1 print(&#39;*****正在爬取中，这是第{}次爬取，内容为：{}&#39;.format(count, content)) except Exception as e: print(&#39;exception:&#39;, e) continue if __name__ == &#39;__main__&#39;: main() 你好污啊 网站如下：https://www.nihaowua.com/ 代码如下： `python import requests import random from lxml import etree from fake_useragent import UserAgent def get_random_ua(): #随机UA ua = UserAgent() return ua.random headers = { &#39;User-Agent&#39;: get_random_ua() } url = ‘https://www.nihaowua.com/&#39; def main(): # 写入txt文本程序 count = 0 while True: res = requests.get(url=url, headers=headers, timeout=10) selector = etree.HTML(res.text) content = selector.xpath(&#39;//section/div/*/text()&#39;)[0] with open(&quot;NiHaoWu.txt&quot;, &quot;a&quot;) as f: text = str(count) + &#39; &#39; + content f.write(text + &#39;\n&#39;) count += 1 print(&#39;这是第{}次爬取,内容为：{}&#39;.format(count, content)) if __name__ == &#39;__main__&#39;: main() ``` 执行结果如下图： 存入文本数据如下： 放到阿里云机子上跑的爬虫代码加了去重，钉钉报警 db.py # -*- encoding: utf-8 -*- import hashlib import time from sqlalchemy import create_engine from sqlalchemy import Column, VARCHAR, Integer, TIMESTAMP, CHAR from sqlalchemy.orm import sessionmaker from sqlalchemy.ext.declarative import declarative_base engine = create_engine(&#39;mysql+pymysql://root:123456@localhost/test?charset=utf8&#39;) DBSession = sessionmaker(bind=engine) session = DBSession() Base = declarative_base() class YoududuanziItem(Base): &quot;&quot;&quot;段子信息&quot;&quot;&quot; __tablename__ = &#39;duanzi_for_fun&#39; desc = &#39;段子信息&#39; id = Column(Integer, primary_key=True, autoincrement=True) duplicate_hash = Column(CHAR(40), index=True, unique=True, doc={&#39;zh&#39;: &quot;url hash&quot;}) crawl_time = Column(TIMESTAMP, doc={&#39;zh&#39;: &#39;当前时间&#39;}) centence = Column(VARCHAR(200), index=True, doc={&#39;zh&#39;: &#39;段子&#39;}) @classmethod def creat_table(cls): &quot;&quot;&quot;创建数据表&quot;&quot;&quot; cls.__table__.create(bind=engine, checkfirst=True) def insert(self, centence): url_sha = self.get_contern_url_hash(centence) crawled_time = time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;) try: is_exist = session.query(YoududuanziItem).filter(YoududuanziItem.duplicate_hash == url_sha).all() if not is_exist: item = YoududuanziItem(duplicate_hash=url_sha, crawl_time=crawled_time, centence=centence) session.add(item) session.commit() return True else: return False except BaseException as e: session.rollback() session.close() raise BaseException(f&quot;数据插入失败: \n{url_sha} \n{centence} \n{e}&quot;) def get_contern_url_hash(self, content_url): hash = hashlib.sha1() hash.update(str(content_url).encode(&#39;utf-8&#39;)) url_sha = hash.hexdigest() return url_sha 爬虫代码： # -*- encoding: utf-8 -*- import time import json import requests import logging from lxml import etree from fake_useragent import UserAgent from my_test.db import session, YoududuanziItem class YoududuanziSpider(object): def __init__(self): self.headers = { &#39;User-Agent&#39;: self.get_random_ua() } self.url = &#39;http://www.nows.fun/&#39; # 钉钉报警模板字段，注意: 必须使用raw string, 不能使用多行字符串, 钉钉只处理没有转义的字符, 包含转义字符会导致解析失败 self.failure_template = (&#39;数据爬取信息：\n\n&#39; &#39;&gt; spider_name: {spider_name}\n\n&#39; &#39;&gt; table_name: {table_name}\n\n&#39; &#39;&gt; data_num: {data_num}\n\n&#39; &#39;&gt; last_data: {last_data}\n\n&#39; &#39;&gt; log_url: {log_url}\n\n&#39;) self.dingding_headers = { &quot;Content-Type&quot;: &quot;application/json;charset=utf-8&quot;, } def get_random_ua(self): # 随机UA ua = UserAgent() return ua.random def get_content(self): response = requests.get(url=self.url, headers=self.headers, timeout=10) selector = etree.HTML(response.text) centence = selector.xpath(&#39;//span[@id=&quot;sentence&quot;]/text()&#39;)[0] return centence def send_dingtalk(self, spider_name, table_name, data_num, last_data, log_url): try: content = self.failure_template.format( spider_name=spider_name, table_name=table_name, data_num=data_num, last_data=last_data, log_url=log_url ) msg = { &quot;msgtype&quot;: &quot;markdown&quot;, &quot;markdown&quot;: { &quot;title&quot;: &#39;爬取的段子信息&#39;, &quot;text&quot;: &#39;淘数爬虫：&#39; + content } } ding_url = &#39;https://oapi.dingtalk.com/robot/send?access_token=c1984aefbaff584bceb37b855b8380d7c6c78545fb749d068fc378df627fa786&#39; resp = requests.post(url=ding_url, headers=self.dingding_headers, data=json.dumps(msg), timeout=30) json_data = json.loads(resp.text) if resp.status_code == 200 and json_data[&#39;errcode&#39;] == 0: pass else: logging.error(&#39;钉钉报警发送失败{}&#39;.format(json_data[&#39;errmsg&#39;])) except Exception as e: logging.error(&quot;send dingtalk failed, exception: &quot;, e) def run(self): for i in range(100000): job_info = self.get_content() table.insert(job_info) time.sleep(2) if i % 1000 == 0: logging.info(f&#39;爬取进度：self.num={i}条数据！！！&#39;) self.send_dingtalk(spider_name=&#39;youduduanzi&#39;, table_name=&#39;duanzi_for_fun&#39;, data_num=5, last_data=job_info, log_url=self.url) if __name__ == &#39;__main__&#39;: duanzi = YoududuanziSpider() table = YoududuanziItem() table.creat_table() duanzi.run() 共勉，(๑•̀ㅂ•́)و✧加油]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[设计模式之6大设计原则详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F6%E5%A4%A7%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%2F</url>
    <content type="text"><![CDATA[1、单一职责原则 There should never be more than one reason for a class to change. 理解：不同的类具备不同的职责，各司其职。做系统设计是，如果发现有一个类拥有了两种职责，那么就要问一个问题：可以将这个类分成两个类吗？如果真的有必要，那就分开，千万不要让一个类干的事情太多。 总结：一个类只承担一个职责 2、开放封闭原则 Software entities like classes,modules and functions should be open for extension but closed for modifications. 理解：类、模块、函数，可以去扩展，但不要去修改。如果要修改代码，尽量用继承或组合的方式来扩展类的功能，而不是直接修改类的代码。当然，如果能保证对整个架构不会产生任何影响，那就没必要搞的那么复杂，直接改这个类吧。 总结：对软件实体的改动，最好用扩展而非修改的方式。 3、里式替换原则 Functions that use pointers or references to base classes must be able to use objects of derived classes without knowing it. 理解：父类可被子类替换，但反之不一定成立。也就是说，代码中可以将父类全部替换为子类，程序不会出现异常，但反过来就不一定了。 总结：在继承类是，务必重写（override）父类中所有的方法，尤其需要注意父类的protected方法（它们往往是让你重写的），子类尽量不要暴露自己的public方法供外界调用。 4、最少知识原则 Only talk to you immediate friends. 理解：尽量减少对象之间的交互，从而减小类之间的耦合。在做系统设计时，不要让一个类依赖于太多其他的类，需尽量减小依赖关系，否则死都不知道怎么死的。 总结：一定要做到：低耦合、高内聚。 5、接口隔离原则 The dependency of one class to another one should depend on the smallest possible interface. 理解：不要对外暴露没有实际意义的接口。也就是说，尽量保证接口的实用性。当需要对外暴露接口时，需要再三斟酌，若没必要对外提供就删了吧，因为一旦提供了就意味着，将来要多做一件事情，何苦给自己找事做呢。 总结：不要对外暴露没有实际意义的接口。 6、依赖倒置原则 High level modules should not depends upon low level modules.Both should depend upon abstractions.Abstractions should not depend upon details.Details should depend upon abstractions. 理解：高层模块不应该依赖于底层模块，而应该依赖于抽象。抽象不应依赖于细节，细节应依赖于抽象。应该面向接口编程，不该面向实现类编程。面向实现类编程相当于就事论事，那是正向依赖；面向接口编程，相当于透过现象看本质，抓住事务的共性，那就是反向依赖，即依赖倒置。 总结：面向接口编程，提取出事务的本质和共性。 将六大原则的英文首字母拼在一起就是SOLID（稳定的），所以也称之为SOLID原则。 只有满足了这六大原则，才能设计出稳定的软件架构，但它们只是原则，有时还是需要学会灵活应变，千万不要生搬硬套，否则只会把简单问题复杂化！ 最经典的 23 种设计模式中或多或少地都在使用这些设计原则，也就是说，设计模式是站在设计原则的基础之上的。下面来详细介绍Java中23种设计模式的概念，应用场景等情况，并结合他们的特点及设计模式的原则进行分析。 总体来说23种设计模式分为三大类： 创建型模式（5种）：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。 结构型模式（7种）：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。 行为型模式（11种）：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。 如果想了解23种设计模式详解，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[心灵毒鸡汤语录]]></title>
    <url>%2F2019%2F06%2Fothers%2Freading%2F%E6%AF%92%E9%B8%A1%E6%B1%A4%2F</url>
    <content type="text"><![CDATA[俄罗斯方块教会了我们，如果你合群，就会消失。 100次心动不如一次行动,行动之后，心就不会再动了。 18岁什么化妆品都不用，28岁什么化妆品都没用。 2018年，88喽。 2019年第一天，说出你的新年愿望，那就一定不会实现。 38岁以前我穷，但是以后，我会习惯的！ 56个民族，55个加分。 Follow your heart，翻译成中文就一个字，怂。 TA爱你不会在乎你有没有钱，如果你没有TA会再找一个 “一句话说明你拖延症有多严重”， “君子报仇，十年不晚” “为什么我总是碰不上好运气?””因为好运气可没那么倒霉啊。“ “假如我又丑又穷又矮又笨，你还会爱我吗？” “别他妈假如了，你本来就又丑又穷又矮又笨。” “假如我又丑又穷又矮又笨，你还会爱我吗？”神回复：“别他妈假如了，你本来就又丑又穷又矮又笨。” “就算全世界反对，我也要坚持自己的梦想。”你谁啊，能轮到全世界反对？ “感觉你跟你婆婆的关系很好呢！”“那是当然！我婆婆把我当亲闺女般……….揍！” “这孩子不是笨，就是学习方法不对。”“学习方法都找不对还不是笨啊？” “那些出身好能力强的人努力是为了成功，因为人家有可能会成功。我们努力是为了啥呢？”“为了活下去。” “长的好看的女人都不靠谱。”“那不好看的呢？”“既不好看，又不靠谱。” 一个人如果没有梦想，跟无忧无虑有什么区别呢？ 一个人最长的恋爱史，大概就是自恋了。 一个姑娘的介绍：思想上的女流氓，生活中的好姑娘。 然而给我的感觉是：心思活络的丑逼。 一个成年人是不会挑食的，他们会说，我对这个过敏。 一些人追求卓越是因为他们天性如此，且能力出众。很多其他人却也喜欢跟着凑热闹。 一些兴趣和特长，拿来做业余还挺NB的，但一旦变成职业，就弱得不行了。 一些年轻人，通过高端消费来营造自己高端收入的形象。 一场说走就走的旅行归来后，除了该做的事情被拖延的更久了，什么都没有改变。 一场说走就走的旅行归来后，除了该做的事情被拖延的更久，什么也没有改变。不管你是骑车去西藏还是走路去远方，在路上只是一场自欺欺人的逃避，心灵的旅行才能带来真正的平静。只要此心安定，你不必去远方。 一场说走就走的旅行归来后，除了钱花光了，该做的事情被拖延的更久了，什么都不会改变。 一场说走就走的旅行，回来等着你的就是一段吃土的日子 一天不玩手机，人是不会死的，命还在但是魂丢啦！ 一想到为人父母竟然不用经过考试，就觉得太可怕了。 一想到你，我的丑脸，就泛起微笑。 一懒众衫小，薪尽自然凉。 一提到钱，大家就不是那么亲热了。 一无所有到，没有什么可以放弃时，别忘了你还能放弃治疗。 一无是处时，别绝望，因为至少你的判断还是对的。 一直很佩服拉面馆切牛肉师傅的刀功，都是纳米级别的 一见钟情就是好看，深思熟虑就是没钱。 一路上有你，苦一点也愿意，苦很多免谈。 一路上有你，苦一点也愿意，苦很多就算了吧。 一顿操作猛如虎，一看工资二千五。 一鼓作气，再而卒。 万事开头难，然后中间难，最后结尾难 三分天注定，七分靠打拼。呵呵，还有90分看脸看脸看脸。 三分天注定，七分靠打拼，还有90分看脸。 三十岁之前，过的很苦逼，要啥没啥，三十岁之后，之后，你就习惯了。 三百六十行，行行出BUG。 三观没用，你得靠五官！ 上了大学你们就解放了，紧跟着就是抗美援朝，三年饥荒 上帝七天创造世界，剩下的时间呢？ 补bug 上帝不会亏待痴情的人，他都是往死里整。 上帝为什么给你关上一扇门，还不是因为你见不得人。 上帝为你关上一扇门的时候还会顺手帮你把窗户也关上。 上帝为你关上一道门的同时，还会顺带夹你的脑子。 上帝为你关上一道防盗门，还会顺手给你上了一把钛合金锁。 上帝为你关上了一扇门，然后就去洗洗睡了。 上帝为你关上了一扇门，还会给它加上防盗锁，大插销。 上帝为你关上门，一定会为你打开一扇窗。 可惜「你太胖」 上帝再给你关上一扇门的时候会顺手给你把窗也堵上没错就是让你撞墙啊 上帝向人间洒满智慧，唯独你打了把伞。 上帝在给你关上一扇门的同时，还会用门夹你的脑子。 上帝给了你丑的外表跟低的智商，就是怕你不协调 下雨了才发现自己并不孤单，大家都一起避雨，可人家等的是伞，你等的是雨停 不为无益之事，何以遣有涯之生？ 不使劲挖掘，还不知道自己的潜能只有一点点。 不努力的女生，会有买不完的地摊货，逛不完的菜市场。努力的女生，你就没时间逛地摊。 不努力的女生，会有买不完的地摊货，逛不完菜市场。努力的女生，你就没时间逛地摊，因为你只能加班叫外卖、逛淘宝！ 不合适就是穷，没感觉就是丑，一见钟情就是好看，深思熟虑就是有钱。 不回你消息，不是因为我高冷，而是因为我手冷。 不孝有三，无后为大。剩下两个是不相亲和不考公务员。 不尝试问一次，你怎么知道，你不是爸妈避孕失败的结果？ 不就是钱嘛，说得谁不缺似的。 不当家不知柴米贵，不拍照不知自己肥。 不想一直被别人否定，那就要经常自我否定 不想养狗不想养猫，只想养你，毕竟养猪能致富。 不想结婚生子，是我作为穷人的自觉。 不想谈恋爱是假的，没人要是真的。 不明白你们遇到好事，为什么要掐腿揉眼睛，真醒了怎么办？ 不是别人瞧不起你，只是别人瞧不见你。 不是吃燕窝的人皮肤好，是吃得起燕窝的人皮肤好。 不是因为看到了希望才坚持，而是因为坚持了，才知道没希望。 不是大家拿你开玩笑，而是，你就是玩笑本身！ 不是所有成功男人背后都有一个女人，大多成功男人在成功之前是没有女人的。 不是路不平，而是你不行。 不爱你的人，比你想象中的还不爱你。 不用在意别人怎么看你，你在意了，别人也看不上你。 不知不觉潮流变成了怀旧 不知道你越过多少峰才成功，反正你逃不过早晚两个高峰。 不知道，是别人的爱情来的太容易，还是自己的八字太硬。 不笑运气差，一笑脸就大！ 不管是白帽子，还是黑帽子，会变绿的都不是好帽子。 不经历风雨，怎么迎接暴风雨。 不经历风雨，怎么迎接暴风雨。暴风雨之后，不仅没看到彩虹，还感冒了 不能老盯着手机屏幕，要不时地抬起头，看看老板的位置。 不要以为世界抛弃了你，世界根本没空搭理你 不要以为世界抛弃了你，世界根本没空搭理你！ 不要以为老天在折磨你，而事实上，老天根本就不在意你。 不要以为自己坚持不来，你一定会坚持熬夜玩手机。 不要借太多钱给一个人，那会让你变得很穷 不要再抑郁下去了孩子，你要像一个，神经病一样活泼开朗。 不要再说自己是一条单身狗，其实，你可能比不上狗… 不要再说被骗色了，到你这个年纪来的都是客。 不要在意现在的低谷，未来还有很长的下坡路要走。 不要埋怨现在的经历凄惨，跟未来比，还差的远呢。 不要太在乎别人的目光，因为没人会注意你。 不要年纪轻轻，就觉得你已经到了低谷，你还有很大的下降空间。 不要怕别人比你优秀，只要肯努力，别人会比你更优秀 不要总对人掏心掏肺，有的人不吃内脏。 不要总是那么自恋，美女多看了你一眼，只是因为你丑得比较独特。 不要把自己放的太高了，不然你会不下来的。 不要把银行卡密码，设成女朋友的生日，不然总要换多麻烦。 不要担心黑夜悠长，保持平静安宁可以睡的更久。 不要担心，一切都是最烂的安排。 不要放弃你的梦，继续睡！ 不要期待明天，因为明天也不会好过。 不要相信小说中穿越了就能泡上美男走上人生巅峰，一般来说穿越了你连字都看不懂。 不要等明天交不上差，再找借口，今天就要找好。 不要老覺得自己孤單，看看肚子上那圈肥肉，不是從來沒有離開過嘛？ 不要认为你被世界丢弃，只是世界没空搭理你。 不要说别人脑子有病，脑子有病的前提是，必须有个脑子。 不要轻易向命运低头，因为，一低头就会看到赘肉。 不要轻易看不起谁，就算是杀马特，发量都比你多。 不说没人陪你勇闯天涯，你能找到人陪你喝雪花吗？ 不逼自己一把怎么知道拼了也没用呢? 不逼自己一把，你都不知道，什么叫绝望。 丑小鸭变为白天鹅不是自己有多努力，而是它的父母就是白天鹅。 丑小鸭变成白天鹅，并不是它有多努力，而是它生来就是白天鹅。 丑小鸭小时候很丑，但是长大了以后还是挺好吃的。 丑小鸭能变天鹅，不是因为它多努力，是因为它爸妈本来就是天鹅。 世上99%的事情，都能用钱解决，剩下的1%则需要更多的钱。 世上什么事逼急了，都能做出来，除了数学题。 世上会有很多出人意料的事，比如，你以为我会举个例子。 世上只有骗子是真心的，因为他是真心地在骗你。 世上无难事只怕有钱人，物以类聚人以穷分。 世上无难事，只要肯放弃 世上无难事，只要肯放弃！ 世上最远的距离就是：我想和你叙叙旧，你却问我要不要代购。 世上没有钱解决不了的事，如果有，那就是你的钱不够。 世人笑我太疯癫，我笑世人这么快就看出来了。 世界上不是很公平吗?强者拥有一切，弱者不配拥有一切。 世界上唯一一件公平的事就是我们都会死。 世界上如果有钱办不到的事情，加钱一定可以办到。 世界上最动听的话，不是我爱你，而是你的肿瘤是良性的！ 世界上最好的词就是虚惊一场 世界上最宽广的是海洋，比海洋更宽广的是天空，比天空更宽广的是考试范围。 世界上有两种人最傻B，一种是你这样的，另一种是像你这样的。 世界上本没有路，走的人多了，老师就开始点名了。 世界上本没有鸡汤，鸡死了，便做成了鸡汤。 世界上没有无缘无故的爱，也没有无缘无故的恨，却TM偏偏有无缘无故的胖！ 世界上脑残那么多，你却成了佼佼者。 世界很公平，比你忙的人赚的比你多，比你闲的人你赚的比他少。 世界感受不到你的恶意，世界知道你是个傻逼 世界离了你不会不转，只会越转越快，毕竟轻了很多。 世界这么大 我想去看看。钱包那么小 你能走多远？ 世界这么大，我想去看看，什么地方要饭比较方便 世界这么大，我想去看看，什么地方要饭比较方便！ 世界这么大，我想去看看，看看有没有塑料瓶。 世界那么大，我想去看看；人生那么短，走也走不远。 世界那么大，能认识你，我觉得好不幸。 世间很多事随着时间流逝，终究会变好的，比如你的胖终会变成好胖。 两个人吵架，打他是解决不了问题的，但是解气啊。 为了变漂亮，你坚持了哪些好习惯？坚持开美颜。 为了防止我这个月又乱花钱，我提前把钱，都花完了。 为什么中国人结婚，都非要选个好日子呢？因为结完婚就没好日子过了！ 为什么你能像智障一样活着，而我却不可以。 为什么单身，因为你不仅仅丑，而且还嫌别人丑 为什么在学校，一上课就想睡觉？因为学校是梦开始的地方。 为什么家长只看分数？废话！难道他们看得懂题目？ 为什么总是天妒英才呢？因为没人管笨蛋活多久。 为什么要努力？为了在你夹菜的时候别人不敢转桌子。 为什么要吵架呢，就不能心平气和的坐下来砍对方几刀吗 为什么要吵架呢？就不能心平气和的坐下来，打对方几巴掌吗？ 为什么造假酒？据我分析，他肯定造不出真的来。 九年义务教育应该开腹语课，毕竟长大后会有太多话，难以启齿。 也许命运扼住你的咽喉，只是让你少吃两口。 也许睡眠，才是人类真正的活动形态，难怪我总是睡不醒。 乡愁是一张小小的车票，我在这头，黄牛在那头。 书上说，不管是爱迪生还是林肯或者华盛顿，他们小时候不是砍树就是丧父。就算这些是真的，别人砍树和丧父之后取得了成功，你也可以一样吗？ 书山有路勤为径，怪你没有富贵命。 书山有路开车去，学海无涯就算了 买房的钱还没攒完，就要开始攒买坟的钱了。 事业缺火，命里缺金 事事如意料之外，年年有余额不足！ 事情多不可怕，可怕的是你没能力解决。 二十年前吃小浣熊，集不齐卡的傻孩子们，依然集不齐五福。 人一辈子都在寻找成功，但更多时候，找到的都是成功他妈！ 人不会死在绝境，却往往栽在十字路口。 人不犯我，我不犯人，人若犯我，我就碰瓷儿 人不能低下高贵的头，但捡钱时例外。 人丑就要多健身，这样就能在别人说你丑时，你可以揍他。 人丑就要多读书，书并不能使你变得好看，却能让你更容易接受现实。 人丑就要多读书，反正你也没别的事做了。 人丑就要多读书，反正，其他什么事也与你无关。 人丑就要多读书，这样以后，才能有钱整容。 人为什么叫人类，因为人活着就是累。 人人都想上天堂，却没有人想死。 人人都想拯救世界，却没人帮妈妈洗碗。 人们常说，不要让青春留白，所以我把它抹黑了！ 人作的程度不能超过自己的颜值。 人和猪的区别就是，猪一直是猪，而人有时却不是人。 人如果没有梦想，那跟无忧无虑有什么分别？ 人家不是无趣，而是，懒得对你有趣。 人家呢只是胖着玩玩，而你是丑的认真。 人家谈恋爱，靠长相靠浪漫靠烧钱，而你靠对方眼瞎。 人就是不能闲的，不然努力一下都以为自己在拼命。 人就要趁年轻的时候多出去走走，看看不同的风景，不同的文化，等转遍了世界你就会发现，原来躺在被窝里是真他妈舒服。 人心不足蛇吞象，没有实力别硬上！ 人性是复杂的。 不，人是「复杂」的，性是啪啪啪。 人总有一死，不是穷死就是心死。 人活着就会失去，你失去的不会再来，你争取的永远都会失去！ 人生不如意之事十有八九，剩下的十之一二，超级不如意 人生不如意何止八九，可与人言者何至二三。 人生不如意十有八九，从来没碰见过一二。 人生不如意的事十有八九，剩下的一二更加不如意！ 人生不如意，十之有十 人生不如意，十之有十！ 人生前期千万不要因为没钱而觉得悲哀 因为你以后没钱的日子还有很长。 人生和骑自行车不同，就算走下坡路，也不会轻松。 人生嘛，就是起起落落落落落落。到底了自然就会蹦跶两下。 人生好难哦，但还是要保持围笑。因为更难的日子还在后面呢！ 人生如梦我失眠，人生如戏我穿帮，人生如歌我跑调。 人生就像一个茶几，上面摆满了杯具。 人生就像打电话，不是你先挂就是我先挂。 人生就是六个大字，怎么着都不行。 人生就是大起大落落落落落落落落落落的过程 人生就是这样，有欢笑也有泪水。一部分人主要负责欢笑，另一部分人主要负责泪水。 人生最大的耻辱是什么，考试作弊了还不及格。 人生有两大悲剧，一个是得不到想要的东西，另一个是得到不想要的东西。 人生没有过不去的坎，只不过是过去一个又接着一个 人生没有过不去的坎，只有一坎接一坎。 人生没有过不去的坎，过不去，只是因为你腿短。 人生的痛苦，不是因为没钱而痛苦，而是因为别人有钱你痛苦。 人生真是有得就有失。我的一个朋友找了一位非常有钱的老公。虽然得到了享不尽的荣华富贵，但却失去了烦恼。 人生第一次说谎，大多数都是，从写作文开始。 人生苦短，我又他妈懒 人的一生，三分天注定七分靠打拼，剩下的九十分靠父母。 人的眼光要放长远一点，你看看前路，是不是更加绝望了 人终有一死，或轻于鸿毛，或重于鸿毛。 人要是决定自暴自弃了，就会活得特别开心。 人要是行，干一行行一行一行行行行行，行行行干哪行都行。 人还是要有梦想的，即使是咸鱼， 也要做最咸的那一条。 人还是要有梦想的，即使是咸鱼，也要做最咸的那一条。 人还是要谈一次恋爱，不然就不知道，对象能有多烦人。 人都有幸福的权利，但少数人有幸福的能力。 人都需要努力的，努力过后你就会发现，你还真的是很普通。 什么事情可以让你，放下尊严低声下气？抄作业。 什么时候，能把我脑子里的钱，提现就好了。 什么都在涨价，就是人越来越贱。 今天一天过得不错吧？梦想是不是更远了？ 今天天气很好，在房间里宅久了，准备去客厅散散心。 今天很残酷，明天很残酷，后天会很美好，那就再睡两天 今天所有的一切，不过是过眼云烟。从明天开始你会一无是处。 今天是除夕夜，来来来，给你夹块你最爱吃的天鹅肉。 今天的事不用放在今天做，万一明天死了呢，就可以不用做了。 今年是过去十年最差的一年，好消息是，今年是之后十年最好的一年。 今晚吃鱼吧，我看你挺会挑刺的。 从今天开始，接受来自三大姑八大姨，灵魂的拷问。 从前车马很慢，书信很远，一生只够爱一个人，但是可以纳很多妾啊！ 从小到大，唯一不变的，就是一颗不想念书的心。 从小就喜欢自立，比如靠自己本事单的身。 从小就被教育不要乱花钱，长大后我才发现，根本没钱怎么乱花？ 他们笑我长的丑，我笑他们讲的对。 他们说网络很假，我笑了，好像现实很真一样。 他只是暧昧成瘾、而你却走了心 他喜欢你素颜，必须是素颜好看。 他没那么爱你，只是睡你比嫖来得便宜。 他给你的爱会消逝，他给你的TIFFANY却不会贬值。 他给你的爱会消逝，他给你的金钱却不会贬值。 他说你任何为人称道的美丽，不及他第一次遇见你的闺密。 仗义每从屠狗辈，负心多是读书人。 付出就会有回报，比如一倍的奢望，换两倍的失望。 以前上学是拿钱混日子，现在工作了，是在拿日子混钱。 以前我以为钱可以买到一切，现在觉得真的不行，因为我钱不够。 以前我每天都会买彩票，终于有一天，我连彩票都买不起了。 以前的女孩 会像她们母亲那样洗衣做饭.现在的女孩 会像她们父亲那样抽烟喝酒 以前虽然穷但很开心，现在就不同了，现在不仅穷还不开心 以前虽然穷但是很开心。现在不同往日了，不止穷还不开心。 以前觉得靠关系的人一定很无能，接触后发现人家样样比我强。 以前觉得靠关系的人，一定很无能，接触后发现人家样样比我强。 以前觉得颜值高身材好的网红多半只是花瓶，接触之后才发现，人家不但样样比你强,还你跑得快。 以前跪着挣钱很少，于是我也模仿那些优秀的人，试着站起来，结果饭碗就丢了。 以前过年就图个热闹，现在就想图个清静。 以前除了读书什么都不懂，现在除了读书什么都懂。 以后没钱了先找我借，我不想做最后一个，让你失望的人。 以后要对女朋友好一点，毕竟她已经瞎了，不能再受伤害了。 以我的资历和文凭，将来这个城市的大街，都归我扫。 任何时候都要记得微笑，这会让你看起来，像个不能随便惹的神经病。 众里寻她千百度，蓦然回首，那人依旧对我不屑一顾。 优秀幸福的人是喜欢撒娇的，告诉别人自己这儿过得不好，那儿过得也不好。有些人当真的了，觉得别人天天是在宝马车中哭泣。 会有天使替我爱你，那我就去爱别人了。 传统文化丢失严重啊，古代女子个个能呤诗作对，现代女子不行了 只会作对。 低头吧，你根本就没有皇冠。 体重不过百，不是平胸就是矮，说的好像过百就是大好身材一样。 何以解忧，唯有暴富。 何以解忧，唯有暴富。如果暴富太难，那退一步，暴饮暴食也行。 余生不想请你指教了，领教够了 作为失败的典型，你实在是太成功了。 你一定要笑，不然不会知道，自己有多少鱼尾纹。 你一无是处，但有件事做得特别好，就是做白日梦。 你不奋斗一下？怎么知道自己有多无能。 你不懂得安排自己的人生，会有很多人帮你安排，他们需要你做的事。 你不是一无所有，你还有病！ 你不是走在牛B的道路上，而是仍在，装逼的道路上溜达。 你不是选择困难症，你只是穷。 你不能因为你胖，就忽略了你的丑。 你不能总看那些你没有的，多看看你拥有的。算了你把眼睛闭上吧。 你人人称道的美丽，里面都有PS的痕迹。 你从来不孤独，因为，孤独都不想跟你交朋友。 你从来就没成功过，还怕什么失败？ 你以为今天是最糟的一天么，明天会让你改变这个看法的。 你以为他给你点赞，是喜欢你？只是手滑罢了。 你以为你感动了地球，其实只是温暖了自己。 你以为你是一只虫子，能化茧成蝶，其实你只是一只蛆。 你以为你是灰姑娘吗？拜托别做梦了，她可是伯爵的女儿。 你以为你是独行的猛兽，其实只是离群的牛羊 你以为努力有用？其实努力了也一样没用 你以为只要长得漂亮就有男生喜欢？ 你以为只要有了钱漂亮妹子就自己贴上来了？ 你以为学霸就能找到好工作？ 我告诉你吧，这些都是真的！ 你以为只要长得漂亮就有男生喜欢？你以为只要有了钱漂亮妹子就自己贴上来了？你以为学霸就能找到好工作？我告诉你吧，那这些都是真的！ 你以为向生活低头就好了？生活是想让你跪下。 你以为有了钱就会像你想象中那样快乐吗？不，你错了。有钱人的快乐，你根本想象不到。 你以为有钱人很快乐吗？他们的快乐，你根本想象不到。 你以为浪子回头金不换，其实浪子可能只是，上岸缓一缓。 你以为现在已经很糟了？不，更糟的还在后面。 你以为男朋友是取款机，结果是十台机器，有九台半是存款机。 你以为自己什么也做不好？你错了，你还可以做好一个废物。 你以为选择填空做的烂就无药可救了吗？你大题也做不出来，作文还跑题，听力也很差啊。 你们之所以喝鸡汤，是因为肉呢被别人吃光了。 你们之所以喝鸡汤，是因为肉被别人吃了。 你们的对象叫你们什么？我的对象叫我滚. 你任何为人称道的美丽，都有ps的痕迹。 你俩看起来真般配，月老的垃圾分类，做的还挺到位。 你倒下了，能顶替你的人千千万 你全力做到最好，可能还不如别人随便搞搞 你全力做到的最好，还不如别人随便搞搞。 你别看我平时对你，一副漠不关心的样子，其实背地里说了你很多坏话。 你前世一定是塑料袋，除了会装还是会装。 你努力做到最好，还不如别人随便搞搞。 你努力后的成功，不能弥补你成功前的痛苦。 你努力找他说话的样子，像极了商场里的导购。 你十分努力的突破了瓶颈，最后你会发现还有瓶盖 你只看到他们挥金如土，却看不到他们背后日进斗金 你只看到别人化了妆这么好看，却不知道，她们卸了妆一样美丽 你只看到有些人表面上风光无限，却不知道他们背地里，也顺风顺水 你只看到有些人表面上风光无限，却不知道，他们在背地里，也是顺风顺水呢。 你只要不抬杠，钱真的是万能的。 你只需看着别人精彩，老天对你另有安排。 你只需要看别人精彩，老天对你另有安排。 你可以像只猪一样懒，却无法像只猪一样，懒得心安理得。 你和学霸的区别就是，你所有的灵光一闪，都是他的基本题型。 你喜欢我哪一点啊？我喜欢你离我远一点。 你在哭吗？ 没有，我只是过敏了。 对什么过敏？ 人生。 你在我心里，就像天上的星星，多一颗少一颗都无所谓。 你在最好的年纪里遇不到任何人 你在进步，你的对手也在进步，你永远追不上TA。 你坐过最挤的公交车是什么？只是路过，却被挤上了车。 你复杂的五官，掩饰不了，你朴素的智商。 你多努力一点，获得的打击就多一点。 你妹是个好姑娘，替你妈分担了很多。 你害怕穿的不好看被嘲笑？别担心，穿的好看也一样。 你家住海边吗？这么浪。 你就一甘蔗男，刚开始可甜了，到后面全成渣。 你就两点不行，这也不行，那也不行。 你就像仙女一样，但我讨厌仙女 你就像我的阳光，看着就刺眼。 你就像是蓝天上的太阳，让人无法直视。 你就是个土豆丝，又土又逗，又屌丝。 你就是个黄焖鸡，又黄又闷又垃圾。 你就算失败了99次，也要再努力一次，凑个整数。 你年轻时一事无成;时而自怨自艾颓废堕落，时而咬紧牙关拼命努力，经营关系，但你的生活一直没有改善，你一直很痛苦，直到三十岁，三十岁以后你就习惯了 你并不是一无所有，你还有病。 你并不是一无所有，你还有病啊！ 你并不是无能，你只是没有选择的权力。 你并没那么缺少安全感，因为没钱是最安全的。 你并非什么事情都不做准备，起码你已经，准备好了要失败的嘛。 你当他/她是恋爱对象，他/她当你是练爱对象。 你得好好努力，才能配得上，被人利用。 你必须为自己的言行负责，但是老师不用 你必须敢爱敢恨，才会发现你的爱恨，别人真的不在乎。 你必须非常努力才能相信自己是无能为力 你必须非常努力，才能相信自己真的是无能为力。 你怎么长得跟个二维码似的，不扫一下，都不知道你是什么东西！ 你总嫌有些人懒，说得好像你勤快了就真能干出什么大事儿一样。 你总想等你优秀了再去向她表白，后来才发现人家只是单纯的不喜欢你 你总想等你优秀了再去向她表白，后来才发现你这样的人怎么可能优秀呢 你总想等你优秀了再去向她表白，后来才发现你都这么优秀了干嘛还喜欢她 你总是这么努力，每天忍受许多寂寞与折磨 ，受尽委屈，但我们也没觉得你多优秀。 你想有钱？想想就可以了。 你想瘦成一道闪电么，闪电平均宽度是五米。 你愿意做我的太阳吗？那么请与我，保持92955886公里。 你我都渴望成功，哪怕要付出很多。但我们连早点儿起床都做不到。 你所有的忧伤，都来自于你的余额。 你打起精神，3分钟就能做完的事情，打起精神就要花上3小时。 你承受的苦难并不比他人多太多，痛苦主要来自敏感和脆弱。 你把性格交给星座，把努力交给鸡汤，然后对自己说：“听过许多道理，但依然过不好这一生”。 你把所有不一定，都变成了一定不。 你把钱借给了你的朋友，那么他一定会记得你，在他下一次缺钱时。 你抱什么不好，非要抱病在床！ 你敬人一寸，他将得寸进尺。 你无法叫醒一个不回你消息的人，但是红包能。 你无法叫醒一个，不回你消息的人，但是红包能。 你无法用钱买来幸福，因为你根本没钱。 你是一个好姑娘，一个人读书、看电影、旅行，直到那个彩虹般绚丽的人出现在你的生命里。和你一起读没读过的书、看没看过的电影、去没去过的目的地。然后你会惊奇地发现，他陪你做这些，只是为了能跟你上床而已。 你是个做事认真的人，认认真真地帮别人，试了所有的错。 你是我的小苹果，哎呀讨厌！我是说我TM真想削你。 你是最棒的！不，是最胖的！ 你是谁不重要，重要的是，你闯进我生活想干啥？ 你是转角遇到爱，可你想过对方吗？他是转角遇到鬼呀。 你曾天真的以为金钱是万能，后来才发现，金钱不是万能的，是无所不能的。 你曾是我的太阳，是我的整个世界，现在想想也就是个球。 你最想从母校带走的是什么？最想从母校带走的，是我的学费。 你有什么擅长的运动吗？「逃避现实」。 你有诗和远方也没用，生活对你虽远必诛。 你死不放手的样子特别丑 你每天都很困，因为你被生活所困。 你每天都那么努力，忍受了那么多的寂寞和痛苦。可我也没见你有多优秀。 你每天都那么努力，忍受了那么多的寂寞和痛苦。可我也没见你有多优秀！ 你永远不会知道，你的哪个好友，会成为下一个微商。 你没有任何的话语权，除非说的是正确答案 你爱不爱你的工作，工作都会在那等你，不离不弃。 你现在所拥有的，都不曾是你的，因为未来你都会失去。 你现在的生活，也许不是你想要的，但绝对是你自找的。 你的人生跟你的发际线一样，后退的特别快。 你的努力程度，还远远谈不上拼天赋。 你的意中人是个盖世英雄，他每天会骑着七彩祥云，去网吧吃鸡。 你的感情路不顺吗?很顺啊，一路上连个人影都没有。 你的戏，可以像你的钱一样，少一点吗？ 你的晚安，只是想让我闭嘴。 你的爸爸必须十分努力，才能让你看起来毫不费力。 你的眼界，不止局限于你的生活环境，还局限于你的视力范围。 你的美别人看不到，你的丑一目了然。 你的脸，一分天注定，九分看滤镜。 你的脸，犹如你的人生，一样坎坷。 你的臭脚被毒蛇咬了，抢救了6个小时，毒蛇终于救了过来。 你的计划，就像零食，吃到肚子里之后就是个屁。 你的颓废是我前进的理由 你知道投资和投机的区别吗？一个是普通话，一个是广东话。 你给小草一点爱，小草还你一片绿！ 你老是这么抠门，门都被你，抠坏了好几扇。 你能接受恋爱年龄差多大？只要长得好看，上下五千年都行。 你若不离不弃，我特么必死无疑。 你若安好，那还得了~ 你若安好，那还得了~ 你若帮了一急需用钱的朋友，他一定会记得你，在他下次急需用钱的时候。 你获得了很多金钱，但同时也失去了很多东西，比如烦恼。 你虽然没有出过国，但是你每天都在倒时差。 你虽然长得丑，但你还矮呀 你要么非常努力，要么非常聪明，才能勉强过上平庸的生活。 你要努力的去生活，因为你只有努力了，才知道自己真的不行。 你要吃饱 要早睡 不要仗着自己长得丑就可以任意熬夜 你要喜欢一个女生，就从现在好好学习，好好努力工作，等她结婚的时候多出一份份子钱。 你要是和自拍长得一样，怎么会没有男朋友。 你要是喜欢一个女生，就好好学习找个好工作努力挣好多好多钱，等她结婚的时候你多出点份子钱 你要是过得好，我怎么能睡得着。 你要相信明天，一定会更好的，更好的把你虐成狗。 你要站在别人角度上去思考，总有一天你会发现，你丢失了自己。 你觉得很孤独，没关系，你还有手机。 你觉得我不好相处可能是因为我讨厌你吧。 ​​​​ 你认真的样子，就像天桥上贴膜的。 你说冰是睡着的水，我只记得屁是屎的叹息。 你说自己很丑，我觉得你不仅丑，还净说实话。 你费尽力气想明白了一些事情，但对解决它们一点儿帮助也没有 你走了真好。不然总担心你要留下来吃饭 你走了真好，不然我总当心，你会留下来吃饭。\n\n 你踢球受过最重的伤，是女友到球场给对手喂水！ 你过得好我替你高兴，你过得不好，我替全世界高兴。 你过的好不好别人不知道，别人只能看到矮胖穷。 你还不算惨，惨的人，都没手机用。 你还是别把我放在心里了，我不喜欢人多的地方。 你这两天早点回家，最近偷猪的多，我怕你出事。 你这么努力，忍受那么多寂寞和纠结，我们也没觉得你有多优秀。 你这么擅长安慰他人，一定度过了许多，自己安慰自己的日子吧。 你连世界都没观过，哪来的世界观？ 你连自己都睡不好，还想去睡别人？ 你那么胖，一定很善良 你长得很有创意，活得很有勇气。 俄罗斯方块教会了我们，如果你合群，就会消失。 俄罗斯方块教会我们：如果你合群，就会消失。 俗话说人无远虑，必定很有钱 俗话说人无远虑，必定很有钱。 俗话说张家长，李家短，这是真的么？ 俗话说祸不单行，可见连祸都是有伴儿的，你再看看你。 信就信，不信就不信，还TM整个微信。 倘若互不相欠，怎会再次相见。 债主，就是那个你破了产，也不会抛弃你的人。 假如今天生活欺骗了你，不要悲伤，不要哭泣，因为明天生活还会继续欺骗你。 假如生活出卖了你，希望是论斤卖，毕竟你比较肥。 假如生活欺骗了你，不要悲伤不要心急，生活还将继续欺骗你。 假如生活欺骗了你，不要悲伤，不要心急，多被骗几次就好了。 假如生活欺骗了你，不要悲伤，不要绝望，因为明天，后天，大后天，生活还会继续欺骗你。 假如生活欺骗了你，不要灰心，因为明天也一样 假如生活欺骗了你，你就打开美颜相机，欺骗所有的人。 假期定了个Plan，半个暑假结束了只完成了P，因为lan。 做一天的好人并不难，难的是做一辈子有钱人。 做了一个风险非常大的投资，要是成功一下就能挣几个亿，要失败我这两块就打水漂了。 做事一定要执著，一直向前走，无非就是碰壁，可你遇到的老是悬崖 做事一定要考虑别人的感受，千万不能让他们太开心了。 做事三思而后行，1、能不能不做，2、能不能明天做，3、能不能交给别人做。 做人如果没点追求，那么，该多轻松啊… 做人要安安稳稳本本分分，因为，你也根本搞不出什么幺蛾子。 做人要谦虚，多听听他人的意见，然后认真记下他们的名字。 做任何事情一定要坚持下去，总会让你看到，失败的那一天。 做好万全的准备，就是为了当机会来临时，你可以巧妙地避开它。 做好万全的准备，就是为了当机会来临时，你可以巧妙的避开它 做好人没希望，做坏人不擅长。 做政治试卷，是我这辈子，说谎最多的时候。 做梦梦到自己在考试，然后被吓醒，发现自己真的在考试。 做题前，先想想出题者的用意，我觉得他想我死。 偶尔还是要出去走一走，才知道躺床上多么舒服。 偷一个人的主意是剽窃，偷很多人的主意是研究。 傻人有傻福，傻B没有。 像你这样的人，哪怕把土豪两个字贴在脸上，别人也会反过来读。 像我这种连名牌都不认识几个的人，有时候连别人在炫富都感觉不到。 兄弟听我一句劝，游戏没了还能重玩，媳妇没了游戏就能一直玩了。 先生，你这张卡上的钱也不够…… 公主病的成因有两个，要么丑要么穷。那些又漂亮又有钱的呢？那本来就是公主好嘛！ 公主病的成因没别的，不是丑就是穷。 “那有钱又漂亮脾气却不好的呢？ ”那本来就是公主，不叫病。 其实人生，在某个节点后就结束了，大家只是在等彩蛋。 其实你不丑，只是，你美得不明显。 其实你也不是一无是处，至少在夏天，你还能喂蚊子。 其实你也有超能力，怎么减都不瘦的能力。 其实你讨厌的并不是广场舞，而是广场舞大妈。 其实只要不要脸，很多人生难题都能迎刃而解。 其实命运，真不是喜欢和你开玩笑，它是很认真的想弄死你。 其实找谁做女朋友都差不多，都是在不停地争吵。只不过一些人是和比较漂亮的女孩子在争吵。 其实表白未必是件好事，因为那样显得手黑。 其实，电脑游戏从小就训练你，把Boss当作自己最大的敌人。 养儿不防老，擦防晒霜才防老。 再不疯狂就老了，疯狂过后发现老的更快。 再也沒有任何事情，比晚睡更快樂了，除了晚起。 再买就剁手！能剁左手么，我习惯用右手掏钱。 再努力一点，你就能走向，人生癫疯。 再苦不能苦孩子，再穷也得穷得瑟。 冬天就是好，穷的时候，还有西北风喝。 冬天床以外的地方都是远方，手够不到的地方都是他乡，上个厕所都是出差。 冰冻三尺非一日之寒，小腹三层非一日之馋。 冰冻三尺非一日之寒，掏空钱包却一点不难。 减什么肥啊，脸丑和体胖又没有什么关系 减肥就是要向妈妈证明，不光胖找不到对象，瘦也找不到！ 减肥这件事情吧，减的快反弹的快，减的慢放弃的快。 减肥，你想要坚持，但坚持不想要你。 凡是不赚钱的，都说自己在创业。 出卖灵魂并不丢人，丢人的是，没能卖一个好价钱。 出卖自己的灵魂和原则并不丢人，丢人的是没能卖一个好价钱。 出来混，迟早是要胖的。 出身不好的限制也不光是平台问题。出身不好，说明你父母混的也不怎么样，也许你基因里就写着“不行”两个字。 出身好的努力是为了成功，而你是为了活下去。 创业嘛就要有个平常心，因为它总是起起落落落落落落的。 別人前途無量，我前途無亮。 别一天到晚想着减肥，你的嘴同意你这样想了吗？ 别人一看你就说你是学生，不是因为你看着年轻，而是因为穿的土！ 别人一问起你，你就和盘托出，你以为这是健谈和热情，其实，这是孤独。 别人下班泡妞，你下班泡面。 别人关心你飞得高不高，飞得累不累，而我只关心你翅膀好吃吗？ 别人努力会成功，你努力会有饭吃。 别人复习看书，都是看着看着就看懂了，我是看着看着就看开了。 别人存你的号是为了跟你联系，我就不一样，我存你的号就是为了不接 别人扮猪吃老虎，你只能扮猪。 别人是金子总会发光的，而你，总会花光的。 别人有成就才说平凡可贵，你那是碌碌无为 别人比你有钱还比你努力，但你更厉害，靠自己的想象就拥有一切。 别人没回复，继续等，你会等到她的朋友圈。 别人的人生有的是故事，而我，有的是事故。 别人的女朋友都会生气了，而你的女朋友还在充气。 别人的起点，是你遥不可及的终点。 别人的身体里都是才华，你的身体里都是珍珠奶茶。 别人的钱财，乃我的身外之物。 别人说你有潜力的时候先别高兴太早。因为…“实力不够，潜力来凑”。 别人都散发着恋爱的酸臭味，只有我，散发着单身狗独有的清香。 别人都是为怎么挣钱而发愁，我却是为怎么花钱而发愁，二十块怎么能花到下月十号？ 别人都有背景，而你只有背影。 别人都有背景，而我只有背影。 别人都用名牌包包，而你，只能用用表情包。 别人都说我烂泥扶不上墙，可是我为什么要上墙，躺地上不舒服吗？ 别人问你有谈恋爱吗？只要说现在没有，就能掩盖过去也没有的事实。 别人问你有谈恋爱吗？就说现在没有。可以机智地掩盖过去也没有的事实。 别人露腿那叫美，你露腿就想让人怼。 别人高处不胜寒，我们是低处纳百川 别以为世界没了你，没什么区别，没了你地球转得更快。 别以为你一无所有，至少你还有丑！ 别以为王子有多爱灰姑娘，才一晚上就TM忘了是谁了，全靠水晶鞋 别低头绿帽会掉，别流泪老王会笑。 别低头，双下巴会露。 别低头，多层下巴会暴露 别低头，王冠会掉。摔坏了你可赔不起。 别再抱怨你此生找不到一个对的人，当初的数学选择题就四个，你也找不到对的答案啊！ 别再说自己是单身狗了，你这个年纪狗都死了。 别减肥了，你丑不仅是因为胖。 别动不动说把一切交给时间，时间才懒得收拾你的烂摊子。 别去打扰那些，每次很久都不回你消息的人，删除好友就行。 别向生活抱怨什么，因为生活根本不知道你是谁。 别和我说对不起，因为我既不能原谅你，也无法捅死你。 别埋怨手机没怎么用就没电，你还不是一样，没干啥就累了。 别太晚睡，熬夜很伤手机的。 别太自信，你可能信错了人。 别对我大吼大叫 我小时候被狗吓过 别怕眼睛近视，因为在你的面前，除了失败什么也没有。 别总是骂别人猪狗，你过的还不如它们。 别总自称单身狗了，按年龄你是单身鳖，按智商你是单身傻狍子。 别总骂恨铁不成钢，是你自己忘了，铁本来就不能成钢的啊。 别慌去接受失败，要慢慢去感受。 别灰心，漂亮姑娘和天上星星一样多，只是你看得见摸不着罢了。 别看别人表面上一帆风顺，实际上他们背地里，也是一帆风顺。 别看别人表面上事事如意，其实他们背地里，也顺风顺水。 别看我平时对你漠不关心，其实私下里我每天都盼着你出事 别看我平时对你漠不关心，其实私下里我每天都盼着你出事！ 别看我平时对你漠不关心，其实背后有说你好多坏话的。 别看我挣的少，但是我省的多，昨天法拉利又省下两百多万。 别看那些有钱人表面上风光，其实他们私底下更风光。 别觉得身边的人都在针对你，仔细想想其实，整个世界的人都在针对你。 别让一张考卷决定你的前途，毕竟一次高考有那么多张 别说什么一见钟情，不过就是见色起意。 别说你一无所有，你还有一身债。 别说你一无所长，熬夜玩手机你可是一把好手。 别说自己是单身狗，狗还可以三妻四妾。 别问我失败了怎么办，说得好像你成功过一样。 别问我有啥，先说你要啥，再说你凭啥。 到不了的都叫做远方，回不去的名字叫家乡。 前世五百次的回眸，却换来今世的一句，流氓。 加我回来吧，我给你发我的婚礼请柬。 加油，你是最差的。 努力不一定成功，但不努力真的很轻松 努力了这么久，但凡有点儿天赋，也该有些成功的迹象了。 努力加油，每一个困难，都会克服我。 努力过失败过，没关系，重新努力会失败得更好。 勇敢面对磨难，那些杀不死你的顶多是让你，留下残疾。 勇敢面对磨难，那些杀不死你的，顶多是让你留下残疾 化再好的妆，也盖不住你，卸妆后的丑。 千万不要以为高中单身时因为学校禁止早恋 千万别把事情拖到明天，后天大后天都是好日子啊。 千里之行始于足下，没钱没票还是算了 半夜给你留灯的，只有自动售货机。 卑微的少年，不要害怕，我们终将光芒万丈，比如说火化的时候。 单身是个很好的借口，说得好像妹子们会看上你似的。 单身最好的一点是，当你脱光衣裳，失望的人只有你自己。 单身没有关系，以后单身的日子，还长着呢。 单身脱发又没钱，跑步进入中老年。 单身至今的原因是，熟人不好下手，生人不好开口。 卸妆对你来说，又叫洗钱。 厉害的不是你有多少后台，而是你能成为多少人的后台！ 去年定了一个目标存款三万，今年掐指一算，还差五万。 去年给自己定了目标存款3万，今年掐指一算，还差5万。 去看精神科时医生说，你没啥抑郁症，你是真的惨。 又一天过去了，怎么样，是不是梦想更遥远了？ 又到了一切矛盾，都能用「大过年的」四个字，解决的时候了。 友情越来越少，礼尚往来越来越多。 友谊是什么？你智障多年，我不离不弃。 双十一过后，我从一个光棍，变成了一个负债累累的光棍。 发丝千万条 睡眠第一条，熬夜不休息 脱发两行泪。 只是因为在人群中，多看了你一眼，你就以为我要坐你的摩的。 只有努力过了才知道，智商上的差距是不可逾越的。 只有努力过了才知道，智商上的差距，是不可逾越的。 只有努力过的人才知道，背景是多么重要！ 只有在车站大排长龙时，才能真正意识到，自己是龙的传人。 只有在，请假扣工资时，才觉得自己工资高。 只有多替领导背锅，领导才会把你，当成傻子啊。 只有拥有找男女朋友的能力和很多备胎，才能真正享受单身生活。 只有看尽人世繁华并且有能力随意享受繁华的人才有资格说淡泊名利之类的话 只有真正努力过的人才会知道，天赋有多重要。 只有真正努力过的人才知道，天赋有多么重要 只有能力强会被当成纯技术人员;而光会社交拍马又会被认为没有真才实学;所以，要想在单位中脱颖而出，最重要的是有关系。 只有讨厌人的时候才需要理由吧！ 只要你每天坚持学习，最终胜利肯定是属于，在考场上发挥好的人。 只要你每天坚持自习，认真刻苦，态度端正，忍受孤独，最终的胜利肯定是属于那些考场上发挥好的人。 只要你肯吃苦，肯努力，肯放下身段，去要饭，总会有人赶的 只要功夫深铁杵磨成针，但真把铁杵磨成针的，绝对是大傻瓜。 只要努力的时间足够长，搞不好，你还可以失败的更彻底。 只要坚持一下，一事无成的一年又过去了。 只要坚持下去，总会有失败的一天。 只要坚持不懈，嘲笑你的人，迟早会被你笑死。 只要我吃的夠快，体重绝对追不上我！ 只要我肯努力，没什么事情是我搞不砸的。 只要是用钱能解决的事情，我一件都解决不了。 只要是石头，到哪里都不会发光。 只要有快递还在路上，就感觉这生活，还算有点希望。 只要能用钱解决的事情，我一件都解决不了。 只要选对了人生的方向，很容易就成功了，让我们恭喜只要和很容易。 只要锄头挥得好，没有墙角挖不倒。 可以不劳而获的，只有年纪和脂肪。 可以做牛，可以做马，但是千万别做乙方。 可怕的不是，别人在今天忽悠你，而是忘了你这个人。 吃土的时候，觉得乞丐都比我幸福。 吃完苦中苦，我终于成为了人下人。 吃得苦中苦 心里会更堵 吃得苦中苦，才知道没有最苦，只有更苦。 吃的苦中苦，才知白辛苦。 吃货一般都比较善良，因为每天都只想着吃，没有时间去算计别人。 吃货的思路是，好吃你就多吃点，不好吃多少也要吃点。 同样是出卖自己，有的人成了大姐，有的人成了小姐。 同样都是咸鱼，为什么别人可以翻身，而你却粘锅了？ 同甘共苦你不陪，荣华富贵你是谁？ 后宫里发生的破事90%都是因为没有监控 听君一席话，浪费十分钟。 听成绩的时候要用右耳听，因为左耳靠近心脏，可能会猝死。 听说你的城市下雨了，不知道你带伞没有，如果带了这雨就白下了。 听说你的城市下雨了，不知道你有没有带伞，如果没有的话，我希望下的是刀子。 听说你过的不好，我蹲在门口，笑了一整天。 听说你过的没我好，那我就放心了。 听说自从你得了神经病，整个人都精神多了。 吾日三省吾身，吾没钱 吾没车 吾没房。 告诉我你在哪个街角，我，肯定不去 命只有一条，但要命的事，可不止一件。 和对象吵架，先不要追究吵架原因，要弄明白他胆子怎么肥了。 咸鱼翻了身，也还是咸鱼。 咸鱼翻身是为了晒得透彻，你翻身是因为手被压麻了。 咸鱼翻身有什么用，翻了身，还是咸鱼。 哀莫大于贼心不死。 哪怕失败了九十九次，我也要努力凑个整。 哪怕抛掉出身的因素，我觉得你也未必干得过别人。 哪怕是咸鱼也要有梦想，打滚儿翻身什么的味道更好一点 哪有什么优柔寡断，还不是因为怂。 哪有什么孤独，不就是没人爱吗？哪有什么寂寞，不就是闲的吗？哪有什么绝望，不就是穷的吗？ 哪有什么感同身受的心，全是站着说话不腰疼的嘴。 哪有什么来日方长，挥手便是人走茶凉。 哪有什么直男，只要你够好看，都能变成弯的。 唯一比孤独更可怕的，是被人知道你孤独。 善良没用，你得漂亮。 善良没用，因为只有你先漂亮，别人才能看到你的善良。 喜欢一个人就勇敢表白，也许你还能知道自己是几号备胎。 喜欢一个人就去表白，万一成备胎了呢。 喜欢一个人就去表白，万一，成备胎了呢？ 喜欢一个人是藏不住的，就算躲在衣柜里，还是会被她老公发现。 喜欢就去表白，不然你不会知道自己长得多丑。 喜欢就要表白，这样才能知道你是几号备胎。 喜欢就要说出来，万一成备胎了呢 喜欢就要说出来，不然你怎么能和女神做朋友呢 喜欢的人一定要去告白啊，不被拒绝一下你还真当自己是仙女了。 回首往事，我发现自己失去了很多宝贵的东西。但我并不难过，因为我知道，以后会失去的更多。 回首往事，是不是发现自己失去了很多，遗憾吧！放心，你以后会失去得更多。 回首过去，我居然没有，走过一次直路。 回首青春，我发现我失去了很多宝贵的东西。但我并不遗憾，因为我知道我以后还要失去更多。 回首青春，我发现自己失去了很多宝贵的东西。但我并不难过，因为我知道，以后会失去的更多。 因为穷我连关心你都不敢，就怕你说嘘寒问暖，不如打笔巨款。 困难也许会迟到，但绝不缺席。 困难像弹簧，你弱它就强，你强它更强。 国庆你堵在哪呢? 国庆去哪看风景最好？答案是，朋友圈。 国庆节想和女朋友去旅行，请大家帮忙推荐一下，哪里有好女朋友 在你最需要帮助的时候，只有鬼才来帮你。 在出租车内疯狂放臭屁，可以极大的降低，司机带你绕路的概率。 在我们这个年纪，金钱和长相决定了太多东西。 在最美的年纪遇见你，我想说，真是倒了血霉了！ 坚持就是失败 垃圾还有大爷大妈捡走，你呢？ 外貌不重要，爱情看的是感觉，但是我对丑的没感觉 外貌不重要，爱情看的是感觉，可是人家对丑的没感觉。 多少做手机贴膜的人，经过不懈的努力，贴了更多的膜。 多年过去，再回忆高考，其实本质上没有考到好与坏的说法，重要的是年轻人在一起，做份试题，然后决定去哪座城市做代购。 多照照镜子，很多事情你就明白原因了。 多照照镜子，很多挫折磨难你就明白个中原因了。 夜撩了酒，酒撩了你 你撩了我，穷困潦倒了我们。 大作不死，必有下回。 大多数时候，挣扎只会让你死的更快一些。努力的结果不过是从实践上证明了你压根就不行。 大多数时候，消耗能量的都不是工作，而是工作中遇到的人。 大学生啊你要知道，学习不一定能收获，但剁手一定能收货。 大家喜欢和你一起，是为了，显示他们的好看。 大家都以为我没什么朋友，事实上，我确实没朋友 大家都以为我没有朋友，事实上，我还真没有朋友。 大家都夸我贤惠，闲的什么都不会。 大老远看到我一直盯着你时，不要觉得我对你有意思，我真得看不清你是谁。 天将降大任于斯人也，必先苦其心志劳其筋骨，后来天改主意了。 天没降什么大任于我，照样苦我心智，劳我筋骨。 天涯何處無芳草，全都長在別人家。 天生我才必有用，前提是，你得是天生的。 天空没有翅膀的痕迹，除非你飞的时候会掉毛 天空飘来五个字:怎么都不行。 失恋之后快打起精神，毕竟，还有下一个渣男在等着你。 失恋的时候，许多年轻人以为整个世界都抛弃了自己，别傻了，世界根本就没需要过你。 失眠睡不着，可能是因为，你手机还有电。 失败不可怕，可怕的是，你还相信这句话。 失败乃成功之母，但往往失败都是，不孕不育。 失败乃成功之母，可失败连男朋友都没有。 失败乃成功之母，可是我TM失败的次数太多，都不知道谁是亲妈。 失败也是成功的一部分，在哪里跌倒，就在哪里讹人。 失败并不可怕，可怕的是你还相信这句话 失败并不可怕，可怕的是你还相信这句话。\n 失败是成功之母，但失败往往不孕不育。 失败是成功之母，但是成功六情不认。 失败是成功之母，可惜成功六亲不认。 失败的尽头是绝望，努力的终点是过劳。 奉子成婚，就是现实生活中的“你弄坏的，你就得买。” 女为悦己者容，男为悦己者穷! 女人假装高潮来维持恋爱，而男人假装恋爱以获得高潮。 女人用丝袜征服了男人，男人用丝袜征服了银行。 女孩子自信一点才漂亮，但是漂亮的女孩子谁不自信啊！ 女生之间的友谊啊，就像塑料花，虽然假但永不凋零。 女生们宁肯做高帅富的备胎，也不肯接受屌丝的行为，从基因上保证了人类的进步。 女生何必勾心斗角互相攀比，反正几十年后，都要一起跳广场舞的。 女生的冷暖自知什么的，在长的好看的面前都弱爆了。 女生的冷暖自知什么的，在长的好看面前弱爆了。 女票突然变瘦了，多半是漏气了。 好不容易习惯了自己的长相，理了个发，又换了一种丑法。 好人成佛需要九九八十一难，可是坏人只需要放下屠刀。 好人成佛，需要九九八十一难，坏人只需放下屠刀。 好女孩只得到一个好字，心机girl却得到所有。 好女孩只得到了好字，而漂亮女孩却得到了所有。 好好活下去，每天都有新打击 好好活下去，每天都有新打击。 好好过日子吧，每天都会有新打击。 好想把房子卖了，去环游世界，可惜房东不同意。 好看的皮囊三千一晚，有趣的灵魂要车要房。 好看的皮囊与你无关，有趣的灵魂你又没有。 好看的皮囊你养不起，有趣的灵魂看不上你 好看的皮囊千篇一律，有趣的灵魂两百多斤。 好看的皮囊现实劈腿，有趣的灵魂精神出轨?。 好看的锁骨千篇一律，有趣的肚腩弹来弹去。 好身材的因素很多。不是节食和锻炼就能拥有好身材的。 好运一定会降临，只是会降临在别人头上。 如果一个人秒回了你，那只能说明，他刚好在玩手机。 如果上天没有给你想要的，不是你值得拥有更好的，而是你不配。别以为今天是你人生的低谷，在你未来的日子里它都能算的上是巅峰了 如果上帝没有给你想要的，不是因为你值得拥有更好，而且你不配。 如果不能一夜暴富，两夜也可以，三晚我也不嫌多。 如果不能美得惊人，那就丑得销魂吧！ 如果人生是一部电影，那你就是，中间弹出来的广告。 如果你不珍惜我，那么过了这个村，我在下一个村等你。 如果你去抢银行，不论成功还是失败，未来十年内你都不用再上班。 如果你变成了备胎，请忘记你也是千斤顶。 如果你吃了亏，千万不要喝水，不然你会变污的。 如果你同时爱上了两个人，请选择第二个。因为如果你真的爱第一个，就不会爱上第二个。 如果你喜欢一个女孩，就好好努力多挣钱，到时候多随点份子钱。 如果你容不下我，说明不是你的心胸太狭窄，就是我的人格太伟大。 如果你对目前的工作不太满意，觉得事业发展到了一个瓶颈，那么就去进修一个更高的学历吧，这样的话，毕业以后你就会明白，之前的失败跟学历似乎没什么关系。 如果你很忙，除了你真的很重要以外，更可能的原因是：你很弱，你没有什么更好的事情去做，你生活太差不得不努力来弥补，或者你装作很忙，让自己显得很重要。 如果你很忙，除了你这真的很重要之外，更可能的原因是：你很弱 如果你愿意，一层一层一层地剥开我的心，你会发现我缺心眼。 如果你放弃了今天的自己，你就战胜了明天的你。 如果你有什么事，一定要告诉我，反正我也解决不了。 如果你特别迷恋一个人，那么你一定配不上他！ 如果你特别迷恋一个人，那你肯定配不上ta。 如果你的前半生过得很坎坷，也不必太担心，下半生你就会适应的。 如果你的男朋友对你百依百顺，从不拈花惹草。可能是因为他钱不够。 如果你真的想要做好一件事，全世界都会为你挡路。 如果你知道一些事情有意思，但不能去做而失落，那还好;要是觉得什么都没意思，应该就是抑郁症。 如果你花钱都不开心，那么是你花钱方式不对。 如果你觉得每天都忙成狗，那一定是你的错觉。狗一定没你忙。 如果你觉得自己，整天累得跟狗一样。 你真是误会大了，狗都没有你这么累。 如果你觉得，围着你的都是苍蝇，那可能你自己是坨屎。 如果你跌倒了，那就，找个舒服的姿势趴着吧。 如果你还在坚持，说明你还不够绝望。 如果你面前有一大笔钱，和一个万人迷，那么这和你有什么关系呢？ 如果全世界都不要你了，你要记得还有我，我也不要你。 如果全世界都不要你了，记得要来找我，我认识好几个人贩子。 如果再见不用红着脸，是否还能借点钱 如果再见不用红着脸，是否还能借点钱。 如果十年之后你未娶，我未嫁，那真是太惨了 如果十年之后你未娶，我未嫁，那真是太惨了！ 如果吃亏是福的话，那我可能早就福如东海了。 如果吃鱼可以补脑，你这智商，至少要吃一条鲸鱼。 如果外貌好能够获得他人的关注，又有钱能够支持各种娱乐活动，谁会愿意每天呆在家里打游戏，刷微博，看电视剧。 如果多年以后你未嫁我未娶，那么咱俩，也真够完犊子的了。 如果婚姻是爱情的坟墓，一年一次的结婚周年庆祝，便是在扫墓 了。 如果我有什么，让你不喜欢的地方，麻烦你自己克服一下。 如果我的人生是一部电影，那你就是一个弹出来的广告。 如果所有人都理解你，那你得普通成什么样 如果所有人都理解你，那你得普通成什么样！ 如果时间可以倒流，那一定是，你在做梦。 如果有一天我消失了，即使我的朋友恋人不会找我，银行也会疯狂找我。 如果有人问我：那些艰难的岁月你是怎么熬过来的？ 我想我只有一句话回答：我有一种强大的精神力量支撑着我，这种力量名字叫“想死又不敢”。 如果有天发现你一夜暴富了，给自己一巴掌，快醒来别上班迟到了。 如果有钱也是一种错，那我情愿，一错再错。 如果生活欺骗了你，不要着急 — 拿出美颜相机，去欺骗生活。 如果过年你看到我脸色不好，别想太多，就是你忘给红包了。 妹妹你坐船头，哥哥我在岸上走。看这句的99%都是唱出来的。 存款是负的房子是租的，有辆自行车，还是共享的。 学习使人快乐，不学习使人，更快乐。 学会对自己宽容，饿了就吃，困了就睡，不要表现得只要你不吃不喝不睡就一定能成功一样。 学校并不比社会简单，人闲事就多 学校教学楼放镜子，是为了让你知道，人丑就要多读书。 学海无涯，回头是岸。 学而不思则罔，思而不学则殆。不思不学成网贷。 学而不思则罔，思而不学则网贷 学过很多技能，到头来才发现，最有用的技能是——想开点！ 宁可美的千篇一律 ，也不要丑的各有千秋。 宁愿不说话看起来像个傻子，也不要，开口证明自己的确如此。 安慰别人的时候一套一套的，安慰自己的时候，只想找根绳子一套。 定期去检查身体吧，别等最后别人送你去。 富人生活千姿百态，穷人大致相同 富人的丁克叫丁克，穷人的丁克叫断子绝孙。 富豪们都在担心税太多，而你只会觉得睡不够！ 对不起，我没有回你信息。这只是因为我一点也不关心你的感受 。 对于丑的人来说，细看都是一种残忍。 对于今天解决不了的问题不要着急，因为明天你也解决不了啊！ 对于穷人，生活不累的话，那就不叫生活！ 对今天解决不了的事情，也不要着急。因为明天也可能还是解决不了。 对你别有用心的人，毕竟也是用心了。 ??? 对你竖大拇指的人，不一定是在夸你，也可能是用炮在瞄你。 对女人强吻表白一般会有两种结果，一种是啪，一种是啪啪啪。这就是屌丝和高富帅的差距。 对象抢不过别人就算了，抢购也抢不过别人，这个光棍节你可咋办。 将薪比薪的想了想，算了，不想活了。 小三是个好东西，她带走了不爱你的狗东西。 ??? 小伙子们现在好好奋斗，将来给你心爱的女生多添点份子钱。 小学的英语水平支撑到现在，越来越力不从心了。 小时候不努力念书，长大只能给人点赞。 小时候不爱吃饭，导致现在个矮。现在爱吃饭了导致又胖又矮。 小时候做过的最蠢的事，可能是盼着长大吧。 小时候我们经常被教育说不要追求金钱，还嘲笑那些有钱人，说他们穷得只剩下钱。长大后才发现，我们自己穷得连钱也没有啊。 小时候我们都很快乐，因为那个时候我们，丑和穷都还不是那么明显。 小时候我常想，长大了是上北大还是清华，现在想想原来是我想多了。 小时候最怕梦到自己找厕所，最最可怕的是，人没醒来厕所却找到了。 小时候最讨厌吃饭和睡觉，现在想想真贱。 小时候的我们很快乐。因为小时候穷和丑没有现在那么明显 小时候的梦想是当一个英雄，没想到手机里就能轻松实现，而且选择还挺多的呢。 小时候觉得方便面特好吃，想着长大以后一定要顿顿方便面，现在真的顿顿方便面。 小明吃了麻婆豆腐，于是他被麻婆告非礼。 小明和小红陷入爱河，第二天村里人把他们俩从河里捞了出来。 小明长期被爸妈蒙在鼓里，导致窒息而死。 少小离家老大回，骚话学了一大堆。 少年加油吧！只要你努力工作，你的老板一定会成功的。 就算你充电两小时，也不会有人和你通话五分钟。 就算你充电五分钟，那也没有人愿意和你通话两小时啊～ 就算你努力了，没有成功还是被别人看不起。 就算大雨颠覆全城，公司照样算你迟到。 就算是Believe，中间也藏着一个lie。 就算是咸鱼，你也不是最咸的那条。 就算睡得晚，不会找你的人还是不会找你！ 尽量撮合身边的同学，这样可以，少出一笔份子钱。 山重水复疑无路，柳暗花明又一坑。 岁月不饶人，首先不饶女人;机会不等人，首先不等男人。 岁月是把杀猪刀,可他拿丑的人一点办法都没有 岁月是把杀猪刀可他拿丑的人一点办法都没有 岁月是把杀猪刀，可是他拿丑的人一点办法都没有 岁月是把杀猪刀，可是他拿丑的人，一点办法都没有。 岁月是把杀猪刀，是针对那些好看的人，它对长得丑的人一点办法都没有。 岁月让我知道，除了快递我谁都不必等。 岁月让我知道，除了快递，我谁都不必等。 工作爱情生活不顺？多照照镜子，很多事情你就明白了。 希望无时无刻不在，而你，每时每刻都错过。 希望是火，失望是烟，人生就是一边生火一边冒烟。 希望有些事情可以自己解决，不是我自己，是事情自己。 希望能成为一个有趣和有钱的人，实在不行，光有钱就行 带翅膀的不一定是天使，有可能是雷震子。 干干净净没故事 一个酷字贯穿一生 平时看书是因为求知欲，考前看书是因为求生欲。 平时骂你就算了，非要等我打你，才知道我文武双全。 年轻人不要老想着走捷径，父母强才是硬道理。 年轻人嘛，现在没钱算什么，以后没钱的日子还多着呢。 年轻人嘛，现在没钱算什么，以后没钱的日子还长着呢。 年轻人总是有干劲，却没有长性 年轻时我以为钱就是一切，现在老了才知道，确实如此。 年轻的时候多吃些苦，这样老了吃苦才习惯。 年龄不是问题，身高不是距离，没钱谁喜欢你？ 幸亏你去年没洗头，要不然你今年，炒菜连油都没有。 幸亏当事者迷，不然真的看清事实真相，很多人是承受不来的。 幸福离我们并不遥远，它一直在我们那些长相姣好，家境优越，脑瓜好使，积极乐观的朋友身上。 开始我以为生活就是猫吃鱼 狗吃肉 奥特曼打小怪兽 可现实却是鼠整猫 羊耍狼 两熊玩死光头强 开车我最讨厌两种人，一种是喜欢加塞的人，另一种是不让我加塞的人。 异性只为繁殖后代，同性才是真爱 强扭的瓜不甜，不过甜不甜不重要，强扭，就很爽啊 强扭的瓜不甜，但是有瓜吃呀。 强扭的瓜不甜，但是解渴啊！ 强扭的瓜不甜，谁说我要吃了,我只是玩玩 强扭的瓜甜不甜不重要，只要能解渴就行了。 当一件事情需要通过辩论或者争吵来让对方屈服时，这不代表对方的不可理喻，而是自己的无能。 当你厌恶了对方，自己又找不到下家，“为了孩子”可能是个不错的借口。 当你变得足够优秀的时候，你才发现原来她只是，单纯的不喜欢你。 当你失败的时候，身边一定会有一群朋友，他们会关切你遇到的事情，然后带着经验离开 当你怀疑人生的时候，其实这就是你的人生。 当你摔倒但周围没人笑的时候，你就知道你已经是个老年人了。 当你瘦下来之后，你会发现原来你的丑，跟减肥并没有关系。 当你知道自己要去哪里的时候，全世界都在为你添堵。 当你能够飞翔的时候，就一定要上天台 当你觉得又丑又穷的时候，不要悲伤，至少你的判断还是正确的。 当你觉得生活对你不公时，秤秤体重，照照镜子，你会觉得一切又合乎情理。 当你觉得自己不行的时候，就走马路上走走，这样你就是一个行人了。 当你觉得自己又丑又穷，一无是处时，不要灰心也不要绝望，因为至少你的判断是对的。 当你觉得自己又丑又穷，一无是处时，别绝望，因为至少你的判断还是对的。 当你蹲下再站起来时，听到膝盖发出声响，那你要注意了，这说明你的听力挺正常的。 当傻逼只会造成少量痛苦，大量的痛苦来自于自己是傻逼，还努力不让别人知道。 当初有多感天动地，以后就有多万劫不复。 当利足够大的时候，又有几个人不会出卖自己的一切?别说自己不会，只是利益不够大而已。 当别人和你说忙，是TA要留时间，给更重要的人。 当别人和你说忙，是他/她要留时间给更重要的人。 当咸鱼拥有了梦想，它就会成为，一只拥有梦想的咸鱼。 当失去工作动力的时候，就看看银行卡余额吧。之后你就会发现：工作根本没卵用。 当失去工作动力的时候，就看看银行卡余额吧。之后你就会发现：工作根本没卵用。c 当年我背井离乡，乡里人从此再也没有，喝上一口井水。 当幸福来敲门的时候，我怕我不在家，所以一直都很宅。 当我一天只能撸两管的时候我才意识到我真的开始老了。 当生活压得你喘不过气，一定要挺直腰杆，这样被压死时才不难看。 往事不堪回首，是因为，你根本没有可以回首的往事。 往往那些不起眼的小餐馆，才能吃到真正的美味，而那些大酒店的我吃不起。 待你长发齐腰，记得拉屎要撩哦 很久不开QQ，登录后才发现，原来只有腾讯新闻在乎你。 很多人不是心理疾病，而是心理残疾，治不好的。 很多人发现自己在钱、权、女人的问题上比不过别人，于是开始试着在道德和人生境界上做文章。 很多人所谓的追逐梦想，就是不想要辛苦努力地付出，还可以轻松自由地生活。 很多人每天都精神抖擞去奋斗，仿佛全世界都在等着看他成功似的。 很多人觉得自己活得太累，实际上，他们可能只是睡得太晚。 很多人闯进你的生活，只是为了给你上一课，然后转身离开 很多时候你不拼一把，你根本不知道，你还有把事情搞砸的本事。 很多时候你不逼自己一把，你都不知道，你还有能把事情搞砸的本事！ 很多时候别人对你好，并不是因为别人喜欢你，而是因为他们喜欢对人好。 很多时候，乐观的态度和好听的话帮不了你。 很多次我都觉得坚持不住了，然后我就放弃了。 心是伟大的诗人，而嘴是蹩脚的编辑。 心比天高，命比纸薄。 心灵鸡汤是给吃惯了鲍参翅肚的人做的换口味小菜，屌丝以为喝一碗鸡汤就营养全面提升了？ 心狠手辣的小明，舔了一下自己的手指，被辣哭了。 心软不是病，回头才致命。 忍受孤独比忍受傻逼简单多了 忍无可忍，就重新再忍。 忘记以前的不开心，因为以后会更不开心。 快去努力吧，以证明自己，智商低。 念念不忘必有回响，得了吧……人家早把你忘了。 念念不忘，可有回响？ 怕鬼真的太幼稚了，我带你看看人心。 思想给了我们太多的自由，而我们拖累了思想！ 总是在凌晨想通很多事情，又在天亮之后，忘得一干二净。 总是在重复，尤其是错误！ 总有一天，你会遇到一个好姑娘，她不要你的房，也不要你的车，不要钻石，更不要你的钱，当然她也不要你。 总结一下你的2018，留下你的不开心，让大家开心开心。 恋爱时会觉得像吸毒一样，分手了又会像戒毒一样。 恭喜你又熬过一天，还中奖了，再来一天。 悄悄地我吃了，正如我悄悄地胖。 悲剧分为两种，一种叫悲剧，一种叫没钱。 情人节不出意外的话，一个人过，出意外的话在医院过。 情商最低的一句话，你踢我干啥？ 想买一辆保时捷卡宴，请问买过的朋友，你们的钱都是从哪里来的！ 想做什么就放心大胆去做，反正会后悔。 想做你的太阳，高兴的时候温暖你，不高兴的时候晒死你。 想变美就多睡觉，睡懵了就觉得自己美了。 想和男朋友去看电影，有什么好看的，男朋友介绍吗？ 想奋斗？手机能从你的手上拿下来，就算是拼搏了。 想好了的是假象，认真的做了也没前途。 想要打起精神，却一不小心把他打死了。 想要逼死一个强迫症，那实在是太简了。 愚人节表白算什么，清明节表白才是王道，失败了还可以说是鬼附身了！ 愚人节，只是给说谎的人，一个说真话的机会。 感情是可以磨合的，前提是，看脸。 感觉这辈子，最深情绵长的注视，都给了手机。 感谢前行路上击倒我的人，因为，躺着真的好舒服。 愿你以后，有酒有肉有姑娘，姑娘丑的不像样。 愿你所有的丧，都是临时医嘱。 愿你的仇人出走一生，归来仍是站票 愿你的烦恼，像你的头发一样，越来越少。 愿得一人心，免得老相亲。 懒又有目标，才是真的惨。 懒是一个很好的托辞，说的好像你勤奋了就能干成大事一样。 成功不了就是因为你各方面都太垃圾了，哪来那么多原因。 成功就像鬼一样，只有别人遇到过。 成功是可以复制的，而对于你，此处禁止粘贴。 成功的路上，我走的很慢，但从不后退，后面的大哥能补能别滴我 成名就像放的一个屁，响了一声还不够，还要臭段时间。 成年人的世界，除了长胖，其他什么都不容易。 成绩不好别着急，只要你肯坚持，一定能把前面的人熬走 成败是评判英雄的唯一标准。 成长就是将你哭声调成静音的过程。 我18岁背井离乡，从此村里人再也没有喝上过水。 我一般说话都会给人留面子，万一我怼你了，没错我就是故意的。 我上班就是为了赚钱，别和我谈理想，我的理想是不上班。 我不会两面三刀，可我经常被两面插三刀。 我不怕变成自己厌恶的人，我怕过得还不如他们。 我不怕变成自己所厌恶的人，我怕过得还不如他们。 我不想读书，主要是因为家里牛啊，猪啊羊啊都没人喂。 我不找你，是我有骨气。你不找我，你就是死了。 我不是矮，我只是离天空比较远。 我不是诸葛亮，也没有草船，但为何你的贱一直往我这放？ 我不是那种，落井下石的人，我是直接把井封了。 我不需要性生活，生活每天都在强奸我。 我不骂人，那是因为我，动手能力比较强。 我丑，是为了降低画质提高性能，为什么我的人生还那么卡呢？ 我也想做一个优雅的淑女，是生活把老娘逼成了泼妇。 我也曾青春逼人，可惜现在青春没了，就剩这么个逼人了。 我也有诗和远方，只不过诗很烂，远方一片黑暗。 我交朋友，从不在乎他有没有钱，反正都没有我穷。 我亲眼看着你走上台，不知道你是将要献丑，还是出丑。 我从不以强凌弱，我欺负他之前，真不晓得他比我弱。 我从不去想何时能成功，既然选择了远方，那就还远着呢 我从不去想何时能成功，既然选择了远方，那就还远着呢。 我从你眼里看到了两样东西，一样是真诚，而另一样是眼屎。 我从曾经的一无所有，到现在的身无分文。 我从来不会脑残地在网上晒自己买的名牌，因为我买不起。 我从来不会脑残地，在网上晒自己买的名牌，因为我买不起。 我以为我们能一起走到最后，谁知道，你走了两步就要打车。 我以为明天会更好，后来我天天盼着明天。 我们所咒骂的那些品德败坏的人，其实不过是直接或间接地损害了我们的利益。 我们所咒骂的那些品德败坏的人，其实不过是直接或间接地损害了我们的利益，或者做了我们想做而不敢做的事。 我们是好朋友，你摔倒了我会把你扶起来，不过要等我笑完。 我们都史无前例的有默契，突然你不理我我也不理你。 我们非常努力，才能活得像个普通人 我低迷的时候你在我身边，我生病的时候你在我身边，我失业的时候你在我身边，我没钱的时候你在我身边，你他妈就是个扫把星 ​​​​ 我决定从今天开始戒酒，以后如果再喝，我自罚三杯 我到底是活了16年，还是活了1天，重复了16年？ 我卧底五年成了老二，再卧底下去，我怕会成为老大！ 我发现很多混得不好的人看得都很开。也不知道他们是因为看得透彻而不屑于世俗的成功，还是因为不成功而不得不看得开。 我发现我挺能哄女孩睡觉的，只要我一发信息，女孩就说我要睡觉了。 我只想和你叙叙旧，你却问我要不要代购。 我可以划船没有桨，我可以扬帆没有方向，因为我这一生全靠浪。 我因为穷，所以国庆在家，躲过了一节。 我太好了，好到跟谁谈恋爱都是浪费，好到谁都配不上我，好到我只能自己对自己好，好到注定孤独一生。 我好想你，第一句是假的，第二句也是假的。 我对生活充满向往，生活对我虽远必诛。 我尝试着做一个有趣的人，后来却跑偏了，成了一个逗逼。 我已经不是那个花五十块钱也要考虑很久的小女孩了，现在五块钱都要深思熟虑。 我已经不是那个花五十块钱，也要考虑很久的小孩了，现在五块钱都要深思熟虑。 我已经到了法定结婚年龄，请问去民政局领证的时候，老婆是自己带还是等他们发？ 我想早恋，但是已经晚了… 我想要住进你心里，才发现是个小区，还有许多邻居。 我想重新认识你，从你叫什么名字开始。你叫什么来着？ 我把她从女孩变成了女人，她把我从男孩变成了，穷人。 我捡了个神灯，许愿我死前能找到女朋友，结果我获得了永生！ 我擅长做空A股，只要我一买，立刻跌。 我是一条酸菜鱼，又酸又菜，还多余。 我是深知欲速则不达，心急吃不了热豆腐的，你怎么能说我有拖延症？ 我曾经得过精神分裂症，但现在我们已经康复了。 我最大的缺点，就是缺点钱。 我有一个梦想，只是有一个梦想。 我有一颗早起的心，可我的被子和床不同意。 我有个朋友停止了抱怨，开始努力奋斗，几年过去了还是这个鸟样。 我有个朋友，在几年前停止了抱怨和自怨自艾，开始努力改变自己。到今天，他的物质生活和精神状态都没有什么改善。 我本想享受生活，结果发现活下来都很困难。 我每天拼了命努力就是为了，向那些看不起我的人证明，他们是对的。 我每天拼了命的努力就是为了向那些看不起我的人证明他们是对的。 我没有去过你的城市，但我刷过你那的题。 我没见过一个煤矿工人靠挖煤又快又多当上了煤老板。 我泼出去的水，盆都可以不要 我烂泥好好的摊在地上 不要你们扶 我爱你，你好，请问你是？ 我生平最讨厌一个字，略！尤其是题不会做时。 我生气的时候你一定要哄我，买吃的给我。等老子吃饱了打死你。 我的兴趣爱好分动态和静态，动态就是翻身，静态就是睡觉。 我的原则，只有三个字，看心情。 我的意中人是个盖世英雄，总有一天他会，踩着七色彩云去娶别人。 我的意中人是盖世英雄，有一天他会踩着七色彩云娶别人。 我的未来就是个梦，更遗憾的是，这会儿还失眠。 我的目标是三十岁有套房子，现在实现一半，已经三十岁了。 我的眼里只有你，因为你的大脸，让我看不到别人。 我的社交恐惧症，主要来自于，收入低。??? 我的脑袋不是空的。我是要大作为的人，只是混沌初开。 我的身体是铁打的，可是我的床是磁铁打的 我的钱虽然不是大风刮来的，但像被大风刮走的。 我真的挺羡慕你的皮肤，你说你是怎么能，把它保养的那么厚呢？ 我知道岁月会磨平我的棱角，但没想到，是把我按在地上摩擦。 我知道虚度年华不对，但是这样，真的好过瘾啊。 我能想到最浪漫的事，就是和你一起吃吃吃，然后你付钱。 我能想到最浪漫的事，就是看你一人慢慢变老。 我能想到，对自己最准确的形容词只有：肥美。 我虽然不能来一场，说走就走的旅行，但我有一个说胖就胖的体质。 我要是有钱或者长得好看就好了。那样，即使我性格有点儿怪，也会有人愿意倾听我的想法和感受，跟我做朋友。 我要没点自我安慰的本事，还真活不到现在。 我觉得一定有很多人暗恋我，因为这么多年了，也没有人跟我表白！ 我觉得失恋不可怕，眼瞎才可怕。 我试过销声匿迹，最终也无人问及。 我说哪句话让你伤心流泪了，请告诉我，我再说一遍。 我超级超级喜欢小动物，怎么说呢，就是顿顿都有吧 我超级超级喜欢小动物，怎么说呢，就是顿顿都有吧。 我躺在床上看天花板，想着我工作的天花板，只是别人的地板。 我这人不太懂音乐，所以时而不靠谱，时而不着调。 我这人从来不记仇，一般有仇当场就报了。 我这人吧，永远不要挑战我的底线，否则我又得修改底线。 我这张脸只要遮住两个地方就完美了！ 一处是右半边脸，另一处是左半边脸 我这张脸只要遮住两个地方就完美了！一处是右半边脸，另一处是左半边脸。 我这辈子没求过谁，只求过阴影部分面积。 我连名牌都不认识几个，有时候，别人在炫富我都不知道。 我连穷和丑都不怕，还怕单身？ 我鼓足勇气去面对现实，却发现勇气，真的只是气而已。 房价就是天然避孕药 所有抱怨社会不公和制度的人翻译过来只有一句话：请给我金钱，女人和社会地位! 所有抱怨社会不公和制度的人翻译过来只有一句话：请给我金钱，女人和社会地位。 所有的故事都会有结局，只有生活跟你没完。 所谓复习就是，把不会的东西再确认一遍，你确实不会。 所谓婚姻，就是两个家庭的，资产重组。 所谓成长，就是在听到波涛汹涌四个字，再也联想不到大海了。 所谓的你会等到那个对的人，就是到了结婚年龄随便找个人嫁了。 所谓的女汉子，只不过是因为长得丑而已，但凡有些爷们气质的漂亮姑娘，都被称为女王大人。 手机摔了这么多次都没事，想想还是我的身高救了它。 手机的寿命是人类的1/20，请放下身边的杂事，好好陪陪它！ 扎心？不存在的！心都没有扎哪里？ 打工钱少就出来创业吧，保证能让你，赔个精光。 打算卖房去旅行，结果房东不同意 打趴下就不要爬起来了，反正还是会被打到趴下 打趴下就不要爬起来了，反正还是会被打到趴下！ 打麻将三缺一，斗地主二缺一，我谈个恋爱咋还一缺一？ 找不着皇色网站的老王竟打开了淘宝女装频道 找对象的时候，不要光看对方外表，得先看看自己外表！ 找对象还是眼光高点好，你总得为，没有人喜欢你找个借口吧。 承诺就像放屁，当时惊天动地，过后苍白无力。 把女孩子弄哭是很没种的事情，把男孩子弄哭是一件叼爆的事啊。 把秋衣塞进秋裤，把秋裤塞进棉袜里，是对冬天最起码的尊重。 投对了简历找到一份好工作，投对了胎，可以不用找工作。 抱怨不会改变生活，但是钱可以。 抱怨不会改变生活，但是钱可以！ 抱最大的希望，为最大的努力，做最坏的打算。 拉肚子的时候，不要相信任何一个屁。 拿钱解决问题算什么本事，有种你们看我TM连钱都拿不出来 挣钱是一种能力，花钱是一种技术，我能力有限技术却很高。 挣钱是一种能力，花钱是一种技术，我能力有限，技术却很高。 据分析，造成婚外恋的根本原因，是结婚。 据说到2020年，要消灭贫困人口，我还不想死。 掐指一算，你俩要散。 摊煎饼的大妈说，她月入三万，不差你一个鸡蛋。 撞衫不可怕，谁丑谁尴尬 攒了一年头皮屑，只为给你下场雪。 放下手机出去走走，最后你会发现，还是手机有意思。 放假买个地球仪吧，世界那么大你不但可以看看，还可以转转。 放弃这个字，说起来简单，做起来就更简单了。 放心吧 有钱人运气都不会太差的。 放心吧，只要你持续走下坡路，就永远不会处在人生最低谷。 敬往事一杯酒，再爱也不回头。 求你回头看看吧，往事都「吐」了！ 旅行不必在乎目的地，在乎的是沿途的风景。因为就你那点钱也就只够买个往返火车的硬座票了。 无毒的身躯扛下有毒的疫苗，你是教育我从小就要坚强！ 无论你二或不二，二就在那里，不三不四。 无论最后我们疏远成什么样，一个红包，就能回到当初。 无论遇到任何事情，在哪里跌倒，就在那多躺一会吧。 既已背影倾天下，何必转身乱芳华。 既没有让人一见钟情的颜，还缺少让人日久生情的钱。 早上醒来，我以为自己长大了，原来是被子盖横了～ 早晨起来照镜子，安慰自己说没事，还有比我更丑的。 早点睡吧，因为你喜欢的人，早就跟别人睡着了。 早睡早起身体好，可是晚睡晚起真的心情好。 早起的虫子被鸟吃 早起的鸟儿有虫吃，可惜你是那条虫。 时间会帮你攒够失望，并告诉你不用谢。 时间就像胸，挤挤就有了，躺下就没了。 时间就是金钱，我在浪费时间？不～我只是在炫富！ 时间是最好的老师，但遗憾的是，最后它把所有学生都弄死了。 明天就要见对方家长了，好忐忑啊，毕竟是我先打的他们家小孩。 明日复明日 明日何其多！既然这么多，不妨再拖拖。 明明可以靠脸吃饭，你却要靠才华，这就是你跟明明的差距 明明可以靠脸吃饭，你却靠才华，这就是你跟明明的差距。 春节你要小心了，毕竟过年，都是要杀猪的。 春节假期要结束了，该收收心，准备过五一了。 春节假期，从跳过早午餐开始。 昨天一个小偷，来我家偷钱，我们一起找了一晚上。 昨天遇到小学同班同学，没想到他混的这么差，只往我碗里放了一块钱 昨天遇见小学同班同学，没想到他混的这么差，只往我碗里放了一块钱。 是好久不见，还是，视而不见。 是虚荣、骄傲、嫉妒与报复，支撑你到今天。你的成长是依赖这些负的能量，而非天生的善良 是这样的，风水轮流转确实不假，但你在轴心上这就很尴尬了 是金子总会发光，但你只是块肥肉。 是金子，早晚会发光。是石头，到哪里都不会发光。就算你是金子，早晚也会花光。 是金子，早晚会发光。是石头，到哪里都不会发光。就算你是金子，早晚也会花光。 暑假定了一个PLAN，但我因为LAN，一个P都没完成 暗恋就是你在心里，为他盖了一座城堡，他却连门都不想进。 暗恋的人没有，想暗杀的倒有一堆。 曾梦想仗剑走天涯 后来手机没电就没去(๑¯∀¯๑) 曾梦想仗剑走天涯，因太胖取消原计划。 曾经我也是打算靠脸吃饭的，后来差点饿死才放弃的。 曾经我也是靠脸吃饭的，后来差点饿死了… 曾经我想做个特别的人，现在我成功了，我现在特别难过又无助。 曾经才华横溢的你，现在只会说666。 曾经是梦想家，现在没了梦，只剩下想家。 曾经的搬砖少年，通过不懈的努力，现在能搬更多的砖了。 曾经的海枯石烂，抵不过好聚好散 曾经的海枯石烂，抵不过好聚好散。 曾经给我泼凉水的人，没关系的，我烧开了还会还给你的。 最怕你一生碌碌无为，还安慰自己说平凡可贵。 最近一个月，总有那么三十天很不顺。 最近改掉了熬夜的壞習慣，改通宵了。 最靠得住的是有钱，最靠不住的是人心。 月亮代表我的心，坑坑洼洼冷冰冰???。 月老麻烦下次为我牵红线，能换成钢丝吗？红线老TM断。 有一些漂亮又受过教育的姐妹，本来有机会嫁给官富二代，但很多被那些长得不错、有名校高学历、刚毕业在知名外企工作、加班到很晚还健身的男生所吸引。觉得人家上进又有潜力。五六年后，她们悔的肠子都青了。 有一天你会遇到一个妹子，她不要你的房也不要你的车，她也不要你。 有一段情，叫自作多情。 有一种病叫看过听过励志演讲励志电影励志书籍励志歌曲知乎励志答案仿佛就已经奋斗努力过了。 有个姑娘问我借钱去整容，整的挺成功，我再没认出是谁问我借的钱。 有些事不是努力就可以改变的，五十块的人民币设计的再好看，也没有一百块的招人喜欢。 有些事不是我不在意，而是我在意了，又能怎样？ 有些事情还是要坚持的，比如睡觉，特别是闹钟响起的那一刻。 有些事或人，不是你有钱就可以搞定的，你得有很多钱。 有些事，不说是个结，说了是个疤。 有些人一旦错过了，真特么谢天谢地。 有些人不是赢在了起跑线上，而是直接生在了终点。 有些人出现在你的生命里就是为了告诉你，你真好骗。 有些人出现在你的生活里，是想告诉你，你真好骗啊！ 有些人努力了一辈子，就是从社会的四流挤入了三流。 有些人努力了一辈子，就是从社会的四流，挤入了三流。 有些人就是四，除了二，还是二。 有些人感慨：“自己岁数不小了，还没有成熟起来。“其实你已经成熟起来了，你成熟起来就这样。 有些人感慨：“自己岁数不小了，还没有成熟起来。”“其实你已经成熟起来了，你成熟起来就这样。” 有些人感慨：自己岁数不小了，还没有成熟起来。其实你们已经成熟起来了，你们成熟起来就这样。 有些人是好看的，有些人是难看的，而你是好难看的。 有些人表面上考试分数很高，却不知道他们在背地里也没少玩儿 有些人表面光鲜亮丽，实际上，船袜已经滑到了脚底板。 有些妹子喜欢带上墨镜自拍。其实再戴上口罩，会显得更美。 有些姑娘特别信奉“爱我就要接受最真实的我”。但是首先你要保证“最真实的你”值得一爱啊。要腿没腿、要胸没胸、没文化还不读书、长得丑还不化妆。你还舔着大脸说帅哥都去搅基了、好男人都有主儿了，你自己说你不是缺心眼是什么。 有人“发”“花”不分。经常说成：是金子总会花光的。不过好像也没错。 有人一笑就很好看，你是一看就挺好笑。 有人存你号码是为了打给你，我不一样，我是为了不接。 有人考试靠实力，有人考试靠视力，尼玛我考试靠想象力！ 有人说世上百分之九十的事都能用钱解决，但他们没告诉你剩下的百分之一需要更多的钱。 有人问我如何在这个物质恒流的社会独善其身，我回答了一个字“穷”。 有什么不开心就睡一觉，没什么是睡一觉不能解决的，如果有那就再睡个回笼觉。 有困难要帮，没有困难，制造困难也要帮。 有很多时候，面子不是别人给的，是自己凑上来丢的。 有很多遗憾，后来我们叫它美丽的错误。可也许你坚持去做了，现在就只剩下了错误。 有时你会觉得自己就是个SB，别灰心，至少感觉是对的。 有时候不努力一下，都不知道自己还有把事情搞砸的能力 有时候不努力一把，你就不知道什么是绝望 有时候不努力一把，你都不知道什么是绝望。 有时候你不努力一下你都不知道什么叫绝望。 有时候你不逼自己一把怎么知道自己做不到 有时候别人对你很冷淡，可能并不是你的问题。他也许只是不喜欢丑的而已。 有时候，你最想得到的人，其实是你最应该离开的人。 有时候，别人对你很冷淡，可能并不是你的问题。他也许只是不喜欢长得丑的人而已。 有时候，只要你下定决心做某件事，全世界都会拖你后腿。 有朋自远方来，虽远必诛。 有梦就要去追，待会儿醒了，就不容易再睡着了 有的人穷的以为时候有钱会很快乐，等他真的有钱了，才发现有钱确实很快乐 有的时候一场说走就走的旅行归来后，除了该做的事情被拖延的更久了，什么都没有改变。 有缘千里来相会，无缘倒也省话费 有缘千里来相会，无缘倒也省话费。 有股强烈的学习欲望，幸好我自制力强，压下去了。 有趁着年轻多出来走走看看，不然你都不会知道呆在家里有多爽。 有钱了不起啊？有钱，真的了不起。 有钱人可以选择低调，而你，却只能低调。 有钱人离我好近，有钱离我好远！ 有钱人终成眷属，没钱人亲眼目睹。 有钱人终成眷属，没钱人只能吃土。 有钱者，事竟成 有钱能买来幸福吗？不能，有钱本身就是幸福！ 朋友买了块户外手表，质量很赞。从悬崖落下去都没坏，就是人死了。 朋友事业上获得突破，生活提升了档次，我真替他高兴。不过要是能换成我，我会更高兴。 朋友说借二十块钱回头给你，借完钱之后我才知道，有些人一转身就是一辈子。 望穿秋水之寒，无论如何也比不了，忘穿秋裤之冷。 本以为牵了小姐姐的手，可以得到她，没想到小姐姐是千手观音。 本来无望的事，大胆尝试，敢于突破，最终会证明真的无望 机会是留给有准备的人，没机会的人，就别瞎准备了。 机会是留给有钱的人的？ 机会，永远留给，有胸有颜的人。 条条大路通罗马，可是有人就出生在罗马 条条大路通罗马，每条都有收费站。 条条大路通罗马，而有些人，就生在罗马。 根本没有什么高冷的人，人家暖的不是你而已！ 梦想还是要有的，万一下辈子实现了呢？ 梦想还是要有的，万一别人问呢 梦想还是要有的，万一哪一天就被别人实现了呢 梦想还是要有的，万一见鬼了呢？ 梦想还是要有的，不然哪天喝多了，你跟人聊啥？ 欢迎来到2019，恭喜你进入了新的，扎心的一年。 正在输入…，给了多少人希望，又给了多少人失望。 正月初五迎财神，那都是有钱人的事，你就洗洗睡吧。 武则天证明了，成功和性别没关系，你证明了成功和你没关系。 死并不可怕，怕的是再也不能活了。 毁灭友情的方式有许多，最彻底的一种是，借钱不还。 每一个想等事业起步之后在结婚的男人，最后大多数都成了单身。 每一个抖腿的人，心里都有一台缝纫机。 每个人都自诩经验大师，动不动就对你进行说教，你要做的是：能不听就不听。 每个女人都在寻找一个爷们，最后发现，最爷们的原来是自己。 每天只想快点回家躲到被窝里 毕竟在外面跟演戏似的 每天叫醒我的不是理想，是楼下广场舞的音乐。 每天对着镜子说一句你很棒，不久后，那镜子就会成为很棒的镜子。 每天对着镜子说你真的很棒，那这块镜子应该是真的很棒 每天显得无聊或寂寞了，去找朋友一起吃饭和逛，只不过是为了满足自己与人交往的需求，算不上是社交。 每天看着189邮箱收到的电子账单，只想到用6位数的密码守护好2位数的存款 每天都在勤勤恳恳地，思考一个问题，如何才能不劳而获？ 每天都要有新的期待，这样才能有新的失望。 每当你打算开始存钱，心里总有个声音在说：“对自己好点”。 每当我勇敢地走出一步，上帝就会及时慷慨地为我，铺好下一步下坡路。 每当我找到成功的钥匙，就发现有人把锁给换了。 每当我找到成功的钥匙，就发现有人把锁芯给换了… 每次临时抱佛脚的时候，佛总是给我一脚。 每次想省钱的时候，就是你智商到达顶峰之时！ 每次看你穿丝袜的时候，我都有一种无法言喻的感觉，那就是萝卜还包保鲜膜咧。 每次看到穷游日志的感受都是：那么穷就别TM出去浪了 每次看穷游日志的感受都是，那么穷就别TM出去浪了。 每次花钱都说钱包在滴血，可殊不知你的钱包，已经失血过多而死了。 每次面对美食，我都告诫自己：“吃多了会死。”但结果证明，我根本就不怕死。 比一个人吃火锅更寂寞的是，一个人没有钱吃火锅。 比一个人吃火锅更寂寞的是，一个人，没钱吃火锅。 比三观更重要的是五官。 比你优秀的人还在努力，你努力有什么用 比你优秀的人还在努力，你努力有什么用呢？ 比尔盖茨休学创业，成为世界首富，可是人家休得是哈佛大学。 比挂科补考更让你头疼的，是蚂蚁花呗和京东白条的还款提醒 毕业不分手，异地绿成狗 毕业之后我换了五六个手机号，可同学结婚还是联系到了我 永远不要自暴自弃，一旦开始放弃，你就会发现非常开心 永远不要轻易的向别人展示伤口，因为你不知道他手里握的是云南白药还是孜然辣椒面。 求个明白人，问条不归路。 江湖水深，不浪怎知？ 没人嘲笑你的梦想，他们只是，嘲笑你的实力。 没人牵手，我就揣兜。 没吃饱只有一种烦恼，吃饱了有无数的烦恼。 没对象怕什么，我有对象，我下棋也没赢过啊。 没有人关心你飞得多高，倒是有一群人等着看你摔得多惨。 没有人关心你飞得多高，倒是有一群人，等着看你摔得多惨。 没有人瞧不起你，因为根本就没有人瞧你。 没有人能够让你放弃梦想，你自己试试，就会放弃了。 没有人能让那你放弃减肥，你自己想想就会放弃了。 没有什么事情能把人一次击倒，只要足够坚强，它会持续的把你击倒 没有什么事情能把人一次击倒，只要足够坚强，它会持续的把你击倒！ 没有什么可以将你打败，因为你从未成功过。 没有什么永垂不朽，但你可以。 没有你想不到，只有你做不到…… 没有外表，谁TM看你内心啊 没有梦想，至少还可以做梦啊。 没有看不到的消息，只有不想回的人。 没有解决不了的问题，但是有解决不完的问题。 没有钱包的充实，哪来内心的宁静。很多人都本末倒置了。 没有钱的时候，听到别人说恭祝长命百岁，都觉得是一种诅咒。 没有，过不去的坎，只有过不完的坎。 没钱了来找我，让我告诉你没钱的日子，怎么过。 没钱才上班还是上班才没钱，我不明白哪个环节出了问题，难道有中间商赚差价？ 没钱没事业的人，才有时间去提高自己的人生境界。 没钱用的时候跟我说，让我知道不止我一个人，没钱用。 法制与道德就是站在顶峰的人，给弱者制定的规则，而强者一般无视规则。 注重细节，从小事做起，因为你也做不了大事。 注重细节，从小事做起，因为你根本做不了大事。 活了这么多年发现，唯一坚持下去的，就是每天给手机充电。 活了这么多年，一直搞不明白一件事，拉钩为什么要上吊？ 浆糊不在办公桌上，在你脑子里。 海底捞的服务是真心好，上次我吃饭没带钱，还是服务员帮我报的警。 混到现在，拿得起放得下的，只有筷子。 清明节，应该回你的学校扫扫墓，因为那里埋葬了你的青春。 減肥是一件大事，先讓我吃飽了，再來好好計畫計畫。 滴水穿石，厚积薄发，年轻人要学会沉淀自己，要知道压力过大易导致内分泌失调，只会让你越来越沉，沉。。。 灰姑娘嫁给了王子，但请不要忘记她也是伯爵的女儿。 灰姑娘的鞋若是合脚当初就不会掉，王子若是真的爱灰姑娘就不会连和自己跳了一晚上的舞的女孩都不认识。 灵魂已出窍，躯体有何用。 熟练地运用，关我屁事和关你屁事，可以节省人生80%的时间。 熬夜对身体不好，建议通宵。 爱一个人一定要告诉她，那样你才会知道，她有多讨厌你。 爱你不是两三天，而是，一天都没有爱过 爱情就是，如果没有更好的选择了，我才陪你到天荒地老。 爱情是把双刃剑，一边把你割得很疼，另一边也把你割得很疼。 爱情说白了就是在对的时间碰到有感觉的人，没有那么复杂。 爱是一道光，绿到你发慌。 爱真的需要勇气，来接受，一次次的没人爱。 爱笑的女孩运气不会太差，但是运气差的女孩，还能笑得出来吗？ 爱笑的女生运气不会太差。说实话，如果一个女生运气一直不好，我不知道她怎么笑得出来。 爱笑的姑娘运气都不会太差。—— 运气差的姑娘根本笑不出来！ 爱笑的姑娘，总是比别人更容易长眼纹，干纹，细纹，鱼尾纹。 爱笑的姑娘，总是比别人，长更多的鱼尾纹。 爱迪生千百次寻觅灯丝，就是为让你，当上耐用的电灯泡。 父母一直注重对我的品德教育。到了社会上，我按照父母教我的接人待物，却发现自己并不受人待见。 爸爸养过的鸟、兔子、鱼、松鼠、发财树等等的都死了，我和哥哥很庆幸 物以类聚人以穷分，有钱人终成眷属。 特别能吃苦这五个字，我想了想，我只能做到前四个。 狗是人类最好的朋友。 然而狗最好的朋友是「屎」。 猛的一看你不怎么样，仔细一看，还不如猛的一看。 猪猪那么可爱你们能不能炖香一点 王子拿着留下的43码水晶鞋陷入沉思 玩手机时间长要让眼睛休息，把视线投向窗外，想一想为什么自己这么穷。 玩游戏，输赢不重要，重要的是要赢。 现在吃苦，是为了让你习惯以后吃更多苦。 现在流的泪，都是当初脑子进的水。 现在的女孩子如果不努力，是会被抓去结婚的，并且还要生二胎。 现在的女生太不像话了，领口开这么低，还看不到事业线 现在的年轻人，除了睡觉时间不想睡，其它时间都想睡觉。 现在的时代，不是属于00后的，是属于厚脸皮的！ 现在的生活或许不是你想要的，但绝对是你自找的 现在苦点没关系，人只要活着就一定会有好事，发生在别人身上。 现实就是，你这个前浪还没开始浪，就已经被拍死在沙滩上了。 現在矮矬窮不要緊，要相信將來有一天，你會變成矮矬窮老… 生命中必然要放弃某些人，不是你不在乎，是他们不在乎。 生平最讨厌溜须拍马的人，和他们在一起，显得老子很不会做人。 生活不仅有眼前的苟且，还有远方的枸杞。 生活不仅有诗和远方，还有交通拥挤和住房紧张。 生活不会放弃你，但也不会放过你。 生活不是这样就是那样，总之，不会是你想的那样。 生活不止有眼前的苟且，还有今后的苟且，还有你看不懂得诗，和你到不到了得远放。 生活不止眼前的压力，还有背后的灾难。 生活不止眼前的苟且，还有一辈子的苟且。 生活不止眼前的苟且，还有前任的喜帖，所以拉黑很重要。 生活不止眼前的苟且，还有前任的请帖。 生活不止眼前的苟且，还有旧爱发来的请帖。 生活不止眼前的苟且，还有永远读不懂的诗和到不了的远方。 生活不止眼前的苟且，还有读不懂的诗和到不了的远方。 生活不止眼前的苟且，还有读不懂的诗和到不了的远方！ 生活不止眼前的苟且，还有远方等着你耕的田野。 生活不止眼前的苟且，还有长远的凑合 生活中很多人喜欢小题大作，其实真的没有必要，要想想大题怎么办。 生活为你关上一道门的同时还会告诉你，这么丑就躲在家里吧。 生活会让你苦上一阵子，等你适应以后，再让你苦上一辈子。 生活和电影不一样，生活难多了 生活将我们磨圆，不是为了别的，只是为了能让我们滚的更远！ 生活就像海绵里的水，只要你不愿意挤，总有一天会蒸发完的。 生活没有翻不过去的坎，只有翻不完的坎。 生活磨光你的棱角，是为了让你，滚的更远。 生活经验告诉我，吃不到鸡肉的人才只能喝汤。 生活费就像大姨妈，一个月来一次，几天就没了。 生活还是有意思的，毕竟每天都因为不同的原因想死。 生活里不缺乏狗血剧情，可是一定要记住，你才是你人生的作者，何必把剧本写得苦不堪言。 生活，开始对我这种小鸡爪子，放泡椒了！ 用2B形容你，人家铅笔不乐意。 用心品味当下每一分痛苦，这样在离世时才不会有所留恋。 用扯淡的态度，面对操蛋的人生。 用美颜手机自拍多了，越来越不知道，自己有多丑了。 用钱当然买不到快乐，只是有钱，别人会想办法让你快乐。 由于性格太内向，一直做不出，抢着结账这种事。 电视剧里被霸道总裁看上的善良傻白甜没有一个长得丑的。 男人单身叫单身狗，女的单身叫狗不理。 男人的“五分钟到家”和女人的“五分钟就能出门”其实是一个意思。 男女之间一定有纯友谊，每一个我认识的女生，都说最多只能跟我当朋友。 男女之间很少有纯友谊。小船要么沉底，要么升舱。 男追女隔座山，翻过山就好了 瘦的人能把衣服穿出故事，胖的人只能穿成事故。 白天嘈杂得不愿意醒，夜晚安静得舍不得睡。 白雪公主诠释了七个小屌丝对她再好，也不及高富帅的一个吻 白雪公主诠释了，七个小屌丝对她再好，也不及高富帅的一个吻。 盖茨休学创业成了世界富翁，但人家休的是哈佛大学。 目前最靠谱的发财方法，就是，你家拆迁了。 直到三十岁才知道，和不同的人说不同的话，表现出不一样的态度，是一种非常可贵的能力，而不是虚伪。 相亲最大的好处是，如果以后婚姻出问题，你可以把责任推给媒人。 相信你一定不会被生活打倒，因为你的体重，超过了生活的预料。 相由薪生 看了何以笙箫默，你以为赵默笙是傻白甜，可你别忘了人家和何以琛考得是同一所大学。 看到一个人很像你，我追了上去，突然想起这个城市没有你，我放下了手中的砖头，差点打错人。 看时间不是为了起床，而是看还能睡多久。 看着溅我一身水远去的大奔，劳资心想等我有钱了，一定买一套雨衣。 看背影迷倒千军万马，转过头吓退百万雄师。 看著面善的，不一定是好人，還有可能是詐騙集團。 看见一个算命大师，我刚坐下他就问我，你算什么东西？ 看见别人走在成功的路上，你问问自己难道不想成为，他成功路上的绊脚石吗？ 真希望有一天我的钱包，可以和我的脸皮一样厚。 真正努力过的人才知道，智商上的差距是不可逾越的。 真正努力过的人，就会明白，天赋是有多么重要。 真正的勇士，敢于直面银行卡上的余额，敢于正视磅秤上的数字。 真正的吃货，是可以把月供看成月饼的。 真正的财富是你的思维，不是你的收入，因为你的收入实在太少了 真的不能熬夜了，打开支付宝都看不到钱了 真的猛士，敢于直面肥胖的人生，敢于正视缺位的智商 眼睛千万不要对着手机太久，专家说了，那样手机会没电。 睡觉睡到手抽筋，数钱数到自然醒。 知识给你力量，无知会给你更强大无畏，且无法预测的力量。 知道为什么天妒英才吗？ 因为没人去管笨蛋活了多久。 知道为什么自古红颜多薄命吗？因为没有人在意丑的人活多久。 知道为何自古红颜多薄命吗？因为没人在意丑的人活多久。 矮是什么感觉？明明想瞪人的，硬生生成了卖萌。 研究证明常年抽烟喝酒的人，患老年痴呆的概率较低，因为早死的概率较高。 破罐子不能破摔，得使劲摔！ 碰到一个认识的人，想一起聊聊天。她说自己去香港和希腊玩了，又买了苹果和化妆品;我不知道怎么回应，因为我很久没有出去玩和买东西了。我又说我最近思考了人为什么活着和出身的问题，她也沉默，因为很久没有思考这样的问题。此后再也无话。 社会学家研究表明：难看和没钱的男人，并不比高帅富更加靠谱。 社会精英阶层一边啃着心灵鸡腿和心灵鸡胸，一边为我们送上了心灵鸡汤，说人生的价值并不在于你挣了多少钱和外在是否美。 离家不需要太大的勇气，回家才需要。 离远一看长发飘飘，走近一看虎背熊腰，转身一看卧槽黑山老妖。 秀恩爱的最好在中午秀，因为，早晚都会有报应。 秋天是收获的季节。别人的收获是成功与快乐，你的收获是认识到并不是每个人都会成功与快乐。 秒回并不是喜欢你，只是碰巧在玩手机。 穷不可怕，可怕的是，最穷的人是我。 穷不要紧，抬头挺胸让大家看看，你不仅穷还丑还矮。 穷不要紧，抬头挺胸，让大家看看，你不仅穷而且还丑 穷你就努力啊！不努力折腾，你怎么负债百万。 穷只是暂时的，只要你努力，你会发现你慢慢就习惯了。 穷真的不可怕，可怕的是你的亲戚朋友都觉得你很有钱 穷，不是一种状态，而是一种常态。 穿白色衣服上班，并不代表你可以不背黑锅。 突然发现，起床第一件事是摸手机，睡前最后一件事是放下手机。 突破瓶颈之后，发现还有瓶盖。 窮一點不要緊，要緊的是不只一點。 等你以后老了走不动了，我每天用轮椅推你去广场上，让你看着我和别的老头跳舞。 等你生活中真有了生老病死这样的大事，才会知道自己以前半夜的忧伤都是狗屁。 等到历史考试的时候，历史将会被我改写！ 等忙完这一阵，就可以接着忙下一阵了。 等我变得更好再去喜欢你吧，后来想想算了，变得那么好干嘛还去喜欢你。 精神濒临崩溃的症状之一，就是相信自己的工作非常重要。 精神追求应当是物质追求得到满足后的自然反应，而不是在现实受挫后去寻求的安慰剂。 糟糕的从来都不只是今天，还有你的以后。 總以為退一步海闊天空，沒想到腳下落空。 红颜何曾真知己，人生无聊才读书。 纵然人生坎坷，但我从不向命运屈服！我通常都是直接屈膝Orz。 终于中了500万，兑奖的时候，笑醒了。 经历过一番苦难之后，别人是苦尽甘来，而你是苦竟刚来。 经过九年的打拼，我终于凑齐了，当年卖掉的那套房子的首付。 经过十年不断的努力和奋斗，我终于从一个懵懂无知的少年变成了一个懵懂无知的青年。 经过十年不断的努力和奋斗，我终于从懵懂无知的少年，变成了懵懂无知的青年。 经过十年的不断奋斗和磨砺，我终于从一个懵懂无知、敏感脆弱的少年，成长为了一个懵懂无知、敏感脆弱的青年。 经过十年的不断奋斗和磨砺，我终于从一个懵懂无知敏感脆弱的少年，成长为了一个懵懂无知敏感脆弱的青年。 经过多年的打拼，虽然没有什么收获，但你有债呀！ 经过大家的耐心劝导，我终于接受了，自己是傻逼这个事实。 给你的梦想插上翅膀，你也飞不到哪里去。 给你的梦想插上翅膀，虽然不一定飞得很远，但肯定摔得很重。 给你的梦想插上翅膀，虽然不一定飞得很远，但肯定摔的很重 给你的梦想插上翅膀，虽然不一定飞得很远，但肯定摔的很重！ 绝对不会输的唯一方法，那就是不要战斗。 绝望不在某时某刻，而在每时每刻。 美貌会消逝，但蠢是永恒的~ 群发的祝福和个位数的红包，都是没有灵魂的。 老一辈的人常告诉我们，年轻的时候多吃点苦，这样老了才能习惯啊！ 老天是公平的，他给了你张丑脸，肯定还会给你个穷家。 老婆饼里没有老婆，棉花糖里没有棉花，所以钱包里也没有钱。 老师不用给我换座位，反正我坐哪，都聊得开。 老板用你的时候你就是人才，不用你的时候就变成裁人！ 老板说只要我们努力工作，明年他就可以换玛莎拉蒂了。 考试最崩溃的是看到一道题，模糊的记得老师讲过，但清晰的记得我没听。 考试真是so easy，哪里不会考哪里！ 聽說七月鬼門快開了，你總算不是孤家寡人了。 胖子是不会饿死的，饿死了也是死胖子 。 胡思乱想能瘦身的话，我现在可能已经，只剩下灵魂了。 胸怀鸿鹄之志，手无缚鸡之力。 能不生气就不要生气，能不骂人就不要骂人，能动手就直接动手。 能不能对我真心一点？当然可以！我是真心不喜欢你。 能从上到下摸遍你全身的，也就只有，车站安检员了。 能用钱解决的都不是问题，但如何有钱，才是你最大的问题。 脑子是个很棒的东西，希望你有。 脱了衣服我是禽兽，穿上衣服，我是衣冠禽兽。 脱发怎么办？要健康饮食保持良好心态，这样就能接受这个事实了。 腦子有病得治，像你多好，沒有腦子。 腰缠万贯，全是脂肪。 自从知道狂犬疫苗造假，心里没底气，见了狗客气多了。 自古情深留不住，总是套路得人心。 自由从来不是什么理所当然的东西，而是一项需要极高成本的特权。 至少在夏天，富得流油你已经做到了一半。 若你的朋友每天生活都这么幸福，也就不会拍成照片发到朋友圈了。 英雄一怒为红颜，红颜一怒，得花钱。 虽然你单身，但是你胖若两人。 虽然你学的慢，但是你，放弃的快呀。 虽然你已无法再长高了，但是你可以继续长胖啊。 虽然你搬砖的样子很累，但是，你充钱的样子真的很帅。 虽然你胸小，但是你脸大啊 虽然你长得丑，可是你想的美啊。 虽然你长得矮，但你发际线高啊。 虽然你长的丑，但是你想得美啊。 虽然我学得慢，但是我放弃的快啊！ 虽然我学的慢，但是我放弃的快啊 虽然我干的多还辛苦，但是我挣得少啊 虽然我长得丑，但是买了漂亮衣服，我就可以丑的漂亮。 虽然脑子和肠子长得很像，但你也不能老是用来装屎啊！ 蠢也没那么可怕，毕竟水母没有脑子，也活了6亿年。 蠢萌的前提是萌，不是蠢。 行而上学，实在不行就别上了吧 装逼只是瞬间，不要脸那才是永恒。 西游记告诉我们，有个猪一样的队友，能让团队上西天。 要么读书，要么旅行，身体和灵魂，必须有一个要去工作。 要感谢那些把你打倒的人，因为你会发现躺倒真的很舒服 要相信自己，别人能做到的，你也做不到。 要笑着走下去吧，反正来到这个世界上，谁也没打算活着回去。 要记得面向阳光，这样才看不见身后的阴影和晒黑的脸 见到长辈时，不是我们不想叫他，而是压根就不知道叫他什么。 觉得自己总碰不到美好的人和事，并不是别人眼瞎老天故意整你，恰恰是因为你不够好，他们都在躲你 认识陌生人其实很麻烦，许多谎话又得重新说起。 让刻苦成为习惯，用汗水浇灌未来，然后脱水而死。 许多人说选择北上广的原因， 是发展机会好。 但他们说的发展， 实际上指的就是打工。 试着去了解那些你讨厌的人，你会发现，真是越看越讨厌。 诗和远方越远越脏 以梦为马越骑越傻 诗和远方越远越脏 以梦为马越骑越傻！ 该失望的事从没辜负过我，每次都认认真真的让我失望。 说好了浪荡一生，却不小心一生钟情一个人 说好我们一起到白头，你却偷偷焗了油。 说明星可怜的人，有看过自己银行卡的余额吗？ 说错话不要紧，你还会继续说错的。 请不要叫我宅女，请叫我居里夫人。 请珍惜对你好的人，否则错过了就不知道何时，才能再遇到另一个瞎了眼的。 请珍惜那些伤害过你的人，毕竟其他人都懒得害你。 请相信我，我所说的每句话，都是废话！ 请问在三伏天，有什么消暑良方吗？薪尽自然凉。 谁能想到，这名16岁的少女四年前只是一名年仅12岁的少女 谁说你不爱运动？你不仅会踢皮球，而且踢的可好了。 谁说你没有毅力的！单身这事你不就坚持了好几十年吗 谁说你没有毅力的，单身这件事，你不就坚持了好几十年吗？ 谁说你没有真爱，烦恼与你同在。 谁说功夫不负有心人，路星河求了56次婚，都不及余淮的一句“耿耿，我来晚了！” 谁说女追男隔层网，除非那男的本来就对你有好感，不然隔的基本都是铁丝网，还是带电的那种。 谁说我不会乐器，我打退堂鼓可好了！ 谁说我不会乐器？我退堂鼓打的可好了。 谁说金钱买不到时间，网管再续两个小时。 谈钱伤感情，谈感情伤钱。 谢谢你，在我每次需要你的时候都掉链子 贪图小利，难成大事，要贪就贪大的。 贫穷限制了我那么多，为什么没有限制我的体重？ 贫贱不能移的意思就是，穷就好好在家呆着，哪儿也别去。 贵不是iPhone的缺陷，穷是你的缺陷。 赚钱就像便秘 — 老难了，花钱就像拉稀 — 憋不住。 赠人玫瑰，手有余香，所以被老婆发现了。 趁好看的时候多照照镜子，毕竟，这种错觉不是每天都有的。 趁着年轻多出来走走，不然你不会知道，呆在家里有多爽。 越是没有能力改变自己生活的人，越喜欢批评别人的改变。 跌倒了，爬起来再哭 距离产生的不是美，而是第三者。 跟丑这个缺点比，穷根本不值得一提。 跟你谈钱的老板才是好人，跟你谈理想的，都TM不想给你钱！ 跟我比懒，你输定了，因为我都懒得跟你比。 跟最好的朋友好到什么程度？他进传销，发展的第一个下线就是我。 路漫漫其修远兮，吾将上下而求人。 路遥知马力不足，日久见人心叵测。 蹲下来摸摸自己的影子，对不起，跟着我让你受委屈了。 身在福中不知福是什么？就是发福快发成猪了，还觉得自己身材蛮OK。 车到山前必有雾，船到桥头自然沉。 转角一般不会遇到爱，只会遇到乞丐。 输入法忘不了的东西，清除数据就好了 过年不吃胖，怎么对得起，死去的鸡鸭鱼猪？ 过年哪个亲戚问我成绩，我就问他年终奖金。 过的不顺的时候，要相信你不是一个人，看看身边的朋友，不都是因为失败，才混在一起的么 过马路不要带耳机，万一要是被车撞上，耳机不就坏了么？ 运动一周瘦不下来不要紧，因为运动十周也瘦不下来的。 运动后，你会惊喜地发现，自己只是从肥胖变成壮。 还想过五四青年节，六一儿童节？属于你的只剩下三八节了。 还没有对象？要不要给你介绍，一款不错的狗粮。 还没来得及去沾花惹草，就被人拔光了。 这一秒不放弃，下一秒，就更绝望了。 这世上99%的事都可以用钱来解决，唯一不能解决的那1%就是没有钱。 这世上如果有什么真理，那就是活该！ 这世上没谁离不开谁，就算是一条鱼离开水，也能烤着吃。 这世界99%的事都可以用钱来解决，唯一不能解决的那1%就是钱不够。 这两天雨水多，下雨记得打伞，否则脑袋容易进水。 这个世界没有错，谁让你长得不好看又没钱。 这个年纪会在你耳边唱歌，喜欢你的肉体还会送你包的，只剩下蚊子了。 这么多年了， 性生活是你唯一能自理的生活。 这么多年没掉入桃色陷阱，靠的就是两个字，没钱。 这孩子不是笨，就是学习方法不对。学习方法都找不对还不是笨啊？ 这年头放个假真不容易，连放假都要沾老祖宗的光。 这年头有些人靠脸吃饭，而有些人，靠不要脸吃饭。 这年头，哪有不分手的恋爱，只有不伤手的立白。遇事得看开一点。 这时代做什么事，门槛都变得好高。 想说当个宅男，还要先买得起房子。 这次期末考，我会用实力告诉你，我们年级共有多少人。 这辈子最灿烂的笑容，大概都奉献给，我的手机屏幕了。 这辈子这么苦，别太拼，下辈子还会更苦的。 进入长辈朋友圈，了解最新谣言。 远方的路，除了未知，还有绝望。 追不到那个人，说到底还是你没本事 送你喜欢的女生一支口红吧，至少她亲别人的时候，有你的参与感。 送给喜欢的女生一支口红吧，这样她亲别人的时候，你还有点参与感。 逃避是解决不了问题的，不逃你也解决不了啊。 选择比努力更重要，所以我选择不努力 造成婚外恋的根本原因，是结婚。 逼急了，我可是什么都做的出来的！那刚好，这还有个需求！ 遇到你之前，我的世界是黑白的，遇见你之后 哇靠 全黑了。 遇到喜欢的人就勇敢追求，这样你才能知道，拒绝你的人远不止一个。 遇到喜欢的女生要勇敢表白，只有你主动了，才知道她名花有主。 遇到困难的三个步骤，面对它 处理它，放弃它。 遇到困难的时候暂时放一放，第二天的时候，就再也想不起来了。 遇到挫折，服个软低个头其实没什么的，反正你头上也没有皇冠 遇到闪电记得要微笑，因为那是天空在给你拍照。 遇见你竟花光我所有运气——TM遇见你之后一直在倒霉。 遭遇指责不要急于争辩，先反思自己，便于想清楚如何甩锅 那么努力还不是因为你平庸。 那些人人羡慕的社会精英，其实过得不如你想象那样好。但肯定比你强得多的多。 那些人人羡慕的精英，其实过得并不如你想象的那样好。但肯定比你是强得多。 那些学历比你高，家室比你好，长得还比你好看的都这么努力，你努力还有什么用啊？ 那些年立下的FLAG自己删了吧，反正也没人记得。 那些把爱情说得很透彻的人，基本上都不在爱里。 那些杀不死你的，让你老老实实地活着 那些看上去性格单纯的女人，无论是真的还是装的，都表示她的过去或者背景绝对不单纯。 那些说“钱买不来快乐”的人，是不是从来没穷过啊。 都市安放不了灵魂，家乡容不下肉身。 都说姐漂亮，其实都是妆出来的 都说男人有钱就变坏，TMD我都当了，三十多年的好人了！ 都说累成狗，其实狗没你那么累。 都说谈恋爱会影响学习，难道学习，就不影响谈恋爱吗？ 都说钱是王八蛋，可长得真好看。 酷的像风 野的像狗 不招人喜欢倒也自由 醒醒，你这不是丧而是，没有钱和性生活的正常表现。 钱不是万能的，但有钱真的可以为所欲为。 钱买不来快乐，那一定是，你的钱太少了！ 钱买不来爱情，但是可以买走爱情。 钱包里放老婆的照片，是为了提醒自己记住，钱包里的钱是怎么没的。 钱对你真的就那么重要吗？讲了3个多小时了，一分钱都不降。 钱是万恶之源，但如果你没钱，整个社会都会鄙视你。 钱虽然难赚，但是容易花啊。 铁打的身子，磁铁打的床。 铁杵能磨成针，但木杵只能磨成牙签。材料不对再努力也没用。 镜子破了，你TM圆一个给我看看 长大以后我终于不是那个傻孩子了，而是成了傻子！ 长得丑就是病，不然整形医院为什么叫医院。 长得丑怎么了？我自己又看不到，恶心的是你们！ 长得好看不能当饭吃，但是长得不好看真的会让人吃不下饭。 长得好看的才叫吃货，长得不好看的那叫饭桶！ 长得帅的踢键子都帅，长得丑的，打高尔夫都像在铲屎。 长的丑不是我的错，只是我在落地时太匆忙了，来不急打扮。 长的好看的才能叫吃货，长的不好看的只能叫饭桶。 长的好看确实可以当饭吃，你是不是明白自己为什么老饿了。 长的美与不美不重要，想的美才是真的美！ 长相不行的人，为人也未必好。只不过由于长久寂寞的折磨，有时会发疯似地对人好。 问世间钱为何物，只叫人生死相许。 问君能有几多愁，恰似一群太监上青楼。 问渠那得清如许，唯有毒汤活水来！ 间歇性洗心革面，持续性混吃等死。 间歇性踌躇满志，持续性混吃等死。 闹钟的作用对我来说，就是让我，换个姿势睡觉。 除了是处，一无是处。 除了有钱人，世上还有两种人：其一是省吃俭用买奢侈品装逼的，其二是省吃俭用也买不起奢侈品的。 随风奔跑自由是方向，无奈忘了腿短没力量。 难受的时候摸摸自己的胸，告诉自己是汉子，要坚强。 静若瘫痪，动若癫痫。 靠父母你是公主，靠男人你是王妃，靠自己你是乞丐 靠父母你是公主，靠男人你是王妃，靠自己你是乞丐。 面对困难我们一般从不弯腰低头，一般都是直接跪 面对困难，再坚持一会儿，就会习惯的。 面试的时候，他们叫你去聊聊，真的只是去聊聊。 顺其自然只是无能为力的另一种说法 领导开会的时候，我们应该保持肃静，打扰别人睡觉是很不礼貌的。 领导说努力工作会更快成熟，所以，我现在看上去比他们都老。 风水轮流转确实不假，但你在轴心上，这就很尴尬了。 饱汉不知饿汉饥，饿汉不知饱汉虚。 马不停的是蹄，你不停的是嘴。 马云成功跟长相没关系，姜尚成功跟年龄没关系，而成功跟你没关系。 骑电动车请戴好头盔，否则，开奔驰的同学会认出你。 骑白马的不一定是王子，也可能会是是唐僧！ 高考失败不要紧，以后还有更多失败等着你。 鱼与熊掌不可兼得，但穷和丑可以啊。 鱼和熊掌不可兼得，但单身和穷可以！ 鸡汤是你的幻想，毒鸡汤才是你的现状。 麻麻跟我说只有没有生育能力的人才会随便叫别人儿子 黑夜从来不会亏待晚睡的人，它会赐予你黑眼圈，和即将猝死的身体。 黑夜给你黑色的眼睛，你却用它来翻白眼。]]></content>
      <categories>
        <category>其它</category>
        <category>读书</category>
      </categories>
      <tags>
        <tag>日常生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[访问者模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190624_%E8%AE%BF%E9%97%AE%E8%80%85%2F</url>
    <content type="text"><![CDATA[访问者模式（Visitor Pattern）: 表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素类别的前提下定义作用于这些元素的新操作。(Represent an operation to be performedon the elements of an object structure. Visitor lets you define a new operation without changing the classes of the elements on which it operates.) 模式动机：对于存储在一个集合中的对象，他们可能具有不同的类型(即使有一个公共的接口)，对于该集合中的对象，可以接受一类称为访问者的对象来访问，不同的访问者其访问方式也有所不同。 开发中的场景 : (应用范围非常窄，了解即可)： XML文档解析器设计; 编译器的设计; 复杂集合对象的处理 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[状态模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190624_%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[状态模式（State Pattern）: 允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它所属的类。(Allow an object to alter its behavior when its internal state changes. The object will appear to change its class.) 核心：用于解决系统中 复杂对象的状态转换 以及不同状态下行为 的封装问题 现实场景： 电梯的运行：维修、正常、自动关门、自动开门、向上运行、向下运行、消防状态； 红绿灯：红灯、黄灯、绿灯； 企业或政府系统：公文的审批状态； 报销单据审批状态； 假条审批； 网上购物时，订单的状态下单：已付款，已发货，送货中，已收货。 开发中常见的场景： 银行系统中账号状态的管理； OA系统中公文状态的管理； 酒店系统中，房间状态的管理； 线程对象各状态之间的切换 案例场景：在酒店系统中，房间的状态变化：已预订，已入住，空闲。（当遇到这种需要频繁的修改状态时，考虑状态模式） 该过程用状态模式实现，大致有以下4步： 步骤1：定义State抽象状态类，定义一个接口以封装与Context的一个特定状态相关的行为。 public interface State { void handle(); } 步骤2：定义Context环境类，维护一个ConcreteState子类的实例，这个实例定义当前的状态。 /** * Context类 : 房间对象 * 如果是银行系统，这个Context类就是账号。根据金额不同，切换不同的状态！ */ public class HomeContext { private State state; public void setState(State s){ System.out.println(&quot;修改状态！&quot;); state = s; state.handle(); } } 步骤3：定义ConcreteState具体状态类，每一个类封装了一个状态对应的行为 1.已预订状态 /** * 已预订状态 */ public class BookedState implements State { @Override public void handle() { System.out.println(&quot;房间已预订！别人不能定！&quot;); } } 2.已入住状态 /** * 已入住状态 */ public class CheckedInState implements State { @Override public void handle() { System.out.println(&quot;房间已入住！请勿打扰！&quot;); } } 3.空闲状态 /** * 空闲状态 */ public class FreeState implements State { @Override public void handle() { System.out.println(&quot;房间空闲！！！没人住！&quot;); } } 步骤4：测试 public class Client { public static void main(String[] args) { HomeContext ctx = new HomeContext(); ctx.setState(new FreeState()); ctx.setState(new BookedState()); } } 执行结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[责任链模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190624_%E8%B4%A3%E4%BB%BB%E9%93%BE%2F</url>
    <content type="text"><![CDATA[责任链模式（Chain of Responsibility Pattern）： 为解除请求的发送者和接收者之间的耦合，而使多个对象都有机会处理这个请求。将这些对象连成一条链，并沿着这条链传递该请求，直到有对象处理它。（Avoid coupling the sender of a requestits receiver by giving more than one object a chance to handle the request.Chain the receiving objects and pass the request along the chain until anobject handles it.） 理解：由于责任链的创建完全在客户端，因此新增新的具体处理者对原有类库没有任何影响，只需添加新的类，然后在客户端调用时添加即可。符合开闭原则。 现实中的场景： 打牌时，轮流出牌； 接力赛跑； 大学中，经学金审批； 公司中，公文审批。 公司里面，报销个单据需要经过流程：申请人填单申请，申请给经理；小于1000，经理审查；超过1000，交给总经理审批；总经理审批通过 公司里面，请假条的审批过程：如果请假天数小于3天，主任审批；如果请假天数大于等于3天，小于10天，经理审批；如果大于等于10天，小于30天，总经理审批；如果大于等于30天，提示拒绝 公司里面，SCM(Supply Chain Management供应链管理)系统中，采购审批子系统的设计： 采购金额小于5万，主任审批；采购金额大于等于5万，小于10万，经理审批；采购金额大于等于10万，小于20万，副总经理审批；采购金额大于等于20万，总经理审批 非链表方式实现职责链：通过集合、数组生成职责链更加实用！实际上，很多项目中，每个具体的Handler并不是由开发团队定义的，而是项目上线后由外部单位追加的，所以使用链表方式定义COR链就很困难。 开发中常见的场景： Java中，异常机制就是一种责任链模式。一个try可以对应多个catch，当第一个catch不匹配类型，则自动跳到第二个catch； Javascript语言中，事件的冒泡和捕获机制。Java语言中，事件的处理采用观察者模式； Servlet开发中，过滤器的链式处理； Struts2中，拦截器的调用也是典型的责任链模式。 案例 ：（链表方式定义职责链）请假条审批流程，我们可以在请假处理流程中，增加新的“副总经理”角色，审批大于等于10天，小于20天的请假。审批流程变为：① 如果请假天数小于3天，主任审批；② 如果请假天数大于等于3天，小于10天，经理审批；③ 大于等于10天，小于20天的请假，副总经理审批；④ 如果大于等于20天，小于30天，总经理审批；⑤ 如果大于等于30天，提示拒绝； 该过程的实现大致有以下几个步骤： 步骤1：封装请假的基本信息 /** * 封装请假的基本信息 */ public class LeaveRequest { private String empName;//员工姓名 private int leaveDays;//请假天数 private String reason;//请假原因 public LeaveRequest(String empName, int leaveDays, String reason) { super(); this.empName = empName; this.leaveDays = leaveDays; this.reason = reason; } public String getEmpName() { return empName; } public void setEmpName(String empName) { this.empName = empName; } public int getLeaveDays() { return leaveDays; } public void setLeaveDays(int leaveDays) { this.leaveDays = leaveDays; } public String getReason() { return reason; } public void setReason(String reason) { this.reason = reason; } } 步骤2：定义抽象处理者(Handler) /** * 抽象类 */ public abstract class Leader { protected String name; protected Leader nextLeader; //责任链上的后继对象 public Leader(String name) { super(); this.name = name; } //设定责任链上的后继对象 public void setNextLeader(Leader nextLeader) { this.nextLeader = nextLeader; } //处理请求的核心的业务方法 public abstract void handleRequest(LeaveRequest request); } 步骤3：定义具体处理者(ConcreteHandler) 1.主任： /** * 主任 */ public class Director extends Leader { public Director(String name) { super(name); } @Override public void handleRequest(LeaveRequest request) { if(request.getLeaveDays()&lt;3){ System.out.println(&quot;员工：&quot;+request.getEmpName()+&quot;请假，天数：&quot;+request.getLeaveDays()+&quot;,理由：&quot;+request.getReason()); System.out.println(&quot;主任：&quot;+this.name+&quot;,审批通过！&quot;); }else{ if(this.nextLeader!=null){ this.nextLeader.handleRequest(request); } } } } 2.经理 /** * 经理 */ public class Manager extends Leader { public Manager(String name) { super(name); } @Override public void handleRequest(LeaveRequest request) { if(request.getLeaveDays()&lt;10){ System.out.println(&quot;员工：&quot;+request.getEmpName()+&quot;请假，天数：&quot;+request.getLeaveDays()+&quot;,理由：&quot;+request.getReason()); System.out.println(&quot;经理：&quot;+this.name+&quot;,审批通过！&quot;); }else{ if(this.nextLeader!=null){ this.nextLeader.handleRequest(request); } } } } 3.副总经理 /** * 副总经理 */ public class ViceGeneralManager extends Leader { public ViceGeneralManager(String name) { super(name); } @Override public void handleRequest(LeaveRequest request) { if(request.getLeaveDays()&lt;20){ System.out.println(&quot;员工：&quot;+request.getEmpName()+&quot;请假，天数：&quot;+request.getLeaveDays()+&quot;,理由：&quot;+request.getReason()); System.out.println(&quot;副总经理：&quot;+this.name+&quot;,审批通过！&quot;); }else{ if(this.nextLeader!=null){ this.nextLeader.handleRequest(request); } } } } 4.总经理 /** * 总经理 */ public class GeneralManager extends Leader { public GeneralManager(String name) { super(name); } @Override public void handleRequest(LeaveRequest request) { if(request.getLeaveDays()&lt;30){ System.out.println(&quot;员工：&quot;+request.getEmpName()+&quot;请假，天数：&quot;+request.getLeaveDays()+&quot;,理由：&quot;+request.getReason()); System.out.println(&quot;总经理：&quot;+this.name+&quot;,审批通过！&quot;); }else{ System.out.println(&quot;莫非&quot;+request.getEmpName()+&quot;想辞职，居然请假&quot;+request.getLeaveDays()+&quot;天！&quot;); } } } 步骤4：测试 public class Client { public static void main(String[] args) { Leader a = new Director(&quot;张三&quot;);//主任 Leader b = new Manager(&quot;李四&quot;);//经理 Leader b2 = new ViceGeneralManager(&quot;李小四&quot;);//副总经理 Leader c = new GeneralManager(&quot;王五&quot;);//总经理 //组织责任链对象的关系 a.setNextLeader(b); b.setNextLeader(b2); b2.setNextLeader(c); //开始请假操作 LeaveRequest req1 = new LeaveRequest(&quot;Jack&quot;, 14, &quot;回老家探亲！&quot;); a.handleRequest(req1); //审批流程 System.out.println(&quot;审批流程:&quot;+a.name+&quot;---&gt;&quot;+b.name+&quot;---&gt;&quot;+b2.name+&quot;---&gt;&quot;+c.name); } } 执行结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解释器模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190624_%E8%A7%A3%E9%87%8A%E5%99%A8%2F</url>
    <content type="text"><![CDATA[解释器模式（Interpreter Pattern）： 定义一个语言，定义它的文法的一种表示，并定义一个解释器，该解释器使用该表示来解释语言中的句子。（Given a language, define are presentation for its grammar along with an interpreter that uses there presentation to interpret sentences in the language.） 介绍： 是一种不常用的设计模式； 用于描述如何构成一个简单的语言解释器，主要用于使用面向对象语言开发的编译器和解释器设计； 当我们需要开发一种新的语言时，可以考虑使用解释器模式； 尽量不要使用解释器模式，后期维护会有很大麻烦。在项目中，可以使用Jruby，Groovy、java的js引擎来替代解释器的作用，弥补java语言的不足。 开发中常见的场景： EL表达式式的处理； 正则表达式解释器； SQL语法的解释器； 数学表达式解析器，如现成的工具包:Math Expression String Parser、Expression4J等。 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[备忘录模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190620_%E5%A4%87%E5%BF%98%E5%BD%95%2F</url>
    <content type="text"><![CDATA[备忘录模式（Memento Pattern）： 在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保持该状态，这样以后就可以将该对象恢复到保存的状态。（Without violating encapsulates, capture and externalize an object’s internal state so that the object can be restored to this state later.） 核心 ：就是保存某个对象内部状态的拷贝，这样以后就可以将该对象恢复到原先的状态。 现实场景 ： 录入大批人员资料。正在录入当前人资料时，发现上一个人录错了，此时需要恢复上一个人的资料，再进行修改； Word文档编辑时，忽然电脑死机或断电，再打开时，可以看到word提示你恢复到以前的文档； 管理系统中，公文撤回功能。公文发送出去后，想撤回来。 开发中常见的应用场景 ： 棋类游戏中的，悔棋 普通软件中的，撤销操作 数据库软件中的，事务管理中的，回滚操作 Photoshop软件中的，历史记录 备忘录模式的实现大致需要4个步骤： 步骤1：定义源发器类（Originator），负责创建一个备忘录Memento,用以记录当前时刻它的内部状态，并可使用备忘录恢复内部状态 /** * 源发器类 Originator */ public class Emp { private String ename; private int age; private double salary; //进行备忘操作，并返回备忘录对象 public EmpMemento memento(){ return new EmpMemento(this); } //进行数据恢复，恢复成制定备忘录对象的值 public void recovery(EmpMemento mmt){ this.ename = mmt.getEname(); this.age = mmt.getAge(); this.salary = mmt.getSalary(); } public Emp(String ename, int age, double salary) { super(); this.ename = ename; this.age = age; this.salary = salary; } public String getEname() { return ename; } public void setEname(String ename) { this.ename = ename; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } public double getSalary() { return salary; } public void setSalary(double salary) { this.salary = salary; } } 步骤2：定义备忘录类（Memento）,负责存储Oreginator对象的内部状态，并可防止Originator以外的其它对象访问备忘录（Memento）。 /** * 备忘录类 Memento */ public class EmpMemento { private String ename; private int age; private double salary; public EmpMemento(Emp e) { this.ename = e.getEname(); this.age = e.getAge(); this.salary = e.getSalary(); } //get/set方法 public String getEname() { return ename; } public void setEname(String ename) { this.ename = ename; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } public double getSalary() { return salary; } public void setSalary(double salary) { this.salary = salary; } } 步骤3：定义 负责人类（CareTaker），负责保存好备忘录（Memento）。 /** * 负责人类 :负责管理备忘录对象 */ public class CareTaker { private EmpMemento memento; //private List&lt;EmpMemento&gt; list = new ArrayList&lt;EmpMemento&gt;(); public EmpMemento getMemento() { return memento; } public void setMemento(EmpMemento memento) { this.memento = memento; } } 步骤4：测试 /** * 测试 */ public class Client { public static void main(String[] args) { CareTaker taker = new CareTaker(); Emp emp = new Emp(&quot;张三丰&quot;, 48, 900); System.out.println(&quot;第一次打印对象--- 姓名：&quot;+emp.getEname()+&quot; 年龄：&quot;+emp.getAge()+&quot; 薪水：&quot;+emp.getSalary()); taker.setMemento(emp.memento()); //备忘一次 System.out.println(&quot;注意：备忘一次---&quot;); emp.setAge(18); emp.setEname(&quot;张无忌&quot;); emp.setSalary(9000); System.out.println(&quot;第二次打印对象--- 姓名：&quot;+emp.getEname()+&quot; 年龄：&quot;+emp.getAge()+&quot; 薪水：&quot;+emp.getSalary()); emp.recovery(taker.getMemento()); //恢复到备忘录对象保存的状态 System.out.println(&quot;注意：恢复到备忘录对象保存的状态---&quot;); System.out.println(&quot;第三次打印对象--- 姓名：&quot;+emp.getEname()+&quot; 年龄：&quot;+emp.getAge()+&quot; 薪水：&quot;+emp.getSalary()); } } 执行结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中介者模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190619_%E4%B8%AD%E4%BB%8B%E8%80%85%2F</url>
    <content type="text"><![CDATA[中介者模式（Mediator Pattern）： 用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显示地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。（Define an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly and it lets you vary their interaction independently.） 中介者模式的本质：解耦多个同事对象之间的交互关系。每个对象都持有中介者对象的引用，只跟中介者对象打交道。我们通过中介者对象统一管理这些交互关系。 应用思路：如果一个系统中，对象之间的联系呈网状结构，对象之间存在大量的多对多关系，导致关系很复杂。这是可以引入一个中介者对象，各个同事对象只跟中介者对象打交道，将复杂的网络结构化解成为如下的星型结构： 开发中常见的场景： MVC模式(其中的C，控制器就是一个中介者对象。M和V都和他打交道) 窗口游戏程序，窗口软件开发中窗口对象也是一个中介者对象 图形界面开发GUI中，多个组件之间的交互，可以通过引入一个中介者对象来解决，可以是整体的窗口对象或者DOM对象 Java.lang.reflect.Method#invoke() 案例： 比如说，一个公司有三个部门：财务部、市场部、研发部。那么总经理就扮演中介者的角色。用代码实现大致有以下5个步骤： 步骤1：定义抽象中介者，定义了同事对象到中介者对象的接口。 /** * 中介者接口 */ public interface Mediator { void register(String dname, Department d); void command(String dname); } 步骤2：定义具体中介者对象，实现抽象中介者类的方法，他需要知道所有具体同事类，并从具体同事接收消息，向具体同事发出命令。 /** * 总经理实现中介者接口 */ public class President implements Mediator { private Map&lt;String,Department&gt; map = new HashMap&lt;String , Department&gt;(); @Override public void command(String dname) { map.get(dname).selfAction(); } @Override public void register(String dname, Department d) { map.put(dname, d); } } 步骤3：定义抽象同事类 /** * 部门接口：同事类 */ public interface Department { void selfAction(); //做本部门的事情 void outAction(); //向总经理发出申请 } 步骤4：定义具体同事类，每个具体同事只知道自己的行为，而不了解其他同事类的情况，但他们却都认识中介者对象。 /** * 研发部 */ public class Development implements Department { private Mediator mediator; //持有中介者(总经理)的引用 public Development(Mediator mediator) { super(); this.mediator = mediator; mediator.register(&quot;development&quot;, this); } @Override public void outAction() { System.out.println(&quot;研发部向总经理发出申请：汇报工作！没钱了，需要资金支持！&quot;); } @Override public void selfAction() { System.out.println(&quot;研发部：专心科研，开发项目！&quot;); } } /** * 财务部 */ public class Finacial implements Department { private Mediator mediator; //持有中介者(总经理)的引用 public Finacial(Mediator mediator) { super(); this.mediator = mediator; mediator.register(&quot;finacial&quot;, this); } @Override public void outAction() { System.out.println(&quot;财务部向总经理发出申请：汇报工作！没钱了，钱太多了！怎么花?&quot;); } @Override public void selfAction() { System.out.println(&quot;财务部：数钱！&quot;); } } /** * 市场部 */ public class Market implements Department { private Mediator mediator; //持有中介者(总经理)的引用 public Market(Mediator mediator) { super(); this.mediator = mediator; mediator.register(&quot;market&quot;, this); } @Override public void outAction() { System.out.println(&quot;市场部向总经理发出申请：汇报工作！项目承接的进度，需要资金支持！&quot;); mediator.command(&quot;finacial&quot;); } @Override public void selfAction() { System.out.println(&quot;市场部：跑去接项目！&quot;); } } 步骤5：测试 /** * 测试 */ public class Client { public static void main(String[] args) { Mediator m = new President(); Market market = new Market(m); Development devp = new Development(m); Finacial f = new Finacial(m); market.selfAction(); market.outAction(); } } 执行结果如下图所示： 如果想看更多设计模式，可点此链接：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[迭代器模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190618_%E8%BF%AD%E4%BB%A3%E5%99%A8%2F</url>
    <content type="text"><![CDATA[迭代器模式（Iterator Pattern）： 提供一种方法顺序访问一个聚合对象中各个元素，而又不需暴露该对象的内部表示。（Provide a way to access the elements of an aggregate object sequentially without exposing its underlying representation.） 开发中常见的场景： JDK内置的迭代器(List/Set) 场景： 提供一种可以遍历聚合对象的方式。又称为：游标cursor模式 聚合对象：存储数据 迭代器：遍历数据 代码实现可分为以下3步： 步骤1：自定义的迭代器接口 /** * 自定义的迭代器接口 */ public interface MyIterator { void first(); //将游标指向第一个元素 void next(); //将游标指向下一个元素 boolean hasNext();//判断是否存在下一个元素 boolean isFirst(); boolean isLast(); Object getCurrentObj(); //获取当前游标指向的对象 } 步骤2：自定义的聚合类 import java.util.ArrayList; import java.util.List; /** * 自定义的聚合类 */ public class ConcreteMyAggregate { private List&lt;Object&gt; list = new ArrayList&lt;Object&gt;(); public void addObject(Object obj){ this.list.add(obj); } public void removeObject(Object obj){ this.list.remove(obj); } public List&lt;Object&gt; getList() { return list; } public void setList(List&lt;Object&gt; list) { this.list = list; } //获得迭代器 public MyIterator createIterator(){ return new ConcreteIterator(); } //使用内部类定义迭代器，可以直接使用外部类的属性 private class ConcreteIterator implements MyIterator { private int cursor; //定义游标用于记录遍历时的位置 @Override public void first() { cursor = 0; } @Override public Object getCurrentObj() { return list.get(cursor); } @Override public boolean hasNext() { if(cursor&lt;list.size()){ return true; } return false; } @Override public boolean isFirst() { return cursor==0?true:false; } @Override public boolean isLast() { return cursor==(list.size()-1)?true:false; } @Override public void next() { if(cursor&lt;list.size()){ cursor++; } } } } 步骤3：测试 public class Client { public static void main(String[] args) { ConcreteMyAggregate cma = new ConcreteMyAggregate(); cma.addObject(&quot;aa&quot;); cma.addObject(&quot;bb&quot;); cma.addObject(&quot;cc&quot;); MyIterator iter = cma.createIterator(); while(iter.hasNext()){ System.out.println(iter.getCurrentObj()); iter.next(); } } } 执行结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[命令模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190617_%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[命令模式（Command Pattern）： 将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化，对请求排队或记录请求日志，以及支持可取消的操作。（Encapsulate a request as an object,thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations.） 何时使用：在某些场合，比如要对行为进行”记录、撤销/重做、事务”等处理，这种无法抵御变化的紧耦合是不合适的。在这种情况下，如何将”行为请求者”与”行为实现者”解耦？将一组行为抽象为对象，可以实现二者之间的松耦合。 主要解决：在软件系统中，行为请求者与行为实现者通常是一种紧耦合的关系，但某些场合，比如需要对行为进行记录、撤销或重做、事务等处理时，这种无法抵御变化的紧耦合的设计就不太合适。 开发中常见的场景： Struts2中，action的整个调用过程中就有命令模式。Struts其实就是一种将请求和呈现分离的技术，其中必然涉及命令模式的思想。比如 : struts 1 中的 action 核心控制器 ActionServlet 只有一个，相当于 Invoker，而模型层的类会随着不同的应用有不同的模型类，相当于具体的 Command。 数据库事务机制的底层实现 命令的撤销和恢复 经典的命令模式包括4个角色： Command：定义命令的统一接口 ConcreteCommand：Command接口的实现者，用来执行具体的命令，某些情况下可以直接用来充当Receiver。 Receiver：命令的实际执行者 Invoker：命令的请求者，是命令模式中最重要的角色。这个角色用来对各个命令进行控制。 命令模式的代码大致可分为5步：步骤1：定义接收者 （Receiver） ,接收者执行与请求相关的操作，具体实现对请求的业务处理；未抽象前，实际执行操作内容的对象。 /** * 真正的命令的执行者 */ public class Receiver { public void action(){ System.out.println(&quot;Receiver.action()&quot;); } } 步骤2：定义抽象命令类（Command） public interface Command { /** * 这个方法是一个返回结果为空的方法。 * 实际项目中，可以根据需求设计多个不同的方法 */ void execute(); } 步骤3：定义具体命令类（ConcreteCommand） public class ConcreteCommand implements Command { private Receiver receiver; //命令的真正的执行者 public ConcreteCommand(Receiver receiver) { super(); this.receiver = receiver; } @Override public void execute() { //命令真正执行前或后，执行相关的处理！ receiver.action(); } } 步骤4：定义调用者/请求者（Invoker） /** * 调用者/发起者 */ public class Invoke { //也可以通过容器List&lt;Command&gt;容纳很多命令对象，进行批处理。 // 数据库底层的事务管理就是类似的结构！ private Command command; public Invoke(Command command) { super(); this.command = command; } //业务方法 ，用于调用命令类的方法 public void call(){ command.execute(); } } 步骤5：定义客户类（Client） /** * 测试 */ public class Client { public static void main(String[] args) { Command c = new ConcreteCommand(new Receiver()); Invoke i = new Invoke(c); i.call(); //new Receiver().action(); } } 执行结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法思想-迭代]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E7%AE%97%E6%B3%95%2F%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3-%E8%BF%AD%E4%BB%A3%2F</url>
    <content type="text"><![CDATA[1. 首先看一下：递归，递推，迭代有什么区别？递归：程序调用自身的编程技巧称为递归，是函数自己调用自己。使用递归要注意的有3点: 递归就是在过程或函数里面调用自身; 在使用递归时,必须有一个明确的递归结束条件,称为递归出口. 递归包含回溯和递推两个阶段。 迭代：利用变量的原值推算出变量的一个新值，如果递归是自己调用自己的话，迭代就是A不停的调用B。 递推：它是按照一定的规律来计算序列中的每个项，通常是通过计算机前面的一些项来得出序列中的指定象的值。其思想是把一个复杂的庞大的计算过程转化为简单过程的多次重复。 递归与递推的区别：递归的步骤中包含递推，如一个规模为n的问题，递归首先通过回溯将问题回溯到n-1，n-2……，然后再通过递推从1的结果一直递推到n。 递归与迭代的区别：递归中一定有迭代，但是迭代中不一定有递归，大部分可以相互转换.能用迭代的不用递归,递归调用函数,浪费空间,并且递归太深容易造成堆栈的溢出.递推和迭代的区别：都是正向的将一个复杂问题分解为小问题，一步一步得出结果；而递归是逆向的，多了一步回溯的过程。 2.下面详细看一下迭代法：迭代法：有一定规律。 每次循环都是从上次运算结果中获得数据，本次运算的结果都是要为下次运算做准备。 1. 求100以内所有数的和。 /** * 求100以内所有数的和 */ public class Example { public static void main(String[] args) { int sum = 0; for(int a=0;a&lt;=100;a++) { sum = sum + a; } System.out.println(&quot;100以内所有数的和为：&quot;+sum); } } 执行结果如下图所示： 2. 求阶乘！（6的阶乘）。 /** * 求6的阶层 */ public class Example { public static void main(String[] args) { int jc = 1; for(int a=6;a&gt;=1;a--) { jc = a * jc; } System.out.println(&quot;6的阶层是：&quot;+jc); } } 执行结果如下图所示： 3. 一张纸的厚度是：0.15mm,假设这张纸足够大可以无限次对折，问：折26次的高度是多少？ /** * 一张纸的厚度是：0.15mm,假设这张纸足够大可以无限次对折，问：折26次的高度是多少？ */ public class Example { public static void main(String[] args) { double h = 0.00015; for(int a=1;a&lt;=26;a++) { h = h * 2; } System.out.println(&quot;折26次的高度为: &quot;+h+&quot;米。&quot;); } } 执行结果如下图所示： 4. 猴子吃桃问题：公园里有一只猴子和一堆桃子，猴子每天吃掉桃子数量的一半，把剩下的一半数量中扔掉一个坏的，到了第七天，猴子睁开眼发现只剩下一个桃子了，问公园原来有多少桃子？ /** * 猴子吃桃问题 */ public class Example { public static void main(String[] args) { int count = 1; for(int a=6;a&gt;=1;a--) { count = (count+1) * 2; } System.out.println(&quot;公园里原来有: &quot;+count+&quot;个桃子。&quot;); } } 或者： public class Example { public static void main(String[] args) { int count = 1; for(int a=1;a&lt;=6;a++) { count = (count+1) * 2; } System.out.println(&quot;公园里原来有: &quot;+count+&quot;个桃子。&quot;); } } 执行结果如下图所示：5. 落球问题（一个球从10米高度落下，每次弹起2/3的高度。问第五次弹起后的高度是多少？） /** * 落球问题 */ public class Example { public static void main(String[] args) { double h = 10; for(int a=5;a&gt;=1;a--) { h = h * 2/3; } System.out.println(&quot;球第五次弹起的高度是: &quot;+h+&quot;米。&quot;); } } 执行结果如下图所示：6. 兔子小兔子的问题（一对新生兔，到三个月开始生一对小兔，以后每个月都会生一对小兔，小兔不断长大也会生小兔。假设兔子不死，每次只能生一对（公母），问第24个月末有多少只兔子？） /** * 兔子生小兔子问题 */ public class Example { public static void main(String[] args) { int sum = 0; int tu1 = 1,tu2 = 1;//tu1是第一个月的兔子数，tu2是第二个月的兔子数 for(int a=3;a&lt;=24;a++) { sum = tu1 + tu2; tu2 = tu1; tu1 = sum; } System.out.println(&quot;第24个月的月末兔子的数量为: &quot;+sum+&quot;个。&quot;); } } 执行结果如下图所示：]]></content>
      <categories>
        <category>java</category>
        <category>java算法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[模板方法模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190614_%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[模版方法模式（Template Pattern）: 定义一个操作中的算法的骨架，而将一些步骤延迟到子类。TemplateMethod 使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。(Define the skeleton of an algorithm inan operation, deferring some steps to subclasses. Template Method lets subclasses redefine certain steps of an algorithm without changing thealgorithm’s structure.) 核心：处理步骤父类中定义好，具体实现延迟到子类实现。 什么时候用到模板方法模式：实现一个算法时，整体步骤很固定。但是，某些部分易变，易变部分可以抽象出来，供子类实现。 开发中常见的场景：非常频繁，各个框架，类库中都有他的影子。比如： 数据库访问的封装； Junit单元测试； servlet中关于doGet/doPost方法调用； Hibernate中模板程序； spring中JDBCTemplate , HibernateTemplate等 案例：比如说客户到银行办理业务，大致有以下三个过程： 取号排队； 办理具体业务 (存钱，转账，理财等)； 对银行工作人员进行评分； 用模板方法模式，代码实现如下： package designpattern.templatemethod; public abstract class BankTemplateMethod { //具体方法 public void takeNumber(){ System.out.println(&quot;取号排队&quot;); } public abstract void transact(); //办理具体的业务 //钩子方法 public void evaluate(){ System.out.println(&quot;反馈评分&quot;); } public final void process(){ //模板方法！！！ this.takeNumber(); this.transact(); this.evaluate(); } } package designpattern.templatemethod; public class Client { public static void main(String[] args) { BankTemplateMethod btm = new DrawMoney(); btm.process(); //采用匿名内部类 BankTemplateMethod btm2 = new BankTemplateMethod() { @Override public void transact() { System.out.println(&quot;我要存钱！&quot;); } }; btm2.process(); BankTemplateMethod btm3 = new BankTemplateMethod() { @Override public void transact() { System.out.println(&quot;我要理财！我这里有2000万韩币&quot;); } }; btm3.process(); } } class DrawMoney extends BankTemplateMethod { @Override public void transact() { System.out.println(&quot;我要取款！！！&quot;); } } 执行结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何突破网站对selenium的屏蔽]]></title>
    <url>%2F2019%2F06%2Fspider%2Fselenium%2F20190613_%E7%AA%81%E7%A0%B4%E5%B1%8F%E8%94%BD%2F</url>
    <content type="text"><![CDATA[使用selenium模拟浏览器进行数据抓取无疑是当下最通用的数据采集方案，它通吃各种数据加载方式，能够绕过客户JS加密，绕过爬虫检测，绕过签名机制。它的应用，使得许多网站的反采集策略形同虚设。由于selenium不会在HTTP请求数据中留下指纹，因此无法被网站直接识别和拦截。 这是不是就意味着selenium真的就无法被网站屏蔽了呢？非也。selenium在运行的时候会暴露出一些预定义的Javascript变量（特征字符串），例如”window.navigator.webdriver”，在非selenium环境下其值为undefined，而在selenium环境下，其值为true（如下图所示为selenium驱动下Chrome控制台打印出的值）。 常见的特征串如下所示： webdriver __driver_evaluate __webdriver_evaluate __selenium_evaluate __fxdriver_evaluate __driver_unwrapped __webdriver_unwrapped __selenium_unwrapped __fxdriver_unwrapped _Selenium_IDE_Recorder _selenium calledSelenium _WEBDRIVER_ELEM_CACHE ChromeDriverw driver-evaluate webdriver-evaluate selenium-evaluate webdriverCommand webdriver-evaluate-response __webdriverFunc __webdriver_script_fn __$webdriverAsyncExecutor __lastWatirAlert __lastWatirConfirm __lastWatirPrompt $chrome_asyncScriptInfo $cdc_asdjflasutopfhvcZLmcfl_ 了解了这个特点之后，就可以在浏览器客户端JS中通过检测这些特征串来判断当前是否使用了selenium，并将检测结果附加到后续请求之中，这样服务端就能识别并拦截后续的请求。 下面讲一个具体的例子。 一个能够有效检测并屏蔽selenium的网站应用：大众点评网的验证码表单页，如果是正常的浏览器操作，能够有效的通过验证，但如果是使用selenium就会被识别，即便验证码输入正确，也会被提示“请求异常,拒绝操作”，无法通过验证 可以看到它检测了”webdriver”, “driver_evaluate”, “webdriver_evaluate”等等这些selenium的特征串。提交验证码的时候抓包可以看到一个_token参数（很长），selenium检测结果应该就包含在该参数里，服务端借以判断“请求异常,拒绝操作”。 现在才进入正题，如何突破网站的这种屏蔽呢？ 我们已经知道了屏蔽的原理，只要我们能够隐藏这些特征串就可以了。但是还不能直接删除这些属性，因为这样可能会导致selenium不能正常工作了。我们采用曲线救国的方法，使用中间人代理，比如fidder, proxy2.py或者mitmproxy，将JS文件（本例是yoda.*.js这个文件）中的特征字符串给过滤掉（或者替换掉，比如替换成根本不存在的特征串），让它无法正常工作，从而达到让客户端脚本检测不到selenium的效果。 下面我们验证下这个思路。这里我们使用mitmproxy实现中间人代理），对JS文件（本例是yoda.*.js这个文件）内容进行过滤。启动mitmproxy代理并加载response处理脚本： # coding:utf-8 # modify_response.py import re from mitmproxy import ctx def response(flow): &quot;&quot;&quot;修改应答数据&quot;&quot;&quot; if &#39;/js/yoda.&#39; in flow.request.url: # 屏蔽selenium检测 for webdriver_key in [&#39;webdriver&#39;, &#39;__driver_evaluate&#39;, &#39;__webdriver_evaluate&#39;, &#39;__selenium_evaluate&#39;, &#39;__fxdriver_evaluate&#39;, &#39;__driver_unwrapped&#39;, &#39;__webdriver_unwrapped&#39;, &#39;__selenium_unwrapped&#39;, &#39;__fxdriver_unwrapped&#39;, &#39;_Selenium_IDE_Recorder&#39;, &#39;_selenium&#39;, &#39;calledSelenium&#39;, &#39;_WEBDRIVER_ELEM_CACHE&#39;, &#39;ChromeDriverw&#39;, &#39;driver-evaluate&#39;, &#39;webdriver-evaluate&#39;, &#39;selenium-evaluate&#39;, &#39;webdriverCommand&#39;, &#39;webdriver-evaluate-response&#39;, &#39;__webdriverFunc&#39;, &#39;__webdriver_script_fn&#39;, &#39;__$webdriverAsyncExecutor&#39;, &#39;__lastWatirAlert&#39;, &#39;__lastWatirConfirm&#39;, &#39;__lastWatirPrompt&#39;, &#39;$chrome_asyncScriptInfo&#39;, &#39;$cdc_asdjflasutopfhvcZLmcfl_&#39;]: ctx.log.info(&#39;Remove&quot;{}&quot;from{}.&#39;.format(webdriver_key,flow.request.url)) flow.response.text=flow.response.text.replace(&#39;&quot;{}&quot;&#39;.format(webdriver_key),&#39;&quot;NO-SUCH-ATTR&quot;&#39;) flow.response.text=flow.response.text.replace(&#39;t.webdriver&#39;,&#39;false&#39;) flow.response.text=flow.response.text.replace(&#39;ChromeDriver&#39;,&#39;&#39;) 解决方法：mitmproxy因为mitmproxy可以拦截请求，所以在响应中，将包含的webdriver的JS中的关键字替换成其他的字符就可以了。 if &quot;/_next/static/js/common_pdd&quot; in flow.request.url: flow.response.text = flow.response.text.replace(&quot;webdriver&quot;, &quot;userAgent&quot;)]]></content>
      <categories>
        <category>爬虫</category>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[享元模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190613_%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[享元模式（Flyweight Pattern）： 运用共享技术有效地支持大量细粒度的对象。（Use sharing to support large numbers offine-grained objects efficiently.） 享元模式核心： 享元模式以共享的方式高效地支持大量细粒度对象的重用。 享元对象能做到共享的关键是区分了内部状态和外部状态。• 内部状态：可以共享，不会随环境变化而改变• 外部状态：不可以共享，会随环境变化而改变 享元模式的优缺点：优点： 极大减少内存中对象的数量， 相同或相似对象内存中只存一份，极大的节约资源，提高系统性能 外部状态相对独立，不影响内部状态 缺点 模式较复杂，使程序逻辑复杂化 为了节省内存，共享了内部状态，分离出外部状态，而读取外部状态使运行时间变长。用时间换取了空间。 享元模式开发中应用的场景： 享元模式由于其共享的特性，可以在任何“池”中操作，比如：线程池、数据库连接池。 String类的设计也是享元模式 享元模式实现： FlyweightFactory享元工厂类：创建并管理享元对象，享元池一般设计成键值对 FlyWeight抽象享元类：通常是一个接口或抽象类，声明公共方法，这些方法可以向外界提供对象的内部状态，设置外部状态。 ConcreteFlyWeight具体享元类：为内部状态提供成员变量进行存储 UnsharedConcreteFlyWeight非共享享元类：不能被共享的子类可以设计为非共享享元类 案例：比如围棋软件设计，每个围棋棋子都是一个对象，有如下属性：颜色形状,大小,(这些是可以共享的)称之为：内部状态。而围棋的位置(这些不可以共享)称之为：外部状态。该过程可分为以下5步： 步骤1：定义抽象享元类 /** * 享元类 */ public interface ChessFlyWeight { void setColor(String c); String getColor(); void display(Coordinate c); } 步骤2：定义具体享元类 /** * 具体享元类 */ class ConcreteChess implements ChessFlyWeight { private String color; public ConcreteChess(String color) { super(); this.color = color; } @Override public void display(Coordinate c) { System.out.println(&quot;棋子颜色：&quot;+color); System.out.println(&quot;棋子位置：&quot;+c.getX()+&quot;----&quot;+c.getY()); } @Override public String getColor() { return color; } @Override public void setColor(String c) { this.color = c; } } 步骤3：定义非共享享元类 /** * 外部状态 UnSharedConcreteFlyWeight */ public class Coordinate { private int x,y; public Coordinate(int x, int y) { super(); this.x = x; this.y = y; } public int getX() { return x; } public void setX(int x) { this.x = x; } public int getY() { return y; } public void setY(int y) { this.y = y; } } 步骤4：定义享元工厂类 /** * 享元工厂类 */ public class ChessFlyWeightFactory { //享元池 private static Map&lt;String,ChessFlyWeight&gt; map = new HashMap&lt;String, ChessFlyWeight&gt;(); public static ChessFlyWeight getChess(String color){ if(map.get(color)!=null){ return map.get(color); }else{ ChessFlyWeight cfw = new ConcreteChess(color); map.put(color, cfw); return cfw; } } } 步骤5：测试 public class Client { public static void main(String[] args) { ChessFlyWeight chess1 = ChessFlyWeightFactory.getChess(&quot;黑色&quot;); ChessFlyWeight chess2 = ChessFlyWeightFactory.getChess(&quot;黑色&quot;); System.out.println(chess1); System.out.println(chess2); System.out.println(&quot;增加外部状态的处理===========&quot;); chess1.display(new Coordinate(10, 10)); chess2.display(new Coordinate(20, 20)); } } 测试结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[外观模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190613_%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[外观模式（Facade Pattern）： 为子系统中的一组接口提供一个一致的接口。Façade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。（Provide a unified interface to a set of interfaces in a subsystem. Façade defines a higher-level interface that makes the subsystem easier to use.） 外观模式核心： 为子系统提供统一的入口。封装子系统的复杂性，便于客户端调用。使得客户端和子系统之间解耦，让子系统内部的模块功能更容易扩展和维护； 根据迪米特法则(最少知识原则)： 一个软件实体应当尽可能少的与其他实体发生相互作用。 开发中常见的场景 ： 应用频率很高。哪里都会遇到。各种技术和框架中，都有外观模式的使用。如：JDBC封装后的，commons提供的DBUtils类，Hibernate提供的工具类、Spring JDBC工具类等 简单来说，该模式就是把一些复杂的流程封装成一个接口供给外部用户更简单的使用。这个模式中，设计到3个角色。 1）子系统角色 : 实现了子系统的功能。它对客户角色和Facade时未知的。它内部可以有系统内的相互交互，也可以由供外界调用的接口。 2） 门面角色：外观模式的核心。它被客户角色调用，它熟悉子系统的功能。内部根据客户角色的需求预定了几种功能的组合。 3）客户角色 : 通过调用Facede来完成要实现的功能。 案例：比如，注册公司流程，分三步：步骤1：定义子系统角色 /** * 工商局 */ public interface 工商局 { void checkName(); //核名 } class 海淀区工商局 implements 工商局 { @Override public void checkName() { System.out.println(&quot;检查名字是否有冲突！&quot;); } } /** * 质检局 */ public interface 质检局 { void orgCodeCertificate(); //办理组织机构代码证 } class 海淀质检局 implements 质检局 { @Override public void orgCodeCertificate() { System.out.println(&quot;在海淀区质检局办理组织机构代码证！&quot;); } } /** * 税务局 */ public interface 税务局 { void taxCertificate(); //办理税务登记证 } class 海淀税务局 implements 税务局 { @Override public void taxCertificate() { System.out.println(&quot;在海淀税务局办理税务登记证！&quot;); } } /** * 银行 */ class 中国工商银行 implements 银行 { @Override public void openAccount() { System.out.println(&quot;在中国工商银行开户！&quot;); } } 步骤2：定义门面角色 /** * 门面角色：办理注册公司流程的门面对象 */ public class RegisterFacade { public void register(){ 工商局 a = new 海淀区工商局(); a.checkName(); 质检局 b = new 海淀质检局(); b.orgCodeCertificate(); 税务局 c = new 海淀税务局(); c.taxCertificate(); 银行 d = new 中国工商银行(); d.openAccount(); } } 步骤3：定义客户角色 /** * 客户端调用 */ public class Client1 { public static void main(String[] args) { new RegisterFacade().register(); } } 执行结果如下图所示：客户端不需要知道系统内部的实现细节，甚至都不用知道系统内部的构成。客户端只需要跟Facade交互就可以了。 最后以一个图片来解释外观模式的好处： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Selenium显示等待和隐式等待的区别]]></title>
    <url>%2F2019%2F06%2Fspider%2Fselenium%2F20190612_%E9%9A%90%E5%BC%8F%E5%92%8C%E6%98%BE%E7%A4%BA%E7%AD%89%E5%BE%85%2F</url>
    <content type="text"><![CDATA[selenium的显示等待原理：显示等待，就是明确的要等到某个元素的出现或者是某个元素的可点击等条件，等不到，就一直等，除非在规定的时间之内都没找到，那么久跳出Exception(简而言之，就是直到元素出现才去操作，如果超时则报异常) from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC driver = webdriver.Chrome() driver.get(&#39;http://www.baidu&#39;) element = WebDriverWait(driver,5,0.5).util( EC.presence_of_element_located((By.ID,&#39;kw&#39;)) ) element.send_keys(&#39;hello&#39;) driver.quit() WebDriverWait(driver,timeout,poll_frequency=0.5,ignored_exceptions=None) driver:浏览器驱动 timeout:最长超过时间，默认以秒为单位 poll_frequency:监测的时间间隔，默认为0.5秒 ignored_exceptions:超时后的异常信息，默认情况下抛NoSuchElementException异常 WebDriverWait一般有until和until_not方法配合使用 until(method,message) until_not(method ,message) selenium的隐式等待原理：隐式等待，就是在创建driver时，为浏览器对象创建一个等待时间，这个方法是得不到某个元素就等待一段时间，直到拿到某个元素位置。注意：在使用隐式等待的时候，实际上浏览器会在你自己设定的时间内部断的刷新页面去寻找我们需要的元素 from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC driver = webdriver.Chrome() driver.implicitly_wait(10) driver.get(&#39;http://www.baidu&#39;) implicitly_wait()默认参数的单位为妙，本例中设置等待时长为10秒，首先这10秒并非一个固定的等待时间，它并不影响脚本的执行速度。其次，它并不针对页面上的某一元素进行等待。当脚本执行到某个元素定位是，如果元素可以定位，则继续执行，如果元素定位不到，则它将以轮询的方式不断地判断元素是否被定位到。假设在第六秒定位到了元素则继续执行，若直到超出设置的时长10秒还没有定位到元素，则抛出异常。]]></content>
      <categories>
        <category>爬虫</category>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[桥接模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190611_%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[桥接模式（Bridge Pattern） ： 将抽象部分与它的实现部分分离，使他们都可以独立地变化。（Decouple an abstraction from its implementation so that the two can vary independently.） 就像一个桥，将两个变化维度连接起来。各个维度都可以独立的变化。故称之为：桥接模式 核心要点 ： 处理多层继承结构，处理多维度变化的场景，将各个维度设计成独立的继承结构，使各个维度可以独立的扩展在抽象层建立关联。 桥接模式优点： 分离抽象部分和实现部分：桥梁模式分离了抽象部分和实现部分，从而极大的提高了系统的灵活性。让抽象部分和实现部分独立出来，分别定义接口，这有助于对系统进行分层，从而产生更好的结构化的系统。 更好的扩展性：桥梁模式使得抽象部分和实现部分可以分别独立的扩展，而不会相互影响，从而大大提高了系统的可扩展性。 桥接模式实际开发中应用场景: JDBC驱动程序; AWT中的Peer架构; 银行日志管理： 格式分类：操作日志、交易日志、异常日志距离分类：本地记录日志、异地记录日志 人力资源系统中的奖金计算模块： 奖金分类：个人奖金、团体奖金、激励奖金。部门分类：人事部门、销售部门、研发部门。 OA系统中的消息处理： 业务类型：普通消息、加急消息、特急消息发送消息方式：系统内消息、手机短信、邮件 案例一：考虑这样一个实际的业务功能：发送提示消息。基本上所有带业务流程处理的系统都会有这样的功能，比如OA上有未处理完毕的文件，需要发送一条消息提示他。从业务上看，消息又分为普通消息、加急消息，不同的消息类型，业务功能处理是不一样的，比如加急消息是在消息上添加加急；从发送消息的手段上看，又有系统内短消息、邮件等。该过程可分为5步：步骤1：定义发送消息方法的接口 /** * 实现消息发送的统一接口 */ public interface MessageImplementor { //要发送的消息的内容和接收人 void send(String message, String toUser); } 步骤2：定义发送消息方法接口的实现类 /** * 系统内短消息的实现类 * SMS(Short Message Service)短信息服务 */ public class MessageSMS implements MessageImplementor { @Override public void send(String message, String toUser) { System.out.println(String.format(&quot;使用系统内部短消息的方法，发送消息 %s 给 %s&quot;, message, toUser)); } } /** * 邮件短消息的实现类 */ public class MessageEmail implements MessageImplementor { @Override public void send(String message, String toUser) { System.out.println(String.format(&quot;使用邮件短消息的方法，发送消息 %s 给 %s&quot;, message, toUser)); } } 步骤3：定义抽象消息类 /** * 抽象消息类 */ public abstract class AbstractMessage { //持有一个实现部分的对象 MessageImplementor implementor; //构造方法，传入实现部分的对象 public AbstractMessage(MessageImplementor implementor) { this.implementor = implementor; } //发送消息，委派给实现部分的方法 public void sendMessage(String message, String toUser) { this.implementor.send(message, toUser); } } 步骤4：定义普通消息类和加急消息类，继承抽象消息类 /** * 普通消息类 */ public class CommonMessage extends AbstractMessage { //构造方法，传入实现部分的对象 public CommonMessage(MessageImplementor implementor) { super(implementor); } @Override public void sendMessage(String message, String toUser) { //对于普通消息，直接调用父类方法，发送消息即可 super.sendMessage(message, toUser); } } /** * 加急消息类 */ public class UrgencyMessage extends AbstractMessage { //构造方法 public UrgencyMessage(MessageImplementor implementor) { super(implementor); } @Override public void sendMessage(String message, String toUser) { message = &quot;加急：&quot; + message; super.sendMessage(message, toUser); } //扩展它自己的功能，监控某个消息的处理状态 public Object watch(String messageId) { //根据给出的 消息编码(messageId) 查询消息的处理状态， // 组织成监控的处理状态，然后返回。 return null; } } 步骤5：测试 /** * 测试类 */ public class TestBridge { public static void main(String[] args) { MessageImplementor implementor = new MessageSMS(); AbstractMessage abstractMessage = new CommonMessage(implementor); abstractMessage.sendMessage(&quot;加班申请速批&quot;, &quot;陈总&quot;); implementor = new MessageEmail(); abstractMessage = new UrgencyMessage(implementor); abstractMessage.sendMessage(&quot;加班申请速批&quot;, &quot;陈总&quot;); } } 测试结果如下图所示： 案例二：桥接的用意是：将抽象化与实现化解耦，使得二者可以独立变化，像我们常用的JDBC桥DriverManager一样，JDBC进行连接数据库的时候，在各个数据库之间进行切换，基本不需要动太多的代码，甚至丝毫不用动，原因就是JDBC提供统一接口，每个数据库提供各自的实现，用一个叫做数据库驱动的程序来桥接就行了。类图如下：该过程大致也分为5步：步骤1：定义接口 public interface Sourceable { public void method(); } 步骤2：定义接口的实现类 public class SourceSub1 implements Sourceable { @Override public void method() { System.out.println(&quot;this is the first sub!&quot;); } } public class SourceSub2 implements Sourceable { @Override public void method() { System.out.println(&quot;this is the second sub!&quot;); } } 步骤3：定义抽象类 public abstract class Bridge { private Sourceable source; public void method(){ source.method(); } // getter/setter方法 public Sourceable getSource() { return source; } public void setSource(Sourceable source) { this.source = source; } } 步骤4：继承这个抽象类 public class MyBridge extends Bridge { public void method(){ getSource().method(); } } 步骤5：测试 public class BridgeTest { public static void main(String[] args) { Bridge bridge = new MyBridge(); //调用第一个对象 Sourceable source1 = new SourceSub1(); bridge.setSource(source1); bridge.method(); //调用第二个对象 Sourceable source2 = new SourceSub2(); bridge.setSource(source2); bridge.method(); } } 测试结果如下图所示：这样，就通过对Bridge类的调用，实现了对接口Sourceable的实现类SourceSub1和SourceSub2的调用。下图是JDBC连接的原理，有数据库学习基础的，一结合就都懂了。 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[组合模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190611_%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[组合模式（Composite Pattern）： 将对象组合成树形结构以表示“部分-整体”的层次结构。Composite 使得客户对单个对象和复合对象的使用具有一致性。（Compose object into tree structures torepresent part-whole hierarchy. Composite lets clients treat individual objectsand compositions of objects uniformly.） 组合模式的优缺点：优点： 可以清楚地定义分层次的复杂类型，表示对象的全部层次或者部分层次 ，它让客户端忽略了层次的差异，方便对整个层次经行控制。 客户端可以一致的使用一个组合模式或对单个对象，不必关心处理的是单个对象还是整个组合结构，简化了客户端的代码。 在组合模式种增加新的容器构件和叶子构件都很方便，无需对现有类库进行任何修改，符合开闭原则。 为树形结构的面向对象实现提供了一种灵活的解决方案，通过叶子对象和容器对象的递归组合可以形成复杂的树形机构，但对树形结构的控制却很简单。 缺点： 在增加新的构件时就比较难咯。而且难以限定，有时候希望在一个容器种能有某些特定的对象，例如在某个文件夹只能有image或者gif等。这个就比较难以实现。 ​ 开发中的应用场景： 操作系统的资源管理器 GUI中的容器层次图 XML文件解析 OA系统中，组织结构的处理 Junit单元测试框架 : 底层设计就是典型的组合模式，TestCase(叶子)、TestUnite(容器)、Test接口(抽象) 组合模式核心 ： component (抽象构件：容器)：它可以是接口或者抽象类，为叶子构建和子容器构建对象声明接口，在该角色中可以包含所有子类共有的行为的实现和声明。在抽象构建中定义了访问及管理它的子构件的方法，如增加子构件，删除子构件，获取子构件等。它定义了叶子和容器构件的共同点 leaf(叶子构建)：叶子构建可以说就是各种类型的文件！叶子构建没有子构件。它实现了抽象构建中的定义的行为。对于那些访问子容器，删除子容器，增加子容器的就报错。 compsite(子容器构建)：它在组合模式中表示容器节点对象，容器结点是子节点，可以是子容器，也可以是叶子构建，它提供一个集合来存储子节点。它有容器特征，可以包含子节点 案例：使用组合模式，模拟杀毒软件，该软件能够对某个文件夹杀毒，也可以指定对某些文件杀毒。该过程大致可分为4步，代码如下：步骤1：定义AbstractFile : 抽象文件类，充当抽象构建。 /** * AbstractFile: 抽象文件类，充当抽象构建。 */ public abstract class AbstractFiles { public abstract void add(AbstractFiles af); public abstract void remove(AbstractFiles af); public abstract AbstractFiles get(int i); public abstract void killVirus(); } 步骤2：定义叶子节点：文件类型，在此只写了图片文件。 /** * 图片文件,继承自AbstractFiles */ public class ImageFile extends AbstractFiles { private String name; public ImageFile(String name) { this.name = name; } @Override public void add(AbstractFiles af) { System.out.println(&quot;不支持该方法&quot;); } @Override public void remove(AbstractFiles af) { System.out.println(&quot;不支持该方法&quot;); } @Override public AbstractFiles get(int i) { System.out.println(&quot;不支持该方法&quot;); return null; } @Override public void killVirus() { System.out.println(&quot;开始进行--&quot;+name+&quot;--文件杀毒&quot;); } } 步骤3：文件夹类型 import java.util.ArrayList; /** * 文件夹类型 ，继承自AbstractFiles */ public class Folder extends AbstractFiles { //文件夹类，所有的都可以用 private ArrayList&lt;AbstractFiles&gt; list = new ArrayList&lt;AbstractFiles&gt;(); private String name; public Folder(String name) { this.name=name; } @Override public void add(AbstractFiles af) { list.add(af); System.out.println(&quot;添加文件成功！&quot;); } @Override public void remove(AbstractFiles af) { if(list.remove(af)) { System.out.println(&quot;删除成功&quot;); }else{ System.out.println(&quot;删除失败&quot;); } } @Override public AbstractFiles get(int i) { return list.get(i); } @Override public void killVirus() { System.out.println(&quot;对文件夹 &quot;+name+&quot; 进行杀毒&quot;); //递归调用 for(Object o:list) { ((AbstractFiles) o).killVirus(); } } } 步骤4：测试 /** * 测试 */ public class Client { public static void main(String[] args) { //创建一个文件类型 AbstractFiles f1 = new Folder(&quot;主文件夹&quot;); //创建文件 AbstractFiles file1= new ImageFile(&quot;美妙月亮。png&quot;); AbstractFiles file2= new ImageFile(&quot;大海.jpg&quot;); AbstractFiles file3= new ImageFile(&quot;沙漠杨树.gif&quot;); f1.add(file1); f1.add(file2); f1.add(file3); //file1.killVirus(); f1.killVirus(); } } 测试结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jenkins概述]]></title>
    <url>%2F2019%2F06%2Fdeploy%2Fjenkins%2Fgenkins%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[概念：Jenkins是一个开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件项目可以进行持续集成 目的：1、持续、自动地构建/测试软件项目。2、监控软件开放流程，快速问题定位及处理，提示开放效率。 特性： 开源的java语言开发持续集成工具，支持CI，CD。 易于安装部署配置：可通过yum安装,或下载war包以及通过docker容器等快速实现安装部署，可方便web界面配置管理。 消息通知及测试报告：集成RSS/E-mail通过RSS发布构建结果或当构建完成时通过e-mail通知，生成JUnit/TestNG测试报告。 分布式构建：支持Jenkins能够让多台计算机一起构建/测试。 文件识别:Jenkins能够跟踪哪次构建生成哪些jar，哪次构建使用哪个版本的jar等。 丰富的插件支持:支持扩展插件，你可以开发适合自己团队使用的工具，如git，svn，maven，docker等。 产品发布流程：产品设计成型 -&gt; 开发人员开发代码 -&gt; 测试人员测试功能 -&gt; 运维人员发布上线持续集成 （Continuous integration，简称CI）持续交付（Continuous delivery）持续部署（continuous deployment） jenkins安装：https://www.jenkins.io/doc/book/installing/最低配置：最低配置： 不少于256M内存，不低于1G磁盘，jdk版本&gt;=8 注意：Jenkins比较耗内存，不运行任何构建任务的情况下就吃掉了300多M，再加上构建任务时会占用更多，所以建议服务器的内存至少有1G，512M的话很可能在执行构建任务的时候内存不够用。]]></content>
      <categories>
        <category>部署</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[适配器模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190605_%E9%80%82%E9%85%8D%E5%99%A8%2F</url>
    <content type="text"><![CDATA[适配器模式（Adapter Pattern）： 将一个类的接口转换成客户希望的另一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。（Convert the interface of a class into another interface clients except. Adapter lets classes work together that couldn’t otherwise because of incompatible interfaces.） 定义一个包装类，用于包装不兼容接口的对象： 包装类 = 适配器Adapter； 被包装对象 = 适配者Adaptee = 被适配的类 使用场景： 系统需要复用现有类，而该类的接口不符合系统的需求，可以使用适配器模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。 多个组件功能类似，但接口不统一且可能会经常切换时，可使用适配器模式，使得客户端可以以统一的接口使用它们 需要一个统一的输出接口，但是输入类型却不可预知。 主要作用：把一个类的接口变换成客户端所期待的另一种接口，从而使原本接口不匹配而无法一起工作的两个类能够在一起工作。 类的适配器模式和对象的适配器模式的选择： 适配器模式的形式分为：类的适配器模式 &amp; 对象的适配器模式 灵活使用时：选择对象的适配器模式，类适配器使用对象继承的方式，是静态的定义方式；而对象适配器使用对象组合的方式，是动态组合的方式。 需要同时配源类和其子类：选择对象的适配器，对于对象适配器，一个适配器可以把多种不同的源适配到同一个目标。 需要重新定义Adaptee的部分行为：选择类适配器。对于类适配器，适配器可以重定义Adaptee的部分行为，相当于子类覆盖父类的部分实现方法。对于对象适配器，要重定义Adaptee的行为比较困难。 仅仅希望使用方便时：选择类适配器，对于类适配器，仅仅引入了一个对象，并不需要额外的引用来间接得到Adaptee。对于对象适配器，需要额外的引用来间接得到Adaptee。 下面以一个案例来介绍设配器模式：该过程大概分成4步： 步骤1：定义目标接口（Target）：客户所期待的接口。目标可以是具体的或抽象的类，也可以是接口。 public interface Target { void handleReq(); } 步骤2：定义 需要适配的类（Adaptee）：需要适配的类或适配者类。 /** * 被适配的类 * (相当于例子中的，PS/2键盘) */ public class Adaptee { public void request(){ System.out.println(&quot;可以完成客户请求的需要的功能！&quot;); } } 步骤3：定义适配器（Adapter）：通过包装一个需要适配的对象，把原接口转换成目标接口。 类适配器方式: /** * 适配器 (类适配器方式) * (相当于usb和ps/2的转接器) */ public class Adapter extends Adaptee implements Target { @Override public void handleReq() { super.request(); } } 对象适配器方式: /** * 适配器 (对象适配器方式,使用了组合的方式跟被适配对象整合) * (相当于usb和ps/2的转接器) */ public class Adapter2 implements Target { private Adaptee adaptee; @Override public void handleReq() { adaptee.request(); } public Adapter2(Adaptee adaptee) { super(); this.adaptee = adaptee; } } 步骤4：测试 /** * 客户端类:测试 */ public class Client { public void test1(Target t){ t.handleReq(); } public static void main(String[] args) { Client c = new Client(); Adaptee a = new Adaptee(); // Target t = new Adapter(); Target t = new Adapter2(a); c.test1(t); } } 测试结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[原型模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190604_%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[原型模式（Prototype Pattern）: 用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。(Specify the kinds of objects to create using a prototypical instance, and create new objects by copying the prototype.) 通过原型模式，绕过构造方法创建对象，利用内存直接拷贝对象，提高对象的创建性效率。在有大量的对象创建或者类初始化消耗多资源的场景下可以利用原型模式来优化。当然在实现的过程中，要注意浅拷贝与深拷贝的问题，防止写出 bug。 浅拷贝和深拷贝 : 浅拷贝（浅克隆） ：浅复制仅仅复制所考虑的对象，而不复制它所引用的对象。深拷贝（深克隆） ：深复制把要复制的对象所引用的对象都复制了一遍。 可以利用串行化来做深复制，所谓对象序列化就是将对象的状态转换成字节流，以后可以通过这些值再生成相同状态的对象。 开发中的应用场景 ： 原型模式很少单独出现，一般是和工厂方法模式一起出现，通过clone的方法创建一个对象，然后由工厂方法提供给调用者。 spring中bean的创建实际就是两种：单例模式和原型模式。（当然，原型模式需要和工厂模式搭配起来）。 如果需要短时间创建大量对象，并且new的过程比较耗时。则可以考虑使用原型模式！ 很多软件提供的CTRL+C和CTRL+V操作的就是原型模式的典型应用！ 可以看一下:普通new方式创建对象和clone方式创建对象的效率差异 /** * 如果需要短时间创建大量对象，并且new的过程比较耗时。则可以考虑使用原型模式！ */ public class Client4 { public static void main(String[] args) throws Exception { testNew(1000); testClone(1000); } public static void testNew(int size){ long start = System.currentTimeMillis(); for(int i=0;i&lt;size;i++){ Laptop t = new Laptop(); } long end = System.currentTimeMillis(); System.out.println(&quot;new的方式创建耗时：&quot;+(end-start)); } public static void testClone(int size) throws CloneNotSupportedException{ long start = System.currentTimeMillis(); Laptop t = new Laptop(); for(int i=0;i&lt;size;i++){ Laptop temp = (Laptop) t.clone(); } long end = System.currentTimeMillis(); System.out.println(&quot;clone的方式创建耗时：&quot;+(end-start)); } } class Laptop implements Cloneable { //笔记本电脑 public Laptop() { try { Thread.sleep(10); //模拟创建对象耗时的过程! } catch (InterruptedException e) { e.printStackTrace(); } } @Override protected Object clone() throws CloneNotSupportedException { Object obj = super.clone(); //直接调用object对象的clone()方法！ return obj; } } 执行结果如下图所示：由此可见 : 如果需要短时间创建大量对象，并且new的过程比较耗时。则可以考虑使用原型模式！ 再看原型模式的例子： 案例有以下三步： 步骤一： import java.io.Serializable; /** * 工作经历实现序列化接口 */ public class WorkExperience implements Serializable { private static final long serialVersionUID = 1L; private String workDate; private String company; //提供getter/setter方法 public String getWorkDate() { return workDate; } public void setWorkDate(String workDate) { this.workDate = workDate; } public String getCompany() { return company; } public void setCompany(String company) { this.company = company; } } 步骤二： import java.io.*; public class People implements Serializable,Cloneable { private static final long serialVersionUID = 1L; private String name; private String sex; private Integer age; private WorkExperience work; public People(String name) { this.name = name; work = new WorkExperience(); } //设置个人信息 public void setPersonalInfo(String sex , Integer age) { this.sex=sex; this.age=age; } //设置工作经历 public void setWorkExperience(String workDate,String company) { work.setWorkDate(workDate); work.setCompany(company); } //显示 public void display(){ System.out.println(String.format(&quot;%s %s %s&quot;, name,sex,age)); System.out.println(String.format(&quot;工作经历：%s %s&quot;, work.getWorkDate(), work.getCompany())); } //浅复制 public Object clone(){ Object obj = null; try{ obj = super.clone(); }catch (CloneNotSupportedException e){ e.printStackTrace(); } return obj; } //深复制 public Object deepClone () throws IOException,ClassNotFoundException { //将对象写入流中，使用序列化和反序列化实现深复制 ByteArrayOutputStream bo = new ByteArrayOutputStream(); ObjectOutputStream oo = new ObjectOutputStream(bo); oo.writeObject(this); //从流中读出来 ByteArrayInputStream bi = new ByteArrayInputStream(bo.toByteArray()); ObjectInputStream oi = new ObjectInputStream(bi); return (oi.readObject()); } } 步骤三：测试类 /** * 测试类 */ public class TestPrototype { public static void main(String[] args) throws IOException,ClassNotFoundException { People p1 = new People(&quot;张三&quot;); p1.setPersonalInfo(&quot;男&quot;,23); p1.setWorkExperience(&quot;2016-2019&quot;,&quot;百度&quot;); People clone = (People) p1.clone(); //浅复制 clone.setPersonalInfo(&quot;男&quot;,20); clone.setWorkExperience(&quot;2017-2022&quot;,&quot;腾讯&quot;); p1.display(); clone.display(); People p2 = new People(&quot;李四&quot;); p2.setPersonalInfo(&quot;女&quot;,20); p2.setWorkExperience(&quot;2018-2020&quot;,&quot;美团&quot;); People deepClone = (People)p2.deepClone(); //深复制 deepClone.setPersonalInfo(&quot;女&quot;,22); deepClone.setWorkExperience(&quot;2018-2019&quot;,&quot;百度外卖&quot;); p2.display(); deepClone.display(); } } 测试结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代理模式详解]]></title>
    <url>%2F2019%2F06%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190603_%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[代理模式（Proxy Pattern）: 为其他对象提供一个代理以控制对这个对象的访问。(Provide a surrogate or placeholder foranther object to control access to it.) 可以详细控制访问某个（某类）对象的方法，在调用这个方法前做前置处理，调用这个方法后做后置处理。 分类： 静态代理(静态定义代理类) 动态代理(动态生成代理类) : JDK自带的动态代理， javaassist字节码操作库实现,CGLIB，ASM(底层使用指令，可维护性较差) JDK自带的动态代理 : java.lang.reflect.Proxy , 作用：动态生成代理类和对象 java.lang.reflect.InvocationHandler(处理器接口) , 可以通过invoke方法实现对真实角色的代理访问。每次通过Proxy生成代理类对象对象时都要指定对应的处理器对象 动态代理相比于静态代理的优点抽象角色中(接口)声明的所以方法都被转移到调用处理器一个集中的方法中处理，这样，我们可以更加灵活和统一的处理众多的方法。 应用场景： 安全代理：屏蔽对真实角色的直接访问。 远程代理：通过代理类处理远程方法调用(RMI)。 延迟加载：先加载轻量级的代理对象，真正需要再加载真实对象。( 比如你要开发一个大文档查看软件，大文档中有大的图片，有可能一个图片有100MB，在打开文件时不可能将所有的图片都显示出来，这样就可以使用代理模式，当需要查看图片时，用proxy来进行大图片的打开。) 开发框架中应用场景：实际上，随便选择一个技术框架都会用到代理模式！ struts2中拦截器的实现; 数据库连接池关闭处理; Hibernate中延时加载的实现; AspectJ的实现 , spring中AOP的实现; mybatis中实现拦截器插件; 日志拦截; 声明式事务处理; web service; RMI远程方法调用 核心角色： 抽象角色：定义代理角色和真实角色的公共对外方法； 真实角色：实现抽象角色，定义真实角色所要实现的业务逻辑，供代理角色调用，– 关注真正的业务逻辑！； 代理角色：实现抽象角色，是真实角色的代理，通过真实角色的业务逻辑方法来实现抽象方法，并可以附加自己的操作。 将统一的流程控制放到代理角色中处理！ 静态代理：静态代理在使用时,需要定义接口或者父类,被代理对象与代理对象一起实现相同的接口或者是继承相同父类。下面举个案例来解释:模拟保存动作,定义一个保存动作的接口:IUserDao.java,然后目标对象实现这个接口的方法UserDao.java,此时如果使用静态代理方式,就需要在代理对象(UserDaoProxy.java)中也实现IUserDao接口.调用的时候通过调用代理对象的方法来调用目标对象.该过程需要以下四步： 第一步：定义接口:IUserDao.java /** * 接口 */ public interface IUserDao { void save(); } 第二步：定义目标对象:UserDao.java /** * 接口实现目标数据 */ public class UserDao implements IUserDao { @Override public void save() { System.out.println(&quot;------已经保存数据！------&quot;); } } 第三步：定义代理对象:UserDaoProxy.java /** * 代理对象，静态代理 */ public class UserDaoProxy implements IUserDao{ // //接收保存目标对象 private IUserDao iUserDao; public UserDaoProxy(IUserDao iUserDao) { this.iUserDao = iUserDao; } @Override public void save() { System.out.println(&quot;开始事务...&quot;); iUserDao.save();//执行目标对象的方法 System.out.println(&quot;提交事务...&quot;); } } 第四步：测试：TestProxy.java /** * 测试 */ public class TestProxy { public static void main(String[] args) { //目标对象 UserDao target = new UserDao(); //代理对象,把目标对象传给代理对象,建立代理关系 UserDaoProxy proxy = new UserDaoProxy(target); //执行的是代理的方法 proxy.save(); } } 测试结果如下图所示:静态代理可以做到在不修改目标对象的功能前提下,对目标功能扩展。但有可能因为代理对象需要与目标对象实现一样的接口,所以会有很多代理类,类太多。同时,一旦接口增加方法,目标对象与代理对象都要维护.如何解决静态代理中的缺点呢? 答案是可以使用动态代理方式 动态代理：也叫做:JDK代理,接口代理 动态代理有以下特点: 代理对象,不需要实现接口； 代理对象的生成,是利用JDK的API,动态的在内存中构建代理对象(需要我们指定创建代理对象/目标对象实现的接口的类型)总结：代理对象不需要实现接口,但是目标对象一定要实现接口,否则不能用动态代理 比如对于上面的案例：接口类IUserDao.java以及接口实现类,目标对象UserDao是一样的,没有做修改.在这个基础上,增加一个代理工厂类(ProxyFactory.java),将代理类写在这个地方,然后在测试类(需要使用到代理的代码)中先建立目标对象和代理对象的联系,然后代用代理对象的中同名方法 代理工厂类:ProxyFactory.java import java.lang.reflect.InvocationHandler; import java.lang.reflect.Method; import java.lang.reflect.Proxy; /** * 创建动态代理对象 * 动态代理不需要实现接口,但是需要指定接口类型 */ public class ProxyFactory { //维护一个目标对象 private Object target; public ProxyFactory(Object target){ this.target=target; } //给目标对象生成代理对象 public Object getProxyInstance(){ return Proxy.newProxyInstance( target.getClass().getClassLoader(), target.getClass().getInterfaces(), new InvocationHandler() { @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { System.out.println(&quot;开始事务2&quot;); //执行目标对象方法 Object returnValue = method.invoke(target, args); System.out.println(&quot;提交事务2&quot;); return returnValue; } } ); } } 测试类：TestDynamicProxy.java /** * 测试 */ public class TestDynamicProxy { public static void main(String[] args) { // 目标对象 IUserDao target = new UserDao(); // 【原始的类型 class designpattern.proxy.UserDao】 System.out.println(target.getClass()); // 给目标对象，创建代理对象 IUserDao proxy = (IUserDao) new ProxyFactory(target).getProxyInstance(); // class $Proxy0 内存中动态生成的代理对象 System.out.println(proxy.getClass()); // 执行方法 【代理对象】 proxy.save(); } } 测试结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[工厂模式详解]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190531_%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[工厂模式（Factory Pattern）： 定义一个用于创建对象的接口，让子类决定将哪一个类实例化，FactoryMethod使一个类的实例化延迟到其子类。（Define an interface for creating anobject, but let subclasses decide which class to instantiate. Factory methodlets a class defer instantiation to subclasses.） 工厂模式，也叫作静态工厂模式，顾名思义，就是用来生产对象的，在java中，万物皆对象，这些对象都需要创建，如果创建的时候直接new该对象，就会对该对象耦合严重，假如我们要更换对象，所有new对象的地方都需要修改一遍，这显然违背了软件设计的开闭原则，如果我们使用工厂来生产对象，我们就只和工厂打交道就可以了，彻底和对象解耦，如果要更换对象，直接在工厂里更换该对象即可，达到了与对象解耦的目的；所以说，工厂模式最大的优点就是：解耦 核心本质： 实例化对象，用工厂方法代替new操作； 将选择实现类、创建对象统一管理和控制。从而将调用者跟我们的实现类解耦。实现了创建者和调用者的分离。 应用场景： JDK中Calendar的getInstance方法； JDBC中Connection对象的获取； Hibernate中SessionFactory创建Session； spring中IOC容器创建管理bean对象； XML解析时的DocumentBuilderFactory创建解析器对象； 反射中Class对象的newInstance() 详细分类： 简单工厂模式：用来生产同一等级结构中的任意产品。（对于增加新的产品，需要修改已有代码）；虽然某种程度不符合设计原则，但实际使用最多。 工厂方法模式：用来生产同一等级结构中的固定产品。（支持增加任意产品）；不修改已有类的前提下，通过增加新的工厂类实现扩展。 抽象工厂模式：用来生产不同产品族的全部产品。（对于增加新的产品，无能为力；支持增加产品族）；不可以增加产品，可以增加产品族！ 工厂方法模式和简单工厂模式区别： 简单工厂模式只有一个（对于一个项目或者一个独立模块而言）工厂类，而工厂方法模式有一组实现了相同接口的工厂类。 结构复杂度：从这个角度比较，显然简单工厂模式要占优。简单工厂模式只需一个工厂类，而工厂方法模式的工厂类随着产品类个数增加而增加，这无疑会使类的个数越来越多，从而增加了结构的复杂程度。 代码复杂度：代码复杂度和结构复杂度是一对矛盾，既然简单工厂模式在结构方面相对简洁，那么它在代码方面肯定是比工厂方法模式复杂的了。简单工厂模式的工厂类随着产品类的增加需要增加很多方法（或代码），而工厂方法模式每个具体工厂类只完成单一任务，代码简洁。 客户端编程难度：工厂方法模式虽然在工厂类结构中引入了接口从而满足了OCP，但是在客户端编码中需要对工厂类进行实例化。而简单工厂模式的工厂类是个静态类，在客户端无需实例化，这无疑是个吸引人的优点。 面向对象设计的基本原则： OCP（开闭原则，Open-Closed Principle）：一个软件的实体应当对扩展开放，对修改关闭。 DIP（依赖倒转原则，Dependence Inversion Principle）：要针对接口编程，不要针对实现编程。 LoD（迪米特法则，Law of Demeter）：只与你直接的朋友通信，而避免和陌生人通信。 简单工厂模式例子： 比如，小明骑自行车去学校，开汽车去旅游，可用简单工厂模式实现： 第一步：建一个交通工具接口，汽车和自行车都实现这个接口 /** * 交通工具 */ interface IVehicle { void run(); } //汽车 class Car implements IVehicle{ @Override public void run() { System.out.println(&quot;开汽车去。。。&quot;); } } //自行车 class Bicycle implements IVehicle{ @Override public void run() { System.out.println(&quot;骑自行车去。。。&quot;); } } 第二步：创建一个车库，判断去选自行车还是选汽车 //车库 public class GarageFactory { public static IVehicle getVehicle(String type) { if (&quot;car&quot;.equals(type)) { return new Car(); } else if (&quot;bicycle&quot;.equals(type)) { return new Bicycle(); } throw new IllegalArgumentException(&quot;请输入车类型&quot;); } } 第三步：测试 public class TestSimpleFactory { public static void main(String[] args) { XiaoMing xiaoMing = new XiaoMing(); // 小明骑自行车去学校 IVehicle motorcycle = GarageFactory.getVehicle(&quot;bicycle&quot;); xiaoMing.goToSchool(motorcycle); // 小明开汽车去旅游 IVehicle car = GarageFactory.getVehicle(&quot;car&quot;); xiaoMing.travel(car); } } class XiaoMing{ public void goToSchool(IVehicle vehicle){ System.out.println(&quot;小明去学校：&quot;); vehicle.run(); } public void travel(IVehicle vehicle){ System.out.println(&quot;小明去旅游：&quot;); vehicle.run(); } } 控制台打印结果如下： 简单工厂模式拓展性不好，优秀的java代码是符合“开放-封闭”原则的，也就是说对扩展开发，对修改关闭，如果想骑电动车去上班，在这里就要增加if-else判断。对于这个问题，我们的工厂方法模式就可以解决这个问题。 工厂方法模式例子： 根据上面的例子，如果有车库，则可以按车类型来放置。只需要在上面例子的基础上，再加2步。 第一步：建一个车库接口，汽车和自行车都实现这个接口。 public interface VehicleGarage { IVehicle getVehicle(); } //汽车车库 class CarGarage implements VehicleGarage{ @Override public IVehicle getVehicle() { return new Car(); } } //自行车车库 class BicycleGarage implements VehicleGarage{ @Override public IVehicle getVehicle() { return new Bicycle(); } } 第二步：测试 public class TestFactoryMethod { public static void main(String[] args) { XiaoMing xiaoMing = new XiaoMing(); //小明骑自行车去学校 BicycleGarage bicycleGarage = new BicycleGarage(); IVehicle bicycle = bicycleGarage.getVehicle(); xiaoMing.goToSchool(bicycle); //小明开汽车去旅游 CarGarage carGarage = new CarGarage(); IVehicle car = carGarage.getVehicle(); xiaoMing.travel(car); } } 控制台打印结果如下： 工厂方法模式可以说在你能想到的开源框架源码中必定会使用的一个设计模式，因为开源框架很重要一点就是要有扩展性，而工厂方法模式恰恰具有可扩展性。 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[抽象工厂模式详解]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190531_%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%2F</url>
    <content type="text"><![CDATA[抽象工厂模式（Abstract Factory Pattern）： 提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们的具体类。（Provide an interface for creating families of related or dependent object without specifying their concrete classes.） 抽象工厂模式是工厂方法模式的升级版本，在有多个业务品种、业务分类时，通过抽象工厂模式产生需要的对象是一种非常好的解决方式。抽象工厂模式中，接口是负责创建一个相关对象的工厂，不需要显式指定它们的类。每个生成的工厂都能按照工厂模式提供对象。 工厂方法是在解决一个产品多个层级方面的事情；而抽象工厂致力于解决多个产品多个层级方面的事情。举个例子：汽车是由很多零件组成的，比如轮胎、方向盘等等。举个例子：汽车是由很多零件组成的，比如轮胎、方向盘等等。现在如果我们是轮胎生产方，要生产宝马轮胎和奔驰轮胎，要用工厂方法还是抽象工厂实现呢？答案是：工厂方法。轮胎是一个产品，宝马轮胎和奔驰轮胎是 2 个不同层级的轮胎，所以用工厂方法解决就足够。假如现在我们是汽车生产方，要生产宝马汽车和奔驰汽车，汽车又包含轮胎和方向盘等等，要用哪个来实现？既然是上面的是工厂方法，那这个就用抽象工厂，因为这涉及到多个产品（轮胎、方向盘等等）和 2 个层级（宝马和奔驰）。 上面定义中：为创建一组相关或相互依赖的对象提供一个接口。这样子理解这句话，比如上面说的轮胎和方向盘，宝马汽车用的轮胎和方向盘需要都是宝马品牌的，也就是说在安装宝马汽车的轮胎和方向盘的时候，得用宝马生产的轮胎和方向盘，重要的一点是：轮胎和方向盘是互相依赖的，不能在宝马汽车上安装奔驰轮胎和宝马方向盘，因为有这个依赖关系，所以我们需要提供一个额外的接口，来保证宝马汽车使用的轮胎和方向盘都是宝马生产的。这就是抽象工厂干的事情。 案例可以分为以下4步： 第一步：创建抽象汽车工厂接口，宝马工厂和奔驰工厂实现这个接口。 //抽象汽车工厂接口 public interface AbstractCarFactory { void installWheel(); void installSteeringWheel(); } //宝马工厂 class BMWCarFactory implements AbstractCarFactory { @Override public void installWheel() { BMWWheelFactory bmwWheelFactory = new BMWWheelFactory(); String wheel = bmwWheelFactory.createWheel(); System.out.println(&quot;安装轮胎:&quot;+wheel); } @Override public void installSteeringWheel() { BMWSteeringWheelFacatory bmwSteeringWheelFacatory = new BMWSteeringWheelFacatory(); String steeringWheel = bmwSteeringWheelFacatory.createSteeringWheel(); System.out.println(&quot;安装方向盘：&quot; + steeringWheel); } } //奔驰工厂 class MercedesCarFacatory implements AbstractCarFactory { @Override public void installWheel() { MercedesWheelFactory mercedesWheelFactory = new MercedesWheelFactory(); String wheel = mercedesWheelFactory.createWheel(); System.out.println(&quot;安装轮胎:&quot;+wheel); } @Override public void installSteeringWheel() { MercedesSteeringWheelFacatory mercedesSteeringWheelFacatory = new MercedesSteeringWheelFacatory(); String steeringWheel = mercedesSteeringWheelFacatory.createSteeringWheel(); System.out.println(&quot;安装方向盘：&quot; + steeringWheel); } } 第二步：创建轮胎工厂接口，宝马轮胎工厂和奔驰轮胎工厂实现这个接口。 //轮胎工厂接口 public interface WheelFacatory { String createWheel(); } //宝马轮胎工厂 class BMWWheelFactory implements WheelFacatory { @Override public String createWheel() { System.out.println(&quot;宝马轮胎工厂生产轮胎&quot;); return &quot;宝马轮胎&quot;; } } //奔驰轮胎工厂 class MercedesWheelFactory implements WheelFacatory { @Override public String createWheel() { System.out.println(&quot;奔驰轮胎工厂生产轮胎&quot;); return &quot;奔驰轮胎&quot;; } } 第三步：创建方向盘工厂接口，宝马方向盘工厂和奔驰方向盘工厂实现这个接口。 //方向盘工厂接口 public interface SteeringWheelFacatory { String createSteeringWheel(); } //宝马方向盘工厂 class BMWSteeringWheelFacatory implements SteeringWheelFacatory{ @Override public String createSteeringWheel() { System.out.println(&quot;宝马方向盘工厂生产方向盘&quot;); return &quot;宝马方向盘&quot;; } } //奔驰方向盘工厂 class MercedesSteeringWheelFacatory implements SteeringWheelFacatory{ @Override public String createSteeringWheel() { System.out.println(&quot;奔驰方向盘工厂生产方向盘&quot;); return &quot;奔驰方向盘&quot;; } } 第四步：测试类 //测试 public class AbstractFactoryTest { public static void main(String[] args) { // 宝马员工安装轮胎和方向盘 BMWCarFactory bmwCarFactory = new BMWCarFactory(); bmwCarFactory.installWheel(); bmwCarFactory.installSteeringWheel(); // 奔驰员工安装轮胎和方向盘 MercedesCarFacatory mercedesCarFacatory = new MercedesCarFacatory(); mercedesCarFacatory.installWheel(); mercedesCarFacatory.installSteeringWheel(); } } 测试结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[装饰模式详解]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190530_%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[装饰模式（Decorator Pattern）： 动态地给一个对象添加一些额外的职责。就扩展功能而言，Decorator模式比生成子类的方式更为灵活。（Attach additional responsibilities to an object dynamically. Decorators provides a flexible alternative to subclasses for extending functionality.） 装饰模式（Decorator）：也叫包装器模式（Wrapper），装饰模式是一种用于提代继承的技术，无需通过子类增加继承就能拓展对象的新功能；使用对象的关联关系提代继承关系，更加灵活，同时避免类型体系的快速膨胀。 开发中使用的场景： 典型应用场景就是：IO中输入流和输出流的设计； Swing包中图形界面构件功能； Servlet API 中提供了一个request对象的Decorator设计模式的默认实现类HttpServletRequestWrapper，HttpServletRequestWrapper类，增强了request对象的功能； Struts2中，request，response,session对象的处理 装饰模式的优缺点： 优点： 扩展对象功能，比继承灵活，不会导致类个数急剧增加； 可以对一个对象进行多次装饰，创造出不同行为的组合，得到功能更加强大的对象； 具体构建类和具体装饰类可以独立变化，用户可以根据需要自己增加新的具体构件子类和具体装饰子类。 缺点： 产生很多小对象。大量小对象占据内存，一定程度上影响性能； 装饰模式易于出错，调试排查比较麻烦。 装饰模式和桥接模式的区别：两个模式都是为了解决过多子类对象问题。但他们的诱因不一样。桥模式是对象自身现有机制沿着多个维度变化，是既有部分不稳定。装饰模式是为了增加新的功能。 案例：比如去吃小摊，主体有煎蛋，火腿片等等，每个配料的价格都不一样，不管你怎么配配料，最终价格是手抓饼基础价加上每一种所选配料价格的总和。小摊的价格单如下：用装饰者模式即可解决此问题，主体是手抓饼和肉夹馍，而配料则是装饰者：类图如下：功能的实现大概有以下5个步骤：步骤1：定义Component（被装饰对象的基类）抽象组件:定义一个抽象接口，来规范准备附加功能的类 /** * 定义一个对象接口，可以给这些对象动态地添加职责 */ public abstract class Pancake { public String desc = &quot;我不是一个具体的煎饼&quot;; public String getDesc(){ return desc; } public abstract double price(); } 步骤2：ConcreteComponent（具体被装饰对象）具体组件：将要被附加功能的类，实现抽象构件角色接口 手抓饼：`java/** 定义一个对象，可以给这个对象添加一些职责:手抓饼*/public class TornCake extends Pancake { public TornCake() { desc = &quot;手抓饼&quot;; } @Override public double price() { return 4; }} 2. 肉夹馍： ```java /** * 定义一个对象，可以给这个对象添加一些职责:肉夹馍 */ public class Roujiamo extends Pancake { public Roujiamo() { desc = &quot;肉夹馍&quot;; } @Override public double price() { return 6; } } 步骤3：Decorator（装饰者抽象类）抽象装饰者：维持一个指向Component实例的引用，并定义一个与Component接口一致的接口。 /** * 持有对具体构件角色的引用并定义与抽象构件角色一致的接口 */ public abstract class Condiment extends Pancake { public abstract String getDesc(); } 步骤4：ConcreteDecorator（具体装饰者）具体装饰： 实现抽象装饰者角色，负责对具体构件添加额外功能。 煎蛋：`java/** 具体的装饰对象，给内部持有的具体被装饰对象，增加具体的职责。 煎蛋：FiredEgg*/public class FiredEgg extends Condiment { private Pancake pancake; @Overridepublic String getDesc() { return pancake.getDesc()+&quot;,煎蛋&quot;; } @Overridepublic double price() { return pancake.price()+2; } public FiredEgg(Pancake pancake) {//构造器 this.pancake = pancake; }} 2. 火腿片 ```java /** * 具体的装饰对象，给内部持有的具体被装饰对象，增加具体的职责。 * 火腿片：Ham */ public class Ham extends Condiment { private Pancake pancake; @Override public String getDesc() { return pancake.getDesc() + &quot;, 火腿片&quot;; } @Override public double price() { return pancake.price() + 1.5; } public Ham(Pancake pancake) { this.pancake = pancake; } } 松肉 /** * 具体的装饰对象，给内部持有的具体被装饰对象，增加具体的职责。 * 松肉：MeatFloss */ public class MeatFloss extends Condiment { private Pancake pancake; @Override public String getDesc() { return pancake.getDesc()+&quot;,松肉&quot;; } @Override public double price() { return pancake.price()+1; } public MeatFloss(Pancake pancake) { this.pancake = pancake; } } 黄瓜丝 /** * 具体的装饰对象，给内部持有的具体被装饰对象，增加具体的职责。 * 黄瓜丝：Cucumber */ public class Cucumber extends Condiment { private Pancake pancake; @Override public String getDesc() { return pancake.getDesc()+&quot;,黄瓜丝&quot;; } @Override public double price() { return pancake.price()+0.5; } public Cucumber(Pancake pancake) { this.pancake = pancake; } } 步骤5：测试 /** * 测试类 * author https://blog.csdn.net/cui_yonghua/article/details/90512943 */ public class TestDecorator { public static void main(String[] args) { Pancake tornCake = new TornCake(); tornCake = new FiredEgg(tornCake); tornCake = new MeatFloss(tornCake); //手抓饼+煎蛋+松肉 的价格 System.out.println(String.format(&quot;%s ￥%s&quot;, tornCake.getDesc(), tornCake.price())); Pancake roujiamo = new Roujiamo(); roujiamo = new FiredEgg(roujiamo); roujiamo = new FiredEgg(roujiamo); roujiamo = new Ham(roujiamo); roujiamo = new MeatFloss(roujiamo); roujiamo = new Cucumber(roujiamo); //肉夹馍+其它 的价格 System.out.println(String.format(&quot;%s ￥%s&quot;, roujiamo.getDesc(), roujiamo.price())); } } 控制台打印结果如下：至此，装饰模式的介绍，应用场景，优缺点，以及一个完整案例已介绍完毕！ 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[请求头中需要加上Referer]]></title>
    <url>%2F2019%2F05%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2F%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%B8%AD%E9%9C%80%E8%A6%81%E5%8A%A0%E4%B8%8AReferer%2F</url>
    <content type="text"><![CDATA[请求头中需要加上Referer，才能访问到网页返回的数据：如网站：http://stock.cnstock.com/xt，代码如下： import requests import re import time import json from lxml import etree &quot;&quot;&quot; 网站：http://stock.cnstock.com/xt 请求头中需要加上Referer才能访问到数据 &quot;&quot;&quot; headers = { &quot;Referer&quot;: &quot;http://stock.cnstock.com/xt&quot; } url = &#39;http://app.cnstock.com/api/waterfall?callback=jQuery191019474229271592014_1581644154107&amp;colunm=qmt-smk_xt&amp;page=4&amp;num=10&amp;showstock=0&amp;_=1581644154111&#39; response = requests.get(url=url, headers=headers) print(response.text) # title = re.findall(r&#39;&lt;a class=(.*)a&gt;&#39;, response.text)]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NLP自然语言处理概述]]></title>
    <url>%2F2019%2F05%2Fdeep_learnning%2FNLP%2FNLP%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[一. 自然语言处理概述]]></content>
      <categories>
        <category>机器学习</category>
        <category>NLP</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[建造者模式详解]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190529_%E5%BB%BA%E9%80%A0%E8%80%85%2F</url>
    <content type="text"><![CDATA[建造者模式（Builder Pattern）： 将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。（Separate the construction of a complex object from its representation so that the same construction process can create different representations.） 建造模式的本质： List item分离了对象子组件的单独构造(由Builder来负责)和装配(由Director负责)。 从而可以构造出复杂的对象。这个模式适用于：某个对象的构建过程复杂的情况下使用。 由于实现了构建和装配的解耦。不同的构建器，相同的装配，也可以做出不同的对象；相同的构建器，不同的装配顺序也可以做出不同的对象。也就是实现了构建算法、装配算法的解耦，实现了更好的复用。 建造者模式可以将部件和其组装过程分开，一步一步创建一个复杂的对象。用户只需要指定复杂对象的类型就可以得到该对象，而无须知道其内部的具体构造细节。 应用场景： java中的StringBuilder类的append方法； SQL中的PreparedStatement； JDOM中，DomBuilder、SAXBuilder； 去肯德基，汉堡、可乐、薯条、炸鸡翅等是不变的，而其组合是经常变化的，生成出所谓的”套餐”； 一个对象有非常复杂的内部结构，想把复杂对象的创建和使用分离 建造者模式的优缺点： 优点： 封装性好，创建和使用分离；无需修改原有代码，符合“开闭原则”。 拓展性好，建造类之间独立，一定程度上解耦；代码解耦，模块化，方便维护。产品本身与创建过程解耦，可以使用相同的创建过程得到不同的产品。 缺点： 产品必须有共同点，使用范围有限。建造者模式创造出来的产品，其组成部分基本相同。如果产品之间的差异较大，则不适用这个模式。 若产品内部发生变化，建造者都要修改，成本较大；若内部变化复杂，会有很多的建造类。 与工厂模式的区别是：建造者模式更加关注与零件装配的顺序。 Mybatis中用到的建造者模式：SqlSessionFactoryBuilder、XMLConfigBuilder、XMLMapperBuilder、XMLStatementBuilder、CacheBuilder等。比如：XMLConfigBuilder读取配置文件构建出Configuration对象，然后SqlSessionFactoryBuilder使用Configuration对象作为参数，构建出SqlSessionFactory对象。原因：这么做的原因是Mybatis的初始化工作较复杂，不是一个构造函数就能包括的。所以采用了分层构建方法。例如Mybatis中极其重要的Configuration对象，它庞大且复杂，初始化比较麻烦，所以使用专门的建造者XMLConfigBuilder进行构建。 实例：比如：建造者模式可以用于描述KFC如何创建套餐：套餐是一个复杂对象，它一般包含主食（如汉堡、鸡肉卷等）和饮料（如果汁、可乐等）等组成部分，不同的套餐有不同的组成部分，而KFC的服务员可以根据顾客的要求，一步一步装配这些组成部分，构造一份完整的套餐，然后返回给顾客。 类图如下： 整个过程大致可以分为5步： 第一，定义Product（产品角色）： 一个具体的产品对象。 /** * 一个具体的产品对象，实体 */ public class Meal { private String food; private String drink; public String getFood() { return food; } public void setFood(String food) { this.food = food; } public String getDrink() { return drink; } public void setDrink(String drink) { this.drink = drink; } } 第二，定义Builder（抽象建造者）： 创建一个Product对象的各个部件指定的抽象接口。 /** * 抽象建造者 */ public abstract class MealBuilder { Meal meal = new Meal(); public abstract void buildFood(); public abstract void buildDrink(); public Meal getMeal(){ return meal; } } 第三，定义ConcreteBuilder（具体建造者）： 实现抽象接口，构建和装配各个部件。 /** * 具体建造者：A套餐 */ public class MealA extends MealBuilder{ public void buildDrink() { meal.setDrink(&quot;可乐&quot;); } public void buildFood() { meal.setFood(&quot;薯条&quot;); } } /** * 具体建造者：B套餐 */ public class MealB extends MealBuilder{ public void buildDrink() { meal.setDrink(&quot;柠檬果汁&quot;); } public void buildFood() { meal.setFood(&quot;鸡翅&quot;); } } 第四，定义Director（指挥者）： 构建一个使用Builder接口的对象。它主要是用于创建一个复杂的对象。它主要有两个作用，一是：隔离了客户与对象的生产过程，二是：负责控制产品对象的生产过程。 /** * 指挥者：构建一个使用Builder接口的对象 */ public class KFCServer { private MealBuilder mealBuilder; public KFCServer(MealBuilder mealBuilder) { //构造方法 this.mealBuilder = mealBuilder; } public Meal construct(){ //准备食物 mealBuilder.buildFood(); //准备饮料 mealBuilder.buildDrink(); //准备完毕，返回一个完整的套餐给客户 return mealBuilder.getMeal(); } } 第五，定义测试类： /** * 测试类 */ public class Test { public static void main(String[] args) { MealA a = new MealA();//创建套餐A对象 KFCServer waitera = new KFCServer(a);//准备套餐A的服务员 Meal mealA = waitera.construct();//获得套餐A System.out.print(&quot;套餐A的组成部分:&quot;); System.out.println(&quot;食物：&quot;+mealA.getFood()+&quot;； &quot;+&quot;饮品：&quot;+mealA.getDrink()); MealB b = new MealB(); KFCServer waiterb = new KFCServer(b); Meal mealB = waiterb.construct(); System.out.print(&quot;套餐B的组成部分:&quot;); System.out.println(&quot;食物：&quot;+mealB.getFood()+&quot;； &quot;+&quot;饮品：&quot;+mealB.getDrink()); } } 测试结果如下图所示： 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[观察者模式详解]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190528_%E8%A7%82%E5%AF%9F%E8%80%85%2F</url>
    <content type="text"><![CDATA[观察者模式（Observer Pattern）： 定义对象间的一种一对多的依赖关系，以便当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动刷新。（Define a one-to-many dependency between objects so that when one object changes state all its dependents are notified and updated automatically.） 简单来说，就是 发布-订阅模式，发布者发布信息，订阅者获取信息，订阅了就能收到信息，没订阅就收不到信息。比如：有一个微信公众号服务，不定时发布一些消息，关注公众号就可以收到推送消息，取消关注就收不到推送消息。 观察者模式的核心：此设计模式最重要的作用就是 解耦！将观察者与被观察者解耦，使得他们之间的依赖性更小 观察者模式的优缺点： 优点： 观察者和被观察者之间抽象耦合。观察者模式容易扩展，被观察者只持有观察者集合，并不需要知道具体观察者内部的实现。 对象之间的保持高度的协作。当被观察者发生变化时，所有被观察者都会通知到，然后做出相应的动作。 缺点： 如果观察者太多，被观察者通知观察者消耗的时间很多，影响系统的性能。 当观察者集合中的某一观察者错误时就会导致系统卡壳，因此一般会采用异步方式。 跟代理模式对比：观察者模式和代理模式主要区别在它们功能不一样，观察者模式强调的是被观察者反馈结果，而代理模式是同根负责做同样的事情。 开发中常见的场景： 聊天室程序的，服务器转发给所有客户端 京东商城中，群发某商品打折信息 Servlet中，监听器的实现 邮件订阅 网络游戏(多人联机对战)场景中，服务器将客户端的状态进行分发 案例：比如天气预报系统会不定时发布一些消息，关注的用户就可以收到推送消息，取消关注就收不到推送消息。 用观察者模式完成该案例，大概有以下五步： 第一，定义被观察者接口：也就是一个抽象主题，它把所有对观察者对象的引用保存在一个集合中，每个主题都可以有任意数量的观察者。抽象主题提供一个接口，可以增加和删除观察者角色。(也可以用抽象类来实现) /** * 抽象被观察者接口:声明了添加、删除、通知观察者方法 */ public interface Observed { public void registerObserver(Observer o); public void removeObserver(Observer o); public void notifyObserver(); } 第二，定义观察者接口：为所有的具体观察者定义一个接口，在得到主题通知时更新自己。 /** * 抽象观察者:定义了一个update()方法，当被观察者调用notifyObservers()方法时， * 观察者的update()方法会被回调。 */ public interface Observer { public void update(String message); } 第三，定义具体被观察者角色，也就是一个具体的主题，在集体主题的内部状态改变时，所有登记过的观察者发出通知。比如下面代码，实现了Observed接口，对Observed接口的三个方法进行了具体实现，同时有一个List集合，用以保存注册的观察者，等需要通知观察者时，遍历该集合即可。 /** *被观察者，也就是天气服务发布系统 *实现了Observerable接口，对Observerable接口的三个方法进行了具体实现 */ public class WeatherServer implements Observed { //注意到这个List集合的泛型参数为Observer接口， //设计原则：面向接口编程而不是面向实现编程 private List&lt;Observer&gt; list; private String message; public WeatherServer() { list = new ArrayList&lt;Observer&gt;(); } @Override public void registerObserver(Observer o) { list.add(o); } @Override public void removeObserver(Observer o) { if(!list.isEmpty()){ list.remove(o); } } @Override public void notifyObserver() { for(int i=0;i&lt;list.size();i++){ Observer observer = list.get(i); observer.update(message); } } public void setInfomation(String s) { this.message = s; System.out.println(&quot;天气系统更新消息： &quot; + s); //消息更新，通知所有观察者 notifyObserver(); } } 第四，定义具体观察者角色：实现抽象观察者角色所需要的更新接口，一边使本身的状态与系统的状态相协调 /** * 定义具体观察者：实现了update方法 */ public class User implements Observer{ private String name; private String message; public User(String name) { this.name = name; } @Override public void update(String message) { this.message = message; read(); } public void read() { System.out.println(name + &quot; 收到推送消息： &quot; + message); } } 第五，编写一个测试类：首先注册了三个用户，zhangsan、lisi、wangwu。公众号发布了一条消息 “ 今天有大雨！！！”，三个用户都收到了消息。若用户zhangsan不想看到天气预报推送的消息，于是取消订阅了，这时公众号又推送了一条消息 “ 明天是晴天~~~”，此时用户zhangsan已经收不到消息，其他用户还是正常能收到推送消息。 /** * 测试类 */ public class TestObserver { public static void main(String[] args) { WeatherServer server = new WeatherServer(); Observer userZhang = new User(&quot;zhangsan&quot;); Observer userLi = new User(&quot;lisi&quot;); Observer userWang = new User(&quot;wangwu&quot;); server.registerObserver(userZhang); server.registerObserver(userLi); server.registerObserver(userWang); server.setInfomation(&quot;今天有大雨！！！&quot;); System.out.println(&quot;----------------------------------------------&quot;); server.removeObserver(userZhang); server.setInfomation(&quot;明天是晴天~~~&quot;); } } 测试的结果如下图： 如果想看更多设计模式，可点此链接：更多设计模式]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[策略模式详解]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190527_%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[策略模式（Strategy Pattern）: 定义一系列的算法，把它们一个个封装起来，并且使他们可相互替换。本模式使得算法的变化可以独立于使用它的客户。(Define a family of algorithms,encapsulate each one and make them interchangeable.Strategy lets the algorithmvary independently from clients that use it.) 策略模式本质是：分离算法，选择实现 通俗来讲：策略模式对应于解决某一个问题的一个算法族，允许用户从该算法族中任选一个算法解决某一问题，同时可以方便的更换算法或者增加新的算法。并且由客户端决定调用哪个算法。 开发中常见的场景： JAVASE中GUI编程中，布局管理 ； Spring框架中，Resource接口，资源访问； javax.servlet.http.HttpServlet#service()； 如果一个方法有大量if else语句，可通过策略模式来消除掉； 一个系统，需要动态地在几个算法中选择一种，可用策略模式实现； 系统有很多类，而他们的区别仅仅在于他们的行为不同 策略模式的优点： 开闭原则； 避免使用多重条件转移语句； 提高了算法的保密性和安全性：可使用策略模式以避免暴露复杂的，与算法相关的数据结构。 策略模式体现了面向对象程序设计中非常重要的两个原则： 封装变化的概念。 编程中使用接口，而不是使用的是具体的实现类(面向接口编程)。 举例：我们就以Java中的TreeSet为例，TreeSet仅仅知道它只是接收一个Comparator这种接口类型，但是具体是哪种实现类，TreeSet并不关心，实现类在真正的传入TreeSet之前，TreeSet本身是不知道的，所以我们可以自己去实现Comparator接口，然后在实现类里面去封装好我们自己的规则（这里的规则你可以当做是算法），比如说我们要实现对一个集合的元素排序，但是到底是要升序排序还是降序排序，这个完全由我们来去控制，我们可以把这种变化的内容封装到自己的实现类中，真正运行的时候才知道具体的实现。比如： 下面用策略模式来实现一个简单的 加减乘除的功能：第一步：定义抽象策略角色，通常情况下使用接口或者抽象类去实现 /** * 为策略对象定义一个接口 */ public interface Strategy { //实现2个数可以计算 public int calc(int num1,int num2); } 第二步：定义具体策略角色（在此只定义加 减两种具体的策略） /** * 定义加法策略 */ public class AddStrategy implements Strategy { @Override public int calc(int num1, int num2) { //实现接口中的方法，完成两个数的和 return num1+num2; } } /** * 定义减法策略 */ public class SubStrategy implements Strategy { @Override public int calc(int num1, int num2) { //实现接口中的方法，完成两个数的差 return num1-num2; } } 第三步：定义环境角色，负责和具体的策略类交互，内部持有一个策略类的引用，给客户端调用。 /** * 环境角色：负责和具体的策略类交互 */ public class Environment { //持有对策略类的引用 private Strategy strategy; //有参的构造方法,通过构造器来注入 public Environment(Strategy strategy) { this.strategy = strategy; } public int calulate(int a,int b){ return strategy.calc(a,b); } } 第四步：测试 /** * 测试类 */ public class TestStrategy { public static void main(String[] args) { Environment e = new Environment(new AddStrategy());//传入具体的策略类 int result = e.calulate(5, 7); System.out.println(&quot;a+b=&quot;+result); Environment r = new Environment(new SubStrategy()); System.out.println(&quot;a-b=&quot;+r.calulate(9,3)); } } 控制台打印效果如图： 再比如：去买衣服 新客户小批量：原价，不打折 新客户大批量：打九折 老客户小批量：打八五折 老客户大批量：打8折 可用if else来实现，弊端也很明显，如代码注释中解释，代码参考如下： /** * 实现起来比较容易，符合一般开发人员的思路 * 假如，类型特别多，算法比较复杂时，整个条件语句的代码就变得很长，难于维护。 * 如果有新增类型，就需要频繁的修改此处的代码！ * 不符合开闭原则！ */ public class TestStrategy { public double getPrice(String type, double price) { if (type.equals(&quot;普通客户小批量&quot;)) { System.out.println(&quot;不打折,原价&quot;); return price; } else if (type.equals(&quot;普通客户大批量&quot;)) { System.out.println(&quot;打九折&quot;); return price * 0.9; } else if (type.equals(&quot;老客户小批量&quot;)) { System.out.println(&quot;打八五折&quot;); return price * 0.85; } else if (type.equals(&quot;老客户大批量&quot;)) { System.out.println(&quot;打八折&quot;); return price * 0.8; } return price; } } 下面用策略模式来实现去买衣服打折的问题：第一步：定义抽象策略角色，通常情况下使用接口或者抽象类去实现 public interface Strategy { public double getPrice(double standardPrice); } 第二步：定义具体策略角色 /** * 新客户小批量 */ public class NewCustomerFewStrategy implements Strategy { @Override public double getPrice(double standardPrice) { System.out.println(&quot;不打折，原价&quot;); return standardPrice; } } /** * 新客户大批量 */ public class NewCustomerManyStrategy implements Strategy { @Override public double getPrice(double standardPrice) { System.out.println(&quot;打九折&quot;); return standardPrice*0.9; } } /** * 老客户小批量 */ public class OldCustomerFewStrategy implements Strategy { @Override public double getPrice(double standardPrice) { System.out.println(&quot;打八五折&quot;); return standardPrice*0.85; } } /** * 老客户大批量 */ public class OldCustomerManyStrategy implements Strategy { @Override public double getPrice(double standardPrice) { System.out.println(&quot;打八折&quot;); return standardPrice*0.8; } } 第三步：定义环境角色，负责和具体的策略类交互，内部持有一个策略类的引用，给客户端调用。 /** * 负责和具体的策略类交互 * 这样的话，具体的算法和直接的客户端调用分离了，使得算法可以独立于客户端独立的变化。 * 如果使用spring的依赖注入功能，还可以通过配置文件，动态的注入不同策略对象，动态的切换不同的算法. */ public class Context { private Strategy strategy; //当前采用的算法对象 //可以通过构造器来注入 public Context(Strategy strategy) { super(); this.strategy = strategy; } //可以通过set方法来注入 public void setStrategy(Strategy strategy) { this.strategy = strategy; } public void pringPrice(double s){ System.out.println(&quot;您该报价：&quot;+strategy.getPrice(s)); } } 第四步：测试 /** * 测试类 */ public class Client { public static void main(String[] args) { Strategy s1 = new OldCustomerManyStrategy(); Context ctx = new Context(s1); ctx.pringPrice(500); } } 运行此类，控制台打印效果如图：至此，策略模式的解释 和2个详细的案例介绍已完毕~ 如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍 如果觉得写的不错 或者想了解更多，欢迎收藏和关注~~]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python定时任务汇总]]></title>
    <url>%2F2019%2F05%2Fpython%2Fcases%2F%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[使用schedulers模块# -*- coding: utf-8 -*- import os import datetime from apscheduler.schedulers.blocking import BlockingScheduler def run_fast(): &quot;&quot;&quot;运行增量程序&quot;&quot;&quot; # os.popen(&#39;scrapy crawl kuaixun_egs&#39;) print(&#39;111&#39;) def create_timing(): &quot;&quot;&quot;创建定时任务&quot;&quot;&quot; scheduler = BlockingScheduler() scheduler.add_job(run_fast, &#39;cron&#39;, second=f&quot;*/6&quot;, next_run_time=datetime.datetime.now()) # 6秒运行1次 scheduler.start() create_timing()]]></content>
      <categories>
        <category>python</category>
        <category>python案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[7种单例模式详解]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190524_%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[单例模式（Singleton Pattern）:保证一个类仅有一个对象，并提供一个访问它的全局访问点。(Ensure a class only has one instance,and provide a globe point of access to it.) 常见应用场景： Windows的Task Manager（任务管理器）就是很典型的单例模式 windows的Recycle Bin（回收站）也是典型的单例应用。在整个系统运行过程中，回收站一直维护着仅有的一个实例。 项目中，读取配置文件的类，一般也只有一个对象。没有必要每次使用配置文件数据，每次new一个对象去读取。 网站的计数器，一般也是采用单例模式实现，否则难以同步。 应用程序的日志应用，一般都何用单例模式实现，这一般是由于共享的日志文件一直处于打开状态，因为只能有一个实例去操作否则内容不好追加。 数据库连接池的设计一般也是采用单例模式，因为数据库连接是一种数据库资源。 操作系统的文件系统，也是大的单例模式实现的具体例子，一个操作系统只能有一个文件系统。 Application 也是单例的典型应用（Servlet编程中会涉及到） 在Spring中，每个Bean默认就是单例的，这样做的优点是Spring容器可以管理 在servlet编程中，每个Servlet也是单例 在spring MVC框架/struts1框架中，控制器对象也是单例 一个产品注册了一个商标，那么它就是单例的 单例模式的优点： 由于单例模式只生成一个实例，减少了系统性能开销，当一个对象的产生需要比较多的资源时，如读取配置、产生其他依赖对象时，则可以通过在应用启动 时直接产生一个单例对象，然后永久驻留内存的方式来解决 单例模式可以在系统设置全局的访问点，优化环共享资源访问，例如可以设计 一个单例类，负责所有数据表的映射处理 常见单例模式有以下7种： 1.饿汉式：先创建后使用，线程安全，占用内存。代码如下： /** * 饿汉式单例模式 * @author cui_yonghua https://blog.csdn.net/cui_yonghua/article/details/90512943 */ public class ClassA { //1.私有化构造方法，使得在类的外部不能调用此方法，限制产生多个对象 private ClassA(){ } //2.在类的内部创建一个类的实例 //类初始化时，立即加载这个对象（没有延时加载的优势）。加载类时，天然的是线程安全的！ private static final ClassA instance = new ClassA(); //3.对外部提供调用方法：将创建的对象返回，只能通过类来调用 //方法没有同步，调用效率高！ public static ClassA getInstance(){ return instance; } //测试 public static void main(String[] args) { ClassA a = ClassA.getInstance(); ClassA b = ClassA.getInstance(); System.out.println(a==b); } } 控制台输出的结果如下图： 2.懒汉式：用的时候才创建，线程不安全，加锁会影响效率。资源利用率高了，但是，每次调用getInstance()方法都要同步，并发效率较低。代码如下： /** * 懒汉式单例模式 * @author cui_yonghua https://blog.csdn.net/cui_yonghua/article/details/90512943 */ public class ClassB { //1.私有化构造方法，使得在类的外部不能调用此方法，限制产生多个对象 private ClassB(){ } //2.在类的内部创建一个类的实例 private static ClassB instance ; //3.对外部提供调用方法：将创建的对象返回，只能通过类来调用 public static synchronized ClassB getInstance(){ if(instance == null) { instance = new ClassB(); } return instance; } //测试 public static void main(String[] args) { ClassB a = ClassB.getInstance(); ClassB b = ClassB.getInstance(); System.out.println(a==b); } } 控制台输出的结果如下图： 3.静态内部类方式：也即饿汉式和懒汉式的组合，调用getInstance()方法时才创建，达到了类似懒汉式的效果，同时又是线程安全的。代码如下： /** * 使用静态内部类方式实现单例模式 * @author cui_yonghua https://blog.csdn.net/cui_yonghua/article/details/90512943 */ public class ClassC { //1.私有化构造方法，使得在类的外部不能调用此方法，限制产生多个对象 private ClassC(){ } //2.在类的内部创建一个类的实例 private static class Holder{ private static ClassC instance = new ClassC(); } //3.对外部提供调用方法：将创建的对象返回，只能通过类来调用 public static ClassC getInstance(){ return Holder.instance; } //测试 public static void main(String[] args) { ClassC a = ClassC.getInstance(); ClassC b = ClassC.getInstance(); System.out.println(a==b); } } 控制台输出的结果如下图： 4.枚举方法：线程安全，实现简单，调用效率高，不能延时加载。枚举本身就是单例模式，由JVM从根本上提供保障并且可以天然的防止反射和反序列化漏洞！需要继承的场景它就不适用了。枚举方式是Effective Java作者提倡的方式。代码如下： /** * 使用枚举方法实现单例模式 * @author cui_yonghua https://blog.csdn.net/cui_yonghua/article/details/90512943 */ public enum ClassD { //定义一个枚举的元素，它就代表了Singleton的一个实例。 INSTANCE; //对外部提供调用方法：将创建的对象返回，只能通过类来调用 public void otherMethod(){ //功能处理 } //测试 public static void main(String[] args) { ClassD a = ClassD.INSTANCE; ClassD b = ClassD.INSTANCE; System.out.println(a==b); } } 5.双重校验锁式：通常线程安全，加volatile的作用是禁止指令重排。（由于JVM底层内部模型原因，偶尔会出问题。不建议使用）代码如下： /** * 使用双重校验锁来实现单例模式 * @author cui_yonghua https://blog.csdn.net/cui_yonghua/article/details/90512943 */ public class ClassE { //1.私有化构造方法，使得在类的外部不能调用此方法，限制产生多个对象 private ClassE(){ } //2.在类的内部创建一个类的实例 private volatile static ClassE instance; //volatile作用：保证多线程可以正确处理instance //3.对外部提供调用方法：将创建的对象返回，只能通过类来调用 public static ClassE getInstance(){ if(instance == null){ //检查实例，如果为空，就进入同步代码块 synchronized (ClassE.class){ if(instance == null){ //再检查一次，仍未空才创建实例 instance = new ClassE(); } } } return instance; } //测试 public static void main(String[] args) { ClassE a = ClassE.getInstance(); ClassE b = ClassE.getInstance(); System.out.println(a==b); } } 控制台输出的结果如下图： 6.使用ThreadLocal实现：线程安全，ThreadLocal采用以空间换时间的方式，为每一个线程都提供一份变量，因此可以同时访问而互不影响。代码如下： /** * 使用ThreadLocal实现单例模式 * @author cui_yonghua https://blog.csdn.net/cui_yonghua/article/details/90512943 */ public class ClassF { //1.私有化构造方法，使得在类的外部不能调用此方法，限制产生多个对象 private ClassF(){ } //2.在类的内部创建一个类的实例 private static final ThreadLocal&lt;ClassF&gt; tls = new ThreadLocal&lt;ClassF&gt;(){ @Override protected ClassF initialValue(){ return new ClassF(); } }; //3.对外部提供调用方法：将创建的对象返回，只能通过类来调用 public static ClassF getInstance(){ return tls.get(); } //测试 public static void main(String[] args) { ClassF a = ClassF.getInstance(); ClassF b = ClassF.getInstance(); System.out.println(a==b); } } 控制台输出的结果如下图： 7.使用CAS锁来实现：（CAS锁（Compare and Swap）：比较并交换，是一种有名的无锁算法，属于乐观锁）。用CAS锁来实现单例模式是线程安全的，代码如下： /** * 使用CAS锁来实现单例模式 * @author cui_yonghua https://blog.csdn.net/cui_yonghua/article/details/90512943 */ public class ClassG { //1.私有化构造方法，使得在类的外部不能调用此方法，限制产生多个对象 private ClassG(){ } //2.在类的内部创建一个类的实例 private static final AtomicReference&lt;ClassG&gt; instance = new AtomicReference&lt;ClassG&gt;(); //3.对外部提供调用方法：将创建的对象返回，只能通过类来调用 public static final ClassG getInstance(){ for(;;){ ClassG current = instance.get(); if(current != null){ return current; } current = new ClassG(); if(instance.compareAndSet(null,current)){ return current; } } } //测试 public static void main(String[] args) { ClassG a = ClassG.getInstance(); ClassG b = ClassG.getInstance(); System.out.println(a==b); } } 控制台输出的结果如下图： 如果如果想了解更多设计模式，可点击：设计模式概述 以及 23种设计模式的介绍 如果觉得文章写的不错，也可以小小地打赏一下嘛~ 也期待合作，“码”上改变~]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java设计模式汇总]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F20190524_%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[设计模式概述（Design pattern）：设计模式：代表了最佳的实践，通常被有经验的面向对象的软件开发人员所采用。设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来的。 设计模式是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的，设计模式使代码编制真正工程化，设计模式是软件工程的基石，如同大厦的一块块砖石一样。项目中合理地运用设计模式可以完美地解决很多问题，每种模式在现实中都有相应的原理来与之对应，每种模式都描述了一个在我们周围不断重复发生的问题，以及该问题的核心解决方案，这也是设计模式能被广泛应用的原因。 GOF介绍:在 1994 年，由 Erich Gamma、Richard Helm、Ralph Johnson 和 John Vlissides 四人合著出版了一本名为 Design Patterns - Elements of Reusable Object-Oriented Software（中文译名：设计模式 - 可复用的面向对象软件元素） 的书，该书首次提到了软件开发中设计模式的概念。四位作者合称 GOF（四人帮，全拼 Gang of Four）。他们所提出的设计模式主要是基于以下的面向对象设计原则。 对接口编程而不是对实现编程。 优先使用对象组合而不是继承。 总的来说设计模式分为3大类： • 创建型模式（Creational Patterns）：（都是用来帮助我们创建对象的）这些设计模式提供了一种在创建对象的同时隐藏创建逻辑的方式，而不是使用 new 运算符直接实例化对象。这使得程序在判断针对某个给定实例需要创建哪些对象时更加灵活。主要包括： 单例模式（Singleton Pattern）:保证一个类仅有一个对象，并提供一个访问它的全局访问点。(Ensure a class only has one instance,and provide a globe point of access to it.) 详细单例模式介绍可点此链接：单例模式详解（附常见的7种单例模式源码） 用Python实现单例模式：用Python 实现单例模式 （Python经典编程案例） 工厂模式（Factory Pattern）：定义一个用于创建对象的接口，让子类决定将哪一个类实例化，FactoryMethod使一个类的实例化延迟到其子类。（Define an interface for creating anobject, but let subclasses decide which class to instantiate. Factory methodlets a class defer instantiation to subclasses.） 详细工厂模式介绍可点此链接：工厂模式详解 (附java语言源码) Python实现工厂模式：用python实现工厂设计模式（Python经典编程案例） 抽象工厂模式（Abstract Factory Pattern）：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们的具体类。（Provide an interface for creating families of related or dependent object without specifying their concrete classes.） 详细抽象工厂模式介绍可点此链接：抽象工厂模式详解 (附java语言源码) 建造者模式（Builder Pattern）：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。（Separate the construction of a complex object from its representation so that the same construction process can create different representations.） 详细建造者模式介绍可点此链接：建造者模式详解 (附java语言源码) 原型模式（Prototype Pattern）:用原型实例指定创建对象的种类，并且通过拷贝这个原型来创建新的对象。(Specify the kinds of objects to create using a prototypical instance, and create new objects by copying the prototype.) 详细原型模式介绍可点此链接：原型模式详解 (附java语言源码) •结构型模式（Structural Patterns）：这些设计模式关注类和对象的组合。继承的概念被用来组合接口和定义组合对象获得新功能的方式。主要包括： 适配器模式（Adapter Pattern）：将一个类的接口转换成客户希望的另一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。（Convert the interface of a class into another interface clients except. Adapter lets classes work together that couldn’t otherwise because of incompatible interfaces.） 详细适配器模式介绍可点此链接：适配器模式详解 (附java语言源码) 桥接模式（Bridge Pattern）：将抽象部分与它的实现部分分离，使他们都可以独立地变化。（Decouple an abstraction from its implementation so that the two can vary independently.） 详细桥接模式介绍可点此链接：桥接模式详解 (附java语言源码) 装饰模式（Decorator Pattern）：动态地给一个对象添加一些额外的职责。就扩展功能而言，Decorator模式比生成子类的方式更为灵活。（Attach additional responsibilities to an object dynamically. Decorators provides a flexible alternative to subclasses for extending functionality.） 详细装饰模式介绍可点此链接：装饰模式详解 (附java语言源码) 组合模式（Composite Pattern）：将对象组合成树形结构以表示“部分-整体”的层次结构。Composite 使得客户对单个对象和复合对象的使用具有一致性。（Compose object into tree structures torepresent part-whole hierarchy. Composite lets clients treat individual objectsand compositions of objects uniformly.） 详细组合模式介绍可点此链接：组合模式详解 (附java语言源码) 外观模式（Facade Pattern）：为子系统中的一组接口提供一个一致的接口。Façade模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。（Provide a unified interface to a set of interfaces in a subsystem. Façade defines a higher-level interface that makes the subsystem easier to use.） 详细外观模式介绍可点此链接：外观模式详解 (附java语言源码) 享元模式（Flyweight Pattern）：运用共享技术有效地支持大量细粒度的对象。（Use sharing to support large numbers offine-grained objects efficiently.） 详细享元模式介绍可点此链接：享元模式详解 (附java语言源码) 代理模式（Proxy Pattern）:为其他对象提供一个代理以控制对这个对象的访问。(Provide a surrogate or placeholder foranther object to control access to it.) 详细代理模式介绍可点此链接：代理模式详解 (附java语言源码) • 行为型模式（Behavioral Patterns）：这些设计模式特别关注对象之间的通信。主要包括： 模版方法模式（Template Pattern）:定义一个操作中的算法的骨架，而将一些步骤延迟到子类。TemplateMethod 使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。(Define the skeleton of an algorithm inan operation, deferring some steps to subclasses. Template Method lets subclasses redefine certain steps of an algorithm without changing thealgorithm’s structure.) 详细模版方法模式介绍可点此链接：模板方法模式详解 (附java语言源码) 命令模式（Command Pattern）：将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化，对请求排队或记录请求日志，以及支持可取消的操作。（Encapsulate a request as an object,thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations.） 详细命令模式介绍可点此链接：命令模式详解 (附java语言源码) 迭代器模式（Iterator Pattern）：提供一种方法顺序访问一个聚合对象中各个元素，而又不需暴露该对象的内部表示。（Provide a way to access the elements of an aggregate object sequentially without exposing its underlying representation.） 详细迭代器模式介绍可点此链接：迭代器模式详解 (附java语言源码) 观察者模式（Observer Pattern）：定义对象间的一种一对多的依赖关系，以便当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动刷新。（Define a one-to-many dependency between objects so that when one object changes state all its dependents are notified and updated automatically.） 详细观察者模式介绍可点此链接：观察者模式详解 (附java语言源码) 中介者模式（Mediator Pattern）：用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显示地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。（Define an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly and it lets you vary their interaction independently.） 详细中介者模式介绍可点此链接：中介者模式详解 (附java语言源码) 备忘录模式（Memento Pattern）：在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保持该状态，这样以后就可以将该对象恢复到保存的状态。（Without violating encapsulates, captureand externalize an object’s internal state so that the object can be restored to this state later.） 详细备忘录模式介绍可点此链接：备忘录模式详解 (附java语言源码) 解释器模式（Interpreter Pattern）：定义一个语言，定义它的文法的一种表示，并定义一个解释器，该解释器使用该表示来解释语言中的句子。（Given a language, define are presentation for its grammar along with an interpreter that uses there presentation to interpret sentences in the language.） 详细解释器模式介绍可点此链接：解释器模式详解 (没有附java语言源码) 状态模式（State Pattern）:允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它所属的类。(Allow an object to alter its behavior when its internal state changes. The object will appear to change its class.) 详细状态模式介绍可点此链接：状态模式详解 (附java语言源码) 策略模式（Strategy Pattern）:定义一系列的算法，把它们一个个封装起来，并且使他们可相互替换。本模式使得算法的变化可以独立于使用它的客户。(Define a family of algorithms,encapsulate each one and make them interchangeable. Strategy lets the algorithmvary independently from clients that use it.) 详细策略模式介绍可点此链接：策略模式详解（用java语言实现策略模式） 责任链模式（Chain of Responsibility Pattern）：为解除请求的发送者和接收者之间的耦合，而使多个对象都有机会处理这个请求。将这些对象连成一条链，并沿着这条链传递该请求，直到有对象处理它。（Avoid coupling the sender of a requestits receiver by giving more than one object a chance to handle the request.Chain the receiving objects and pass the request along the chain until anobject handles it.） 详细责任链模式介绍可点此链接：责任链模式详解 (附java语言源码) 访问者模式（Visitor Pattern）:表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素类别的前提下定义作用于这些元素的新操作。(Represent an operation to be performedon the elements of an object structure. Visitor lets you define a new operation without changing the classes of the elements on which it operates.) 详细访问者模式介绍可点此链接：访问者模式详解 (没有附java语言源码) 此外还有一些J2EE模式：这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。 MVC 模式（MVC Pattern） 业务代表模式（Business Delegate Pattern） 组合实体模式（Composite Entity Pattern） 数据访问对象模式（Data Access Object Pattern） 前端控制器模式（Front Controller Pattern） 拦截过滤器模式（Intercepting Filter Pattern） 服务定位器模式（Service Locator Pattern） 传输对象模式（Transfer Object Pattern） 下面用一个图片来整体描述一下设计模式之间的关系：谢谢]]></content>
      <categories>
        <category>java</category>
        <category>java设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java常用类库和API]]></title>
    <url>%2F2019%2F05%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2FJava%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%BA%93%E5%92%8CAPI%2F</url>
    <content type="text"><![CDATA[API (Application Programming Interface) : 应用程序编程接口 1. System类：代表程序所在系统，提供了对应的一些系统属性信息和系统操作。其类中的方法都是static，类名访问即可。 常用方法： currentTimeMillis()：返回当前时间的long型值。此long值是从1970年1月1日0点0分00秒开始到当前的毫秒数。此方法常用来计算时间差。 exit(int status) 用来结束正在运行的Java程序。参数传入一个数字即可。通常传入0记为正常状态，其他为异常状态 gc() 用来运行JVM中的垃圾回收器，完成内存中垃圾的清除。 getProperty(String key) 用来获取指定键(字符串名称)中所记录的系统属性信息 2. Calendar类：CalendarCalendar是日历类，替换了许多Date的方法。将所有可能用到的时间信息封装为静态成员变量，方便获取。另一方面，Calendar是抽象类，在创建对象时并非直接创建，而是通过静态方法创建，将语言敏感内容处理好，再返回子类对象 public static Calendar getInstance() //获取日期对象public int get(int field) //获取时间字段值，年，月，日，时，分，秒public void add(int field,int amount) //指定字段增加某public final void set(int field,int value)//设置指定字段的值public final Date getTime() //获取该日历对象转成的日期对象 3. Date类：用于创建Date对象，获取时间，格式化输出的时间。Date有很多构造函数，可以把毫秒值转化为日期对象。DateFormate是日期/时间格式化子类的抽象类，用来解析日期或时间。DateFormate是抽象类，一般需要使用子类SimpleDateFormat来创建对象 import java.util.*; import java.text.SimpleDateFormat; public class Test { public static void main(String[] args) { //创建日期格式化对象,在获取格式化对象时可以指定风格 SimpleDateFormat nowTime = new SimpleDateFormat(&quot;y年M月d日H时m分s秒&quot;); String str_time = nowTime.format(new Date()); System.out.println(&quot;当前时间为：&quot;+str_time); } } 测试结果如下图所示： 4. Math类：Math类是包含用于执行基本数学运算的方法的数学工具类，像初等函数、对数、平方根等。其所有方法均为静态方法，并且一般不会创建对象。比较常见的有： abs方法,结果都为正数; ceil方法，结果为比参数值大的最小整数的double值； floor方法，结果为比参数值小的最大整数的double值; max方法，返回两个参数值中较大的值; min方法，返回两个参数值中较小的值 pow方法，返回第一个参数的第二个参数次幂的值 round方法，返回参数值四舍五入的结果 random方法，产生一个大于等于0.0且小于1.0的double小数 接口 Appendable 能够被添加 char 序列和值的对象。如果某个类的实例打算接收取自 Formatter 的格式化输出，那么该类必须实现 Appendable 接口。 CharSequence 是 char 值的一个可读序列。此接口对许多不同种类的 char 序列提供统一的只读访问。char 值表示 Basic Multilingual Plane (BMP) 或代理项中的一个字符。 Cloneable 以指示 Object.clone() 方法可以合法地对该类实例进行按字段复制。 Runnable 接口应该由那些打算通过某一线程执行其实例的类来实现。类必须定义一个称为 run 的无参数方法。]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[flask案例_登录和遍历操作]]></title>
    <url>%2F2019%2F04%2Fpython%2Fweb%2Fflask_%E6%A1%88%E4%BE%8B_%E7%99%BB%E5%BD%95%2F</url>
    <content type="text"><![CDATA[flask案例_登录和遍历操作, 直接运行app.py文件： app.py# -*- encoding: utf-8 -*- from flask import Flask, render_template, request, redirect, session # 实例化一个app app = Flask(__name__) app.secret_key = &#39;aaa&#39; app.debug = True USER_DICT = { &#39;1&#39;: {&#39;name&#39;: &#39;大伟&#39;, &#39;age&#39;: 18}, &#39;2&#39;: {&#39;name&#39;: &#39;张三&#39;, &#39;age&#39;: 8}, &#39;3&#39;: {&#39;name&#39;: &#39;李四&#39;, &#39;age&#39;: 28} } # 创建视图函数，路由地址 @app.route(&#39;/login&#39;, methods=[&#39;GET&#39;, &#39;POST&#39;]) def login(): if request.method == &#39;GET&#39;: return render_template(&#39;login.html&#39;) user = request.form.get(&#39;user&#39;) # request.args 接收get方法的值 pwd = request.form.get(&#39;pwd&#39;) print(user, pwd) if user == &#39;tom&#39; and pwd == &#39;123&#39;: session[&#39;user_info&#39;] = user return redirect(&#39;/index&#39;) else: # 下面两种方式都可以 # return render_template(&#39;login.html&#39;, msg=&#39;用户名或密码错误&#39;) return render_template(&#39;login.html&#39;, **{&#39;msg&#39;: &#39;用户名或密码错误~&#39;}) @app.route(&#39;/logout&#39;) def logout(): del session[&#39;user_info&#39;] return redirect(&#39;/login&#39;) @app.route(&#39;/index&#39;) def index(): user_info = session.get(&#39;user_info&#39;) if not user_info: return redirect(&#39;/login&#39;) return render_template(&#39;index.html&#39;, user_dict=USER_DICT) @app.route(&#39;/detail&#39;) def detail(): user_info = session.get(&#39;user_info&#39;) if not user_info: return redirect(&#39;/login&#39;) uid = request.args.get(&#39;uid&#39;) info = USER_DICT.get(uid) return render_template(&#39;detail.html&#39;, info=info) if __name__ == &quot;__main__&quot;: app.run(host=&#39;0.0.0.0&#39;, port=9005) templates/login.html&lt;!DOCTYPE html&gt; &lt;html lang=&quot;zh-cn&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;休息系统-用户登录&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;form method=&quot;post&quot;&gt; &lt;input type=&quot;text&quot;, name=&quot;user&quot;&gt; &lt;input type=&quot;text&quot;, name=&quot;pwd&quot;&gt; &lt;input type=&quot;submit&quot;, value=&quot;提交&quot;&gt; {{msg}} &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; templates/index.html&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;ul&gt; {% for k,v in user_dict.items() %} {{v.name}}查看详细 {% endfor %} &lt;/ul&gt; &lt;/body&gt; &lt;/html&gt; templates/detail.html &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;详细信息&lt;/h2&gt; &lt;div&gt;{{ info.name }}&lt;/div&gt; &lt;div&gt;{{ info.age }}&lt;/div&gt; &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>python</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>flask</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见反爬虫策略及应对措施]]></title>
    <url>%2F2019%2F04%2Fspider%2F%E5%8F%8D%E7%88%AC%E9%80%86%E5%90%91%2F%E5%B8%B8%E8%A7%81%E5%8F%8D%E7%88%AC%E8%99%AB%E7%AD%96%E7%95%A5%E5%8F%8A%E5%BA%94%E5%AF%B9%E6%8E%AA%E6%96%BD%2F</url>
    <content type="text"><![CDATA[一般网站从三个方面反爬虫：请求网站访问时的请求头Headers，用户行为，目标网站的目录和数据加载方式。前两个方面反爬虫策略中最为常见的，而第三个则是应用ajax（异步加载）的方式加载页面目录或者内容，增大爬虫在对目标网站形成访问之后获取数据的难度。 但是仅仅检验一下请求头或者做几个ip限制显然无法达到网站运营者对anti-spam的要求，所以更进一步的反制措施也不少。最主要的大概有：Cookie限制，验证码反爬虫，以及Noscript。 1.1 通过Headers反爬虫从用户请求的Headers反爬虫是最常见的反爬虫策略。由于正常用户访问网站时是通过浏览器访问的，所以目标网站通常会在收到请求时校验Headers中的User-Agent字段，如果不是携带正常的User-Agent信息的请求便无法通过请求。还有一部分网站为了防盗链，还会校验请求Headers中的Referer字段。 如果遇到了这类反爬虫机制，可以直接在自己写的爬虫中添加Headers，将浏览器的User-Agent复制到爬虫的Headers中；另外通过对请求的抓包分析，将Referer值修改为目标网站域名，就能很好的绕过。 1.2 基于用户行为反爬虫还有一些网站会通过用户的行为来检测网站的访问者是否是爬虫，对访问频率进行限制，例如同一IP短时间内多次访问同一页面，或者同一账户短时间内多次进行相同操作。 大多数网站都是前一种情况，对于这种情况有两种策略： 1）使用代理ip。例如可以专门写一个在网上抓取可用代理ip的脚本，然后将抓取到的代理ip维护到代理池中供爬虫使用，当然，实际上抓取的ip不论是免费的还是付费的，通常的使用效果都极为一般，如果需要抓取高价值数据的话也可以考虑购买宽带adsl拨号的VPS，如果ip被目标网站被封掉，重新拨号即可。 2）降低请求频率。例如每个一个时间段请求一次或者请求若干次之后sleep一段时间。由于网站获取到的ip是一个区域网的ip，该ip被区域内的所有人共享，因此这个间隔时间并不需要特别长 对于第二种情况，可以在每次请求后随机间隔几秒再进行下一次请求。对于有逻辑漏洞的网站，可以通过请求几次，退出登录，重新登录，继续请求来绕过同一账号短时间内不能多次进行相同请求的限制，如果能有多个账户，切换使用，效果更佳。 1.3 动态页面的反爬虫上述的几种情况大多都是出现在静态页面，但是对于动态网页，我们需要爬取的数据是通过ajax请求得到，或者通过JavaScript生成的。首先用Firebug或者HttpFox对网络请求进行分析。如果能够找到ajax请求，也能分析出具体的参数和响应的具体含义，我们就能采用上面的方法，直接利用requests或者urllib2模拟ajax请求，对响应的json进行分析得到需要的数据。 能够直接模拟ajax请求获取数据固然是极好的，但是有些网站把ajax请求的所有参数全部加密了。我们根本没办法构造自己所需要的数据的请求。还有一些严防死守的网站，除了加密ajax参数，它还把一些基本的功能都封装了，全部都是在调用自己的接口，而接口参数都是加密的。 遇到这样的网站，我们就不能用上面的方法了，通过selenium+phantomJS框架，调用浏览器内核，并利用phantomJS执行js来模拟人为操作以及触发页面中的js脚本。从填写表单到点击按钮再到滚动页面，全部都可以模拟，不考虑具体的请求和响应过程，只是完完整整的把人浏览页面获取数据的过程模拟一遍。用这套框架几乎能绕过大多数的反爬虫，因为它不是在伪装成浏览器来获取数据（上述的通过添加 Headers一定程度上就是为了伪装成浏览器），它本身就是浏览器，phantomJS就是一个没有界面的浏览器，只是操控这个浏览器的不是人。 1.4 Cookie限制（登陆限制）和Headers校验的反爬虫机制类似，当用户向目标网站发送请求时，会再请求数据中携带Cookie，网站通过校验请求信息是否存在Cookie，以及校验Cookie的值来判定发起访问请求的到底是真实的用户还是爬虫，第一次打开网页会生成一个随机cookie，如果再次打开网页这个Cookie不存在，那么再次设置，第三次打开仍然不存在，这就非常有可能是爬虫在工作了。 而Cookie校验和Headers的区别在于，用户发送的Headers的内容形式是固定的可以被轻易伪造的，Cookie则不然。原因是由于，我们在分析浏览器请求网站访问的过程中所分析得到的Cookie往往都是经过相关的js等过程已经改变了domain的Cookie，假如直接手动修改爬虫携带的Cookie去访问对应的网页，由于携带的Cookie已经是访问之后的domain而不是访问之前的domain，所以是无法成功模拟整个流程的，这种情况必然导致爬虫访问页面失败。 分析Cookie，可能会携带大量的随机哈希字符串，或者不同时间戳组合的字符串，并且会根据每次访问更新domain的值。对这种限制，首先要在对目标网站抓包分析时，必须先清空浏览器的Cookie，然后在初次访问时，观察浏览器在完成访问的过程中的请求细节（通常会在这一过程中发生若干次301/302转跳，每次转跳网站返回不同的Cookie给浏览器然后在最后一次转跳中请求成功）。在抓包完成对请求细节的分析之后，再在爬虫上模拟这一转跳过程，然后截取Cookie作为爬虫自身携带的Cookie，这样就能够绕过Cookie的限制完成对目标网站的访问了。 1.5 验证码限制这种验证码可以通过OCR技术进行简单的图像识别破解，但是现在来说，验证码的干扰线，噪点已经多到肉眼都无法轻易识别的地步。所以目前而言，由于OCR技术发展不力，验证码技术反而成为了许多网站最有效的手段之一。 验证码除了识别难题之外，还有另外一个值得注意的问题。现在有许多网站都在使用第三方验证码服务。当用户打开目标网站的登录页面时，登录页面显示的验证码是从第三方(比如阿里云)提供的链接加载的，这时候我们在模拟登录的时候，需要多一步从网页提供的第三方链接抓取验证码的步骤，而这一步常常暗含着陷阱。以阿里云提供的验证码服务为例，登录页面的源代码会显示阿里云提供的第三方链接，但是当匹配出这个链接进行验证码抓取的时候我们会发现验证码是无效的。当仔细分析抓包的请求数据之后，发现正常浏览器在请求验证码时，会多带一个ts参数，而这个参数是由当前时间戳产生的，但是并不是完全的时间戳，而是时间戳四舍五入保留九位数字之后的字符串，对待这种第三方服务只能是细心加运气，三分天注定七分不信命来猜一发了。还有另外一种特殊的第三方验证码，所谓的拖动验证，只能说，互联网创业有三种模式2b，2c，2vc。]]></content>
      <categories>
        <category>爬虫</category>
        <category>反爬逆向</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>反爬逆向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python时间处理]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190313_%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[PyInstaller使用（简单） 秒级时间戳：10位数字；毫秒级时间戳：13位数字；微秒级时间戳：16位数字； datetimedatetime是Python处理日期和时间的标准库。 datetime表示的时间需要时区信息才能确定一个特定的时间，否则只能视为本地时间。 如果要存储datetime，最佳方法是将其转换为timestamp再存储，因为timestamp的值与时区完全无关。 from datetime import datetime, timedelta, timezone # 1. 获取当前日期和时间和指定日期和时间 now = datetime.now() # 获取当前datetime print(now, type(now)) dt = datetime(2019, 4, 19, 12, 20) # 用指定日期时间创建datetime print(dt) # 2. datetime转换为timestamp dt_stamp = dt.timestamp() print(dt_stamp) # timestamp转换为datetime print(datetime.fromtimestamp(dt_stamp)) print(datetime.utcfromtimestamp(dt_stamp)) # UTC时间 # 3. str转换为datetime cday = datetime.strptime(&#39;2019-6-1 18:19:59&#39;, &#39;%Y-%m-%d %H:%M:%S&#39;) print(cday) # datetime转换为str print(now.strftime(&#39;%a, %b %d %H:%M&#39;)) # 4. datetime加减 ten_hour = now + timedelta(hours=2) print(ten_hour) print(now - timedelta(days=1)) print(now + timedelta(days=2, hours=12)) # 5. 本地时间转换为UTC时间 # 北京时间是UTC+8:00时区的时间，而UTC时间指UTC+0:00时区的时间 tz_utc_8 = timezone(timedelta(hours=8)) # 创建时区UTC+8:00 dt = now.replace(tzinfo=tz_utc_8) # 强制设置为UTC+8:00 print(dt) # 6. 时区转换 # 可以先通过utcnow()拿到当前的UTC时间，再转换为任意时区的时间： utc_dt = datetime.utcnow().replace(tzinfo=timezone.utc) print(utc_dt) # astimezone()将转换时区为北京时间: bj_dt = utc_dt.astimezone(timezone(timedelta(hours=8))) print(bj_dt) import datetime for i in range(1095, 1, -1): # start_date = &#39;{:%Y-%m-%d}&#39;.format(datetime.date.today() - datetime.timedelta(days=i)) end_date = &#39;{:%Y-%m-%d}&#39;.format(datetime.date.today() - datetime.timedelta(days=i-1)) duration = &#39;{} ~ {}&#39;.format(start_date, end_date) print(start_date) print(end_date) print(duration) date1 = datetime.datetime(2012, 3, 1, 00, 00, 00) timestamp = time.mktime(date1.timetuple()) print(&#39;格式化的时间转成时间戳：&#39;, timestamp) 练习假设你获取了用户输入的日期和时间如2015-1-21 9:01:30，以及一个时区信息如UTC+5:00，均是str，请编写一个函数将其转换为timestamp： import re from datetime import datetime, timezone, timedelta def to_timestamp(dt_str, tz_str): t = datetime.strptime(dt_str, &#39;%Y-%m-%d %H:%M:%S&#39;) tz = re.match(r&#39;\w{3}([\+\-]\d{1,2})\:\d{2}&#39;, tz_str).group(1) tz = int(tz) t_utc = t.replace(tzinfo=timezone(timedelta(hours=tz))) print(t_utc.timestamp()) return t_utc.timestamp() t1 = to_timestamp(&#39;2015-6-1 08:10:30&#39;, &#39;UTC+7:00&#39;) assert t1 == 1433121030.0, t1 t2 = to_timestamp(&#39;2015-5-31 16:10:30&#39;, &#39;UTC-09:00&#39;) assert t2 == 1433121030.0, t2 print(&#39;ok&#39;) ========================== 案例1：打印昨天的时间： # 引入 datetime 模块 import datetime def getYesterday(): today = datetime.date.today() oneday = datetime.timedelta(days=1) yesterday = today - oneday return yesterday # 输出 print(getYesterday()) # 2019-07-22 案例2：格式化时间 import time # 格式化成2019-07-23 11:45:39形式 print(time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())) # 格式化成Sat Mar 28 22:24:24 2016形式 print(time.strftime(&quot;%a %b %d %H:%M:%S %Y&quot;, time.localtime())) # 将格式字符串转换为时间戳 a = &quot;Sat Mar 28 22:24:24 2019&quot; print(time.mktime(time.strptime(a, &quot;%a %b %d %H:%M:%S %Y&quot;))) 执行结果如下图： 案例3：输出某月的日历 import calendar cal = calendar.month(2019, 7) print(&quot;以下输出2016年1月份的日历:&quot;) print(cal) 执行结果如下图： 案例4：将字符串的时间转换为时间戳 import time a1 = &quot;2019-5-10 23:40:00&quot; # 先转换为时间数组 timeArray = time.strptime(a1, &quot;%Y-%m-%d %H:%M:%S&quot;) # 转换为时间戳 timeStamp = int(time.mktime(timeArray)) print(timeStamp) # 格式转换 - 转为 / a2 = &quot;2019-5-10 23:40:00&quot; # 先转换为时间数组,然后转换为其他格式 timeArray = time.strptime(a2, &quot;%Y-%m-%d %H:%M:%S&quot;) otherStyleTime = time.strftime(&quot;%Y/%m/%d %H:%M:%S&quot;, timeArray) print(otherStyleTime) 执行结果如下图: 案例5：获取几天前的时间 import time import datetime # 先获得时间数组格式的日期 threeDayAgo = (datetime.datetime.now() - datetime.timedelta(days=3)) # 转换为时间戳 timeStamp = int(time.mktime(threeDayAgo.timetuple())) # 转换为其他字符串格式 otherStyleTime = threeDayAgo.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) print(otherStyleTime) 执行结果如下图： 案例6：将时间戳转换为指定日期 import time # 获得当前时间时间戳 now = int(time.time()) #转换为其他日期格式,如:&quot;%Y-%m-%d %H:%M:%S&quot; timeArray = time.localtime(now) otherStyleTime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, timeArray) print(otherStyleTime) 执行结果如下图： import datetime # 获得当前时间 now = datetime.datetime.now() # 转换为指定的格式 otherStyleTime = now.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) print(otherStyleTime) 执行结果如下图： 指定时间戳： import time timeStamp = 1556502800 timeArray = time.localtime(timeStamp) otherStyleTime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, timeArray) print(otherStyleTime) import datetime timeStamp = 1557802800 dateArray = datetime.datetime.utcfromtimestamp(timeStamp) otherStyleTime = dateArray.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) print(otherStyleTime) 时间转换from datetime import datetime, timedelta aa = &#39;2020-10-28T01:14:42.000Z&#39; # aa= &#39;2018-08-06T10:00:00.000Z&#39; date_ = datetime.strptime(aa, &quot;%Y-%m-%dT%H:%M:%S.%fZ&quot;) #local_time = 2018-08-06 18:00:00 local_time = date_ + timedelta(hours=8) print(local_time) # 输出: 2020-10-28 09:14:42 gmt时间import time print(time.strftime(&quot;%Y-%m-%d %X&quot;,time.localtime())) from datetime import datetime GMT_FORMAT = &#39;%a %b %d %Y %H:%M:%S GMT 0800 (中国标准时间)&#39; print(datetime.utcnow().strftime(GMT_FORMAT)) # Thu Nov 12 2020 09:50:44 GMT 0800 (中国标准时间) # Thu Nov 12 2020 17:41:41 GMT 0800 (中国标准时间) # Fri Nov 13 2020 15:31:53 GMT 0800 (中国标准时间)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python打包]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190311_%E6%89%93%E5%8C%85%2F</url>
    <content type="text"><![CDATA[PyInstaller使用（简单） 安装 : pip install pyinstaller==3.4 安装即可 PyInstaller 命令基本语法： pyinstaller [options] script[script ...]|specfile pyinstaller test.py 参数及定义`常规-h 帮助-v 版本–distpath DIR 可执行文件生成目录 默认生成于脚本文件同级的dist目录下–workpath WORKPATH 临时文件目录，包括 .log,.pyz，默认有./build–y 无需确认备选输出目录–clean 构建结束后清除pyinstaller生成的缓存并删除临时文件–log-level LEVEL 构建时控制台输出日志级别，可选项：TRACE,DEBUG,INFO,WARN,ERROR,CRITICAL 默认为INFO 用于构造的参数-D 构造为包含可执行文件的文件夹（所有依赖及数据均存在于文件夹中）-F 构造为单个可执行文件–specpath DIR 存储构造sepc文件的目录-n NAME 定义生成的应用和spec文件的名字 默认为第一个py文件的文件名 寻找依赖及搜索的路径–add-data&lt;SRC;DEST or SRC:DEST&gt; 附加的需要添加进可执行文件的非二进制文件或文件夹，可多次使用（可以用于包含需要使用的数据文件）–add-binary&lt;SRC;DEST or SRC:DEST&gt; 附加的需要添加进可执行文件的二进制文件，可多次使用-p DIR 搜索导入模块的路径，可使用多个路径以搜索引入的模块，以’;’分隔或多次使用该参数。–hidden-import MODULENAME 标明并未显式于脚本中标识的引入模块–exclude-module EXCLUDES 可选的，需要忽略的模块或包（即使没有找到）–key KEY 加密二进制的密钥` 基本用法 假定Python项目的主函数入口为main.py,则打包命令如下 pyinstaller -F main.py -F参数大小写敏感 指定搜索路径，若有多个模块搜索路径需要指明 pyinstaller -F main.py -p /usr/local/python3/bin/python3 -p ./package 文档链接 https://media.readthedocs.org/pdf/pyinstaller/stable/pyinstaller.pdf]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python发布模块]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190310_%E5%8F%91%E5%B8%83%E6%A8%A1%E5%9D%97%2F</url>
    <content type="text"><![CDATA[升级模块：pip install –upgrade 库名 一. 让别人pip install官方参考：https://packaging.python.org/tutorials/packaging-projects/ 参考文章：https://mp.weixin.qq.com/s/IZJfkfgDWSGNhuUJn6wRoQ 我的：https://pypi.org/ cuiyonghua cui1-A! https://github.com/wistbean/learn_python3_spider /Users/cuiyonghua/Desktop/my_work_files/softwares/mongodb/mongodata/etc/mongo.conf init from __future__ import absolute_import from .xiaocui import * name = &quot;xiaocui&quot; xiaocui.py # -*- coding: utf-8 -*- def output(): print(&#39;hello,这是&#39;) def output1(data): print(&#39;hello,这是：{}&#39;.format(data)) def susu(susu): print(&#39;susu:{}&#39;.format(susu)) setup.py: 这个文件主要是要告诉 setuptools ，我们的包里面的一些信息，比如名称啊，版本号啊，作者，邮箱等等 # -*- coding: utf-8 -*- import setuptools with open(&quot;README.md&quot;, &quot;r&quot;) as fh: long_description = fh.read() setuptools.setup( name=&quot;xiaocui&quot;, version=&quot;0.0.1&quot;, author=&quot;xiaocui&quot;, author_email=&quot;cui_yonghua6@163.com&quot;, description=&quot;This is an cui package, fa li wu bian&quot;, long_description=long_description, long_description_content_type=&quot;text/markdown&quot;, keywords=&quot;hello world example examples&quot;, url=&quot;https://github.com/cuiyonghua6/cui_package&quot;, packages=setuptools.find_packages(), classifiers=[ &#39;Programming Language :: Python :: 3&#39;, &#39;License :: OSI Approved :: MIT License&#39;, &#39;Operating System :: OS Independent&#39;, ] ) LICENCE MIT License Copyright (c) 2020 cuiyonghua6 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. python3 -m pip install –user –upgrade setuptools wheel python3 setup.py sdist bdist_wheel https://pypi.org/account/register/ https://test.pypi.org/account/register/ python3 -m pip install –user –upgrade twine (apt install twine)python3 -m twine upload dist/* 二. setup.py 参数解释--name 包名称 --version (-V) 包版本 --author 程序的作者 --author_email 程序的作者的邮箱地址 --maintainer 维护者 --maintainer_email 维护者的邮箱地址 --url 程序的官网地址 --license 程序的授权信息 --description 程序的简单描述 --long_description 程序的详细描述 --platforms 程序适用的软件平台列表 --classifiers 程序的所属分类列表 --keywords 程序的关键字列表 --packages 需要处理的包目录（包含__init__.py的文件夹） --py_modules 需要打包的python文件列表 --download_url 程序的下载地址 --cmdclass --data_files 打包时需要打包的数据文件，如图片，配置文件等 --scripts 安装时需要执行的脚步列表 --package_dir 告诉setuptools哪些目录下的文件被映射到哪个源码包。一个例子：package_dir = {&#39;&#39;: &#39;lib&#39;}，表示“root package”中的模块都在lib 目录中。 --requires 定义依赖哪些模块 --provides定义可以为哪些模块提供依赖 --find_packages() 对于简单工程来说，手动增加packages参数很容易，刚刚我们用到了这个函数，它默认在和setup.py同一目录下搜索各个含有 __init__.py的包。 其实我们可以将包统一放在一个src目录中，另外，这个包内可能还有aaa.txt文件和data数据文件夹。另外，也可以排除一些特定的包 find_packages(exclude=[&quot;*.tests&quot;, &quot;*.tests.*&quot;, &quot;tests.*&quot;, &quot;tests&quot;])--install_requires = [&quot;requests&quot;] 需要安装的依赖包 --entry_points 动态发现服务和插件，下面详细讲 下列entry_points中： console_scripts 指明了命令行工具的名称；在“redis_run = RedisRun.redis_run:main”中，等号前面指明了工具包的名称，等号后面的内容指明了程序的入口地址。 entry_points={&#39;console_scripts&#39;: [ &#39;redis_run = RedisRun.redis_run:main&#39;, ]} 三. 示例代码： from os import path as os_path from setuptools import setup import haipproxy this_directory = os_path.abspath(os_path.dirname(__file__)) # 读取文件内容 def read_file(filename): with open(os_path.join(this_directory, filename), encoding=&#39;utf-8&#39;) as f: long_description = f.read() return long_description # 获取依赖 def read_requirements(filename): return [line.strip() for line in read_file(filename).splitlines() if not line.startswith(&#39;#&#39;)] setup( name=&#39;haipproxy&#39;, # 包名 python_requires=&#39;&gt;=3.4.0&#39;, # python环境 version=haipproxy.__version__, # 包的版本 description=&quot;High aviariable proxy pool client for crawlers.&quot;, # 包简介，显示在PyPI上 long_description=read_file(&#39;README.md&#39;), # 读取的Readme文档内容 long_description_content_type=&quot;text/markdown&quot;, # 指定包文档格式为markdown author=&quot;Resolvewang&quot;, # 作者相关信息 author_email=&#39;resolvewang@foxmail.com&#39;, url=&#39;https://github.com/SpiderClub/haipproxy&#39;, # 指定包信息，还可以用find_packages()函数 packages=[ &#39;haipproxy&#39;, &#39;haipproxy.client&#39;, &#39;haipproxy.utils&#39; ], install_requires=read_requirements(&#39;requirements.txt&#39;), # 指定需要安装的依赖 include_package_data=True, license=&quot;MIT&quot;, keywords=[&#39;proxy&#39;, &#39;client&#39;, &#39;haipproxy&#39;], classifiers=[ &#39;Intended Audience :: Developers&#39;, &#39;License :: OSI Approved :: MIT License&#39;, &#39;Natural Language :: English&#39;, &#39;Programming Language :: Python :: 3.4&#39;, &#39;Programming Language :: Python :: 3.5&#39;, &#39;Programming Language :: Python :: 3.6&#39;, ],)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python虚拟环境]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190306_python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[source activate conda_venvconda activate conda_venv source deactivate conda虚拟环境1、首先在所在系统中安装Anaconda。可以打开命令行输入conda -V检验是否安装以及当前conda的版本。 2、conda常用的命令。 1）conda list 查看安装了哪些包。 2）conda env list 或 conda info -e 查看当前存在哪些虚拟环境 3）conda update conda 检查更新当前conda 3、创建python虚拟环境。 使用 conda create -n your_env_name python=X.X（2.7、3.6等)命令创建python版本为X.X、名字为your_env_name的虚拟环境。your_env_name文件可以在Anaconda安装目录envs文件下找到。 4、使用激活(或切换不同python版本)的虚拟环境。 打开命令行输入python --version可以检查当前python的版本。 使用如下命令即可 激活你的虚拟环境(即将python的版本改变)。 Linux: source activate your_env_name(虚拟环境名称) Windows: activate your_env_name(虚拟环境名称) 这是再使用python –version可以检查当前python版本是否为想要的。 5、对虚拟环境中安装额外的包。 使用命令conda install -n your_env_name [package]即可安装package到your_env_name中 6、关闭虚拟环境(即从当前环境退出返回使用PATH环境中的默认python版本)。 使用如下命令即可。 Linux: source deactivate Windows: deactivate 7、删除虚拟环境。 使用命令conda remove -n your_env_name(虚拟环境名称) –all， 即可删除。 8、删除环境中的某个包。 使用命令conda remove –name your_env_name package_name 即可。]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python图形界面]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190305_%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[1. 用python画出玫瑰图案 import turtle as t # 定义一个曲线绘制函数 def DegreeCurve(n, r, d=1): for i in range(n): t.left(d) t.circle(r, abs(d)) # 初始位置设定 s = 0.2 # size t.setup(450*5*s, 750*5*s) t.pencolor(&quot;black&quot;) t.fillcolor(&quot;red&quot;) t.speed(100) t.penup() t.goto(0, 900*s) t.pendown() # 绘制花朵形状 t.begin_fill() t.circle(200*s,30) DegreeCurve(60, 50*s) t.circle(200*s,30) DegreeCurve(4, 100*s) t.circle(200*s,50) DegreeCurve(50, 50*s) t.circle(350*s,65) DegreeCurve(40, 70*s) t.circle(150*s,50) DegreeCurve(20, 50*s, -1) t.circle(400*s,60) DegreeCurve(18, 50*s) t.fd(250*s) t.right(150) t.circle(-500*s,12) t.left(140) t.circle(550*s,110) t.left(27) t.circle(650*s,100) t.left(130) t.circle(-300*s,20) t.right(123) t.circle(220*s,57) t.end_fill() # 绘制花枝形状 t.left(120) t.fd(280*s) t.left(115) t.circle(300*s,33) t.left(180) t.circle(-300*s,33) DegreeCurve(70, 225*s, -1) t.circle(350*s,104) t.left(90) t.circle(200*s,105) t.circle(-500*s,63) t.penup() t.goto(170*s,-30*s) t.pendown() t.left(160) DegreeCurve(20, 2500*s) DegreeCurve(220, 250*s, -1) # 绘制一个绿色叶子 t.fillcolor(&#39;green&#39;) t.penup() t.goto(670*s,-180*s) t.pendown() t.right(140) t.begin_fill() t.circle(300*s,120) t.left(60) t.circle(300*s,120) t.end_fill() t.penup() t.goto(180*s,-550*s) t.pendown() t.right(85) t.circle(600*s,40) # 绘制另一个绿色叶子 t.penup() t.goto(-150*s,-1000*s) t.pendown() t.begin_fill() t.rt(120) t.circle(300*s,115) t.left(75) t.circle(300*s,100) t.end_fill() t.penup() t.goto(430*s,-1070*s) t.pendown() t.right(30) t.circle(-600*s,35) t.done() 2. 用Python画出奥运五环图import turtle turtle.width(10) turtle.color(&quot;blue&quot;) turtle.circle(50) turtle.color(&quot;black&quot;) turtle.penup() turtle.goto(120, 0) turtle.pendown() turtle.circle(50) turtle.color(&quot;red&quot;) turtle.penup() turtle.goto(240, 0) turtle.pendown() turtle.circle(50) turtle.color(&quot;yellow&quot;) turtle.penup() turtle.goto(60, -50) turtle.pendown() turtle.circle(50) turtle.color(&quot;green&quot;) turtle.penup() turtle.goto(180, -50) turtle.pendown() turtle.circle(50) 3. 绘制多个同心圆代码如下： import turtle t = turtle.Pen() my_colors = (&quot;red&quot;, &quot;green&quot;, &quot;yellow&quot;, &quot;black&quot;) t.width(4) t.speed(1) for i in range(10): # 0 1 2 3 4 t.penup() t.goto(0, -i*10) # 0, -100,-200,-300,-400 t.pendown() t.color(my_colors[i%len(my_colors)]) t.circle(15+i*10) # 100,200,300, 400,, 500 turtle.done() # 程序执行完，窗口仍然在 执行结果如下图： 4. 用Python 绘制 18*18 棋盘import turtle width = 30 num = 18 x1 = [(-400, 400), (-400+width*num, 400)] y1 = [(-400, 400), (-400, 400-width*num)] t = turtle.Pen() t.speed(10) for i in range(0, 19): t.penup() t.goto(x1[0][0], x1[0][1]-30*i) t.pendown() t.goto(x1[1][0], x1[1][1]-30*i) for i in range(0, 19): t.penup() t.goto(y1[0][0]+30*i,y1[0][1]) t.pendown() t.goto(y1[1][0]+30*i,y1[1][1]) t.hideturtle() # 隐藏画笔 turtle.done() # 保证运行窗口不被自动关闭]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python操作excel]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190304_%E6%93%8D%E4%BD%9Cexcel%2F</url>
    <content type="text"><![CDATA[excel格式:https://www.cnblogs.com/fkissx/p/5617630.html 1. 类库xlwt/xlrd 用于生成和读取比较老的excel文件，比如xls格式，最大限制为65535行； 文档地址：https://xlwt.readthedocs.io/en/latest/index.html columns = [&#39;日期&#39;, &#39;PV&#39;, &#39;UV&#39;, &#39;name&#39;] datas = [ [&#39;2019-07-15&#39;, &#39;16000&#39;, &#39;150&#39;, &#39;Andy&#39;], [&#39;2020-02-15&#39;, &#39;9000&#39;, &#39;70&#39;, &#39;李&#39;], [&#39;2015-07-15&#39;, &#39;6000&#39;, &#39;50&#39;, &#39;张&#39;], [&#39;2020-01-15&#39;, &#39;12000&#39;, &#39;80&#39;, &#39;刘&#39;], ] import xlwt workbook = xlwt.Workbook(encoding=&#39;utf-8&#39;) sheet = workbook.add_sheet(&#39;puvn_sheet&#39;) # 写入标题 for col, columns in enumerate(columns): sheet.write(0, col, columns) # 写入每一行 for row, data in enumerate(datas): for col, columns_data in enumerate(data): sheet.write(row + 1, col, columns_data) workbook.save(&#39;puvn_sheet.xls&#39;) 2. 类库openpyxl 用于生成2010之后新的excel文件，比如xlsx格式； 文档地址：https://openpyxl.readthedocs.io/en/stable/ columns = [&#39;日期&#39;, &#39;PV&#39;, &#39;UV&#39;, &#39;name&#39;] datas = [ [&#39;2019-07-15&#39;, &#39;16000&#39;, &#39;150&#39;, &#39;Andy&#39;], [&#39;2020-02-15&#39;, &#39;9000&#39;, &#39;70&#39;, &#39;李&#39;], [&#39;2015-07-15&#39;, &#39;6000&#39;, &#39;50&#39;, &#39;张&#39;], [&#39;2020-01-15&#39;, &#39;12000&#39;, &#39;80&#39;, &#39;刘&#39;], ] from openpyxl import Workbook wk = Workbook() # 默认sheet sheet = wk.active sheet.title = &#39;默认sheet&#39; sheet.append(columns) for data in datas: sheet.append(data) wk.save(&#39;openpyxl.xlsx&#39;) # xls和xlsx均可 3. 类库pandas pandas是最强大的数据分析库，自带python读取和生成模块； 文档地址：https://pandas.pydata.org/ 使用的是：pandas.DataFrame.to_excel]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sqlalchemy的使用]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190303_sqlchemy%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[1. 连接数据库使用create_engine()实现连接，需要了解create_engine()各个参数的作用 # 连接数据库 from sqlalchemy import create_engine engine = create_engine( &quot;mysql+pymysql://root:1990@localhost:3306/crawl_test?charset=utf8&quot;, echo=True) 2. 创建数据表定义实体映射类数据表结构，通过操作类属性从而操作数据表字段 创建表结构的方式创建一个自增的数字主键！！！：不需要特意的设定，SQLAlchemy will automatically set the first Integer PK column that’s not marked as a FK as autoincrement=True # 创建数据表方法一 from sqlalchemy import Column, Integer, String, DateTime from sqlalchemy.ext.declarative import declarative_base Base = declarative_base() class mytable(Base): # 表名 __tablename__ = &#39;mytable&#39; # 字段，属性 id = Column(Integer, primary_key=True) name = Column(String(50), unique=True) age = Column(Integer) birth = Column(DateTime) class_name = Column(String(50)) Base.metadata.create_all(engine) # 创建数据表方法二 from sqlalchemy import Column, MetaData, ForeignKey, Table from sqlalchemy.dialects.mysql import (INTEGER, CHAR) meta = MetaData() myclass = Table(&#39;myclass&#39;, meta, Column(&#39;id&#39;, INTEGER, primary_key=True), Column(&#39;name&#39;, CHAR(50), ForeignKey(mytable.name)), Column(&#39;class_name&#39;, CHAR(50)) ) myclass.create(bind=engine) 删除数据表： # 删除数据表 StudentItem.drop(bind=engine) Base.metadata.drop_all(engine) 3. 创建持久化对象引入sessionmaker模块，绑定已连接数据库的engin对象，生成会话对象session 4. 添加数据对实体类的属性赋值，通过session.add()方法添加数据，通过session.commit()方法提交数据。 new_data = mytable(name=&#39;Li Lei&#39;,age=10,birth=&#39;2017-10-01&#39;,class_name=&#39;一年级一班&#39;) session.add(new_data) session.commit() session.close() 5. 更新数据先查询需要修改的数据对象再更新，更新方法有修改对象属性值 和 使用update()方法更新数据。 session.query(mytable).filter_by(id=1).update({ mytable.age : 12}) session.commit() session.close() 6. 删除数据session.query(mytable).filter_by(id=1).delete() session.commit() session.close() 7. 查询数据filter_by相当于SQL语句里面的where判断;join相当于SQL语句中的inner join ;outerjoin相当于full outer join ; 1、查询myclass全部数据 # 查询myclass全部数据，相当于select * from myclass; # all()是将数据以列表的形式返回 get_data = session.query(myclass).all() for i in get_data: print(&#39;我的名字是：&#39; + i.name) print(&#39;我的班级是：&#39; + i.class_name) session.close() # 查询某些字段，相当于select name, class_name from myclass; get_data = session.query(myclass.name, myclass.class_name).all() for i in get_data: print(&#39;我的名字是：&#39; + i.name) print(&#39;我的班级是：&#39; + i.class_name) session.close() 2、设置筛选条件filter和filter_by # 根据条件查询某条数据 # 筛选方法一： # get_data = session.query(myclass).filter(myclass.id==1).all() # 筛选方法二： get_data = session.query(myclass).filter_by(id=1).all() print(&#39;数据类型是：&#39; + str(type(get_data))) for i in get_data: print(&#39;我的名字是：&#39; + i.name) print(&#39;我的班级是：&#39; + i.class_name) 把all()换成first()可以查询1条数据： # 查询id为1的数据 single_stu = session.query(StudentItem).filter_by(stu_id=stu_id).first() 3、设置多筛选条件： 带and的查询，如：select * from mytable where id&gt;1 and class_name=’三年级二班’，代码如下： get_data = session.query(mytable).filter(mytable.id &gt;= 2, mytable.class_name == &#39;三年级二班&#39;).first() print(&#39;数据类型是：&#39; + str(type(get_data))) print(&#39;我的名字是：&#39; + get_data.name) print(&#39;我的班级是：&#39; + get_data.class_name) 带or的查询，如：select * from mytable where id&gt;1 and class_name=’三年级二班’，代码如下: from sqlalchemy import or_ get_data = session.query(mytable).filter(or_(mytable.id &gt;= 2, mytable.class_name == &#39;三年级二班&#39;)).all() print(&#39;数据类型是：&#39; + str(type(get_data))) print(&#39;我的名字是：&#39; + get_data.name) print(&#39;我的班级是：&#39; + get_data.class_name) 涉及多表查询的内连接查询和外连接查询： # 内连接 get_data = session.query(mytable).join(myclass).filter(mytable.class_name == &#39;三年级二班&#39;).all() print(&#39;数据类型是：&#39; + str(type(get_data))) for i in get_data: print(&#39;我的名字是：&#39; + i.name) print(&#39;我的班级是：&#39; + i.class_name) # 外连接 get_data = session.query(mytable).outerjoin( myclass).filter(mytable.class_name == &#39;三年级二班&#39;).all() 4、涉及复杂的查询语句，特别涉及多表查询和复杂的查询条件时，可直接执行sql语句： sql = &#39;select * from mytable &#39; session.execute(sql) # 如果涉及更新，添加数据，需要session.commit() session.commit() 8. 综合案例(1)# -*- encoding: utf-8 -*- # 连接数据库 from sqlalchemy import create_engine from sqlalchemy import Column, Integer, String, DateTime from sqlalchemy.ext.declarative import declarative_base engine = create_engine(&quot;mysql+pymysql://root:12345678@localhost:3306/my_test?charset=utf8&quot;, echo=True) Base = declarative_base() class StudentItem(Base): &quot;&quot;&quot;创建数据表方法一&quot;&quot;&quot; # 表名 __tablename__ = &#39;my_student&#39; # 字段，属性 stu_id = Column(Integer, primary_key=True, autoincrement=True) stu_name = Column(String(50), unique=True) stu_age = Column(Integer) stu_birth = Column(DateTime) stu_class_name = Column(String(50)) sqlalchemy_test.py from sqlalchemy.orm import sessionmaker from crawl_test.orm import Base, engine, StudentItem get_session = sessionmaker(bind=engine) # 可设置autocommit=True 对当前session进行设置 session = get_session() def create_table(engine): &quot;&quot;&quot;创建表&quot;&quot;&quot; Base.metadata.create_all(engine) def add_one(): &quot;&quot;&quot;向表中添加数据&quot;&quot;&quot; try: new_data = StudentItem(stu_name=&#39;王五&#39;, stu_age=30, stu_birth=&#39;2005-06-09&#39;, stu_class_name=&#39;六年级4班&#39;) session.add(new_data) session.commit() print(&#39;向表中添加单条数据成功&#39;) session.close() except Exception as e: session.rollback() raise Exception(f&#39;向数据库添加数据失败 ：{e}&#39;) def query_one(stu_id=None, stu_name=None): &quot;&quot;&quot;根据id或者名字查询,返回字典&quot;&quot;&quot; try: if stu_id: single_stu = session.query(StudentItem).filter_by(stu_id=stu_id).first() else: single_stu = session.query(StudentItem).filter_by(stu_name=stu_name).first() single_stu_dict = single_stu.__dict__ return single_stu_dict except Exception as e: session.rollback() raise Exception(f&#39;数据库查询失败 ：{e}&#39;) finally: session.close() def query_all(): &quot;&quot;&quot;查询所有数据，返回一个列表&quot;&quot;&quot; stu_data_list = [] try: stu_data = session.query(StudentItem).all() # 遍历对象的列表，并转换成字典 for stu in stu_data: stu_dict = stu.__dict__ stu_data_list.append(stu_dict) return stu_data_list except Exception as e: session.rollback() raise Exception(f&#39;数据库查询失败 ：{e}&#39;) finally: session.close() def update_stu_data(stu_id=None, stu_name=None, stu_data_dict=None): &quot;&quot;&quot;根据id或者名字来修改数据&quot;&quot;&quot; try: if stu_id: result = session.query(StudentItem).filter_by(stu_id=stu_id).update(stu_data_dict) else: result = session.query(StudentItem).filter_by(stu_name=stu_name).update(stu_data_dict) print(&#39;修改成功&#39;, result) session.commit() session.close() except Exception as e: session.rollback() raise Exception(f&#39;修改数据失败 ：{e}&#39;) def delete_stu_data(stu_id=None, stu_name=None): &quot;&quot;&quot;删除一个数据&quot;&quot;&quot; try: if stu_id: ret = session.query(StudentItem).filter(StudentItem.stu_id == stu_id).delete() else: ret = session.query(StudentItem).filter(StudentItem.stu_name == stu_name).delete() print(&#39;删除成功&#39;, ret) session.commit() session.close() except Exception as e: session.rollback() raise Exception(f&#39;删除数据失败 ：{e}&#39;) if __name__ == &quot;__main__&quot;: # create_table(engine) # 增加一个数据 # add_one() # 查询：根据id或者姓名查询单个数据 stu_data = query_one(stu_id=6) print(stu_data[&#39;stu_name&#39;]) # 查询：所有数据 # stu_data_list = query_all() # for stu_data in stu_data_list: # print(stu_data) # 更新数据 # data_dict = { # StudentItem.stu_age: 42, # StudentItem.stu_name: &#39;张君宝&#39; # } # update_stu_data(stu_name=&#39;张无忌&#39;, stu_data_dict=data_dict) # 删除数据 # delete_stu_data(stu_id=3) 9. 综合案例（2）1、创建一个schema: Base = declarative_base() #生成orm基类 class AlchemyTest(Base): __tablename__ = &#39;tbSqlAlchemyTest&#39; #这里不用加上dbo.前缀，默认已经有了 TestName = Column(String(256), primary_key=True) TestNumber = Column(INTEGER) #the table object is a member of a larger collection known as MetaData Base.metadata.create_all(engine) #通过基类与数据库进行交互创建表结构，此时表内还没有数据 还可以在创建class的末尾加上类似于： def __repr__(self): return &quot;&lt;User(name=&#39;%s&#39;, fullname=&#39;%s&#39;, password=&#39;%s&#39;)&gt;&quot; % ( self.name, self.fullname, self.password) 这个为可选项，只是增加对于表的描述，便于以后测试 向表内加入数据：先创建一个实例：test1 = AlchemyTest(TestName=&#39;user1&#39;, TestNumber=1995) 再创建一个会话： from sqlalchemy.orm import sessionmaker Session_class = sessionmaker(bind=engine) #建立与数据库的会话连接，这里建立的是一个class不是一个实例对象 session = Session_class() #这里创建一个会话实例 test1 = AlchemyTest(TestName=&#39;user1&#39;, TestNumber=1995) session.add(test1) #把要创建的数据对象加入到这个会话中，这个时候是pending状态，添加多个对象使用add_all() session.commit() #统一提交会话中的操作 session.close() 在提交这个会话之前就可以使用：our_user = session.query(User).filter_by(name=&#39;ed&#39;).first() 来查看刚刚创建的数据在会话提交之前，还可以这样回滚这个会话，使之前flush的内容失效： session.rollback()每个session会话才是真正的与数据库的连接 2、建立表与表之间的关系（一对多，多对一）： 多对一：employee对于department是多对一的关系 class Department(Base): __tablename__ = &#39;department&#39; id = Column(Integer, primary_key=True) name = Column(String(30)) class Employee(Base): __tablename__ = &#39;employee&#39; id = Column(Integer, primary_key=True) name = Column(String(30)) dep_id = Column(Integer, ForeignKey(&#39;department.id&#39;)) department = relationship(&quot;Department&quot;) 一对多：department对于employee是一对多的关系 class Department(Base): __tablename__ = &#39;department&#39; id = Column(Integer, primary_key=True) name = Column(String(30)) employees = relationship(&quot;Employee&quot;) class Employee(Base): __tablename__ = &#39;employee&#39; id = Column(Integer, primary_key=True) name = Column(String(30)) dep_id = Column(Integer, ForeignKey(&#39;department.id&#39;)) 新建一个tbSqlAlchemyTestError的table 一个test可以有多个error class AlchemyTestError(Base): __tablename__ = &#39;tbSqlAlchemyTestError&#39; errorID = Column(INTEGER, primary_key=True) errorname = Column(String(256), nullable=False) TestName = Column(String(256), ForeignKey(&#39;tbSqlAlchemyTest.TestName&#39;))#这里面关联外键使用表的名字而不是类的名字,表与表之间建立联系 test = relationship(&quot;AlchemyTest&quot;, back_populates=&quot;error&quot;) #告诉ORM,自己这个class与AlchemyTest这个class相关联，并且设定了一个“多对一”的关系 #*在自己这个类中生成一个test属性，然后在AlchemyTest类中创建一个error属性，与之关联，可以反向查询* AlchemyTest.error = relationship(&quot;AlchemyTestError&quot;, back_populates=&quot;test&quot;) #与上面一个relationship形成双向relationship，意思是在AlchemyTest类中生成一个error属性，然后与AlchemyTestError中的test属性相关联 #所以实际上与上面一个relationship是一样的意思 给一对多的关系表插入数据： test1 = session.query(AlchemyTest).filter(AlchemyTest.TestName == &#39;user1&#39;).first() #首先提取需要加入error的test，这个已经存在 test1.error = [AlchemyTestError(errorID=&#39;553&#39;, errorname=&#39;cuowu&#39;), AlchemyTestError(errorID=&#39;667&#39;, errorname=&#39;afsf&#39;)] #使用relationship()时建立的error属性来给AlchemyTestError插入数据 session.add(test1) session.commit()stmt 使用query.join()结合两张表来查询数据表数据： result = session.query(AlchemyTest).join(AlchemyTestError).filter(AlchemyTestError.errorname == &#39;cuowu&#39;).first() #查询AlchemyTest表内的数据，看哪些user有这个error if result is not None: print(result.TestName) 因为这两张表只有一个外键，所以query.join()知道怎么关联这两张表，但是如果没有或者不止一个外键的时候，使用其他的形式： result = session.query(AlchemyTest).join((AlchemyTestError, AlchemyTest.TestName==AlchemyTestError.TestName)).first() 这里有一个join的reminder：join : 如果表中有至少一个匹配，则返回行left join : 即使右表中没有匹配，也从左表返回所有的行right join : 即使左表中没有匹配，也从右表返回所有的行full join : 只要其中一个表中存在匹配，就返回行 outerjoin: query.outerjoin(User.addresses) # LEFT OUTER JOIN 使用别名：当一个table需要被call多次的时候，使用别名aliased()可以弄清： name1 = aliased(AlchemyTest) name2 = aliased(AlchemyTest) 使用subquery()来做子查询：这个例子用于查询每个AlchemyTest的TestName对应了几个error： stmt = session.query(AlchemyTestError.TestName, func.count(&#39;*&#39;).label(&#39;errorcount&#39;)).group_by(AlchemyTestError.TestName).subquery() #一定要使用subquery()才能使这个临时表生效 #相当于生成了一个临时表，stmt它具有表结构，这个表结构的数据我们通过&quot;c&quot;这个属性来获取 for user, count in session.query(AlchemyTest, stmt.c.errorcount).outerjoin(stmt, AlchemyTest.TestName==stmt.c.TestName).order_by(AlchemyTest.TestName): #这里相当于SELECT user FROM AlchemyTest, SELECT count FROM stmt.c.errorcount LEFT OUTER JOIN stmt ON (AlchemyTest.TestName==stmt.c.TestName) print(user.TestName, count) 使用exists()： stmt = exists().where(Address.user_id==User.id) for name, in session.query(User.name).filter(stmt): print(name) 一些描述关系的方法： query.filter(User.addresses.contains(someaddress)) query.filter(User.addresses.any(Address.email_address == &#39;bar&#39;)) query.filter(Address.user.has(name=&#39;ed&#39;)) session.query(Address).with_parent(someuser, &#39;addresses&#39;) 删除数据：删除可以直接使用session.delete()但是与之关联的table并没有删除数据，因为SQLAlchemy并没有设定级联删除！！！解决方案：在一对多关系的table里的relationship设定时增加cascade：cascade=&quot;all, delete, delete-orphan” 建立多对多关系的表结构：例子中有两个tables，分别是博客表和关键字表，一篇博客可以拥有多个关键字，一个关键字也可以对应多篇博客。所以我们要建立一个未映射的关系表： post_keywords = Table(&#39;post_keywords&#39;, Base.metadata, ... Column(&#39;post_id&#39;, ForeignKey(&#39;posts.id&#39;), primary_key=True), ... Column(&#39;keyword_id&#39;, ForeignKey(&#39;keywords.id&#39;), primary_key=True) ... ) 这个表建立的方式与建立一个拥有映射关系的class不同。接下来创建博客表和关键字表分别与这个中间关系表用relationship()关联起来： &gt;&gt;&gt; class BlogPost(Base): ... __tablename__ = &#39;posts&#39; ... ... id = Column(Integer, primary_key=True) ... user_id = Column(Integer, ForeignKey(&#39;users.id&#39;)) ... headline = Column(String(255), nullable=False) ... body = Column(Text) ... ... # many to many BlogPost&lt;-&gt;Keyword ... keywords = relationship(&#39;Keyword&#39;, ... secondary=post_keywords, ... back_populates=&#39;posts&#39;) ... ... def __init__(self, headline, body, author): ... self.author = author ... self.headline = headline ... self.body = body ... ... def __repr__(self): ... return &quot;BlogPost(%r, %r, %r)&quot; % (self.headline, self.body, self.author) &gt;&gt;&gt; class Keyword(Base): ... __tablename__ = &#39;keywords&#39; ... ... id = Column(Integer, primary_key=True) ... keyword = Column(String(50), nullable=False, unique=True) ... posts = relationship(&#39;BlogPost&#39;, ... secondary=post_keywords, ... back_populates=&#39;keywords&#39;) ... ... def __init__(self, keyword): ... self.keyword = keyword]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sqlalchemy的一些概念]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190302_sqlalchemy%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[官网：https://www.sqlalchemy.org/ Python SQLAlchemy Cheatsheet ： https://www.pythonsheets.com/notes/python-sqlalchemy.html 官方文档：https://docs.sqlalchemy.org/en/latest/orm/tutorial.html 首先 import sqlalchemy可以这样检查版本 sqlalchemy.__version__ 1. sqlalchemy 简介开发人员常用的关系数据库有MySQL,Oracle, SQL Server, SQLite和PostgreSQL，操作数据库的方法大致有以下2种： 直接使用数据库接口连接：在python的数据库连接模块中，分别有pymysql,cx_Oracle,pymssql,sqlite3,psycopg2。通常这类数据库的操作步骤是：连接数据库，执行SQL语句，提交事务，关闭数据库连接。每次操作都需要开启/关闭连接，这么频繁，对系统来说是一种浪费。 通过orm框架来操作数据库：ORM(Object/Relation Mapping)对象-关系映射，主要实现对象到关系数据库的映射（或者说就是在python中设定一个类，在mysql中定义一个表，把关系数据库的表结构映射到这个类上），在实际工作中，企业级开发都是使用orm框架来实现数据库持久化操作的。 常用的ORM框架模块有：SQLObject,stom,Django的ORM,peewee和SQLAlchemy。 SQLAlchemy 是 python 语言中一个比较有名的 ORM 框架。用于连接、操作数据库。提供SQL工具包以及对象-关系映射工具，使用MIT许可证发行。 首次发行于2006年2月，是python社区广泛使用的orm工具之一，不亚于Django的orm框架。 和传统直接操作SQL相比, 使用SQLAlchemy的对象来操作数据库更为直观.SQLAlchemy 内建数据库连接池，解决了连接操作相关繁琐的处理，提供方便的强大的log功能。 类似java里的Hiernate的数据映射模型。 2. sqlalchemy orm优缺点和适用范围1、优点: 简单：ORM以最基本的形式建模数据。表的字段就是这个类的成员变量 可读性：ORM使数据库结构文档化。比如MySQL数据库就被ORM转换为了class类，程序员可以只把注意力放在代码逻辑上（当然能够熟练掌握MySQL更好） 可用性：ORM的避免了不规范、冗余、风格不统一的SQL语句，可以避免很多人为Bug，方便编码风格的统一和后期维护 可维护性：在数据表结构甚至数据库发生改变时，减少了相应的代码修改;可以很方便地引入数据缓存之类的附加功能 2、缺点: 自动化进行关系数据库的映射需要消耗系统性能。一般来说都可以忽略之，特别是有cache存在的时候 在处理多表联查、where条件复杂之类的查询时，ORM的语法会变得复杂 越是功能强大的ORM越是消耗内存，因为一个ORM Object会带有很多成员变量和成员函数。 3、适用范围：适用于快速开发和团队合作开发，不适用于有大数据量(千万/亿级别)、大运算量、复杂查询的系统。 3. 主流数据库的连接方式1、首先安装需要的模块： pip install SQLAlchemy # 如mysql数据库需要长pymysql模块 pip install pymysql 2、主流数据库的连接方式： 数据库 连接字符串 Microsoft SQL Server mssql+pymssql://username:password@ip:port/dbname MySQL mysql+pymysql://username:password@ip:port/dbname Oracle cx_Oracle://username:password@ip:port/dbname PostgreSQL postgressql://username:password@ip:port/dbname SQLite sqlite://file_path 4. 连接实例(获取session) 连接数据库实例3个步骤： 1. 创建engine 2. sessionmaker绑定engine 3. 创建session实例 create_engin的参数及session的创建如下： # 已连接mysql为例 from sqlalchemy import create_engine from sqlalchemy.orm import sessionmaker engine = create_engine( # &#39;postgresql+psycopg2://{}:{}@{}:{}/{}&#39;.format( 连接postgresql &#39;mysql+pymysql://{}:{}@{}:{}/{}&#39;.format( # 连接mysql POSTGRESQL_USER_NAME, POSTGRESQL_PASSWORD, POSTGRESQL_HOST, POSTGRESQL_PORT, POSTGRESQL_DB_NAME ), echo=Fase, # -- 如果为真，引擎将记录所有语句 用于调试 echo_pool=False, # -- 如果为true，则连接池将记录信息输出，例如连接失效以及连接回收到默认日志处理程序，用于调试 encoding=&#39;utf-8&#39;, # 默认为 utf-8 . 这是sqlAlchemy用于在sqlAlchemy中发生的字符串编码/解码操作的字符串编码 pool_size=5, #-- 设置连接数，默认设置5个连接数，设置为0表示没有限制 max_overflow=10, # -- 允许在连接池中“溢出”的连接数，即可以在池大小设置（默认为5）之上或之外打开的连接数，默认连接数为10。 pool_timeout=30, # -- 连接超时时间，默认为30秒，超过时间的连接都会连接失败。即在放弃从池中获取连接之前等待的秒数 isolation_level=&quot;AUTOCOMMIT&quot; # 设置引擎范围内的事务隔离级别隔离 pool_recycle=-1 # 连接重置周期，默认为-1，推荐设置7200，即如果连接数已空闲7200秒，就自动重新获取，以防止连接被关闭。 ) Session = sessionmaker(bind=engine) session = Session() #可以把 sessionmaker 想象成一个手机，engine 当做数据库的号码，拨通这个“号码”我们就创建了一个 Session 类。 5. 设置事务级别 isolation_level置引擎范围内的事务隔离级别隔离: create_engine(isolation_level=&quot;READ_COMMITTED&quot;) # 事务隔离级别 对engine范围设置 可选值如下: 值 SERIALIZABLE 串行读 完全串行化的读，每次读都需要获得表级共享锁，读写相互都会阻塞 REPEATABLE_READ 可重复读 确保同一事务的多个实例在并发读取数据时，会看到同样的数据行，InnoDB默认级别。在SQL标准中，该隔离级别消除了不可重复读，但是还存在幻读 MySQL默认隔离级别； READ_COMMITTED 提交读 只能读取到已经提交的数据。大部分数据库系统的默认隔离级别都是READ-COMMITED，但MySQL不是； READ_UNCOMMITTED 未提交读 事务中的修改，即使没有提交，对其他事务也是可见的，因此可能读到脏数据(脏读，dirty read)； AUTOCOMMIT 自动提交 在命令行执行sql语句，每执行一次操作实质上就是一次事务 6. sessionmaker 参数1、autocommit autocommit参数表示是否自动提交事务,默认关闭,即默认sqlalchemy为每个请求（包含select操作）开启事务,但不会自动提交这个事务，需要手动提交事务。 如果autocommit=True，sqlalchemy会为每个请求（包含select操作）开启事务,并且自动提交这个事务。当你需要保证多条命令是原则性操作，则需使用session.begin()开启事务 isolation_level=”AUTOCOMMIT” 与 sessionmaker(autocommit=True)区别sqlalchemy简单工作流程： 代码（session.query） --&gt; sqlalchemy --&gt; psycopg2 --&gt; postgresql 默认值时（autocommit不开启）：sqlalchemy在执行命令钱会通过psycopg2向数据库发送`begin`命令到数据库（之后所以命令都在事务中执行，不可在次执行session.begin命令） 相同点：最终效果相同（都会在执行select语句后自动提交） 不同点： sessionmaker(autocommit=True) 效果：会在执行命令完毕后断开连接，并将此连接roolback回滚放回连接池。（官方不建议使用）isolation_level=”AUTOCOMMIT”效果：在执行命令之前不会向数据库发送begin命令。 因此两者都可以达到自动提交的效果，但实现方法完全不同。 2、autoflush autoflush 为 True 时（默认是 True），session 进行查询之前会自动把当前累计的修改发送到数据库（注意：autoflush 并不是说在 session.add 之后会自动 flush），举个例子： # 创建了一个对象，这时，这个对象几乎没有任何意义，session 不知道它的存在 &gt;&gt;&gt; user = User(name=&#39;cosven&#39;) # session.add 这个对象之后，它被 session 放到它的对象池里面去了，但这时不会发送任何 SQL 语句给数据库，数据库目前仍然不知道它的存在 &gt;&gt;&gt; session.add(user) # session1.Query 执行之前，由于 autoflush 是 True，session 会先执行 session.flush()(session.flush 的意义：session将变积累的 SQL 语句发送给数据库。)，然后再发送查询语句 # 所以，这个查询是能查到 user &gt;&gt;&gt; session1.query(User).filter_by(name=&#39;cosven&#39;).first() &lt;__main__.User object at 0x1108f04e0&gt; 如果 session 的 autoflush 为 False 的话，session 进行查询之前不会把当前累计的修改发送到数据库，而直接发送查询语句，所以下面这个查询是查不到对象的。 &gt;&gt;&gt; session.add(User(name=&#39;haha&#39;)) &gt;&gt;&gt; session.query(User).filter_by(name=&#39;haha&#39;).first() # None autoflush 的意义：session 在进行查询之前，自动的进行一次 flush 操作。 3、expire_on_commit 如果为True，在commit之后所以实例将完全过期，以便在完成事务之后，获取属性/对象都将从最近的数据库状态加载。 scoped_session 与 sessionmaker区别from sqlalchemy import create_engine from sqlalchemy.orm import sessionmaker, scoped_session engine = create_engine() Session = scoped_session( sessionmaker( autoflush = True, bind = engine)) sessionmaker，我们得到一个类，一个能产生session的工厂。(每次调用都会得倒不同的session) scoped_session类似单例模式，当我们调用使用的时候，会先在Registry里找找之前是否已经创建session了。要是有，就把这个session返回。要是没有，就创建新的session，注册到Registry中以便下次返回给调用者。这样就实现了这样一个目的：在同一个线程中，call scoped_session 的时候，返回的是同一个对象 7. 创建orm类# coding =utf-8 # 导入需要的字段类型 from sqlalchemy.dialects.mysql import LONGTEXT from sqlalchemy import Column, VARCHAR, TEXT, DATE, DATETIME # Model基类,创建了一个BaseModel类,这个类的子类可以自动与一个表关联 Base = declarative_base() class ParseHtmlItem(Base): # 指定表名 __tablename__ = &#39;huachuang_parse_html&#39; # 对于表的描述 desc = &#39;华创项目解析详情页信息数据存储&#39; # 表结构 ANCHOR_TITLE = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;列表页获取详情页标题(外部标题)&#39;}) TAG_TITLE = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;标签标题&#39;}) TITLE = Column(VARCHAR(200), doc={&#39;zh&#39;: &#39;详情页标题&#39;}) @classmethod def creat_table(cls): &#39;&#39;&#39; 创建数据表 &#39;&#39;&#39; cls.__table__.create(bind=engine_postgresql, checkfirst=True) 8. 常用的SQLAlchemy字段类型 类型名 python中类型 说明 Integer int 普通整数，一般是32位 SmallInteger int 取值范围小的整数，一般是16位 BigInteger int或long 不限制精度的整数 Float float 浮点数 Numeric decimal.Decimal 普通整数，一般是32位 Varchar str 变长字符串 Text str 变长字符串，对较长或不限长度的字符串做了优化 Unicode unicode 变长Unicode字符串 UnicodeText unicode 变长Unicode字符串，对较长或不限长度的字符串做了优化 Boolean bool 布尔值 Date datetime.date 时间 Time datetime.datetime 日期和时间 LargeBinary str 二进制文件 ** 常用的SQLAlchemy列选项 选项名 说明 primary_key 如果为True，代表表的主键 unique 如果为True，代表这列不允许出现重复的值 index 如果为True，为这列创建索引，提高查询效率 nullable 如果为True，允许有空值，如果为False，不允许有空值 default 为这列定义默认值 注意： orm结构中可以只写部分字段，未写出的列会将其忽略 9. 查询、过滤关键字1、使用query查询表的内容：返回的结果是一个tuple session = Session_class() for row in session.query(AlchemyTest).all(): print(row.TestName, row.TestNumber) # 可以使用label()对单独的一列进行命名,这样就对name这一列命名为name_label for row in session.query(User.name.label(&#39;name_label&#39;)).all() pass # 也可以用python的方法限定哪几行： for u in session.query(User).order_by(User.id)[1:3] pass filter_by()可以直接使用关键字进行限制条件，但是filter()能处理更复杂的限制条件。如果有两个限制条件是AND关系，可以直接使用两次filter()处理： session.query(User).filter(User.name==&#39;ed&#39;).filter(User.fullname==&#39;Ed Jones&#39;) 2、下面列表也展示了其他方法：（filter operator :） 作用 符号 相等 == 不相等 != 通配符搜索 like(’%关键字%’) 通配符搜索(不敏感) ilike() 存在于 .in_([‘ed’, ‘wendy’, ‘jack’]) 不存在于 ~User.name.in_([‘ed’, ‘wendy’, ‘jack’]) 为空 == None and .filter(User.name == ‘ed’, User.fullname == ‘Ed Jones’) or or_(User.name == ‘ed’, User.name == ‘wendy’) MATCH .match(‘wendy’) 3、检索返回的列表，以及列表的标量 ： 符号 作用 all() 返回所有 first() 返回第一行 one() 检查是不是只有一行结果 one_or_none() 检查是不是一行或者没有结果 scalar() invokes the one() method, and upon success returns the first column of the row 4、直接使用textual SQL语句 :使用text()可以在query中使用literal strings： session.query(User).filter(text(&quot;id&lt;224&quot;)).order_by(text(&quot;id&quot;)).all() 如果要直接使用完整的整条sql，可以使用text()传给from_statement()： session.query(User).from_statement(text(&quot;SELECT * FROM users where name=:name&quot;)).params(name=&#39;ed&#39;).all() 5、计数：可以直接使用 .count()计算有多少行： session.query(User).filter(User.name.like(&#39;%ed&#39;)).count() 当需要将指定的东西进行计数，就使用func.count()： session.query(func.count(User.id)).scalar() filter 与 filter_by 区别 字段写法：filter筛选的字段是带类名（表名）的，而filter_by只需要筛选字段就可以； 判断条件：filter比filter_by多了一个等号； 作用范围：filter可用于单表或者多表查询，而filter_by只能用于单表查询。 filter 可以像 sql 的 where 语句一样使用 &gt; &lt; 等条件。引用列名时，需要通过 类名.属性名 的方式。filter_by 使用 python 的正常参数传递方法，指定列名时，不需要额外指定类名。 9. 数据库操作（CRUD）1、查询 # 查询ParseHtmlItem.__tablename__ 表中全部数据 session.query(ParseHtmlItem).all() # 查询id为1的值 session.query(ParseHtmlItem).filter_by(ID=1).first() # 得到单个对象 session.query(ParseHtmlItem).filter_by(ID=1).all() # 得到列表 # 查询id 小于5的数据 session.query(ParseHtmlItem).filter(ParseHtmlItem.ID&lt;5).all() # 查询巨大数据量来实现分页的情况，推荐使用通过id区间来读取数据库（提高读取速度） # 取值 data = session.query(ParseHtmlItem).filter_by(ID=1).first() data.ID # 取id的值 2、增加 item = ParseHtmlItem( CONTENT_URL_HASH=content_url_hash, ... ) session.add(item) session.commit() # autocommit=True时，可以不写此命令（但推荐写） 3、修改 # 查询要修改的数据 item = session.query(User).first() item.CONTENT_URL_HASH = &quot;&quot; session.add(usr) session.commit() 4、删除 # 查询要删除的数据 item = session.query(User).first() session.delete(item) session.commit() 10. flush与commit区别在SQLAlchemy中每个事务对应一条或多条SQL语句，这些SQL语句需要经历如下步骤： 将sql语句发送到sql服务器。 在当前事务中执行sql，但不会将修改写入磁盘。 将修改写入磁盘 &emsp;&emsp;flush 操作会执行1，2步骤。&emsp;&emsp; commit操作执行1，2，3步骤。&emsp;&emsp;因此，flush之后你可以在当前Session中看到效果，而commit之后你才能从其它Session中看到效果。 flush 使用场景为：现在已经执行一些操作，但不想结束此事务。 11. 数据库操作错误拦截数据库操作可能因为数据类型/长度，网络原因等问题导致写入数据出错,因此要做好错误拦截避免程序关闭 try: # try 中存放sql操作代码 item = ParseHtmlItem( CONTENT_URL_HASH=content_url_hash, ... ) session.add(item) session.commit() except Exception as e: # 事务回滚，撤销此次事务修改 session.rollback() logging.error(f&quot;sql insert error: {e}&quot;) 注意：使用select语句推荐使用错误拦截，并使用session.rollback()回滚事务（select查询时可能数据库因为一些原因导致此次查询错误，在下次查询时可能持续报错无法正常查询） 12. session 关闭 close session.close() session创建和管理对数据库的连接，当调用close的时候，注意，sqlalchemy不会关闭与mysql的连接，而是把连接返回到连接池。 推荐当前session commit之后就执行close操作（原因：1.每次使用session时都会从连接池中取出，因此可以将session关闭主动放回连接池 2. 可以确保 transaction 有非常清晰的开始和结束，保持 transaction 简短，也就意味着让 transaction 能在一系列操作之后终止，而不是一直开放着。（保留session的生命周期（通常是transaction）独立）） 注意：未commit的transactions会被回滚 13. 整体代码from sqlalchemy import create_engine from sqlalchemy.orm import sessionmaker from sqlalchemy.ext.declarative import declarative_base from sqlalchemy import Column, Integer, String engine = create_engine( # postgresql+psycopg2://{}:{}@{}:{}/{}&#39;.format( 连接postgresql &#39;mysql+pymysql://{}:{}@{}:{}/{}&#39;.format( # 连接mysql POSTGRESQL_USER_NAME, POSTGRESQL_PASSWORD, POSTGRESQL_HOST, POSTGRESQL_PORT, POSTGRESQL_DB_NAME ), echo=Fase, # -- 如果为真，引擎将记录所有语句 用于调试 echo_pool=False, # -- 如果为true，则连接池将记录信息输出，例如连接失效以及连接回收到默认日志处理程序 用于调试 encoding=&#39;utf-8&#39;, # 默认为 utf-8 . 这是sqlAlchemy用于在sqlAlchemy中发生的字符串编码/解码操作的字符串编码 pool_size=5, #-- 在连接池中保持打开的连接数 设置为0表示没有限制 max_overflow=10, # -- 允许在连接池中“溢出”的连接数，即可以在池大小设置（默认为5）之上或之外打开的连接数 pool_timeout=30, # -- 在放弃从池中获取连接之前等待的秒数 isolation_level=&quot;AUTOCOMMIT&quot; # 设置引擎范围内的事务隔离级别隔离 ) Session = sessionmaker(bind=engine) session = Session() Base = declarative_base() class User(Base): __tablename__ = &#39;users&#39; id = Column(Integer, primary_key=True) name = Column(String(50)) fullname = Column(String(50)) password = Column(String(12)) @classmethod def creat_table(cls): &#39;&#39;&#39; 创建数据表 &#39;&#39;&#39; cls.__table__.create(bind=engine_postgresql, checkfirst=True) @classmethod def get_all(cls): &#39;&#39;&#39; 返回所有数据 &#39;&#39;&#39; try: return session_postgresql.query(cls).all() except Exception as e: session_postgresql.rollback() raise Exception(f&#39;数据库查询失败 ：{e}&#39;) finally: session_postgresql.close() def get_item(self, id): &#39;&#39;&#39; 查询指定数据 &#39;&#39;&#39; try: return session.query(self).filter_by(id == id).first() except Exception as e: session_postgresql.rollback() raise Exception(f&#39;数据库查询失败 ：{e}&#39;) finally: session_postgresql.close() 14. 案例 FAQ：session autocommit 使用中错误错误描述 &emsp;&emsp;sqlalchemy 连接 数据库，select操作未commit提交（autocommit=False）这导致 pg 中产生大量的 “idle in transaction” 的长连接。导致需要 ACCESS EXCLUSIVE 锁的语句（如add column）阻塞，并阻塞所有后续需要 ACCESS SHARE 锁的读请求，导致程序异常。 错误例子 （还原）session1 开启事务，并且查询test表：（autocommit=False时所有命令都会开启事务包括select语句） mysql&gt; begin;Query OK, 0 rows affected (0.00 sec) # 在此处开启事务模拟autocommit=False mysql&gt; begin; Query OK, 0 rows affected (0.00 sec) mysql&gt; select * from test1; +----+------+-------+ | id | page | page1 | +----+------+-------+ | 1 | NULL | NULL | +----+------+-------+ 1 row in set (0.00 sec) session2 , 修改表结构，增加字段，这时候会卡住 mysql&gt; alter table test1 add page2 int; session3 再开一个终端，session3模拟其他用户的请求 , 请求也会被卡住 mysql&gt; select * from test1 where id=1; 查看processlist; mysql&gt; show processlist; +----+------+--------------------+------+---------+-------+---------------------------------+---------------------------------+ | Id | User | Host | db | Command | Time | State | Info | +----+------+--------------------+------+---------+-------+---------------------------------+---------------------------------+ | 7 | root | 192.168.33.1:53303 | test | Sleep | 43035 | | NULL | | 8 | root | localhost | test | Query | 0 | starting | show processlist | | 9 | root | localhost | test | Query | 969 | Waiting for table metadata lock | alter table test1 add page2 int | | 10 | root | localhost | test | Query | 134 | Waiting for table metadata lock | select * from test1 where id=1 | +----+------+--------------------+------+---------+-------+---------------------------------+---------------------------------+ id=9的线程，也就是alter表那个线程，在等待锁，此时已经锁住了test表，其他的线程也不能获取锁读取test表。 解决方法 isolation_level=”AUTOCOMMIT” 执行每条命令后都执行commit]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python访问数据库]]></title>
    <url>%2F2019%2F03%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190301_%E8%AE%BF%E9%97%AE%E6%95%B0%E6%8D%AE%E5%BA%93%2F</url>
    <content type="text"><![CDATA[1. python连接mysql并实现增删改查 import pymysql class Databse(object): def __init__(self): self.conn = pymysql.connect(host=&quot;数据库地址&quot;, user=&quot;用户名&quot;, password=&quot;密码&quot;, port=3306, # 端口 database=&quot;数据库名&quot;, charset=&#39;utf8&#39;) self.cursor = self.conn.cursor() def getData(self): data = [] self.cursor.execute(r&quot;select url from worm_tb&quot;) if self.cursor.rowcount != 0: result = self.cursor.fetchall() for d in result: data.append(d[0]) return data def insert(self, url): try: self.cursor.execute(r&quot;insert into worm_tb (url) values (&#39;%s&#39;)&quot; % url) self.conn.commit() except Exception as e: print(e) self.conn.rollback() def die(self): self.cursor.close() self.conn.close() if __name__ == &#39;__main__&#39;: db = Databse() db.insert(&#39;www.baidu.com&#39;) print(db.getData()) db.die() 案例：把控制台输入的数据,写入MySQL数据库 import pymysql def main(): no = int(input(&#39;编号: &#39;)) name = input(&#39;名字: &#39;) loc = input(&#39;所在地: &#39;) # 1. 创建数据库连接对象 con = pymysql.connect(host=&#39;localhost&#39;, port=3306, database=&#39;test&#39;, charset=&#39;utf8&#39;, user=&#39;root&#39;, password=&#39;123456&#39;) try: # 2. 通过连接对象获取游标 with con.cursor() as cursor: # 3. 通过游标执行SQL并获得执行结果 result = cursor.execute( &#39;insert into tb_dept values (%s, %s, %s)&#39;, (no, name, loc) ) if result == 1: print(&#39;添加成功!&#39;) # 4. 操作成功提交事务 con.commit() finally: # 5. 关闭连接释放资源 con.close() if __name__ == &#39;__main__&#39;: main() 2. 用python查询数据库中的数据并保存至文本#coding=utf-8 import pymysql as MySQLdb #这里是python3 如果你是python2.x的话，import MySQLdb host = xxxx user = xxxx passwd = xxxx port = xxxx db = xxxx class SelectMySQL(object): def select_data(self,sql): result = [] try: conn = MySQLdb.connect(host=host, port=port, user=user, passwd=passwd, db=db, charset=&#39;utf8&#39;, ) cur = conn.cursor() cur.execute(sql) alldata = cur.fetchall() # print(alldata) for rec in alldata: result.append(rec[0]) #注意，我这里只是把查询出来的第一列数据保存到结果中了,如果是多列的话，稍微修改下就ok了 except Exception as e: print(&#39;Error msg: &#39; + e) finally: cur.close() conn.close() return result def get_result(self, sql, filename): print(sql) results = self.select_data(sql) print(&#39;The amount of datas: %d&#39; % (len(results))) with open(filename, &#39;w&#39;) as f: for result in results: f.write(str(result) + &#39;\n&#39;) print(&#39;Data write is over!&#39;) return results if __name__ == &#39;__main__&#39;: sql = &quot;select name from user&quot; select = SelectMySQL() result1 = select.get_result(sql,&#39;namemsg.txt&#39;) print(result1) 3.import pymysql class Mysql: def __init__(self): self.content = pymysql.Connect( host=&#39;localhost&#39;, # mysql的主机ip port=3306, # 端口 user=&#39;root&#39;, # 用户名 passwd=&#39;123456&#39;, # 数据库密码 db=&#39;test&#39;, # 数据库名 charset=&#39;utf8&#39;, # 字符集 ) self.cursor = self.content.cursor() def query(self): sql = &quot;select * from chinamoney_ann_v1;&quot; self.cursor.execute(sql) for row in self.cursor.fetchall(): print(row) print(f&quot;一共查找到：{self.cursor.rowcount}&quot;) def end(self): self.cursor.close() self.content.close() if __name__ == &#39;__main__&#39;: mysql = Mysql() mysql.query() mysql.end() 案例：一整套第一步：打开数据库连接 import pymysql db = pymysql.connect(host=&quot;数据库地址&quot;, user=&quot;用户名&quot;, password=&quot;密码&quot;, port=3306,# 端口 database=&quot;数据库名&quot;, charset=&#39;utf8&#39;) 第二步：创建游标 cursor = db.cursor() 第三步：操作数据库 1、创建表 # 如果数据表已经存在使用execute()方法删除表。 cursor.execute(&quot;DROP TABLE IF EXISTS EMPLOYEE&quot;) # 创建数据表SQL语句 sql = &quot;&quot;&quot;CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )&quot;&quot;&quot; cursor.execute(sql) 2、查询数据#Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。fetchone(): 该收全部的返回结果行.rowcount: 这是方法获取下一个查询结果集。结果集是一个对象fetchall():接一个只读属性，并返回执行execute()方法后影响的行数。 # SQL 查询语句 sql = &quot;SELECT * FROM EMPLOYEE WHERE INCOME &gt; {}&quot;.format(1000) try: # 执行SQL语句 cursor.execute(sql) # 获取所有记录列表 results = cursor.fetchall() for row in results: fname = row[0] lname = row[1] age = row[2] sex = row[3] income = row[4] # 打印结果 print(&quot;fname={},lname={},age={},sex={},income={}&quot;.format(fname, lname, age, sex, income)) except: print(&quot;Error: unable to fecth data&quot;) 3、添加数据 # SQL 插入语句 sql = &quot;&quot;&quot;INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES (&#39;Mac&#39;, &#39;Mohan&#39;, 20, &#39;M&#39;, 2000)&quot;&quot;&quot; try: cursor.execute(sql) # 提交到数据库执行 db.commit() except: # 发生错误时回滚 db.rollback() 4、修改数据 # SQL 更新语句 sql = &quot;UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = &#39;{}&#39;&quot;.format(&#39;M&#39;) try: cursor.execute(sql) # 提交到数据库执行 db.commit() except: # 发生错误时回滚 db.rollback() 5、删除数据 # SQL 刪除语句 sql = &quot;DELETE FROM EMPLOYEE WHERE AGE &gt; {}&quot;.format(20) try: cursor.execute(sql) # 提交到数据库执行 db.commit() except: # 发生错误时回滚 db.rollback() 第四步：关闭游标，数据库连接 cursor.close() db.close() 通过控制台向数据库插入数据&quot;&quot;&quot; @Time : 2020/5/11 14:24 @Software: PyCharm &quot;&quot;&quot; import pymysql host = &#39;127.0.0.1&#39; port = 3306 user = &#39;root&#39; password = &#39;123456&#39; print(&#39;Starting the create database operation, please enter the information required for the database.&#39;) # print(&#39;------------------------------------&#39;) # host = input(&#39;please input database host:&#39;) # port = input(&#39;please input database port:&#39;) # user = input(&#39;please input database user:&#39;) # password = input(&#39;please input database password:&#39;) # print(&#39;------------------------------------&#39;) try: conn = pymysql.connect(host=host, port=int(port), user=user, password=password) print(&#39;create database...&#39;) cur = conn.cursor() cur.execute(&#39;create database if not exists book&#39;) print(&#39;database created done.&#39;) print(&#39;------------------------------------&#39;) conn.select_db(&#39;book&#39;) print(&#39;create user table...&#39;) cur.execute(&quot;CREATE TABLE IF NOT EXISTS user (&quot; &quot;id varchar(50) PRIMARY KEY,&quot; &quot;username varchar(255),&quot; &quot;password varchar(255),&quot; &quot;role int(11),&quot; &quot;create_time datetime,&quot; &quot;delete_flag int(11),&quot; &quot;current_login_time datetime)&quot;) print(&#39;user table created done.&#39;) print(&#39;------------------------------------&#39;) print(&#39;create book table...&#39;) cur.execute(&quot;CREATE TABLE IF NOT EXISTS book(&quot; &quot;id varchar(50) PRIMARY KEY,&quot; &quot;book_name varchar(255),&quot; &quot;author varchar(255),&quot; &quot;publish_company varchar(255),&quot; &quot;store_number int(11),&quot; &quot;borrow_number int(11),&quot; &quot;create_time datetime,&quot; &quot;publish_date datetime)&quot;) print(&#39;book table created done.&#39;) print(&#39;------------------------------------&#39;) print(&#39;create borrow_info table...&#39;) cur.execute(&quot;CREATE TABLE IF NOT EXISTS borrow_info (&quot; &quot;id varchar(50) PRIMARY KEY,&quot; &quot;book_id varchar(50),&quot; &quot;book_name varchar(255),&quot; &quot;borrow_user varchar(255),&quot; &quot;borrow_num int(11),&quot; &quot;borrow_days int(11),&quot; &quot;borrow_time datetime,&quot; &quot;return_time datetime,&quot; &quot;return_flag int(11))&quot;) print(&#39;borrow_info table created done.&#39;) print(&#39;------------------------------------&#39;) print(&#39;create ask_return table...&#39;) cur.execute(&quot;create table if not exists ask_return (&quot; &quot;id int(11) PRIMARY KEY AUTO_INCREMENT NOT NULL,&quot; &quot;user_name varchar(50) NOT NULL,&quot; &quot;borrow_id varchar(50) NOT NULL,&quot; &quot;is_read int(11) NOT NULL,&quot; &quot;time datetime)&quot;) print(&#39;ask_return table created done.&#39;) print(&#39;-&#39;*30) print(&#39;operate done.&#39;) print(&#39;create database successful.&#39;) except Exception as e: print(&#39;the require information of database is correct, please check it and retry.&#39;) print(e.args) import traceback traceback.print_exc() print(&#39;create database failed.&#39;) print(&#39;Is insert some sample data into the database?&#39;) print(&#39;1. insert&#39;) print(&#39;2. exit&#39;) insert_tag = input(&#39;please select the option:&#39;) if insert_tag == &#39;1&#39;: print(&#39;------------------------------------&#39;) print(&#39;starting the insert data operation...&#39;) admin_data = [&#39;12644064935811ea9063d8c497639e37&#39;, &#39;admin&#39;, &#39;21232f297a57a5a743894a0e4a801fc3&#39;, 0, &#39;2020-05-11 15:23:12&#39;, 0, &#39;2020-05-11 15:24:23&#39;] user_data = [&#39;99477a9e935811ea8171d8c497639e37&#39;, &#39;zhangsan&#39;, &#39;e10adc3949ba59abbe56e057f20f883e&#39;, 1, &#39;2020-05-11 15:23:12&#39;, 0, &#39;2020-05-11 15:24:23&#39;] sql = &#39;insert into user (id, username, password, role, create_time, delete_flag, current_login_time) values(%s,%s,&#39;\ &#39;%s,%s,%s,%s,%s)&#39; cur.execute(sql, admin_data) cur.execute(sql, user_data) conn.commit() cur.close() conn.close() print(&#39;insert operation done.&#39;) print(&#39;------------------------------------&#39;) print(&#39;Now you can use admin account login with username=&quot;admin&quot; password=&quot;admin&quot; or use the normal account login&#39; &#39;with username=&quot;zhangsan&quot; password=&quot;123456&quot;.&#39;) else: print(&#39;system exit.&#39;)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python网络编程]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190228_%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[UDP 协议（User Datagram Protocol 用户数据报协议） 面向无连接，传输数据之前源端和目的端不需要建立连接 发送出去的数据不一定会接收得到 传输速率快、效率高 TCP 协议（Transmission Control Protocol传输控制协议） 面向连接，传输数据之前需要建立连接 在连接过程中进行大量的数据传输 安全可靠的传输协议 传输速度慢、效率低 TCP 与 UDP 的主要区别 1.TCP是面向连接的；UDP是无连接的 2.TCP的每个连接都是点对点的，即一对一进行；UDP的连接支持一对一，一对多，多对一以及多对多 3.TCP的传输比较安全可靠；UDP的传输则不那么可靠 4.TCP的传输比较较慢，但可以保证数据的顺序；UDP的传输速度较快，但不可保证数据的顺序 5.在对系统资源的要求上：TCP占用较多的系统资源；UDP只需少量的系统资源 ​​​ 1. udp网络程序-发送数据创建一个基于udp的网络程序，具体步骤如下： 创建客户端套接字 发送/接收数据 关闭套接字 方式1： from socket import * # 1. 创建udp套接字 udp_socket = socket(AF_INET, SOCK_DGRAM) # 2. 准备接收方的地址 # &#39;192.168.1.103&#39;表示目的ip地址 # 8080表示目的端口 dest_addr = (&#39;127.0.0.1&#39;, 6666) # 注意 是元组，ip是字符串，端口是数字 # 3. 从键盘获取数据 send_data = input(&quot;请输入要发送的数据:&quot;) # 4. 发送数据到指定的电脑上的指定程序中 udp_socket.sendto(send_data.encode(&#39;gbk&#39;), dest_addr) # 5. 关闭套接字 udp_socket.close() 方式2： import socket def main(): # 1. 创建udp套接字 udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # 2. 准备接收方的地址 dest_addr = (&#39;127.0.0.1&#39;, 6666) # 注意 是元组，ip是字符串，端口是数字 # 3. 从键盘获取数据 send_data = input(&quot;请输入要发送的数据:&quot;) # 4. 发送数据到指定的电脑上的指定程序中 udp_socket.sendto(send_data.encode(&#39;gbk&#39;), dest_addr) # 5. 关闭套接字 udp_socket.close() if __name__ == &quot;__main__&quot;: main() 方式3：可连续发送数据 import socket def main(): # 1. 创建udp套接字 udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) while True: # 2.从键盘获取数据 send_data = input(&quot;请输入要发送的数据:&quot;) # 3. 如果用户输入exit，就退出程序 if send_data == &quot;exit&quot;: break # 4. 发送数据到指定的电脑上的指定程序中 udp_socket.sendto(send_data.encode(&#39;gbk&#39;), (&#39;127.0.0.1&#39;, 6666)) # 5. 关闭套接字 udp_socket.close() if __name__ == &quot;__main__&quot;: main() 2. udp网络程序-发送、接收数据from socket import * # 1. 创建udp套接字 udp_socket = socket(AF_INET, SOCK_DGRAM) # 2. 准备接收方的地址 dest_addr = (&#39;10.17.16.153&#39;, 8888) # 3. 从键盘获取数据 send_data = input(&quot;请输入要发送的数据:&quot;) # 4. 发送数据到指定的电脑上 udp_socket.sendto(send_data.encode(&#39;utf-8&#39;), dest_addr) # 5. 等待接收对方发送的数据 recv_data = udp_socket.recvfrom(1024) # 1024表示本次接收的最大字节数 # 6. 显示对方发送的数据 # 接收到的数据recv_data是一个元组 # 第1个元素是对方发送的数据 # 第2个元素是对方的ip和端口 print(recv_data[0].decode(&#39;gbk&#39;)) print(recv_data[1]) # 7. 关闭套接字 udp_socket.close() 牛客网案例 服务端：使用 socket 模块的 socket 函数来创建一个 socket 对象。socket 对象可以通过调用其他函数来设置一个 socket 服务。 现在我们可以通过调用 bind(hostname, port) 函数来指定服务的 port(端口)。 接着，我们调用 socket 对象的 accept 方法。该方法等待客户端的连接，并返回 connection 对象，表示已连接到客户端。 #!/usr/bin/python3 # 文件名：server.py # 导入 socket、sys 模块 import socket import sys # 创建 socket 对象 serversocket = socket.socket( socket.AF_INET, socket.SOCK_STREAM) # 获取本地主机名 host = socket.gethostname() port = 9999 # 绑定端口号 serversocket.bind((host, port)) # 设置最大连接数，超过后排队 serversocket.listen(5) while True: # 建立客户端连接 clientsocket,addr = serversocket.accept() print(&quot;连接地址: %s&quot; % str(addr)) msg=&#39;欢迎访问牛客教程！&#39;+ &quot;\r\n&quot; clientsocket.send(msg.encode(&#39;utf-8&#39;)) clientsocket.close() 客户端： 接下来我们写一个简单的客户端实例连接到以上创建的服务。端口号为 9999。 socket.connect(hosname, port ) 方法打开一个 TCP 连接到主机为 hostname 端口为 port 的服务商。连接后我们就可以从服务端获取数据，记住，操作完成后需要关闭连接。 #!/usr/bin/python3 # 文件名：client.py # 导入 socket、sys 模块 import socket import sys # 创建 socket 对象 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 获取本地主机名 host = socket.gethostname() # 设置端口号 port = 9999 # 连接服务，指定主机和端口 s.connect((host, port)) # 接收小于 1024 字节的数据 msg = s.recv(1024) s.close() print (msg.decode(&#39;utf-8&#39;))]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python文件操作]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190226_%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[常用文件： IGNORED_EXTENSIONS = [ # 图片 &#39;mng&#39;, &#39;pct&#39;, &#39;bmp&#39;, &#39;gif&#39;, &#39;jpg&#39;, &#39;jpeg&#39;, &#39;png&#39;, &#39;pst&#39;, &#39;psp&#39;, &#39;tif&#39;, &#39;tiff&#39;, &#39;ai&#39;, &#39;drw&#39;, &#39;dxf&#39;, &#39;eps&#39;, &#39;ps&#39;, &#39;svg&#39;, # 音频 &#39;mp3&#39;, &#39;wma&#39;, &#39;ogg&#39;, &#39;wav&#39;, &#39;ra&#39;, &#39;aac&#39;, &#39;mid&#39;, &#39;au&#39;, &#39;aiff&#39;, # 视频 &#39;3gp&#39;, &#39;asf&#39;, &#39;asx&#39;, &#39;avi&#39;, &#39;mov&#39;, &#39;mp4&#39;, &#39;mpg&#39;, &#39;qt&#39;, &#39;rm&#39;, &#39;swf&#39;, &#39;wmv&#39;, &#39;m4a&#39;, &#39;m4v&#39;, &#39;flv&#39;, # 办公软件 &#39;xls&#39;, &#39;xlsx&#39;, &#39;ppt&#39;, &#39;pptx&#39;, &#39;pps&#39;, &#39;doc&#39;, &#39;docx&#39;, &#39;odt&#39;, &#39;ods&#39;, &#39;odg&#39;, &#39;odp&#39;, # 其它 &#39;css&#39;, &#39;pdf&#39;, &#39;exe&#39;, &#39;bin&#39;, &#39;rss&#39;, &#39;zip&#39;, &#39;rar&#39;, ] 文件的打开与关闭在python，使用: open(文件名，访问模式) 函数，可以打开一个已经存在的文件，或者创建一个新文件 访问模式 说明 r 以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。 w 打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。 a 打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。 rb 以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。 wb 以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。 ab 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。 r+ 打开一个文件用于读写。文件指针将会放在文件的开头。 w+ 打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。 a+ 打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。 rb+ 以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。 wb+ 以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。 ab+ 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。 文件的重命名和删除os模块中的rename()可以完成对文件的重命名操作：rename(需要修改的文件名, 新的文件名) import os os.rename(&quot;test.py&quot;, &quot;test1.py&quot;) os模块中的remove()可以完成对文件的删除操作: remove(待删除的文件名) import os os.remove(&quot;毕业论文.txt&quot;) 文件夹的相关操作import os # 1. 创建文件夹 os.mkdir(&quot;张三&quot;) # 2. 获取当前目录 os.getcwd() # 3. 改变默认目录 os.chdir(&quot;../&quot;) # 4. 获取目录列表 os.listdir(&quot;./&quot;) # 5. 删除文件夹 os.rmdir(&quot;张三&quot;) Python3 OS 文件/目录方法：os 模块提供了非常丰富的方法用来处理文件和目录。常用的方法如下表所示： os.access(path, mode) ：检验权限模式os.chdir(path)：改变当前工作目录os.chflags(path, flags)：设置路径的标记为数字标记。os.chmod(path, mode)：更改权限os.chown(path, uid, gid)：更改文件所有者os.chroot(path)：改变当前进程的根目录os.close(fd)：关闭文件描述符 fdos.closerange(fd_low, fd_high)：关闭所有文件描述符，从 fd_low (包含) 到 fd_high (不包含), 错误会忽略os.dup(fd)：复制文件描述符 fdos.dup2(fd, fd2)：将一个文件描述符 fd 复制到另一个 fd2os.fchdir(fd)：通过文件描述符改变当前工作目录os.fchmod(fd, mode)：改变一个文件的访问权限，该文件由参数fd指定，参数mode是Unix下的文件访问权限。os.fchown(fd, uid, gid)：修改一个文件的所有权，这个函数修改一个文件的用户ID和用户组ID，该文件由文件描述符fd指定。os.fdatasync(fd)：强制将文件写入磁盘，该文件由文件描述符fd指定，但是不强制更新文件的状态信息。os.fdopen(fd[, mode[, bufsize]])：通过文件描述符 fd 创建一个文件对象，并返回这个文件对象os.fpathconf(fd, name)：返回一个打开的文件的系统配置信息。name为检索的系统配置的值，它也许是一个定义系统值的字符串，这些名字在很多标准中指定（POSIX.1, Unix 95, Unix 98, 和其它）。os.fstat(fd)：返回文件描述符fd的状态，像stat()。os.fstatvfs(fd)：返回包含文件描述符fd的文件的文件系统的信息，像 statvfs()os.fsync(fd)：强制将文件描述符为fd的文件写入硬盘。os.ftruncate(fd, length)：裁剪文件描述符fd对应的文件, 所以它最大不能超过文件大小。os.getcwd()：返回当前工作目录os.getcwdu()：返回一个当前工作目录的Unicode对象os.isatty(fd)：如果文件描述符fd是打开的，同时与tty(-like)设备相连，则返回true, 否则False。os.lchflags(path, flags)：设置路径的标记为数字标记，类似 chflags()，但是没有软链接os.lchmod(path, mode)：修改连接文件权限os.lchown(path, uid, gid)：更改文件所有者，类似 chown，但是不追踪链接。os.link(src, dst)：创建硬链接，名为参数 dst，指向参数 srcos.listdir(path)：返回path指定的文件夹包含的文件或文件夹的名字的列表。os.lseek(fd, pos, how)：设置文件描述符 fd当前位置为pos, how方式修改: SEEK_SET 或者 0 设置从文件开始的计算的pos; SEEK_CUR或者 1 则从当前位置计算; os.SEEK_END或者2则从文件尾部开始. 在unix，Windows中有效os.lstat(path)：像stat(),但是没有软链接os.major(device)：从原始的设备号中提取设备major号码 (使用stat中的st_dev或者st_rdev field)。os.makedev(major, minor)：以major和minor设备号组成一个原始设备号os.makedirs(path[, mode])：递归文件夹创建函数。像mkdir(), 但创建的所有intermediate-level文件夹需要包含子文件夹。os.minor(device)：从原始的设备号中提取设备minor号码 (使用stat中的st_dev或者st_rdev field )。os.mkdir(path[, mode])：以数字mode的mode创建一个名为path的文件夹.默认的 mode 是 0777 (八进制)。os.mkfifo(path[, mode])：创建命名管道，mode 为数字，默认为 0666 (八进制)os.mknod(filename[, mode=0600, device])：创建一个名为filename文件系统节点（文件，设备特别文件或者命名pipe）。os.open(file, flags[, mode])：打开一个文件，并且设置需要的打开选项，mode参数是可选的os.openpty()：打开一个新的伪终端对。返回 pty 和 tty的文件描述符。os.pathconf(path, name)：返回相关文件的系统配置信息。os.pipe()：创建一个管道. 返回一对文件描述符(r, w) 分别为读和写os.popen(command[, mode[, bufsize]])：从一个 command 打开一个管道os.read(fd, n)：从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd对应文件已达到结尾, 返回一个空字符串。os.readlink(path)：返回软链接所指向的文件os.remove(path)：删除路径为path的文件。如果path 是一个文件夹，将抛出OSError; 查看下面的rmdir()：删除一个 directory。os.removedirs(path)：递归删除目录。os.rename(src, dst)：重命名文件或目录，从 src 到 dstos.renames(old, new)：递归地对目录进行更名，也可以对文件进行更名。os.rmdir(path)：删除path指定的空目录，如果目录非空，则抛出一个OSError异常。os.stat(path)：获取path指定的路径的信息，功能等同于C API中的stat()系统调用。os.stat_float_times([newvalue])：决定stat_result是否以float对象显示时间戳os.statvfs(path)：获取指定路径的文件系统统计信息os.symlink(src, dst)：创建一个软链接os.tcgetpgrp(fd)：返回与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组os.tcsetpgrp(fd, pg)：设置与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组为pg。os.tempnam([dir[, prefix]])：返回唯一的路径名用于创建临时文件。os.tmpfile()：返回一个打开的模式为(w+b)的文件对象 .这文件对象没有文件夹入口，没有文件描述符，将会自动删除。os.tmpnam()：为创建一个临时文件返回一个唯一的路径os.ttyname(fd)：返回一个字符串，它表示与文件描述符fd 关联的终端设备。如果fd 没有与终端设备关联，则引发一个异常。os.unlink(path)：删除文件路径os.utime(path, times)：返回指定的path文件的访问和修改的时间。os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])：输出在文件夹中的文件名通过在树中游走，向上或者向下。os.write(fd, str)：写入字符串到文件描述符 fd中. 返回实际写入的字符串长度 3. 案例1、用python处理文本数据，并删除处理之后的数据 # 根据条件把一个文本分成两个文本 # with open(r&#39;list_object.txt&#39;, &#39;r&#39;) as file: # lines = file.readlines() # for key_word in lines: # if key_word.startswith(&#39;files/cninfo_category_daily_update/&#39;): # with open(r&#39;zs_stock.txt&#39;, &#39;a&#39;, encoding=&#39;utf-8&#39;) as file: # file.write(key_word) # else: # with open(r&#39;zs_bond.txt&#39;, &#39;a&#39;, encoding=&#39;utf-8&#39;) as file: # file.write(key_word) # 处理文本数据，并删除处理之后的数据 kafka_list = [] with open(r&#39;files/zs_stock.txt&#39;, encoding=&#39;utf-8&#39;) as file: lines = file.readlines() print(&#39;读取文本行数：&#39;, len(lines)) for num in lines[0:5]: kafka_list.append(num) lines.remove(num) print(&#39;kafka_list:&#39;, kafka_list) with open(r&#39;files/zs_stock.txt&#39;, &#39;w&#39;, encoding=&#39;utf-8&#39;) as f: print(&#39;删除已传送jds路径之后文本行数：&#39;, len(lines)) for i in lines: f.write(i) 2、输入文件的名字，然后程序自动完成对文件进行备份 # coding=utf-8 oldFileName = input(&quot;请输入要拷贝的文件名字:&quot;) with open(oldFileName, &#39;r&#39;, encoding=&#39;utf-8&#39;) as oldFile: # 如果打开文件 if oldFile: # 提取文件的后缀 fileFlagNum = oldFileName.rfind(&#39;.&#39;) if fileFlagNum &gt; 0: fileFlag = oldFileName[fileFlagNum:] # 组织新的文件名字 newFileName = oldFileName[:fileFlagNum] + &#39;[复件]&#39; + fileFlag # 创建新文件 with open(newFileName, &#39;w&#39;, encoding=&#39;utf-8&#39;) as newFile: # 把旧文件中的数据，一行一行的进行复制到新文件中 for lineContent in oldFile.readlines(): newFile.write(lineContent) 3、批量在文件名前加前缀 # coding=utf-8 import os funFlag = 1 # 1表示添加标志 2表示删除标志 folderName = &#39;./test_fo/&#39; # 获取指定路径的所有文件名字 dirList = os.listdir(folderName) # 遍历输出所有文件名字 for name in dirList: print(name) if funFlag == 1: # 增加前缀 newName = &#39;[东哥出品]-&#39; + name elif funFlag == 2: # 去除前缀 num = len(&#39;[东哥出品]-&#39;) newName = name[num:] print(newName) os.rename(folderName + name, folderName + newName)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python进程和线程]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190225_%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[操作系统会为每一个进程分配独立的内存空间，的那这样会占用独立的资源，对系统的开销较大。一般情况下我们可以使用多线程来完成多任务的开发，一个进程中包含了多个线程，对系统的开销较小一个进程中至少有一个线程，默认的这个线程我们叫做主线程。 单线程模拟人脑： import time # 敲键盘ing def keyboard(): for i in range(5): print(&quot;敲键盘ing...&quot;) time.sleep(0.5) # 点鼠标ing def mouse(): for i in range(5): print(&quot;点鼠标ing...&quot;) time.sleep(1) if __name__ == &#39;__main__&#39;: keyboard() mouse() 多线程： import threading import time # 敲键盘ing def keyboard(): for i in range(5): print(&quot;敲键盘ing...&quot;) time.sleep(0.5) # 点鼠标ing def mouse(): for i in range(5): print(&quot;点鼠标ing...&quot;) time.sleep(1) if __name__ == &#39;__main__&#39;: # 为了方便，我们使用两个线程分别执行 keyboard和 mouse任务 print(&quot;开辟前，当前有%s个线程在活动,他们是%s&quot; % (threading.active_count(), threading.enumerate())) keyboard_thread = threading.Thread(target=keyboard) mouse_thread = threading.Thread(target=mouse) print(&quot;开辟后，当前有%s个线程在活动,他们是%s&quot; % (threading.active_count(), threading.enumerate())) keyboard_thread.start() mouse_thread.start() print(&quot;start后，当前有%s个线程在活动,他们是%s&quot; % (threading.active_count(), threading.enumerate())) time.sleep(2) # 使用完毕 print(&quot;play over&quot;) ========================================（wiki陶喵） 坑no. 1 类成员变量加锁保护在并发程序中，一个重要的需要注意的点是程序的可重入性 https://blog.csdn.net/vincent040/article/details/50978979以下以一个例子来介绍。 # encoding : utf-8 from flask import Flask import threading lock = threading.Lock() app = Flask(__name__) class my_model(): def __init__(self): self.weights = 1 self.mid_data = 0 def predict(self,input_data): self.mid_data = 0 for i in range(1000): i+1 for i in range(1000000): self.mid_data += (self.weights + input_data) for i in range(1000): i+1 result = self.mid_data return result m = my_model() @app.route(&quot;/zero&quot;,methods=[&quot;GET&quot;]) def zero(): res = m.predict(0) return str(res) @app.route(&quot;/one&quot;,methods=[&quot;GET&quot;]) def one(): res = m.predict(1) return str(res) if __name__==&quot;__main__&quot;: app.run( host = &quot;0.0.0.0&quot;, port = 9865 ) 如上，这个程序看似没有什么问题。在连续访问下，能得到正确结果，但是当出现高并发的访问的时候，程序的结果就不可预知了。 (torch36) zhujinyi@gpuserver010:/data/nfs/wrk-4.1.0$ wrk -t 4 -c 128 -d 60s -s test_m2.lua http://localhost:9865/one Running 1m test @ http://localhost:9865/one 4 threads and 128 connections 953822 3185088 2847474 2940568 713724 3103776 2987122 3380356 105864 3818912 148244 1301280 1555600 1495616 4196668 686306 4317080 729890 909054 这种情况下，常用的解决办法是加锁保护共享数据，界定临界区。 # encoding : utf-8 from flask import Flask import threading lock = threading.Lock() app = Flask(__name__) class my_model(): def __init__(self): self.weights = 1 self.mid_data = 0 def predict(self,input_data): lock.acquire() self.mid_data = 0 for i in range(1000): i+1 for i in range(1000000): self.mid_data += (self.weights + input_data) for i in range(1000): i+1 result = self.mid_data lock.release() return result m = my_model() @app.route(&quot;/zero&quot;,methods=[&quot;GET&quot;]) def zero(): res = m.predict(0) return str(res) @app.route(&quot;/one&quot;,methods=[&quot;GET&quot;]) def one(): res = m.predict(1) return str(res) if __name__==&quot;__main__&quot;: app.run( host = &quot;0.0.0.0&quot;, port = 9865 ) 这样可以得到正确的结果。 (torch36) zhujinyi@gpuserver010:/data/nfs/wrk-4.1.0$ wrk -t 4 -c 128 -d 60s -s test_m2.lua http://localhost:9865/one Running 1m test @ http://localhost:9865/one 4 threads and 128 connections 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 2000000 当然，大粒度的锁会严重影响程序的性能，不推荐把锁加到函数级别，另一种可以得到正确结果的方案是用更多的空间。 class my_model(): def __init__(self): self.weights = 1 self.mid_data = 0 def predict(self,input_data): tmp_data = 0 for i in range(1000): i+1 for i in range(1000000): tmp_data += (self.weights + input_data) for i in range(1000): i+1 result = tmp_data return result 这样写也可以得到正确结果。 同时起5个进程import time import random from multiprocessing import Process def task(num): print(f&#39;hello: {num}&#39;) time.sleep(1) def works(func, tasknum): proc_record = [] for i in range(tasknum): p = Process(target=func, args=(i,)) p.start() proc_record.append(p) for p in proc_record: p.join() if __name__ == &#39;__main__&#39;: tasknum = 5 works(task, tasknum)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python正则表达式]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190223_python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[import re mystr=&quot;&quot;&quot;&lt;span class=\&quot;search_yx_tj\&quot;&gt; 共&lt;em&gt;5830&lt;/em&gt;个职位满足条件 &lt;/span&gt;&quot;&quot;&quot; restr = &quot;&lt;em&gt;(\\d+)&lt;/em&gt;&quot; # 正则表达式，（）只要括号内的数据 regex = re.compile(restr, re.IGNORECASE) mylist = regex.findall(mystr) print(mylist) # [&#39;5830&#39;] print(mylist[0]) # 5830 python正则案例 import re m = re.match(r&#39;(\w+) (\w+)(?P&lt;sign&gt;.*)&#39;, &#39;hello world!&#39;) print(m) print(&quot;@@@@@@@@m.string:&quot;, m.string) print(&quot;m.re:&quot;, m.re) print(&quot;m.pos:&quot;, m.pos) print(&quot;m.endpos:&quot;, m.endpos) print(&quot;m.lastindex:&quot;, m.lastindex) print(&quot;m.lastgroup:&quot;, m.lastgroup) print(&quot;m.group(1,2):&quot;, m.group(1, 2)) print(&quot;m.groups():&quot;, m.groups()) print(&quot;m.groupdict():&quot;, m.groupdict()) print(&quot;m.start(2):&quot;, m.start(2)) print(&quot;m.end(2):&quot;, m.end(2)) print(&quot;m.span(2):&quot;, m.span(2)) print(r&quot;m.expand(r&#39;\2 \1\3&#39;):&quot;, m.expand(r&#39;\2 \1\3&#39;)) p = re.compile(r&#39;(\w+) (\w+)(?P&lt;sign&gt;.*)&#39;, re.DOTALL) print(&quot;--------p.pattern:&quot;, p.pattern) print(&quot;p.flags:&quot;, p.flags) print(&quot;p.groups:&quot;, p.groups) print(&quot;p.groupindex:&quot;, p.groupindex) line = &quot;Cats are smarter than dogs&quot; matchObj = re.match(r&#39;(.*) are (.*?) .*&#39;, line, re.M | re.I).group(2) print(matchObj) inputStr = &quot;hello crifan, nihao crifan&quot;; replacedStr = re.sub(r&quot;hello (\w+), nihao \1&quot;, &quot;crifanli&quot;, inputStr) print(&quot;%%%%%%%%%%replacedStr=&quot;, replacedStr) # crifanli 执行结果如下： &lt;_sre.SRE_Match object; span=(0, 12), match=&#39;hello world!&#39;&gt; @@@@@@@@m.string: hello world! m.re: re.compile(&#39;(\\w+) (\\w+)(?P&lt;sign&gt;.*)&#39;) m.pos: 0 m.endpos: 12 m.lastindex: 3 m.lastgroup: sign m.group(1,2): (&#39;hello&#39;, &#39;world&#39;) m.groups(): (&#39;hello&#39;, &#39;world&#39;, &#39;!&#39;) m.groupdict(): {&#39;sign&#39;: &#39;!&#39;} m.start(2): 6 m.end(2): 11 m.span(2): (6, 11) m.expand(r&#39;\2 \1\3&#39;): world hello! --------p.pattern: (\w+) (\w+)(?P&lt;sign&gt;.*) p.flags: 48 p.groups: 3 p.groupindex: {&#39;sign&#39;: 3} smarter %%%%%%%%%%replacedStr= crifanli 正则表达式之数字： 数字：^[0-9]*$ n位的数字：^\d{n}$ 至少n位的数字：^\d{n,}$ m-n位的数字：^\d{m,n}$ 零和非零开头的数字：^(0|[1-9][0-9]*)$ 非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$ 带1-2位小数的正数或负数：^(\-)?\d+(\.\d{1,2})?$ 正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$ 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$ 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$ 非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^\+?[1-9][0-9]*$ 非零的负整数：^\-[1-9][]0-9&quot;*$ 或 ^-[1-9]\d*$ 非负整数：^\d+$ 或 ^[1-9]\d*|0$ 非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$ 非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$ 非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$ 正浮点数：^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$ 负浮点数：^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$ 浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$ 正则表达式在线生成工具: https://www.w3cschool.cn/tools/index?name=create_reg 常见正则表达式一、校验数字的表达式 数字：^[0-9]*$ n位的数字：^\d{n}$ 至少n位的数字：^\d{n,}$ m-n位的数字：^\d{m,n}$ 零和非零开头的数字：^(0|[1-9][0-9]*)$ 非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$ 带1-2位小数的正数或负数：^(-)?\d+(.\d{1,2})?$ 正数、负数、和小数：^(-|+)?\d+(.\d+)?$ 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$ 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$ 非零的正整数：^[1-9]\d$ 或 ^([1-9][0-9]){1,3}$ 或 ^+?[1-9][0-9]*$ 非零的负整数：^-[1-9][]0-9″$ 或 ^-[1-9]\d$ 非负整数：^\d+$ 或 ^[1-9]\d*|0$ 非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$ 非负浮点数：^\d+(.\d+)?$ 或 ^[1-9]\d.\d|0.\d[1-9]\d|0?.0+|0$ 非正浮点数：^((-\d+(.\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\d.\d|0.\d[1-9]\d))|0?.0+|0$ 正浮点数：^[1-9]\d.\d|0.\d[1-9]\d$ 或 ^(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9]))$ 负浮点数：^-([1-9]\d.\d|0.\d[1-9]\d)$ 或 ^(-(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9])))$ 浮点数：^(-?\d+)(.\d+)?$ 或 ^-?([1-9]\d.\d|0.\d[1-9]\d|0?.0+|0)$ 二、校验字符的表达式 汉字：^[\u4e00-\u9fa5]{0,}$ 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$ 长度为3-20的所有字符：^.{3,20}$ 由26个英文字母组成的字符串：^[A-Za-z]+$ 由26个大写英文字母组成的字符串：^[A-Z]+$ 由26个小写英文字母组成的字符串：^[a-z]+$ 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$ 由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3,20}$ 中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$ 中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$ 可以输入含有^%&amp;’,;=?$\”等字符：[^%&amp;&#39;,;=?$\x22]+ 禁止输入含有~的字符：[^~\x22]+ 三、特殊需求表达式 Email地址：^\w+([-+.]\w+)@\w+([-.]\w+).\w+([-.]\w+)*$ 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.? InternetURL：[a-zA-z]+://[^\s] 或 ^http://([\w-]+.)+[\w-]+(/[\w-./?%&amp;=])?$ 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$ 电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^($$\d{3,4}-)|\d{3.4}-)?\d{7,8}$ 国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7} 身份证号(15位、18位数字)：^\d{15}|\d{18}$ 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$ 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$ 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.\d)(?=.[a-z])(?=.*[A-Z]).{8,10}$ 日期格式：^\d{4}-\d{1,2}-\d{1,2} 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$ 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$ 钱的输入格式： 有四种钱的表示形式我们可以接受:”10000.00″ 和 “10,000.00″, 和没有 “分” 的 “10000″ 和 “10,000″：^[1-9][0-9]*$ 这表示任意一个不以0开头的数字，但是，这也意味着一个字符”0″不通过，所以我们采用下面的形式：^(0|[1-9][0-9]*)$ 一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$ 这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉，因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$ 必须说明的是，小数点后面至少应该有1位数，所以”10.”是不通过的，但是 “10″ 和 “10.2″ 是通过的：^[0-9]+(.[0-9]{2})?$ 这样我们规定小数点后面必须有两位，如果你认为太苛刻了，可以这样：^[0-9]+(.[0-9]{1,2})?$ 这样就允许用户只写一位小数。下面我们该考虑数字中的逗号了，我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$ 1到3个数字，后面跟着任意个 逗号+3个数字，逗号成为可选，而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$ 备注：这就是最终结果了，别忘了”+”可以用”*”替代。如果你觉得空字符串也可以接受的话(奇怪，为什么?)最后，别忘了在用函数时去掉去掉那个反斜杠，一般的错误都在这里 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\.[x|X][m|M][l|L]$ 中文字符的正则表达式：[\u4e00-\u9fa5] 双字节字符：[^\x00-\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1)) 空白行的正则表达式：\n\s*\r (可以用来删除空白行) HTML标记的正则表达式：&lt;(\S?)[^&gt;]&gt;.?|&lt;.? /&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力) 首尾空白字符的正则表达式：^\s|\s$或(^\s)|(\s$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式) 腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始) 中国邮政编码：[1-9]\d{5}(?!\d) (中国邮政编码为6位数字) IP地址：\d+.\d+.\d+.\d+ (提取IP地址时有用) IP地址：((?:(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d?\d)) re.sub#!/usr/bin/python3 import re phone = &quot;2004-959-559 # 这是一个电话号码&quot; # 删除注释 num = re.sub(r&#39;#.*$&#39;, &quot;&quot;, phone) print (&quot;电话号码 : &quot;, num) # 移除非数字的内容 num = re.sub(r&#39;\D&#39;, &quot;&quot;, phone) print (&quot;电话号码 : &quot;, num)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python时间处理汇总]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190222_%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[1. datetimedatetime是Python处理日期和时间的标准库。 datetime表示的时间需要时区信息才能确定一个特定的时间，否则只能视为本地时间。 如果要存储datetime，最佳方法是将其转换为timestamp再存储，因为timestamp的值与时区完全无关。 from datetime import datetime, timedelta, timezone # 1. 获取当前日期和时间和指定日期和时间 now = datetime.now() # 获取当前datetime print(now, type(now)) dt = datetime(2019, 4, 19, 12, 20) # 用指定日期时间创建datetime print(dt) # 2. datetime转换为timestamp dt_stamp = dt.timestamp() print(dt_stamp) # timestamp转换为datetime print(datetime.fromtimestamp(dt_stamp)) print(datetime.utcfromtimestamp(dt_stamp)) # UTC时间 # 3. str转换为datetime cday = datetime.strptime(&#39;2019-6-1 18:19:59&#39;, &#39;%Y-%m-%d %H:%M:%S&#39;) print(cday) # datetime转换为str print(now.strftime(&#39;%a, %b %d %H:%M&#39;)) # 4. datetime加减 ten_hour = now + timedelta(hours=2) print(ten_hour) print(now - timedelta(days=1)) print(now + timedelta(days=2, hours=12)) # 5. 本地时间转换为UTC时间 # 北京时间是UTC+8:00时区的时间，而UTC时间指UTC+0:00时区的时间 tz_utc_8 = timezone(timedelta(hours=8)) # 创建时区UTC+8:00 dt = now.replace(tzinfo=tz_utc_8) # 强制设置为UTC+8:00 print(dt) # 6. 时区转换 # 可以先通过utcnow()拿到当前的UTC时间，再转换为任意时区的时间： utc_dt = datetime.utcnow().replace(tzinfo=timezone.utc) print(utc_dt) # astimezone()将转换时区为北京时间: bj_dt = utc_dt.astimezone(timezone(timedelta(hours=8))) print(bj_dt) import datetime for i in range(1095, 1, -1): # start_date = &#39;{:%Y-%m-%d}&#39;.format(datetime.date.today() - datetime.timedelta(days=i)) end_date = &#39;{:%Y-%m-%d}&#39;.format(datetime.date.today() - datetime.timedelta(days=i-1)) duration = &#39;{} ~ {}&#39;.format(start_date, end_date) print(start_date) print(end_date) print(duration) date1 = datetime.datetime(2012, 3, 1, 00, 00, 00) timestamp = time.mktime(date1.timetuple()) print(&#39;格式化的时间转成时间戳：&#39;, timestamp) 练习假设你获取了用户输入的日期和时间如2015-1-21 9:01:30，以及一个时区信息如UTC+5:00，均是str，请编写一个函数将其转换为timestamp： import re from datetime import datetime, timezone, timedelta def to_timestamp(dt_str, tz_str): t = datetime.strptime(dt_str, &#39;%Y-%m-%d %H:%M:%S&#39;) tz = re.match(r&#39;\w{3}([\+\-]\d{1,2})\:\d{2}&#39;, tz_str).group(1) tz = int(tz) t_utc = t.replace(tzinfo=timezone(timedelta(hours=tz))) print(t_utc.timestamp()) return t_utc.timestamp() t1 = to_timestamp(&#39;2015-6-1 08:10:30&#39;, &#39;UTC+7:00&#39;) assert t1 == 1433121030.0, t1 t2 = to_timestamp(&#39;2015-5-31 16:10:30&#39;, &#39;UTC-09:00&#39;) assert t2 == 1433121030.0, t2 print(&#39;ok&#39;) ========================== 案例1：打印昨天的时间： # 引入 datetime 模块 import datetime def getYesterday(): today = datetime.date.today() oneday = datetime.timedelta(days=1) yesterday = today - oneday return yesterday # 输出 print(getYesterday()) # 2019-07-22 案例2：格式化时间 import time # 格式化成2019-07-23 11:45:39形式 print(time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())) # 格式化成Sat Mar 28 22:24:24 2016形式 print(time.strftime(&quot;%a %b %d %H:%M:%S %Y&quot;, time.localtime())) # 将格式字符串转换为时间戳 a = &quot;Sat Mar 28 22:24:24 2019&quot; print(time.mktime(time.strptime(a, &quot;%a %b %d %H:%M:%S %Y&quot;))) 执行结果如下图： 案例3：输出某月的日历 import calendar cal = calendar.month(2019, 7) print(&quot;以下输出2016年1月份的日历:&quot;) print(cal) 执行结果如下图： 案例4：将字符串的时间转换为时间戳 import time a1 = &quot;2019-5-10 23:40:00&quot; # 先转换为时间数组 timeArray = time.strptime(a1, &quot;%Y-%m-%d %H:%M:%S&quot;) # 转换为时间戳 timeStamp = int(time.mktime(timeArray)) print(timeStamp) # 格式转换 - 转为 / a2 = &quot;2019-5-10 23:40:00&quot; # 先转换为时间数组,然后转换为其他格式 timeArray = time.strptime(a2, &quot;%Y-%m-%d %H:%M:%S&quot;) otherStyleTime = time.strftime(&quot;%Y/%m/%d %H:%M:%S&quot;, timeArray) print(otherStyleTime) 执行结果如下图: 案例5：获取几天前的时间 import time import datetime # 先获得时间数组格式的日期 threeDayAgo = (datetime.datetime.now() - datetime.timedelta(days=3)) # 转换为时间戳 timeStamp = int(time.mktime(threeDayAgo.timetuple())) # 转换为其他字符串格式 otherStyleTime = threeDayAgo.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) print(otherStyleTime) 执行结果如下图： 案例6：将时间戳转换为指定日期 import time # 获得当前时间时间戳 now = int(time.time()) #转换为其他日期格式,如:&quot;%Y-%m-%d %H:%M:%S&quot; timeArray = time.localtime(now) otherStyleTime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, timeArray) print(otherStyleTime) 执行结果如下图： import datetime # 获得当前时间 now = datetime.datetime.now() # 转换为指定的格式 otherStyleTime = now.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) print(otherStyleTime) 执行结果如下图： 指定时间戳： import time timeStamp = 1556502800 timeArray = time.localtime(timeStamp) otherStyleTime = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, timeArray) print(otherStyleTime) import datetime timeStamp = 1557802800 dateArray = datetime.datetime.utcfromtimestamp(timeStamp) otherStyleTime = dateArray.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;) print(otherStyleTime)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python模块和包以及各种库]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190221_%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85%E4%BB%A5%E5%8F%8A%E5%90%84%E7%A7%8D%E5%BA%93%2F</url>
    <content type="text"><![CDATA[模块(Module)：是一个 Python 文件，以 .py 结尾，包含了 Python 对象定义和Python语句。 如果一个文件中有all变量，那么也就意味着这个变量中的元素，不会被from xxx import *时导入 模块让你能够有逻辑地组织你的 Python 代码段。把相关的代码分配到一个模块里能让你的代码更好用，更易懂。模块能定义函数，类和变量，模块里也能包含可执行的代码。包括：内置模块，自定义模块，第三方模块；import 导入文件都做了哪些事？ 以源文件为准产生一个名称空间以刚刚产生的名称空间为准，执行源文件的代码会在当前文件中定义一个名字，这个名字就是模块名，用来引用模块中的名字模块的搜索路径：模块的查找顺序是：内存中已经加载的模块-&gt;内置模块（系统内置那些）-&gt;sys.path路径中包含的模块 1.安装的方式找到模块的压缩包解压进入文件夹执行命令： python setup.py install注意：如果在install的时候，执行目录安装，可以使用：python setup.py install --prefix=安装路径2.模块的引入在程序中，使用from import 即可完成对安装的模块使用 from 模块名 import 模块名或者* 包：包就是一个包含有init.py文件的文件夹。包的导入和导入模块类似，形式：import 包名，只不过想要使用包中的工具，则需要在包的 init 文件下导入此包的模块。 __init__.py控制着包的导入行为 init 的作用：将此包下的模块进行导入，在其他地方调用这个包时，以便访问使用这个包的方法。 安装python模块已存在，可以指定安装的目录进行安装： pip install --target=d:\program\python\python37\lib\site-packages\twisted _win32stdio]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python面向对象编程]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190220_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[概念：面向对象(object-oriented ;简称: OO) 至今还没有统一的概念 我这里把它定义为: 按人们 认识客观世界的系统思维方式,采用基于对象(实体) 的概念建立模型,模拟客观世界分析、设 计、实现软件的办法。 面向对象编程(Object Oriented Programming-OOP) 是一种解决软件复用的设计和编程方法。 这种方法把软件系统中相近相似的操作逻辑和操作 应用数据、状态,以类的型式描述出来,以对象实例的形式在软件系统中复用,以达到提高软件开发效率的作用。 类(Class): 是一对相同特征或行为的事物的一个统称，是抽象的，不能直接使用它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。属性：对象具有的特征（有什么），用来描述数据；方法：对象具有的行为（能做什么），用来描述数据相关的操作；作用：类相当于制造飞机的图纸，是一个模板，是负责创建对象的，它来进行创建的飞机就相当于对象；类的抽象：拥有相同(或者类似)属性和行为的对象都可以抽像出一个类 对象：是由类创建出来的一个具体存在，可以直接使用。一个类创建出来的对象 类变量：类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。数据成员：类变量或者实例变量用于处理类及其实例对象的相关的数据。方法重写：如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。局部变量：定义在方法中的变量，只作用于当前实例的类。实例变量：在类的声明中，属性是用变量来表示的。这种变量就称为实例变量，是在类声明的内部但是在类的其他成员方法之外声明的。继承：即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。例如，有这样一个设计：一个Dog类型的对象派生自Animal类，这是模拟”是一个（is-a）”关系（例图，Dog是一个Animal）。实例化：创建一个类的实例，类的具体对象。对象：通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。案例：面向对象_扑克牌发牌程序 （Python经典编程案例） 接口： # coding=utf-8 from zope.interface import Interface from zope.interface.declarations import implementer # 定义接口 class MyMiss(Interface): def imissyouatlost(self, miss): &quot;&quot;&quot;Say i miss you at lost to miss&quot;&quot;&quot; @implementer(MyMiss) # 继承接口 class Miss: def imissyouatlost(self, somebody): &quot;&quot;&quot;Say i miss you at lost to somebody&quot;&quot;&quot; return &quot;i miss you at lost, {}!&quot;.format(somebody) if __name__ == &#39;__main__&#39;: z = Miss() hi = z.imissyouatlost(&#39;Zhangsan&#39;) print(hi) 对象： BMW = Car()，这样就产生了一个Car的实例对象，此时也可以通过实例对象BMW来访问属性或者方法; 第一次使用BMW.color = ‘黑色’表示给BMW这个对象添加属性，如果后面再次出现BMW.color = xxx表示对属性进行修改; BMW是一个对象，它拥有属性（数据）和方法（函数）; 当创建一个对象时，就是用一个模子，来制造一个实物 init方法 init()方法，在创建一个对象时默认被调用，不需要手动调用init(self)中，默认有1个参数名字为self，如果在创建对象时传递了2个实参，那么init(self)中出了self作为第一个形参外还需要2个形参，例如init(self,x,y)init(self)中的self参数，不需要开发者传递，python解释器会自动把当前的对象引用传递进去 “魔法”方法 在python中方法名如果是xxxx()的，那么就有特殊的功能，因此叫做“魔法”方法； 当使用print输出对象的时候，只要自己定义了str(self)方法，那么就会打印从在这个方法中return的数据 self所谓的self，可以理解为自己可以把self当做C++中类里面的this指针一样理解，就是对象自身的意思某个对象调用其方法时，python解释器会把这个对象作为第一个参数传递给self，所以开发者只需要传递后面的参数即可 保护对象属性：如果有一个对象，当需要对其进行修改属性时，有2种方法： 对象名.属性名 = 数据 —-&gt;直接修改 对象名.方法名() —-&gt;间接修改 为了更好的保存属性安全，即不能随意修改，一般的处理方式为： 将属性定义为私有属性 添加一个可以调用的方法，供调用 Python中没有像C++中public和private这些关键字来区别公有属性和私有属性它是以属性命名方式来区分，如果在属性名前面加了2个下划线’__’，则表明该属性是私有属性，否则为公有属性（方法也是一样，方法名前面加了2个下划线的话表示该方法是私有的，否则为公有的）。 __del__()方法创建对象后，python解释器默认调用init()方法； 当删除一个对象时，python解释器也会默认调用一个方法，这个方法为del()方法 继承子类在继承的时候，在定义类时，小括号()中为父类的名字父类的属性、方法，会被继承给子类 多态多态的概念是应用于Java和C#这一类强类型语言中，而Python崇尚“鸭子类型”。所谓多态：定义时的类型和运行时的类型不一样，此时就成为多态 new和init的作用new至少要有一个参数cls，代表要实例化的类，此参数在实例化时由Python解释器自动提供 new必须要有返回值，返回实例化出来的实例，这点在自己实现new时要特别注意，可以return父类new出来的实例，或者直接是object的new出来的实例 init有一个参数self，就是这个new返回的实例，init在new的基础上可以完成一些其它初始化的动作，init不需要返回值 我们可以将类比作制造商，new方法就是前期的原材料购买环节，init方法就是在有原材料的基础上，加工，初始化商品环节 继承# -*- encoding: utf-8 -*- class people: # 定义基本属性 name = &#39;&#39; age = 0 # 定义私有属性,私有属性在类外部无法直接进行访问 __weight = 0 # 定义构造方法 def __init__(self, n, a, w): self.name = n self.age = a self.__weight = w def speak(self): print(&quot;%s 说: 我 %d 岁。&quot; % (self.name, self.age)) # 单继承示例 class student(people): grade = &#39;&#39; def __init__(self, n, a, w, g): # 调用父类的构函 people.__init__(self, n, a, w) self.grade = g # 覆写父类的方法 def speak(self): print(&quot;%s 说: 我 %d 岁了，我在读 %d 年级&quot; % (self.name, self.age, self.grade)) s = student(&#39;ken&#39;, 10, 60, 3) s.speak() 多重继承 #!/usr/bin/python3 class people: # 定义基本属性 name = &#39;&#39; age = 0 # 定义私有属性,私有属性在类外部无法直接进行访问 __weight = 0 # 定义构造方法 def __init__(self, n, a, w): self.name = n self.age = a self.__weight = w def speak(self): print(&quot;%s 说: 我 %d 岁。&quot; % (self.name, self.age)) # 单继承示例 class student(people): grade = &#39;&#39; def __init__(self, n, a, w, g): # 调用父类的构函 people.__init__(self, n, a, w) self.grade = g # 覆写父类的方法 def speak(self): print(&quot;%s 说: 我 %d 岁了，我在读 %d 年级&quot; % (self.name, self.age, self.grade)) # 另一个类，多重继承之前的准备 class speaker(): topic = &#39;&#39; name = &#39;&#39; def __init__(self, n, t): self.name = n self.topic = t def speak(self): print(&quot;我叫 %s，我是一个演说家，我演讲的主题是 %s&quot; % (self.name, self.topic)) # 多重继承 class sample(speaker, student): a = &#39;&#39; def __init__(self, n, a, w, g, t): student.__init__(self, n, a, w, g) speaker.__init__(self, n, t) test = sample(&quot;Tim&quot;, 25, 80, 4, &quot;Python&quot;) test.speak() # 方法名同，默认调用的是在括号中排前地父类的方法 方法重写 #!/usr/bin/python3 class Parent: # 定义父类 def myMethod(self): print(&#39;调用父类方法&#39;) class Child(Parent): # 定义子类 def myMethod(self): print(&#39;调用子类方法&#39;) c = Child() # 子类实例 c.myMethod() # 子类调用重写方法 super(Child, c).myMethod() # 用子类对象调用父类已被覆盖的方法]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python错误，测试和调试]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190219_%E9%94%99%E8%AF%AF%2C%E6%B5%8B%E8%AF%95%E5%92%8C%E8%B0%83%E8%AF%95%2F</url>
    <content type="text"><![CDATA[try语句处理异常，是这样做的： 首选，try子语句（try和except关键字之间的语句）会被执行。 如果没有异常发生，except 子句被略过。 如果有异常发生，try后面的其他语句就被跳过了，如果异常类型在except关键字后匹配，这个except子句被执行。 如果没有异常发生，else子句就会被执行。else的作用是它避免了捕获未保护的代码所发起的异常。 finally子语会在try子句执行完毕之前执行，不管是否发生或者不发生异常。当一个异常发生在try子句中却未被处理时（或者发生在except或者else子句中时），finally子句执行完后会再次抛出异常。 实战：编写“角色扮演”游戏import random # 自定义异常类 class MuchError(Exception): pass class Victory(Exception): pass # 定义玩家与角色 player = [&#39;小黄&#39;, &#39;小黑&#39;, &#39;小白&#39;, &#39;小红&#39;] role = [&#39;女巫&#39;, &#39;猎人&#39;, &#39;狼人&#39;, &#39;村民&#39;, &#39;守卫&#39;, &#39;长老&#39;, &#39;预言家&#39;, &#39;白狼王&#39;] # 将玩家与角色的顺序打乱并匹配 player = random.sample(player, len(player)) role = random.sample(role, len(player)) print(&#39;游戏中全部身份有：&#39; + &#39;、&#39;.join(role)) matching = {} for t in range(len(player)): matching[player[t]] = role[t] # 游戏逻辑 try: result, err = 0, 0 for t in player: for i in range(2): guess = input(&#39;你认为&#39; + t + &#39;的身份是：&#39;) if guess == matching[t]: result += 1 print(&#39;你猜对了&#39;) break else: err += 1 print(&#39;猜错了，你还有&#39;+ str(1-i) + &#39;次机会&#39;) if err &gt; 5: raise MuchError(&#39;错误次数已超出5次，游戏结束&#39;) if result == len(player): raise Victory(&#39;恭喜你，全部猜对了&#39;) except MuchError as errInfo: print(errInfo)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python函数式编程]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190218_%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[一. 函数式编程介绍函数是Python内建支持的一种封装，我们通过把大段代码拆成函数，通过一层一层的函数调用，就可以把复杂任务分解成简单的任务，这种分解可以称之为面向过程的程序设计。函数就是面向过程的程序设计的基本单元。 而函数式编程（请注意多了一个“式”字）——Functional Programming，虽然也可以归结到面向过程的程序设计，但其思想更接近数学计算。 我们首先要搞明白计算机（Computer）和计算（Compute）的概念。 在计算机的层次上，CPU执行的是加减乘除的指令代码，以及各种条件判断和跳转指令，所以，汇编语言是最贴近计算机的语言。 而计算则指数学意义上的计算，越是抽象的计算，离计算机硬件越远。 函数式编程就是一种抽象程度很高的编程范式，纯粹的函数式编程语言编写的函数没有变量。 函数式编程的一个特点就是，允许把函数本身作为参数传入另一个函数，还允许返回一个函数！ Python对函数式编程提供部分支持。由于Python允许使用变量，因此，Python不是纯函数式编程语言。 二. 高阶函数高阶函数英文叫Higher-order function。把函数作为参数传入，这样的函数称为高阶函数，函数式编程就是指这种高度抽象的编程范式。 # 1. 变量可以指向函数 # 结论：函数本身也可以赋值给变量，即：变量可以指向函数。 print(abs(-10)) # 10 print(abs) # &lt;built-in function abs&gt; f = abs print(f) # &lt;built-in function abs&gt; # 说明变量f现在已经指向了abs函数本身。直接调用abs()函数和调用变量f()完全相同。 print(f(-10)) # 10 # 2. 函数名也是变量 # 由于abs函数实际上是定义在import builtins模块中的， # 所以要让修改abs变量的指向在其它模块也生效(修改内置函数)，要用import builtins; builtins.abs = 10 # 3. 传入函数 # 既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。 def add(x, y, f): return f(x) + f(y) print(add(-5, 6, abs)) 1. map和reducemap()函数接收两个参数，一个是函数，一个是Iterable，map将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回。 # 比如我们有一个函数f(x)=x2，要把这个函数作用在一个list [1, 2, 3, 4, 5, 6, 7, 8, 9]上，就可以用map()实现如下： def f(x): return x * x r = map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9]) print(list(r)) # [1, 4, 9, 16, 25, 36, 49, 64, 81] list1 = list(map(str, [1, 2, 3, 4, 5, 6, 7, 8, 9])) print(list1) # [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;] # reduce把一个函数作用在一个序列[x1, x2, x3, ...]上，这个函数必须接收两个参数， # reduce把结果继续和序列的下一个元素做累积计算 from functools import reduce # 如果要把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场： def add(x, y): return x * 10 + y r1 = reduce(add, [1, 3, 5, 7, 9]) print(&#39;reduce:---&#39;, r1) # 13579 练习： # 练习1：利用map()函数，把用户输入的不规范的英文名字，变为首字母大写，其他小写的规范名字。 # 输入：[&#39;adam&#39;, &#39;LISA&#39;, &#39;barT&#39;]，输出：[&#39;Adam&#39;, &#39;Lisa&#39;, &#39;Bart&#39;]： def normalize(name): # 第一种方式 # return name.capitalize() # 第二种方式 # if not isinstance(name, str): # raise TypeError(&#39;***参数不是字符串***&#39;) # name1 = name[0].upper() # name的首字母大写（这里输出只有首字母） # name2 = name[1:].lower() # name的除首字母以后全部小写（输出只有除首字母的部分） # name = name1 + name2 # 所以要连起来重新赋值给name # return name # 第三种方式 if not isinstance(name, str): raise TypeError(&#39;name input is not a string&#39;) return name[0].upper() + name[1:].lower() L1 = [&#39;adam&#39;, &#39;LISA&#39;, &#39;barT&#39;] L2 = list(map(normalize, L1)) print(L2) # 练习2：Python提供的sum()函数可以接受一个list并求和，请编写一个prod()函数，可以接受一个list并利用reduce()求积： from functools import reduce def prod(L): return reduce(lambda x, y: x*y, L) print(&#39;3 * 5 * 7 * 9 =&#39;, prod([3, 5, 7, 9])) if prod([3, 5, 7, 9]) == 945: print(&#39;测试成功!&#39;) else: print(&#39;测试失败!&#39;) # 练习3：利用map和reduce编写一个str2float函数，把字符串&#39;123.456&#39;转换成浮点数123.456： from functools import reduce def str2float(s): from functools import reduce # 调用reduce函数 DIGITS = {&#39;0&#39;: 0, &#39;1&#39;: 1, &#39;2&#39;: 2, &#39;3&#39;: 3, &#39;4&#39;: 4, &#39;5&#39;: 5, &#39;6&#39;: 6, &#39;7&#39;: 7, &#39;8&#39;: 8, &#39;9&#39;: 9} def char2num(s): # 定义把数字字符元素转为数字元素的函数 return DIGITS[s] i = s.find(&#39;.&#39;) # 找到&#39;.&#39;所在的索引位 L1 = reduce(lambda x, y: x * 10 + y, map(char2num, s[:i])) # 取&#39;.&#39;之前的元素计算 L2 = reduce(lambda x, y: x / 10 + y, map(char2num, s[:i:-1])) / 10 # 取&#39;.&#39;之后的元素计算 return L1 + L2 print(&#39;str2float(\&#39;123.456\&#39;) =&#39;, str2float(&#39;123.456&#39;)) if abs(str2float(&#39;123.456&#39;) - 123.456) &lt; 0.00001: print(&#39;测试成功!&#39;) else: print(&#39;测试失败!&#39;) 2. filterPython内建的filter()函数用于过滤序列。和map()类似，filter()也接收一个函数和一个序列。和map()不同的是，filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。由于filter()使用了惰性计算，所以只有在取filter()结果的时候，才会真正筛选并每次返回下一个筛出的元素。 # 例如，在一个list中，删掉偶数，只保留奇数，可以这么写： def is_odd(n): return n % 2 == 1 is_odd_test = list(filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15])) print(is_odd_test) # 结果: [1, 5, 9, 15] # 注意到filter()函数返回的是一个Iterator，也就是一个惰性序列，所以要强迫filter()完成计算结果，需要用list()函数获得所有结果并返回list。 # 打印1000以内的素数: def _odd_iter(): # 这是一个生成器，并且是一个无限序列 n = 1 while True: n = n + 2 yield n def _not_divisible(n): return lambda x: x % n &gt; 0 def primes(): yield 2 it = _odd_iter() # 初始序列 while True: n = next(it) # 返回序列的第一个数 yield n it = filter(_not_divisible(n), it) # 构造新序列 for n in primes(): if n &lt; 1000: print(n) else: break 3. sortedsorted()也是一个高阶函数。用sorted()排序的关键在于实现一个映射函数。 # Python内置的sorted()函数就可以对list进行排序： print(sorted([36, 5, -12, 9, -21])) # [-21, -12, 5, 9, 36] # sorted()函数也是一个高阶函数，它还可以接收一个key函数来实现自定义的排序，例如按绝对值大小排序： print(sorted([36, 5, -12, 9, -21], key=abs)) # [5, 9, -12, -21, 36] # 默认情况下，对字符串排序，是按照ASCII的大小比较的，由于&#39;Z&#39; &lt; &#39;a&#39;，结果，大写字母Z会排在小写字母a的前面。 print(sorted([&#39;bob&#39;, &#39;about&#39;, &#39;Zoo&#39;, &#39;Credit&#39;])) # [&#39;Credit&#39;, &#39;Zoo&#39;, &#39;about&#39;, &#39;bob&#39;] # 忽略大小写来比较两个字符串，实际上就是先把字符串都变成大写（或者都变成小写），再比较。 print(sorted([&#39;bob&#39;, &#39;about&#39;, &#39;Zoo&#39;, &#39;Credit&#39;], key=str.lower)) # [&#39;about&#39;, &#39;bob&#39;, &#39;Credit&#39;, &#39;Zoo&#39;] # 要进行反向排序，不必改动key函数，可以传入第三个参数reverse=True： print(sorted([&#39;bob&#39;, &#39;about&#39;, &#39;Zoo&#39;, &#39;Credit&#39;], key=str.lower, reverse=True)) # [&#39;Zoo&#39;, &#39;Credit&#39;, &#39;bob&#39;, &#39;about&#39;] 二. 返回函数函数作为返回值：一个函数可以返回一个计算结果，也可以返回一个函数。返回一个函数时，牢记该函数并未执行，返回函数中不要引用任何可能会变化的变量。 返回闭包时牢记一点：返回函数不要引用任何循环变量，或者后续会发生变化的变量。 def count(): fs = [] for i in range(1, 4): def f(): return i*i fs.append(f) return fs f1, f2, f3 = count() print(f1(), f1) # 9 &lt;function count.&lt;locals&gt;.f at 0x000001CCF2376840&gt; print(f2(), f2) # 9 &lt;function count.&lt;locals&gt;.f at 0x000001CCF23768C8&gt; print(f3(), f3) # 9 &lt;function count.&lt;locals&gt;.f at 0x000001CCF2376950&gt; def count1(): def f(j): def g(): return j*j return g fs = [] for i in range(1, 4): fs.append(f(i)) # f(i)立刻被执行，因此i的当前值被传入f() return fs f11, f22, f33 = count1() print(f11(), f11) # 1 &lt;function count1.&lt;locals&gt;.f.&lt;locals&gt;.g at 0x000001CCF2376AE8&gt; print(f22(), f22) # 4 &lt;function count1.&lt;locals&gt;.f.&lt;locals&gt;.g at 0x000001CCF2376B70&gt; print(f33(), f33) # 9 &lt;function count1.&lt;locals&gt;.f.&lt;locals&gt;.g at 0x000001CCF2376BF8&gt; 三. 匿名函数Python对匿名函数的支持有限，只有一些简单的情况下可以使用匿名函数。 # 匿名函数lambda x: x * x实际上就是：def f(x): return x * x list1 = list(map(lambda x: x * x, [1, 2, 3, 4, 5, 6, 7, 8, 9])) print(list1) # [1, 4, 9, 16, 25, 36, 49, 64, 81] # 同样，也可以把匿名函数作为返回值返回，比如： def build(x, y): return lambda: x * x + y * y print(build(2, 3)) 四. 装饰器在面向对象（OOP）的设计模式中，decorator被称为装饰模式。在代码运行期间动态增加功能的方式，称之为“装饰器”（Decorator）。OOP的装饰模式需要通过继承和组合来实现，而Python除了能支持OOP的decorator外，直接从语法层次支持decorator。Python的decorator可以用函数实现，也可以用类实现。decorator可以增强函数的功能，定义起来虽然有点复杂，但使用起来非常灵活和方便。 # 本质上，decorator就是一个返回函数的高阶函数。所以，我们要定义一个能打印日志的decorator，可以定义如下： def log(func): def wrapper(*args, **kw): print(&#39;call %s():&#39; % func.__name__) return func(*args, **kw) return wrapper @log def now(): print(&#39;2015-3-25&#39;) now() import functools def log(text): &quot;&quot;&quot;不需要编写wrapper.__name__ = func.__name__这样的代码，Python内置的functools.wraps就是干这个事的，所以，一个完整的decorator的写法如下：&quot;&quot;&quot; def decorator(func): @functools.wraps(func) def wrapper(*args, **kw): print(&#39;%s %s():&#39; % (text, func.__name__)) return func(*args, **kw) return wrapper return decorator @log(&#39;execute&#39;) def now(): print(&#39;2015-3-25&#39;) now() 五. 偏函数]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python函数及其高级特性]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190217_%E5%87%BD%E6%95%B0%E5%8F%8A%E5%85%B6%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[函数：把具有独立功能的代码块组织一个小模块，在需要的时候调用返回值：就是程序中函数完成一件事情后，最后给调用者的结果 全局变量：在函数外边定义的变量，全局变量能够在所有的函数中进行访问；如果在函数中修改全局变量，那么就需要使用global进行声明，否则出错；如果全局变量的名字和局部变量的名字相同，那么使用的是局部变量的，小技巧强龙不压地头蛇对于不可变类型的全局变量来说，因其指向的数据不能修改，所以不使用global时无法修改全局变量。对于可变类型的全局变量来说，因其指向的数据可以修改，所以不使用global时也可修改全局变量。 定义函数时，需要确定函数名和参数个数； 如果有必要，可以先对参数的数据类型做检查； 函数体内部可以用return随时返回函数结果； 函数执行完毕也没有return语句时，自动return None; 函数可以同时返回多个值，但其实就是一个tuple。 浅拷贝 copy(): 不拷贝子对象的内容，只拷贝子对象的引用；深拷贝 deepcopy(): 会连子对象的内存也全部拷贝一份，对子对象的修改不会影响原对象。 LEGB规则：python查找名称时，查找顺序：local -&gt; enclosed -&gt; global -&gt; built in local: （局部）函数或者类的方法内部； enclosed: （闭包）嵌套函数，在闭包作用域进行搜索，装饰器就是一种闭包； global: （全局）模块中的全局变量； build in : 内建命名空间，python为自己保留的特殊名称。 Lambda函数：是一种比较小的匿名函数规则：只允许包含一个表达式，计算结果就是函数的返回值 x = lambda a, b: a*b print(x(3, 6)) y = lambda c: c*4 print(y(6)) 参数处理定义时小括号中的参数，用来接收参数用的，称为 “形参”调用时小括号中的参数，用来传递给函数用的，称为 “实参” 在Python中定义函数，可以用必选参数、默认参数、可变参数、关键字参数和命名关键字参数，这5种参数都可以组合使用。但是请注意，参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。使得函数定义出来的接口，不但能处理复杂的参数，还可以简化调用者的代码。 默认参数：要牢记一点：默认参数必须指向不变对象！ def enroll(name, gender, age=6, city=&#39;Beijing&#39;): &quot;&quot;&quot;可以把年龄和城市设为默认参数&quot;&quot;&quot; print(&#39;name:&#39;, name) print(&#39;gender:&#39;, gender) print(&#39;age:&#39;, age) print(&#39;city:&#39;, city) enroll(&#39;Sarah&#39;, &#39;F&#39;) # 默认参数一定要用不可变对象，如果是可变对象，程序运行时会有逻辑错误！ # 如果默认参数指向对象[]，每次调用该函数，如果改变了L的内容，则下次调用时，默认参数的内容就变了，不再是函数定义时的[]了。 # 这时可以用None这个不变对象来实现无论调用多少次，都不会有问题： def add_end(L=None): if L is None: L = [] L.append(&#39;END&#39;) return L 可变参数： # 如计算计算a^2 + b^2 + c^2 + ……。 def calc(*numbers): sum = 0 for n in numbers: sum = sum + n * n return sum print(calc(1, 2)) # Python允许你在list或tuple前面加一个*号，把list或tuple的元素变成可变参数传进去 nums = [1, 2, 3] print(calc(*nums)) # 这种写法相当有用，而且很常见。 关键字参数：至于到底传入了哪些，就需要在函数内部通过kw检查，如：if &#39;city&#39; in kw: def person(name, age, **kw): &quot;&quot;&quot;kw获得的dict是extra的一份拷贝，对kw的改动不会影响到函数外的extra&quot;&quot;&quot; print(&#39;name:&#39;, name, &#39;age:&#39;, age, &#39;other:&#39;, kw) # 在调用该函数时，可以只传入必选参数： person(&#39;Michael&#39;, 30) # 可变参数类似，也可以先组装出一个dict，然后，把该dict转换为关键字参数传进去 extra = {&#39;city&#39;: &#39;Beijing&#39;, &#39;job&#39;: &#39;Engineer&#39;} person(&#39;Jack&#39;, 24, city=extra[&#39;city&#39;], job=extra[&#39;job&#39;]) # 当然，上面复杂的调用可以用简化的写法： person(&#39;Jack&#39;, 24, **extra) 命名关键字参数：是为了限制调用者可以传入的参数名，同时可以提供默认值。 # 命名关键字参数需要一个特殊分隔符*，*后面的参数被视为命名关键字参数。 # 缺少 *，city和job被视为位置参数 def person1(name, age, *, city, job): print(name, age, city, job) # 命名关键字参数必须传入参数名，这和位置参数不同。如果没有传入参数名，调用将报错 person1(&#39;Jack&#39;, 24, city=&#39;Beijing&#39;, job=&#39;Engineer&#39;) # 如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符*了： def person2(name, age, *args, city, job): print(name, age, args, city, job) # 由于命名关键字参数city具有默认值，调用时，可不传入city参数： def person3(name, age, *, city=&#39;Beijing&#39;, job): print(name, age, city, job) person3(&#39;Jack&#39;, 24, job=&#39;Engineer&#39;) 参数检查： def my_abs(x): # 数据类型检查可以用内置函数isinstance()实现： if not isinstance(x, (int, float)): raise TypeError(&#39;bad operand type&#39;) if x &gt;= 0: return x else: return -x print(my_abs(5)) 递归函数递归函数：自己调用自己的函数；包含两个部分：①终止条件；②递归步骤。处理大数据时慎用，因为会创建大量函数对象，过量的消耗内存和运算能力。理论上，所有的递归函数都可以写成循环的方式，但循环的逻辑不如递归清晰。 使用递归函数的优点是逻辑简单清晰，缺点是过深的调用会导致栈溢出。 举个例子，我们来计算阶乘n! = 1 x 2 x 3 x … x n，用函数fact(n)表示，可以看出：fact(n) = n! = 1 x 2 x 3 x ... x (n-1) x n = (n-1)! x n = fact(n-1) x n。所以，fact(n)可以表示为n x fact(n-1)，只有n=1时需要特殊处理。 def fact(n): if n==1: return 1 return n * fact(n - 1) fact(5) 使用递归函数需要注意防止栈溢出。在计算机中，函数调用是通过栈（stack）这种数据结构实现的，每当进入一个函数调用，栈就会加一层栈帧，每当函数返回，栈就会减一层栈帧。由于栈的大小不是无限的，所以，递归调用的次数过多，会导致栈溢出。可以试试fact(1000)。 解决递归调用栈溢出的方法是通过尾递归优化(通过尾递归防止栈溢出)，事实上尾递归和循环的效果是一样的，所以，把循环看成是一种特殊的尾递归函数也是可以的。 def fact(n): return fact_iter(n, 1) def fact_iter(num, product): if num == 1: return product return fact_iter(num - 1, num * product) fact_iter(5, 1) fact_iter(4, 5) 尾递归调用时，如果做了优化，栈不会增长，因此，无论多少次调用也不会导致栈溢出。遗憾的是，大多数编程语言没有针对尾递归做优化，Python解释器也没有做优化，所以，即使把上面的fact(n)函数改成尾递归方式，也会导致栈溢出。 函数高级特性函数高级特性：切片，迭代，生成器，迭代器 切片：有了切片操作，很多地方循环就不再需要了。Python的切片非常灵活，一行代码就可以实现很多行循环才能完成的操作。 L = [&#39;Michael&#39;, &#39;Sarah&#39;, &#39;Tracy&#39;, &#39;Bob&#39;, &#39;Jack&#39;] # L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素 print(L[0:3]) # Python支持L[-1]取倒数第一个元素，同样支持倒数切片,倒数第一个元素的索引是-1 print(L[-2:]) print(L[-2:-1]) L1 = list(range(30)) # 前10个数，每两个取一个： print(L1[:10:2]) # [0, 2, 4, 6, 8] # 所有数，每5个取一个： print(L1[::5]) # [0, 5, 10, 15, 20, 25] 迭代：迭代（Iteration）：如果给定一个list或tuple，我们可以通过for循环来遍历这个list或tuple，这种遍历我们称为迭代（Iteration）。 只要是可迭代对象，无论有无下标，都可以迭代 生成器: 如果列表元素可以按照某种算法推算出来，那我们是否可以在循环的过程中不断推算出后续的元素呢？这样就不必创建完整的list，从而节省大量的空间。在Python中，这种一边循环一边计算的机制，称为生成器：generator generator是非常强大的工具，在Python中，可以简单地把列表生成式改成generator，也可以通过函数实现复杂逻辑的generator。 # 第一种：创建生成器的方法很简单，只要把一个列表生成式的[]改成() L = [x * x for x in range(10)] print(L) # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81] g = (x * x for x in range(10)) print(g) # &lt;generator object &lt;genexpr&gt; at 0x1022546d0&gt; for n in g: print(n) # 斐波拉契数列（Fibonacci），除第一个和第二个数外，任意一个数都可由前两个数相加得到 def fib(max): n, a, b = 0, 0, 1 while n &lt; max: print(b) a, b = b, a + b n = n + 1 return &#39;done&#39; # 第二种：如果一个函数定义中包含yield关键字，那么这个函数就不再是一个普通函数，而是一个generator： # 变成generator的函数，在每次调用next()的时候执行，遇到yield语句返回，再次执行时从上次返回的yield语句处继续执行。 def fib1(max): n, a, b = 0, 0, 1 while n &lt; max: yield b # 只需要把print(b)改为yield b就可以了 a, b = b, a + b n = n + 1 return &#39;done&#39; print(fib1(6)) 迭代器：我们已经知道，可以直接作用于for循环的数据类型有以下几种： 一类是集合数据类型，如list、tuple、dict、set、str等； 一类是generator，包括生成器和带yield的generator function; 这些可以直接作用于for循环的对象统称为可迭代对象：Iterable; 可以被next()函数调用并不断返回下一个值的对象称为迭代器：Iterator 集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象 # 可以使用isinstance()判断一个对象是否是Iterable对象： from collections.abc import Iterable print(isinstance([], Iterable)) # True print(isinstance({}, Iterable)) # True print(isinstance((x for x in range(10)), Iterable)) # True # 可以使用isinstance()判断一个对象是否是Iterator对象： from collections.abc import Iterator print(isinstance((x for x in range(10)), Iterator)) # True print(isinstance([], Iterator)) # False print(isinstance({}, Iterator)) # False print(isinstance(&#39;abc&#39;, Iterator)) # False # 生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。 # 把list、dict、str等Iterable变成Iterator可以使用iter()函数： print(isinstance(iter([]), Iterator)) # True print(isinstance(iter(&#39;abc&#39;), Iterator)) # True]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python控制语句]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190216_%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5%2F</url>
    <content type="text"><![CDATA[控制语句 注意：代码的缩进格式很重要 建议4个空格来控制根据逻辑值（True，Flase）判断程序的运行方向Ture：表示非空的量（String，tuple元组 、list、set、dictonary），所有非零的数字，False：0，None 、空的量逻辑表达式 可以包含 逻辑运算符 and or not break的作用是提前结束循环;continue的作用是提前结束本轮循环，并直接开始下一轮循环 条件控制if: # 只要x是非零数值、非空字符串、非空list等，就判断为True，否则为False if x: print(&#39;True&#39;) 循环语句Python中的循环语句有 for 和 while。]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python序列（列表，元组，字典，集合）]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190215_%E5%BA%8F%E5%88%97%EF%BC%88%E5%88%97%E8%A1%A8%EF%BC%8C%E5%85%83%E7%BB%84%EF%BC%8C%E5%AD%97%E5%85%B8%EF%BC%8C%E9%9B%86%E5%90%88%EF%BC%89%2F</url>
    <content type="text"><![CDATA[在python中，每个变量使用前都必须赋值，变量赋值之后才会被创建。序列：一块用来存放多个值的连续内存空间。作用：进行数据存储操作。遍历时，索引位置和对应值可以用enumerate()函数同时得到。常用的序列结构有：字符串，列表，元组，字典，集合。 序列解包：可用于元组，列表，字典，让我们方便地对多个变量赋值，如：x, y, z = (20, 30, 10) 1. 列表列表：用于存储任意数目，任意类型的数据集合，有序，元素可变。格式：a = [12, 20, ‘abc’, True]特点： 查找和插入的时间随着元素的增加而增加； 占用空间小，浪费内存很少。 常用方法： list.append(x) :增加元素到尾部 list.extend(aList) :将aList中的元素加到list尾部 list.insert(index, x) :在index处插入元素x list.remove(x) : 删除首次出现的x，x不存在会报错，应先用in检查是否存在。 list.pop(i)：删除指定位置的元素，i是索引位置；不传参数默认删除最后一个； list.clear(): 清空列表 list.index(x): 获取x的索引，不存在则抛异常 list.count(x): 计数 list.reverse(): 反转 list.sort(): 排序（升序）， list.sort(reverse=True)降序排序 list.copy(): 浅拷贝 返回某项是否是列表中的元素：‘y’ in list_x 1.1 列表的创建和删除 # 1. 使用赋值运算符直接创建列表 list_name = [7, &#39;优雅&#39;, &#39;Python&#39;, &#39;Web&#39;] # 2. 创建空列表 empty_list = [] # 3. 创建数值列表 data = list(range(10, 20, 2)) print(data) # 输出：[10, 12, 14, 16, 18] # 4. 删除列表用del,删之前得确保列表名称是已经存在的，要不然会报错 del list_name 1.2 访问列表元素 # 访问第三个元素：Python list_name = [7, &#39;优雅&#39;, &#39;Python&#39;, &#39;Web&#39;] print(list_name[2]) # 程序输出：Python # 当索引超出了范围时，Python会报一个IndexError错误，所以，要确保索引不要越界，记得最后一个元素的索引是len(classmates) - 1。 print(list_name[len(list_name) - 1]) # 程序输出：Web 1.3 遍历列表 # 1. 直接使用for循环实现 list_name = [&#39;18&#39;, &#39;优雅&#39;, &#39;Python&#39;, &#39;Web&#39;] for item in list_name: print(item + &quot;\t\t&quot;, end=&#39;&#39;) # 程序不换行输出每一项 # 2. 使用for循环和enumerate()函数实现 for index, item in enumerate(list_name): print(index+1, item) # 换行输出：1 18 2 优雅 3 Python 4 Web 1.4 添加，修改和删除列表元素 list_name.insert(1, &#39;Jack&#39;) # 把元素插入到指定的位置，比如索引号为1的位置 list_name[1] = &#39;Sarah&#39; # 把某个元素替换成别的元素，可以直接赋值给对应的索引位置 列表生成式：列表生成式即List Comprehensions，是Python内置的非常简单却强大的可以用来创建list的生成式。 # for循环后面还可以加上if判断，这样我们就可以筛选出仅偶数的平方： d1 = [x * x for x in range(1, 11) if x % 2 == 0] print(d1) # [4, 16, 36, 64, 100] # 还可以使用两层循环，可以生成全排列： d2 = [m + n for m in &#39;ABC&#39; for n in &#39;XYZ&#39;] print(d2) # [&#39;AX&#39;, &#39;AY&#39;, &#39;AZ&#39;, &#39;BX&#39;, &#39;BY&#39;, &#39;BZ&#39;, &#39;CX&#39;, &#39;CY&#39;, &#39;CZ&#39;] # 列出当前目录下的所有文件和目录名，可以通过一行代码实现： import os d3 = [d for d in os.listdir(&#39;.&#39;)] # os.listdir可以列出文件和目录 print(d3) # 列表生成式也可以使用两个变量来生成list： dict = {&#39;x&#39;: &#39;A&#39;, &#39;y&#39;: &#39;B&#39;, &#39;z&#39;: &#39;C&#39;} d4 = [k + &#39;=&#39; + v for k, v in dict.items()] print(d4) # [&#39;x=A&#39;, &#39;y=B&#39;, &#39;z=C&#39;] # 把一个list中所有的字符串变成小写： L = [&#39;Hello&#39;, &#39;World&#39;, &#39;IBM&#39;, &#39;Apple&#39;] d5 = [s.lower() for s in L] print(d5) # [&#39;hello&#39;, &#39;world&#39;, &#39;ibm&#39;, &#39;apple&#39;] # 带if else d6 = [x if x % 2 == 0 else -x for x in range(1, 11)] print(d6) # [-1, 2, -3, 4, -5, 6, -7, 8, -9, 10] 2. 元组元组：与列表类似，不同之处在于元组的元素不能修改，用于存储一串信息。特点：元组的访问和处理速度比列表快，是不可变序列。 tuple的陷阱：当你定义一个tuple时，在定义的时候，tuple的元素就必须被确定下来。 # 只有1个元素的tuple定义时必须加一个逗号, t = (1,) # 看一个“可变的”tuple： # tuple所谓的“不变”是说，tuple的每个元素，指向永远不变，但指向的这个list本身是可变的 t = (&#39;a&#39;, &#39;b&#39;, [&#39;A&#39;, &#39;B&#39;]) t[2][0] = &#39;X&#39; t[2][1] = &#39;Y&#39; # 可以正常地使用classmates[0]，classmates[-1]，但不能赋值成另外的元素 print(t[-1]) 3. 字典字典：是键值对的无序可变序列，作用：可以存储多个数据，通常用于存储描述一个物体相关的信息。dict是用空间来换取时间的一种方法。 dict的key必须是不可变对象，通过key计算位置的算法称为哈希算法（Hash）。要保证hash的正确性，作为key的对象就不能变。 用in检测键是否在字典中；python3.5及以前的版本中，keys方法返回列表中的键是无序的。 特点： 查找和插入的速度极快，不会随着key的增加而变慢； 需要占用大量的内存，内存浪费多。 方法： dict.clear() dict.copy(): 返回一个字典的浅复制 dict.fromkeys([“name”, “age”, “job”]) : 创建值为空的字典； dict.get(): 取值（推荐），键不存在，可自定义默认值，第二个参数； dict.items(): 所有（key, value）元组列表； dict.keys(): 以列表返回字典所有键； dict.pot(key): 删除指定键值对， key不存在会报错； dict.popitem(): 随机删除一个键值对； dict.setdefault(key, value): key不存在新建，存在则不修改； dict.update(dict2): 把dict2中的键值更新到dict里； dict.values(): 以列表返回字典中的所有值 d = {&#39;Michael&#39;: 95, &#39;Bob&#39;: 75, &#39;Tracy&#39;: 85} b1 = dict(name=&#39;zhang&#39;, age=&#39;18&#39;) print(b1) # {&#39;name&#39;: &#39;zhang&#39;, &#39;age&#39;: &#39;18&#39;} b2 = dict([(&#39;name&#39;, &#39;zhang&#39;), (&#39;age&#39;, 19)]) print(b2) # {&#39;name&#39;: &#39;zhang&#39;, &#39;age&#39;: 19} # 通过zip创建 k3 = [&#39;name&#39;, &#39;age&#39;] v3 = [&#39;zhang&#39;, &#39;19&#39;] b3 = dict(zip(k3, v3)) print(b3) # {&#39;name&#39;: &#39;zhang&#39;, &#39;age&#39;: &#39;19&#39;} # 取数据 a = d[&#39;Michael&#39;] # 把数据放入dict的方法，除了初始化时指定外，还可以通过key放入 d[&#39;Adam&#39;] = 67 # 要避免key不存在的错误，有两种办法，一是通过in判断key是否存在 if &#39;Michael&#39; in d: print(d[&#39;Michael&#39;]) # 二是通过dict提供的get()方法，如果key不存在，可以返回None，或者自己指定的value： print(d.get(&#39;Thomas&#39;)) print(d.get(&#39;Bob&#39;, 11)) # 取不到数据时会返回11 # 要删除一个key，用pop(key)方法，对应的value也会从dict中删除 d.pop(&#39;Tracy&#39;) 遍历字典： 默认情况下，dict迭代的是key（for key in d）。 如果要迭代value，可以用for value in d.values()， 如果要同时迭代key和value，可以用for k, v in d.items()。 如何判断一个对象是可迭代对象呢？方法是通过collections模块的Iterable类型判断： # -*- coding: utf-8 -*- # 弃用警告：从collections中导入ABCs已被弃用，并在python3.8中将停止工作，可使用collections.abc代替它进行使用 from collections.abc import Iterable print(isinstance(&#39;abc&#39;, Iterable)) # str是否可迭代 print(isinstance([1, 2, 3], Iterable)) # list是否可迭代 print(isinstance(123, Iterable)) # 整数是否可迭代 # 如果要对list实现类似Java那样的下标循环怎么办？ # Python内置的enumerate函数可以把一个list变成索引-元素对，这样就可以在for循环中同时迭代索引和元素本身： for i, value in enumerate([&#39;A&#39;, &#39;B&#39;, &#39;C&#39;]): print(i, value) # 面的for循环里，同时引用了两个变量，在Python里是很常见的，比如下面的代码： for x, y in [(1, 1), (2, 4), (3, 9)]: print(x, y) 字典的核心底层原理：字典的核心是散列表，散列表是一个稀疏数组，数组的每个单元叫bucket;每个bucket有2个部分，一个是键对象的引用，一个是值对象的引用；所有bucket结构和大小一致，可通过偏移量来读取指定bucket。扩容：创造更大的数组，把原有的内容拷贝到新数组中；python会根据散列表的拥挤程度扩容，接近2/3时，数组就会扩容。 4. 集合特点：无序可变，元素不能重复，底层是字典的实现，集合中所有的元素都是字典的键，所以不能重复。 方法： set(): 将列表，元组等可迭代对象转成集合； remove(): 删除指定元素； clear(): 清除整个集合； # 要创建一个set，需要提供一个list作为输入集合： s = set([1, 2, 3]) # 通过add(key)方法可以添加元素到set中，可以重复添加，但不会有效果： s.add(4) # 通过remove(key)方法可以删除元素： s.remove(4) # set可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作： s1 = set([1, 2, 3]) s2 = set([2, 3, 4]) # s1, s2 = {1, 3, &#39;zha&#39;}, {&#39;he&#39;, 3, &#39;it&#39;} print(s1 &amp; s2, s1.intersection(s2)) # {2, 3} ， 交集 print(s1 | s2, s1.union(s2)) # {1, 2, 3, 4}， 并集 print(s1 - s2, s1.difference(s2)) # {1}, 差集 print(s1 ^ s2) # a和b不同时存在的元素 不可变集合：frozenset是不可变，可散列的 x = set([1, 2, 3, 1, 3, 5]) y = frozenset(x) print(y) # frozenset({1, 2, 3, 5}) 5. 公共方法运算符： 运算符 Python 表达式 结果 描述 支持的数据类型 + [1, 2] + [3, 4] [1, 2, 3, 4] 合并 字符串、列表、元组 * ‘Hi!’ * 4 [‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’] 复制 字符串、列表、元组 in 3 in (1, 2, 3) True 元素是否存在 字符串、列表、元组、字典 not in 4 not in (1, 2, 3) True 元素是否不存在 字符串、列表、元组、字典 内置函数： cmp(item1, item2)：比较两个值len(item)：计算容器中元素个数max(item)：返回容器中元素最大值min(item)：返回容器中元素最小值del(item)：删除变量 6. 案例1、用列表和字典存储表信息，并打印出表中工资高于 15000 的数据 r1 = dict(name=&quot;高小一&quot;, age=18, salary=30000, city=&quot;北京&quot;) r2 = dict(name=&quot;高小二&quot;, age=19, salary=20000, city=&quot;上海&quot;) r3 = dict(name=&quot;高小三&quot;, age=20, salary=10000, city=&quot;深圳&quot;) tb = [r1, r2, r3] for x in tb: if x.get(&quot;salary&quot;) &gt; 15000: print(x)]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python字符串和编码]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190214_python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E7%BC%96%E7%A0%81%2F</url>
    <content type="text"><![CDATA[相互转换：将数值转换成字符串，可以使用str()和repr()函数 字符串1、判断类型：（9个） s.isspace(): 如果字符串只包含空格字符，则返回true，否则返回false。 s.isalnum(): 如果字符串至少包含1个字符，并且所有字符均为数字，则返回true，否则返回false。 s.isalpha(): 如果字符串至少包含1个字符，并且所有字符均为字母，则返回true，否则返回false。 s.isdigit(): 如果字符串只包含数字则返回true，否则返回false。 s.isnumeric(): 如果unicode字符串只包含数字字符，则返回true，否则返回false。 s.istitle(): 如果字符串正确“标题大小写”，则返回true，否则返回false。 s.isupper(): 如果字符串至少包含一个可变大小写字符，并且所有可变大小写字符均为大写，则返回true，否则返回false。 s.islower(): 如果字符串至少包含1个字母，并且所有字符均为小写，则返回true，否则返回false。 s.isdecimal() : 如果unicode字符串只包含十进制字符，则返回true，否则返回false。 2、查找和替换：（7个） s.startswith(str, beg=0,end=len(string)): 确定字符串或字符串的子字符串(如果给定起始索引beg和结束索引end)以str开头; 如果是则返回true，否则返回false。 s.endswith(suffix, beg = 0, end = len(string)): 确定字符串或字符串的子字符串(如果启动索引结束和结束索引结束)都以后缀结尾; 如果是则返回true，否则返回false。 s.find(str, beg = 0 end = len(string)): 如果索引beg和结束索引end给定，则确定str是否在字符串或字符串的子字符串中，如果找到则返回索引，否则为-1。 s.rfind(): 从右边查找。 s.index(str, beg = 0, end = len(string)): 与find()相同，但如果没有找到str，则引发异常。 s.rindex( str, beg = 0, end = len(string)): 与index()相同，但在字符串中向后搜索。 s.replace(old, new [, max]): 如果给定max值，则用new或最多最大出现替换字符串中所有出现的旧字符(old)。 3、大小写转换：（5个） s.capitalize()：把字符串的第一个字母转为大写; s.title(): 返回字符串的标题版本，即所有单词第一个字母都以大写开头，其余的都是小写的。 s.upper(): 将字符串中的小写字母转换为大写。 s.lower(): 将字符串中的所有大写字母转换为小写。 s.swapcase(): 反转在字符串中的所有字母大小写，即小写转大写，大写转小写。 4、文本对齐：（3个） s.center(width, fillchar)：返回使用fillchar填充的字符串，原始字符串以总共width列为中心。 s.ljust(width[, fillchar]): 返回一个空格填充的字符串，原始字符串左对齐到总共width列。 s.rjust(width,[, fillchar]): 返回一个空格填充字符串，原始字符串右对齐到总共宽度(width)列。 5、去除空白字符：（3个） s.strip([chars]): 对字符串执行lstrip()和rstrip() s.lstrip(): 删除字符串中的所有前导空格 s.rstrip(): 删除字符串的所有尾随空格。 6、拆分和连接：（5个） s.join(seq): m将序列seq中的元素以字符串表示合并(并入)到具有分隔符字符串的字符串中。 s.split(str=: 根据分隔符str(空格，如果没有提供)拆分字符串并返回子字符串列表; 如果给定，最多分割为num子串。 s.splitlines( num=string.count(‘\n’)))”): 全部拆分字符串(或num)新行符，并返回每行的列表，并删除新行符。 7、其它 s.count(str, beg = 0,end = len(string))：计算字符串中出现有多少次str或字符串的子字符串(如果开始索引beg和结束索引end,则在beg~end范围匹配)。 s.decode(encoding = ‘UTF-8’,errors = ‘strict’): 使用编码encoding解码该字符串。 编码默认为默认字符串encoding。 s.encode(encoding = ‘UTF-8’,errors = ‘strict’): 返回字符串的编码字符串版本; 在错误的情况下，默认是抛出ValueError，除非使用’ignore‘或’replace‘给出错误。 s.expandtabs(tabsize = 8): 将字符串中的制表符扩展到多个空格; 如果没有提供tabize，则默认为每个制表符为8个空格。 maketrans(): 返回在translate函数中使用的转换表。max(str): 从字符串str返回最大字母字符。translate(table, deletechars=根据转换表STR(256个字符): 除去那些在del字符串转换字符串。zfill(width): 返回原始字符串，左边填充为零，总共有宽度(width)字符; 对于数字zfill()保留给定的任何符号(少于一个零)。 编码：python编码风格：PEP8（Python Enhancement Proposal）python增强提案 模块，包名：简短全小写，非必要时不带下划线 如：sys,re; 函数名，变量名：全小写，用下划线增加可读性，如：my_func(),my_var; 类名：单词首字母大写，如：MyClass; 常量名：全大写，下划线分隔，如：TAX_RETE； 缩进：每级相差4个空格； 比较操作：不要与True或者False值比较，如：if my_var ython 3的字符串使用Unicode，直接支持多语言。 UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间。 在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码，很多网页的源码上会有类似&lt;meta charset=&quot;UTF-8&quot; /&gt;的信息，表示该网页正是用的UTF-8编码。 用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件； 浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器： 如果要在网络上传输，或者保存到磁盘上，就需要把str变为以字节为单位的bytes。Python对bytes类型的数据用带b前缀的单引号或双引号表示，bytes的每个字符都只占用一个字节。为了避免乱码问题，应当始终坚持使用UTF-8编码对str和bytes进行转换。 # 以Unicode表示的str通过encode()方法可以编码为指定的bytes &#39;ABC&#39;.encode(&#39;ascii&#39;) &#39;中文&#39;.encode(&#39;utf-8&#39;) # 如果我们从网络或磁盘上读取了字节流，那么读到的数据就是bytes。要把bytes变为str，就需要用decode()方法 # 如果bytes中只有一小部分无效的字节，可以传入errors=&#39;ignore&#39;忽略错误的字节 b&#39;\xe4\xb8\xad\xff&#39;.decode(&#39;utf-8&#39;, errors=&#39;ignore&#39;) # 当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行： # 第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释； # 第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。 #!/usr/bin/env python3 # -*- coding: utf-8 -*- str类型和bytes类型bytes：二进制互联网上数据的都是以二进制的方式传输的 str ：unicode的呈现形式字符(Character)是各种文字和符号的总称，包括各国家文字、标点符号、图形符号、数字等字符集(Character set)是多个字符的集合字符集包括：ASCII字符集、GB2312字符集、GB18030字符集、Unicode字符集等 ASCII编码是1个字节，而Unicode编码通常是2个字节。UTF-8是Unicode的实现方式之一，UTF-8是它是一种变长的编码方式，可以是1，2，3个字节 str 使用encode方法转化为 bytesbytes通过decode转化为str 编码方式解码方式必须一样，否则就会出现乱码 格式化字符串第一种格式化：在字符串内部，%s表示用字符串替换，%d表示用整数替换，%f表示用浮点数替换，%x表示用十六进制替换，有几个%?占位符，后面就跟几个变量或者值，顺序要对应好。 第二种格式化：使用字符串的format()方法，它会用传入的参数依次替换字符串内的占位符{0}、{1}……， print(&#39;{1} and {0}&#39;.format(&#39;spam&#39;, &#39;eggs&#39;)) # eggs and spam 三种字符串格式化方式对比import timeit # %-formatting tm1 = timeit.timeit(&quot;&quot;&quot;name = &quot;Xiaoming&quot; &#39;Hello is %s.&#39; % name&quot;&quot;&quot;, number=10000) print(&#39;%用时: &#39;, tm1) # %用时: 0.001776108999999998 # str.format() tm2 = timeit.timeit(&quot;&quot;&quot;name = &quot;Xiaoming&quot; &#39;Hello is {}.&#39;.format(name)&quot;&quot;&quot;, number=10000) print(&#39;format用时: &#39;, tm2) # format用时: 0.0025024550000000007 # f-Strings tm3 = timeit.timeit(&quot;&quot;&quot;name = &quot;Xiaoming&quot; f&#39;Hello is {name}.&#39;&quot;&quot;&quot;, number=10000) print(&#39;f用时: &#39;, tm3) # f用时: 0.000950174000000005]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python关键字和内置函数]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F20190213_python%E5%85%B3%E9%94%AE%E5%AD%97%E5%92%8C%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[关键字关键字：即保留字，在python中已经使用的标识符，具有特殊的功能和含义。 # 查看关键字 import keyword print(keyword.kwlist) 2. python中的内置函数 abs()，取绝对值，不管数字是负数还是正数，结果都是正数。 bytes()，把字符串转为bytes。 chr()，把数字转换为字母，如chr(98) # 输出：b。（把编码转换为对应的字符） ord()，刚好与chr()相反，把字母转换为数字。（获取字符的整数表示） eval()，字符串转换成表达式并获取结果，如：eval(5*6)。 compile()，是把字符串编译成python代码，再由函数eval()，exec()执行。 dir()，可以快速的查看指定类或者模块包含的全部内容（包括函数，方法，类，变量等），如查看列表的方法：dir(list)。 help()，查看某个函数或者方法的帮助文档，如查看列表的备帮助，如：help(list)。 divmod()，是整除求余，如97除以10,整除是9，余数是7，divmod(97, 10)。 isinstance()，判断对象是否是某个类的实例，如：isinstance(‘姓名‘, str)。 filter()，函数是过滤。 map()，函数可以实现迭代的增加。 globals()，代表所有的全局变量,locbals()代表所有的局部变量。 max()，获取最大值，min()获取最小值，sum()获取和。 type()，查看类型。 len() ，方法返回对象（字符、列表、元组等）长度或项目个数。 ange() ，函数可创建一个整数列表，一般用在 for 循环中。 input() ，函数接受一个标准输入数据，返回为 string 类型。（python3中） unichr(x )：将一个整数转换为Unicode字符str(x )：将对象 x 转换为字符串repr(x )：将对象 x 转换为表达式字符串 int(x [,base ])：将x转换为一个整数long(x [,base ])：将x转换为一个长整数float(x )：将x转换到一个浮点数complex(real [,imag ])：创建一个复数hex(x )：将一个整数转换为一个十六进制字符串oct(x )：将一个整数转换为一个八进制字符串 id()：在python中，值是靠引用来传递来的。我们可以用id()来判断两个变量是否为同一个值的引用。 我们可以将id值理解为那块内存的地址标示。 Python的内置函数 数学相关: abs / divmod / pow / round / min / max / sum 序列相关: len / range / next / filter / map / sorted / slice / reversed 类型转换: chr / ord / str / bool / int / float / complex / bin / oct / hex 数据结构: dict / list / set / tuple 其他函数: all / any / id / input / open / print / type“””如：`pythondef myfilter(mystr): return len(mystr) == 6 help()print(chr(0x9a86))print(hex(ord(‘骆’)))print(abs(-1.2345))print(round(-1.2345))print(pow(1.2345, 5))fruits = [‘orange’, ‘peach’, ‘durian’, ‘watermelon’]print(fruits[slice(1, 3)])fruits2 = list(filter(myfilter, fruits))print(fruits)print(fruits2) 内置函数应用： 1.使用chr()与ord()可以实现随机的验证码 ```python import random li = [] for i in range(6): r = random.randrange(65, 91) li.append(chr(r)) print(&#39;&#39;.join(li)) 2.过滤出列表中大于2的值 li=[1,2,3,4,5,6,7,8,9,10] def f1(a): if a&gt;2: return True res=filter(f1,li) print(list(res)) 结合匿名函数lambda函数后，实现的过程更加简单 li=[1,2,3,4,5,6,7,8,9,10] res=filter(lambda a:a&gt;2,li) print(list(res)) 3.有列表[0,1,2,3,4,5,6,7,8,9]，都加10 li=[1,2,3,4,5,6,7,8,9] def f1(): result=[] for i in li: result.append(i+10) return result print(f1()) 使用map函数，实现的代码为： li=[1,2,3,4,5,6,7,8,9] def f1(a): return a+10 result=map(f1,li) print(list(result)) 结合lambda函数，实现的代码更加精简 li=[1,2,3,4,5,6,7,8,9] result=map(lambda a:a+10,li) print(list(result)) 内建函数代码#coding=utf-8 # builtin_function.py 内置函数 import os def fun(): all([True, False]) # 迭代器(为空or)所有元素为true,返回true =&gt; False any([True, False]) # 迭代器任意一个元素为true,返回true =&gt; True num = abs(-1.23) # 绝对值 num = pow(5, 3) # 幂次方 x**y =&gt;125 num = pow(5, 3, 3) # 幂次方再取余 (x**y) % z =&gt; 2 num = round(1.23) # 返回浮点数近似值,默认保留0位,且四舍五入 num = round(1.23, 5) # 5为保留小数点后位数 num = sum([1, 2, 3, 4, 5]) # 对列表数字求和 strs = ascii(os) # 返回对象的ascii字符串形式 strs = bin(123) # 整数转为二进制字符串(若被转对象非int类型可在__index__里定义) boolean = bool(0) # 获取真假(假:None / False / 任何类型的0 / 空&quot;&quot;()[]{} / __bool__返回False / __len__返回0) bytes = bytearray(&quot;You were, are and will be in my heart!&quot;, &quot;utf-8&quot;) # 字符串(字符串,编码):按编码转为字节序列 / 数字(数字):生成相应大小的空数组 / 无参():0数组 bytes = bytes(&quot;You were, are and will be in my heart!&quot;, &quot;utf-8&quot;) # 同bytearray(),但是不可变 strs = chr(123) # 整数(Unicode)转为char类型(范围[0, 1 114 111]) num = ord(&quot;{&quot;) # char类型转为整数(Unicode) num = complex(&quot;1+2j&quot;) # 将字符串或数字转为复数(不能含有空格) num = float(&#39;1.1&#39;) # 构建浮点数 strs = format(123,&#39;f&#39;) # 格式化(类型:x,b,f... / 位移:&gt;(&gt;10),&lt;,^ / 长度:5 / E) strs = hex(123) # 将整数转为16进制字符串 strs = oct(123) # 十进制转成8进制字符串 num = int(123.1) # 转为整数 strs = str(123) # 将对象转为字符串 strs = str(b&quot;123&quot;, &quot;utf-8&quot;) elem = max([1,2,3,4], [2,4,6]) # 可接收1个iterable,或多个元素 =&gt; [2, 4, 6] elem = max(1,2,3,4) # =&gt; 4 elem = max([1,2,3,4, 6], key = lambda x : x == 2) # =&gt; 2 elem = min(1,2,3,4) # 与max相反 exe = compile(&quot;print(&#39;O_O&#39;)&quot;, filename = &#39;strs&#39;, mode=&#39;exec&#39;) # 编译为代码, mode(编译模式:可执行语句&#39;exec&#39;,单个语句&#39;eval&#39;,交互式语句&#39;single&#39;) exec(exe) # 执行已编译代码 exec(&quot;print(&#39;O_O&#39;)&quot;) # 执行String未编译代码 eval(compile(&quot;print(&#39;O_O&#39;)&quot;, filename = &#39;strs&#39;, mode=&#39;eval&#39;)) # 不接受字符串类型 delattr(Clazz(&quot;Hello!&quot;), &quot;name&quot;) # 删除某对象属性 = del clazz.name 详情见 类 文章的 反射 代码块(https://www.jb51.net/article/128897.htm) setattr(Clazz(&quot;Hello!&quot;), &quot;name&quot;, &quot;World!&quot;) # 给对象某属性赋值 strs = getattr(Clazz(&quot;Hello!&quot;), &quot;name&quot;) # 获取某个对象的属性值 strs = getattr(Clazz(&quot;Hello!&quot;), &quot;name&quot;, -1) # -1为未找到属性的返回 boolean = hasattr(Clazz(&quot;Hello!&quot;), &quot;name&quot;) # 该对象是否有该属性 lists = dir(Clazz(&quot;Hello!&quot;)) # 查看函数 clazz = type(os) # 获取类型 dicts = globals() # 获取当前全局函数与对象 dicts = locals() # 获取当前局部函数与对象 dicts = vars() # 同locals() (__dict__) dicts = vars(Clazz(&quot;Hello!&quot;)) num = hash(Clazz(&quot;Hello!&quot;)) # 获取某对象的hash值 help(os) # 获取某对象的帮助文档 num = id(os) # 获取某对象的id boolean = isinstance(Clazz(&quot;Hello!&quot;), Clazz) # 对象是否是该类的实例 boolean = issubclass(Clazz, Clazz) # 该类(前)是否是该类(后)的子类(包括自己) strs = repr(os) # 将对象转为字符串表达形式 # - super() # 代理父类对象,详情见 类 文章(https://www.jb51.net/article/88315.htm) # - memoryview(obj) # 内存视图,详解 数据结构 文章(https://www.jb51.net/article/128892.htm) dics = dict() # 创建字典 tups = divmod(10, 5) # 返回元组,(商(10/5),余数(10%5)) lists = enumerate([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]) # 返回枚举对象 lists = filter(lambda x: True if (ord(x) &gt; 66) else False, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]) # function为Frue保留,False移除 sets = frozenset([1, 2, 3]) # 返回新的frozenset对象(集合) num = len([1, 2, 3]) # 长度 lists = list((1, &#39;a&#39;)) # 转为list类型 tups = tuple([1, 2, 3]) # 转为tuple元组类型 ran = range(5) # 不可变序列 ran = range(0,5) ran = range(0,5,2) # (起始,结束,增加量) sets = set([1,2,3]) # 返回set集合 maps = map(lambda x, y: x*y, [1, 2, 3], [65, 66, 67, 68]) # 返回一个迭代器,元素通过自定义函数筛选,可接收多个iterable参数 =&gt; [65, 132, 201] iters = zip([&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;], [1, 2, 3]) # 创建新的迭代器, 聚合每个迭代器元素 =&gt; [(&#39;A&#39;, 1), (&#39;B&#39;, 2), (&#39;C&#39;, 3)] iters = iter([1, 2, 3, 4, 5]) # 返回一个迭代器对象 elem = next(iters) # 从迭代器中获取下个元素; 实现原理见 内置函数 文章 lis 块代码(https://www.jb51.net/article/128890.htm) iters = reversed([1,2,3]) # 返回反向的遍历器 =&gt; [3, 2, 1] lists = [1,2,3,4,5][slice(3)] # 切片 =&gt; [1, 2, 3] lists = [1,2,3,4,5][slice(1,3)] # [slice(3) == slice(None, 3, None) / slice(1,3) == slice(1, 3, None) / slice(1,3,1) == slice(1, 3, 1) lists = sorted([2,5,3,1,4]) # 排序 =&gt; [1, 2, 3, 4, 5] lists = sorted([&#39;a&#39;,&#39;B&#39;,&#39;;&#39;,&#39;t&#39;,&#39;D&#39;,&#39;1&#39;], key = lambda x : ord(x), reverse = True) # key:比较键的函数, reverse是否反向遍历 strs = input(&quot;请输入数据:&quot;) # 输入数据 f = open(&quot;temp.txt&quot;, &quot;r+&quot;) # 打开文件,详情见os文章 print(&quot;字符串%d&quot;%123) # 打印字符 =&gt; 字符串123 print(&quot;字&quot;,&quot;符&quot;, &quot;串&quot;, sep=&quot;-&quot;) # sep为分隔 =&gt; 字-符-串 print(&quot;字&quot;,&quot;符&quot;, &quot;串&quot;, sep=&quot;-&quot;, end=&quot;\r\n&quot;) # end为尾部 =&gt; 字-符-串/r/n print(&quot;字&quot;,&quot;符&quot;, &quot;串&quot;, sep=&quot;-&quot;, end=&quot;\r\n&quot;, file=open(&quot;temp.txt&quot;,&quot;w+&quot;)) # 打印到文件 class Clazz: def __init__(self, name): self.name = name; @classmethod # 将函数包装成类方法 def setName_cls(cls, name): pass @staticmethod # 将函数包装成静态方法 def setName_sta(name): pass def getname(self): return self.name def setname(self, value): self.name = value def delname(self): del self.name # property(fget=None, fset=None, fdel=None, doc=None) # 返回一个property 属性 # property 为属性方法, 有两种实现方式,详情见 类 文章的 属性方法代码块(https://www.jb51.net/article/68235.htm) x = property(getname, setname, delname) if __name__ == &quot;__main__&quot;: fun() # property 的使用 c = Clazz(&quot;柳岩&quot;) print(c.x) # =&gt; 柳岩 c.x = &#39;汤唯&#39; print(c.getname()) # =&gt; 汤唯 del c.x]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写爬虫遇到的各类较难的xpath汇总]]></title>
    <url>%2F2019%2F02%2Fspider%2Fcases%2F%E5%86%99%E7%88%AC%E8%99%AB%E9%81%87%E5%88%B0%E7%9A%84%E5%90%84%E7%B1%BB%E8%BE%83%E9%9A%BE%E7%9A%84xpath%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[1. 如网站：http://www.afinance.cn/new/yzcj/List_19.html，提取时间的xpath如下：方法一： //div[@class=&quot;nrbf&quot;]/font[@class!=&quot;a&quot;]/text()[1] 方法二： //div[@id=&quot;zuo&quot;]/div[@class=&quot;nrbf&quot;]/font[not(contains(@class,&#39;a&#39;))]/text()[1] 提取到的截图如下： 2. 如网站：http://www.aastocks.com/tc/stocks/news/aafn/popular-news 提取标题和时间提取的xpath如下： //div[(contains(@ref, &quot;NOW.&quot;))]/div/div/a/text() 提取到的截图如下：]]></content>
      <categories>
        <category>爬虫</category>
        <category>爬虫案例</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python变量和数据类型]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F02_python%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[变量：是数据在内存中分配的空间，程序用来处理数据，而变量用来存储数据。 变量名必须是大小写英文、数字和_的组合，且不能用数字开头 引用：在python中，变量也称为引用，因为变量存储的就是对象的地址，变量通过地址引用了对象，变量位于栈内存，对象位于堆内存。 常量：所谓常量就是不能变的变量 # 在python的语法规范中推荐使用的方式： # -*- coding:utf-8 -*- # a本身是一个变量，它指向的对象的内容才是&#39;abc&#39;： a = &#39;abc&#39; # 变量a仍指向原有的字符串&#39;abc&#39;，但变量b却指向新字符串&#39;Abc&#39;了： b = a.replace(&#39;a&#39;, &#39;A&#39;) 变量的格式化输出%s:字符串；%d:有符号10进制数，%06d表示整数位数，不足以0补全；%f:浮点数，%02f，小数点后显示2位； # %03d 表示有3个整数位数，如不足以0补全，比如：132，087，006，得保证有3位数 # %04d 表示有4个整数位数，如不足以0补全，比如：1324，0087，0006，得保证有4位数 print(&#39;5{}&#39;.format(&quot;%03d&quot; % a)) python的数据类型数字型：整型(int)浮点型(float):如3.14,可表:314E-2或314e-2布尔型(bool)Tre非零数(非0即真)复数型( comples) 非数字型字符串 (string)列表 (list)元组 （Tuple）字典 (Dictionary)集 (Sets) 可以使用type(变量的名字)，来查看变量的类型。 不可变数据（3 个）：Number（数字）、String（字符串）、Tuple（元组）；可变数据（3 个）：List（列表）、Dictionary（字典）、Set（集合）。]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python标识符和运算符]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F03python%E6%A0%87%E8%AF%86%E7%AC%A6%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6%2F</url>
    <content type="text"><![CDATA[标识符：自己可以起名字的地方，包括变量，方法，函数,类，模块； 1.可以由大小写字母，数字，下划线（_）组成，其中数字不能开头； 2.标识符不能是python关键字，但可以包含关键字； 3.标识符不能包含空格。 对象本质：一个内存模块，拥有特定的值，支持特定类型的相关操作； 引用：在python中，变量也称为引用，因为变量存储的对象就是地址。 基本语法 : 在Python中严格区分大小写; Python中的每一行就是一条语句，每条语句以换行结束; Python中每一行语句不要过长（规范中建议每行不要超过80个字符）; “rulers”:[80], 一条语句可以分多行编写，多行编写时语句后边以\结尾 ; Python是缩进严格的语言，所以在Python中不要随便写缩进 ; 在Python中使用#来表示注释，#后的内容都属于注释，注释的内容将会被解释器所忽略;一般习惯上#后边会跟着一个空格 IDE（Integrated Development Environment），集成开发环境。是用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面等工具。集成了代码编写功能、分析功能、编译功能、调试功能等一体化的开发软件服务套。 常用IDE ： Atom、Sublime、Pycharm、VS Code是Python使用者常用的几款IDE。pycharm-professional-2018.1.3 : 第三方IDE打开多个.py文件时，页面较为友好。同时还有以下优点：智能提示、代码着色、代码跳转、自动完成、单元测试、版本控制等等。 运算符 描述 [] [:] 下标，切片 ** 指数 ~ + - 按位取反, 正负号 * / % // 乘，除，模，整除 + - 加，减 &gt;&gt; &lt;&lt; 右移，左移 &amp; 按位与 ^ 按位异或 &lt;= &lt; &gt; &gt;= 小于等于，小于，大于，大于等于 == != 等于，不等于 is is not 身份运算符 in not in 成员运算符 not or and 逻辑运算符 = += -= *= /= %= //= **= &amp;= ^= &gt;&gt;= &lt;&lt;= （复合）赋值运算符 1. print() user_name = &#39;Charlie&#39; user_age = 8 # 指定sep参数，同时输出多个变量和字符串，指定分隔符 print(&quot;读者名:&quot; , user_name, &quot;年龄:&quot;, user_age, sep=&#39;|&#39;) # 指定end参数，指定输出之后不再换行 print(40, &#39;\t&#39;, end=&quot;&quot;) print(int(&#39;ff&#39;, 16)) # 255, 将16进制的ff转成十进制 print(int(&#39;101&#39;, 2)) # 5, 将2进制的101转成10进制 print(chr(97)) # a, 转为字符 print(ord(&#39;a&#39;)) # 转为ASCII码]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于python的一些理解]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F02%E5%85%B3%E4%BA%8Epython%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[问题1. java和python之间的比较？不同点： java是编译型的语言，而python是解释型的语言； java是静态类型语言，而python是动态类型语言（python在声明变量不需要指定变量的类型）； 编写风格，java封装了大括号的所有内容，而python则保持了代码的整洁性和缩进，同时缩进也决定了代码的执行过程； python可以更好的节省预算，可以在很短的事件内开发出应用程序； java是移动开发中最优选的语言，与数据库的连通性更强，更安全， 相同点： python和java都有强大的社区和库支持，都支持面向对象编程； java与 问题2. 解释python中的引用计数和垃圾回收。python通过引用计数和垃圾回收来实现内存的自动分配和释放 顾名思义，引用计数来计算程序中一个对象被其他对象引用的次数，每当一个对象引用被消除时（如删除一个对象，重新分配引用或者对象超出范围），引用计数就减去1，引用计数变为0时，对象就会被释放。当一个对象被分配在一个名称或者放置在一个容器中时，引用计数就会增加。 垃圾回收机制允许python释放和回收不再使用的内存块，这一过程是定期进行的，在程序执行时启动垃圾回收器，当一个对象引用计数减少为0时，将触发垃圾回收器。 问题3.问题4.问题5.问题6.问题7.问题8.问题9.问题10.问题11.]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python简介]]></title>
    <url>%2F2019%2F02%2Fpython%2Fpython%E5%9F%BA%E7%A1%80%2F01_python%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[用任何编程语言来开发程序，都是为了让计算机干活，比如下载一个MP3，编写一个文档等等，而计算机干活的CPU只认识机器指令，所以，尽管不同的编程语言差异极大，最后都得“翻译”成CPU可以执行的机器指令。而不同的编程语言，干同一个活，编写的代码量，差距也很大。 比如，完成同一个任务，C语言要写1000行代码，Java只需要写100行，而Python可能只要20行；C程序运行1秒钟，Java程序可能需要2秒，而Python程序可能就需要10秒 Java占据了世界上绝大部分电商，金融，通信等服务端应用的开发；而C,C++占据了世界上大部分贴近操作系统的硬件编程； 编译型语言：c,c++,Go,Swift,Object-c,Pascal解释型语言：JavaScript,Python,Rby,PHP,Perl,Erlang混合型：Java,C# python介绍:是一种解释型，面向对象的语言;由吉多·范罗苏姆（Guido van Rossum）于1989年发明，1991年正式公布；官网 www.python.org;设计哲学：优雅，明确，简单。 许多大型网站就是用Python开发的，例如YouTube、Instagram，还有国内的豆瓣。很多大公司，包括Google、Yahoo等，甚至NASA（美国航空航天局）都大量地使用Python。 python的历史:1. 1989年圣诞节：Guido von Rossum开始写Python语言的编译器。 2. 1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，还有对列表、字典等核心数据类型，同时支持以模块为基础来构造应用程序。 3. 1994年1月：Python 1.0正式发布。 4. 2000年10月16日：Python 2.0发布，增加了完整的垃圾回收，提供了对Unicode的支持。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。 5. 2008年12月3日：Python 3.0发布，它并不完全兼容之前的Python代码，不过因为目前还有不少公司在项目和运维中使用Python 2.x版本，所以Python 3.x的很多新特性后来也被移植到Python 2.6/2.7版本中。 6.2009年6月：Python发布3.1了版本。 7.2011年2月：Python发布3.2了版本。 8.2012年9月：Python发布3.3了版本。 9.2014年3月：Python发布了3.4版本。 10.2015年9月：Python发布了3.5版本。 11.2016年12月：Python发布了3.6版本。 目前我们使用的Python 3.7.x的版本是在2018年发布的，Python的版本号分为三段，形如A.B.C。其中A表示大版本号，一般当整体重写，或出现不向后兼容的改变时，增加A；B表示功能更新，出现新功能时增加B；C表示小的改动（例如：修复了某个Bug），只要有修改就增加C。如果对Python的历史感兴趣，可以阅读名为《Python简史》的博文。 python的优缺点:Python的优点很多，简单的可以总结为以下几点。 简单和明确，做一件事只有一种方法。 学习曲线低，跟其他很多语言相比，Python更容易上手。 开放源代码，拥有强大的社区和生态圈。 解释型语言，天生具有平台可移植性。 对两种主流的编程范式（面向对象编程和函数式编程）都提供了支持。 可扩展性和可嵌入性，例如在Python中可以调用C/C++代码。 代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。 Python就为我们提供了非常完善的基础代码库，覆盖了网络、文件、GUI、数据库、文本等大量内容，被形象地称作“内置电池（batteries included）”。用Python开发，许多功能不必从零编写，直接使用现成的即可。 Python还有大量的第三方库 Python的缺点主要集中在以下几点。 1. 执行效率稍低，因此计算密集型任务可以由C/C++编写。 2. 代码无法加密，但是现在很多公司都不销售卖软件而是销售服务，这个问题会被弱化。 3. 在开发时可以选择的框架太多（如Web框架就有100多个），有选择的地方就有错误。 python的用途： WEB应用：Facebook 豆瓣⋯ 爬虫程序： 网络数据采集 科学计算： 云基础设施 自动化运维; 大数据（数据清洗）：科学计算和可视化、数据分析、量化交易 云计算; 桌面软件/游戏; 人工智能：机器人开发、自然语言处理、图像识别; GUI开发 python的解释器分类： CPython（官方）: 用c语言编写的Python解释器; IPython是基于CPython之上的一个交互式解释器，只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。 PyPy : 用Python语言编写的Python解释器; IronPython : 用.net编写的Python解释器; Jython : 用Java编写的Python解释器,可直接调用java类库，适合在java平台上开发 python2 和 python3的区别：1. python3中，print不再是关键字，而是函数， 2. 比如原来是 print ‘abc’ 现在是 print(‘abc’)但是 python2.6+ 可以使用 from future import print_function 来实现相同功能 3. 在Python 3中，没有旧式类，只有新式类， 4. 原来1/2（两个整数相除）结果是0，现在是0.5了， 5. 新的字符串格式化方法format取代%,从 python2.6+ 开始已经在str和unicode中有该方法, 同时 python3依然支持 % 算符 6. 对 bytes 和 原生 UNICODE 字符串的支持, 删除了 unicode 对象, str 为原生 unicode 字符串, bytes 替代了之前的 str. 7. xrange重命名为range。同时更改的还有一系列内置函数及方法, 都返回迭代器对象, 而不是列表或者 元组, 比如 filter, map, dict.items 等 8. != 取代 &lt; &gt; 在python2中 也很少有人用 &lt; &gt; 所以影响不大 9. 某些类库的变化，组织结构变了些. 但功能没变. urlparse - &gt; urllib.parse 这样的变化 import this print(this) # 可以看到Tim Peter撰写的“Python之禅”]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux解压和压缩命令]]></title>
    <url>%2F2018%2F10%2Fdeploy%2Flinux%2Flinux%E8%A7%A3%E5%8E%8B%E5%92%8C%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[.tar 解包：tar xvf FileName.tar 打包：tar cvf FileName.tar DirName (注：tar是打包，不是压缩！) ——————————————— .zip 解压命令 格式为 unzip 压缩文件名 压缩目录 格式为 zip 压缩文件名 源目录 ——————————————— .gz 解压1：gunzip FileName.gz解压2：gzip -d FileName.gz压缩：gzip FileName .tar.gz 和 .tgz 解压：tar zxvf FileName.tar.gz压缩：tar zcvf FileName.tar.gz DirName ——————————————— .bz2 解压1：bzip2 -d FileName.bz2解压2：bunzip2 FileName.bz2压缩： bzip2 -z FileName .tar.bz2 解压：tar jxvf FileName.tar.bz2压缩：tar jcvf FileName.tar.bz2 DirName ——————————————— .bz 解压1：bzip2 -d FileName.bz解压2：bunzip2 FileName.bz 压缩：未知 .tar.bz 解压：tar jxvf FileName.tar.bz压缩：未知 ——————————————— .Z 解压：uncompress FileName.Z压缩：compress FileName .tar.Z 解压：tar Zxvf FileName.tar.Z压缩：tar Zcvf FileName.tar.Z DirName ———————————————.zip 解压：unzip FileName.zip压缩：zip FileName.zip DirName ——————————————— .rar 解压：rar x FileName.rar压缩：rar a FileName.rar DirName ——————————————— .lha解压：lha -e FileName.lha压缩：lha -a FileName.lha FileName ——————————————— .rpm解包：rpm2cpio FileName.rpm | cpio -div ——————————————— .deb解包：ar p FileName.deb data.tar.gz | tar zxf -]]></content>
      <categories>
        <category>部署</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[40篇短文掌握3500单词]]></title>
    <url>%2F2018%2F06%2Fothers%2Fenglish%2F40%E7%AF%87%E7%9F%AD%E6%96%87%E6%8E%8C%E6%8F%A13500%E5%8D%95%E8%AF%8D%2F</url>
    <content type="text"><![CDATA[50篇短文搞定高考英语3500单词 Fall in Love with English爱上英语Hiding behind the loose dusty curtain, a teenager packed up his overcoat into the suitcase. He planned to leave home at dusk though there was thunder and lightning outdoors. He had got to do this because he was tired of his parents’ nagging about his English study and did not want to go through it any longer. He couldn’t get along well with English and disliked joining in English classes because he thought his teacher ignored him on purpose. As a result, his score in each exam never added up to over 60. His partner was concerned about him very much. She understood exactly what he was suffering from, but entirely disagreed with his idea. In order to calm him down and settle his problem, she talked with him face to face and swapped a series of learning tips with him. The items she set down helped him find the highway to studying English well. The teenager was grateful and got great power from his friend’s words. Now, he has recovered from being upset and has fallen in love with English. 有个少年躲在积满灰尘的松散窗帘后把大衣装入手提箱。尽管外面正打雷闪电， 他仍计划在黄昏时分离家出走。他不得不这样做是因为厌倦了父母对他英语学习的唠叨，不想再忍受下去了。他的英语学习总是无法取得进展，而且不喜欢参加英语课的学习，因为他以为老师有意忽视他。结果，他每次考试的分数合计从未超过60。 他的搭档很关心他，也确切地理解他遭受的折磨，但却完全不同意他的想法。为了使他冷静下来好好解决问题，她和他面对面地交谈，并交换了一系列的学习心得技巧。她写下来的条款帮助他找到了学好英语的最佳捷径。这个少年非常很感激，并从朋友的话里获得极大的动力。现在，他已经从沮丧中恢复过来，真正爱上了英语。 不同的国家有不同的英语 Different Countries Have Different Kinds of EnglishesVoyages of people from England play an important part in spreading the English language. At present, English is frequently spoken as an official or common language in many countries, such as America, Singapore, Malaysia and some African countries. All based on British English, the English spoken in these countries can be well understood by native English speakers. But actually, these Englishes have been gradually changing in accents, spellings, expressions and the usage of vocabulary.Because of this fact, you can make use of the differences to tell which country the foreigners of your block are from. For example, if a boss fluently commands his driver, “Come up straight to my apartment by elevator and take some gas for my trucks and cabs”, instead of requesting, “Please come to my flat by lift and take some petrol for my lorries and taxis”, you can recognize his American identity, while the latter suggests that he is British. 英国人的航海在英语的传播中扮演了重要的角色。目前，英语在许多国家被作为官方语言或通用语言频繁地使用，例如美国、新加波、马来西亚和一些非洲的国家。这些国家的英语都以英式英语为基础，能很好地为以英语为本族语的人所理解。但是实际上，这些英语在口音、拼写、表达和词汇的使用方面都在逐渐变化。因为这一情况的存在，你就可以利用这些英语之间的区别说出你们街区的外国人是哪个国家来的了。例如，如果有个老板流利地命令他的司机：“Come up straight to my apartment by elevator and take some gas for my trucks and cabs（直接搭电梯到我公寓上来拿卡车和出租车的汽油）”，而不是要求说，“Please come to my flat by lift and take some petrol for my lorries and taxis（请直接搭电梯到我公寓上来拿卡车和出租车的汽油）”，你就可以轻易地辨认出他的美国人身份，而后者却暗示着那是一位英国人。（请注意：听力录音里第二段两个“电梯”的单词跟原文不一致，原文是对的，录音弄错了，elevator才是美式说法而lift是英式说法。) 3.A Hard Trip一次辛苦的旅行My sister was fond of traveling. Ever since graduating, she had been determined to organize a trip to an old temple. Since transporting fare was expensive, she decided to use a bicycle to cycle there not caring about the disadvantages. Her stubborn attitude was always her shortcoming. Once she made up her mind to do something, no one could persuade her to change her mind. Finally, we gave in as usual though we preferred to take a train. After we prepared everything, including the schedule, reliable weather forecast and the insurance, we began our trip.Our journey was along a river flowing from a high altitude. Our pace was slow because the river frequently had many sharp bends through deep valleys, where the water seemed to boil. Just as I recorded in my journal, it was really a hard journey. But we also enjoyed great views. One night, I put my head on my pillow–a parcel of wool coats, and lay beneath the stars. When the flame in front of our cave went out at midnight, I found the sky so beautiful! 我的妹妹很喜欢旅行。自从毕业以来，她就下定决心要组织一次往一座古庙的旅行。因为交通费用昂贵，她决定骑自行车去，毫不担心其中的不利情况。顽固的态度一直都是她的缺点，一旦她下定决心要做的事，就没有人能说服她改变主意。最后，我们像往常一样让步，尽管我们更喜欢乘火车去。我们准备好了所有东西，包括时间表、可靠的天气预报，还有保险，就开始了旅程。 我们的旅程沿着一条从高海拔处流下来的河流前行。但我们的步伐很慢，因为当流经深深的峡谷时，这条河流急转弯很多，急湍的河水都似乎沸腾起来。正如我在旅行日志里记录的那样，这真是一次艰苦的旅行。但是我们也欣赏到了美丽的景色。一天晚上，我把头枕在一包羊毛衣服做的枕头上，躺在星空下，当岩洞前的火焰在午夜熄灭时，我发现夜空是如此的美丽！ 4.A Horrible Earthquake可怕的地震Dirty water rose in wells and canals before the earthquake. But no one judged that an earthquake was coming. Suddenly, everything shook. It seemed as if the world was at an end. Millions of brick houses and a number of dams were destroyed. Railway tracks became useless bars. Pipes in mines burst and let out smelly steam. Huge cracks trapped cyclists everywhere.The next day, this event was the headline or main title of all newspapers. With the reporters giving an outline of the disaster, the whole nation was shocked by the damage and the victim’s extreme suffering. People were moved when they read that the survivors comforted each other by saying “Congratulations! You survived!”. So they not only expressed their sympathy sincerely, but also organized together to help the victims right away. The injured were rescued and the dead were buried. The frightened survivors were dug out from under the ruins and were offered shelter, fresh water and electricity. Thanks to people’s help, the loss was minimized. 地震前，水井和运河里的污水都涨涌起来。但是却没人判断出地震即将来临。霎那间，一切都在摇晃，似乎整个世界就要结束。数以百万的砖房和许多水坝遭到破坏；铁路轨道都变成无用的铁条；煤矿管道纷纷爆裂，发出有臭味的蒸汽；到处都有骑车的人被巨大的裂缝陷住。第二天，所有报纸都纷纷以大字标题或主要标题报道了这一事件。记者们描述了灾难的大概情况，全国都被地震的破坏和灾民们极度的苦难所震惊。当人们读到幸存者以“恭喜啊，你还活着。”来互相安慰时，都被感动了。人们不仅衷心地表达了他们的同情，而且还立刻组织起来帮助灾民。伤员被救助了，死者被埋葬了，吓坏的幸存者被从废墟中挖出来了，栖身处、净水和电力也很快得到提供。多亏了人们的帮助，灾区的损失被减到了最小。 5.The Great President伟大的总统As the founder of the republic, the president had many good qualities. Before coming to power, he was a generous lawyer. He was willing to selflessly help everyone who turned to him. He accepted no fee to offer legal guidance and opinions to those who were out of work or uneducated. Later, believing all mankind to be equal, he devoted himself to stopping the unfair anti-black laws. He set up the Black Youth League and was voted to be the leader. However, though he kept peaceful principles without violence and terror, his mean enemies still blew up his house and attacked his relatives, and he himself couldn’t escape being sentenced to 30 years in prison.Not fearing of the prison guards’ cruelty, he kept active and begged no mercy from them. As a matter of fact, he was always hopeful and never lost heart during the stage even though he was in trouble.Finally, people rewarded him with the leader’s position and a gold blanket. 作为共和国的创始人，这位总统具备许多的优秀品质。还在掌权之前，他就是一位慷慨的律师。他愿意无私地帮助那些向他求助的人。他免费为失业的，或没有受过教育的人提供法律指导和意见。后来，因为相信所有人类都是生来平等，他全身心投入到废除不平等的反黑人法律工作中。他建立了黑人青年团并被选为领袖。然而，尽管他坚持没有暴力、没有恐怖的和平原则，卑鄙的敌人还是炸毁了他的家、袭击了他的亲属，他自己也无法逃脱被判30年徒刑的遭遇。在狱中，他毫不畏惧狱警的残酷，始终保持积极的态度，不向他们乞求怜悯。实际上，他在任何一个困境时期都充满着希望，从未灰心。最后，人们以领袖的职位和一块金毯子回报了他的贡献。 6.A Brave Maid勇敢的女仆A wooden vase from the Ming Dynasty at the entrance of the reception hall amazed everyone. The artists designed it in a rare style and selected valuable jewels to decorate it. People thought highly of its fancy colour of honey and the beautiful paintings on it.The vase used to belong to a former castle. But when the country was at war, the enemy troops exploded the castle. Debates on how the vase survived went on and on. In order to remove people’s doubt, a team of no less than 20 people carried out an informal investigation. The evidences they found showed that a maid took the vase apart and asked a sailor to sink it in a local well. She never gave away the secret even under the cruel trial of the enemies who were in search of treasures.It is worth giving this brave maid a fortune in return. 接待大厅入口处的明朝木制花瓶 使每个人都惊奇不已。艺术家以一种罕有的风格设计它，并挑选了贵重的珠宝装饰它。人们高度赞赏它那蜂蜜般的奇特颜色，还有上面绘制的绘画。这个花瓶曾经属于一座从前的城堡，但在战争期间，敌人的军队炸毁了城堡，于是关于这个花瓶是如何幸存下来的争论就一直在持续着。为了解开人们的疑问，一个由不少于20人的调查队开展了一次非正式的调查。他们找到的证据表明，有个女仆 把花瓶拆开，然后让一名水手把它沉到当地的一个水井里。她从来没有泄露这个秘密，即使是在搜寻财宝的敌人残酷的审讯下。这位女仆真是值得给予一大笔钱作为对她的回报。 7.A Fair Competition公平的比赛Swifter, Higher and Stronger stands for the spirit of the Olympics. But fairness is the basis of this motto. Only when you win fairly will you and your homeland deserve the great glory. But nowadays, unlike the ancient honest slave competitors, some hopeless athletes who can’t bear the pain of training cheat when taking part in games. Medals seem to have magical power causing them to cheat, and the prize money has replaced the motto as their only goal.So, in the gymnastics event to be held in our city next month, one of the host’s responsibilities is to keep competitions fair. They advertised on posters outside the stadium to promise that every competitor is to have a regular physical examination in a gymnasium one after another. No one can bargain on this. The volunteers in charge will be very strict. It is foolish to cheat because they will not be admitted to compete and will even be fined as well. “更快！更高！更强！”代表着奥运精神。但是公平却是这一格言的基础。只有当你公平地赢得比赛，你和你的祖国才会承受这样的光荣。但如今，不像古代那些诚实的奴隶参赛者，有些没有希望的运动员无法承受训练的痛苦，于是在参加比赛时作假。奖牌似乎有某种魔力使他们作假，奖金也已经代替了奥运格言成为了他们唯一的目标。因此，在我们市下个月即将举行的一场体操赛事中，主办方的其中一项责任就是要确保比赛的公平。他们在体育场外的海报上做广告，承诺说每个参赛者都将在体育馆一个一个地参加常规的身体检查。对此没有人可以讨价还价。负责此事的志愿者将非常严格。作假是很愚蠢的，因为他们将不被允许去竞赛，甚至还将被罚款。 8.Computers 电脑The goal of early calculating machines was to simplify difficult sums. But with the help of new technology, electronic chips replaced tubes and a revolution of artificial intelligence has arisen. From then on, the appearance of computers totally changed our lives. They can not only download information from the wet when connected by the network or mobile phone signals, but also solve different types of logical problems. With operators as their coaches, they can even control rockets to explore the moon and instruct androids with the human race’s characters to mop floors and watch over your naughty niece. Anyhow, computers are so helpful that they do bring happiness.However, computers are easily attacked by viruses. This reality has become a hard-to-deal with-problem. As a result, computers are dangerous in a way. So, personally, I worry about their universal applications in some fields, such as finance. 早期计算机器的目的是简化比较难的计算。但是在新技术的帮助下，电子芯片代替了电子管，一场人工智能革命由此掀起。从那时起，电脑的出现完全改变了我们的生活，它们不仅能在网络或移动电话信号的连接下从网上下载信息，而且可以解决各种类型的逻辑问题。在操作员的教练下，它们甚至还可以控制火箭探索月球，指导具有人类性格的机器人擦洗地板和照顾你调皮的侄女。不管怎么说，电脑都是如此的有用，以致的确给人们带来了快乐。然而，电脑很容易受到病毒的攻击，这一现实已经成为一个难以处理的难题，结果，电脑在某种程度上是很危险的。因此，就个人而言，我很担心电脑在某些领域，例如金融方面的广泛应用。 9.Wildlife Protection 保护野生动植物Dinosaurs died out because of an unexpected incident. But wildlife today disappears or is in danger just because humans do harm to it. For example, tigers are hunted for fur to make carpets so that they can only live in secure reserves; grassland is destroyed without mercy so that dust storms come into being affecting distant cities.Last year, scientists saw some monkeys rubbing themselves with a certain kind of insects to protect themselves from fierce mosquitoes biting. According to the result of the inspection, they found that the insect contains a powerful drug, so local farmers were employed to catch the insects. The ending was that the insects disappeared from the whole zone. When told that it was a loss to humans, the farmers burst into laughter and responded, “Our real loss is our decreasing income.”We should appreciate the natural balance and pay more attention to the importance of wildlife protection. Not until we succeed in letting wildlife live in peace, can we smile in relief. 恐龙因一次意外事件而灭绝，但是今天的野生动植物却是因为人类的伤害而消失或处在危险中。例如，老虎被猎杀以获取做地毯的皮毛，以致它们只能生活在安全的保护区里；草地被毫不怜悯地破坏，以致沙尘暴开始影响遥远的城市。 去年，科学家观察到猴子在身上擦某种昆虫来保护自己不受凶猛的蚊子的叮咬。根据检查的结果，他们发现这种昆虫含有一种具有强大效力的药物，于是，当地的农民都被雇来抓虫子。结果是，这种昆虫从这整个地区都消失了。当被告知说这是整个人类的损失时，农民们都突然大笑着回应道：“我们减少的收入才是我们真正的损失呢！”我们应该意识到自然平衡的重要，更加注意野生动植物的保护。直到我们成功让野生动植物安详平静地生活，我们自己才能如释重负地笑开颜。 10.My First Band我的第一支乐队I was very sensitive to music. Just dipping into the music books briefly, I could sing or play well. To be honest, I always dreamt of becoming a famous folk actor. I was so confident that I never decreased my devotion.I formed my first band called “Rolling Frog”. At the beginning, we relied on performing on instruments in pubs or to passers –by to earn extra money in cash. Then we wore false beards to pretend to be the musicians whom people were familiar with. In addition, we attached humorous acts to our performances and played jokes on each other. Soon, our “funny jazz” became famous and invitations to perform for broadcast stations began to come. Afterwards, we sorted out attractive music and made a record in a studio. A million or so copies were sold and we became millionaires.It was painful that the band broke up finally. But above all, I realized my dream to be a musician. 我对音乐很敏感，只要简要地浏览一下乐谱，我就能演唱或演奏得很好。说实话，我一直都梦想着能成为出名的民间演员，自信的我从未减少过热爱。我组成的第一支乐队叫做“摇滚蛙”。开始，我们依靠在酒吧里或向路人表演乐器来挣些零花的现金。然后我们带上假胡子假扮人们熟悉的音乐家，除此之外，我们在表演中加上幽默的动作，互相开着玩笑。很快，我们的“滑稽爵士乐”出了名，到广播电台表演的邀请开始多起来。随后，我们把我们吸引人的音乐做了分类，在一间音乐工作室录制了1张唱片，大约卖出了100万张，这使我们都成了百万富翁。乐队最终的解散让我很心痛，但最重要的是，我实现了自己当音乐家的梦想。 11.An Interesting Festival 有趣的节日The Agricultural Feast takes place after the Independence Day. It is not a worldwide celebration. Only Christians in Mexico look forward to its arrival for its religious origin:Long ago, humans’ ancestors were bad. They fooled and played tricks on each other and never kept their word. So God turned up and drowned all their crops. Humans starved day and night, weeping. In order to gain God’s forgiveness, a woman poet set off to see God. She admired God and kept apologizing. God was moved. With his permission, humans finally had good harvests again. So, to wipe sadness and remind themselves of the belief in God, people began the festival.On the festival, people gather in open air, such as playgrounds or parking lots, and energetically have fun with each other all night long, as though they were never tired. When a beauty dressed up in lovely clothing reads poems in memory of the poet, everyone holds their breath. Then, it is the custom that the bone of a rooster head is given to her as an award.Obviously, the story is not true, but the festival is interesting. 农业盛会在独立日后举行。它不是一个世界性的庆典，由于它的宗教起源，只有墨西哥的基督徒才盼着节日的到来：很久以前，人类的祖先很坏，他们互相欺骗，耍诡计，从不遵守诺言。于是，上帝出现了，淹死了他们所有的作物。人们日夜挨饿，哭泣着。为了获得上帝的原谅，一位女诗人出发去见上帝。她对上帝的赞美和怀有的歉意感动了上帝，有了他的允许，人类终于又获得了丰收。因此，为了抹去忧伤并提醒自己对上帝的信仰，人们开始举办这个节日。在节日那天，人们聚集在露天场所，例如操场或停车场，通宵达旦地玩得非常开心，精力充沛的人们似乎不知疲倦。当一位用可爱的衣服盛装打扮的美女朗读诗歌以纪念那位诗人时，在场的每个人都屏住了呼吸，然后，按照风俗，将奖励给她一只公鸡的头骨。很明显，这个故事不是真的，但是节日却很有趣。 12.Balanced Diet平衡膳食Wang Peng earned his living by running a barbecue restaurant, which served delicious bacon, fried chicken breast and mutton roasted with pepper and garlic. But his food and discount attracted fewer and fewer customers. Finally, he was in debt. Yong Hui’s slimming restaurant served fresh peas, carrots, eggplants, and raw cucumbers with vinegar. As the hostess, she said fibres benefited customers’ digestion the most. In order not to let Yong Hui get away with tellinglies, Wang Peng spied on Yong Hui despite her glare. But he was surprised that she was losing her customers, too.Curiosity drove Wang Peng to consult an expert. The expert sighed and said, “Both of your menus have weakness and limited strength. Your customers put on weight too easily, while Yong Hui’s lose weight too quickly. So, Wang Peng, cut down the fat of your food and increase vegetables and fruits, like nuts, beans, mushrooms, peaches and lemons. You ought to combine the two menus and provide a balanced diet.”Before long, Wang Peng won his customers back. 王鹏经营一家烧烤餐厅来谋生，他的餐厅供应美味的腊肉、油炸的鸡胸，还有用辣椒和大蒜一起烤制的羊肉。但是，他的食物和折扣吸引的顾客越来越少，最后是他负债累累。永慧的减肥餐厅供应的是新鲜的豌豆、红萝卜、茄子和醋腌的生黄瓜。作为老板娘（女主人），她总是说食物纤维才最有利于顾客的消化。为了不让永慧说了谎不受惩罚，王鹏不顾她的怒视，前去探查个究竟。但是让他惊奇的是，永慧的顾客也在严重地流失。 好奇心驱使王鹏去咨询专家。那位专家叹息着说：“你们俩的菜单都缺点明显、优点有限。你的顾客很容易就发胖，而永慧的顾客体重却减轻得太快。所以嘛，王鹏，你要减少你的食物中的脂肪含量，增加蔬菜和水果，例如坚果、豆类、蘑菇、桃子和柠檬之类。你应该把两份菜单结合起来，给顾客提供平衡的膳食。”不久，王鹏就赢回了他的顾客。 13.Sailing Home 划船回家This novel was about an unbelievable but genuine adventure. Its author was a black businessman who was brought up in America. In 1956, he visited Africa, his birthplace. One day, when he was wandering on the pavement near the bay enjoying the sea scenes, he lost his money and passport that he kept in an envelope. So he went to the embassy to seek help, but the ambassador with rude manners didn’t permit his staff to help though he bowed to him. Staring at his impatient face, he understood that it was the fault of his skin colour that accounted for their refection. So he decided to take a chance to sail on a small boat home.He met a large amount of difficulty but was never stopped. On the contrary, difficulty pushed him to go ahead harder. Three months later, he was spotted by a ship by accident. He was in rags indeed. A maid even screamed when bringing him a steak and pineapple dessert. Aboard, he earned his passage by working as a barber and got home finally. As for the name of his novel, he couldn’t think of a better one than the phrase “Go Ahead”. 这部小说写的是一次令人难以置信而又真实的历险。其作者是一位在美国被抚养长大的黑人商人。1956年，他回到他的出生地非洲。有一天，当他在海湾边的人行道上漫步欣赏海景时，他丢失了一个装着钱和护照的信封，于是向当地的大使馆寻求帮助。但是大使态度非常粗鲁，即使向他鞠躬，也不允许他的职员帮忙。盯着他那不耐烦的脸，他知道是他皮肤颜色的错才导致了他们的拒绝。于是，他决定冒险驾驶一只小船回家。他遇到了许多困难，但是从未停止，相反，困难推动他更努力地前进。三个月后，当他被一艘船偶然发现时，真的是衣衫褴褛。给他端来牛排和菠萝甜品的女仆甚至被吓得尖叫起来。在船上，他当一名理发师来挣取船费，最后终于回到了家。至于这部小说的名字，他再也不能想到一个比“前进”更好的短语了。 14.Explore MKII 探测MKII行星MKII, a planet billions of kilometers away, is the origin of life in many religions. Physicists have proved the theory that its gentle climate and the pull of its gravity are similar to the earth’s. And astronomers have found that oxygen atoms and carbon dioxide, which are fundamental to life, exist in its atmosphere through satellites. Cheered up by this news, biologists, in their turn, began to do some research to remove people’s puzzles—Now that there are some suitable conditions, does life really exist on this globe? Do they multiply by laying eggs or giving birth to babies?Last month, a spaceship was sent there. It’s a pity that this mission failed. Unlike the earth, MKII is a much younger planet. Thus, masses of harmful acid clouds float everywhere causing violent chain reactions to break out. These clouds not only blocked out the pilots’ sight but also damaged the engine system. Luckily, the pilots watched out carefully and prevented the spaceship from crashing in time. MK二号是一颗几十亿公里外的行星，它在许多宗教里都是生命起源的地方。物理学家已经证明了它温和的气候和重力的牵引都和地球相似的理论；天文学家也通过卫星，在它的大气层里发现了氧原子和二氧化碳的存在，这些都是对生命来说，都是基本的。受到这一消息的鼓舞，生物学家们接着开始了研究以解开人们的迷惑——既然有了适合的条件，生命真的存在于这个星球吗？他们是通过下蛋，还是产仔来繁殖后代的呢？ 上个月，一艘太空飞船被派到了那儿。可惜的是，这次任务失败了。不像地球，MK二号是一颗年轻得多的行星。因此，大团大团的有害酸云到处漂浮，引起猛烈的连锁反应的爆发。这些云团不仅阻挡了飞行员的视线，而且还损坏了发动机系统。幸运的是，飞行员小心注意，才及时阻止了飞船的坠毁。 15.A Journey across Canada横穿加拿大的旅行After a quiz last autumn, Kuang crossed the continent eastward to Toronto to visit his schoolmate, the distance measuring approximately 5,000 kilometers,His train started from Vancouver, a city surrounded by mountains. After confirming his baggage was aboard the train, Kuang settled down in his seat. Having a gift for communication, he started chatting with another passenger within 5 minutes. Their topics included the Canadian traditions, the Prime Minister, the mixture of races, and the terrifying Great Fall. After a nice buffet at noon, he was pleased to find that the scenery was impressive. He saw beautiful harbours in the distance, wealthy urban areas and maple forest that covered thousands of acres. He even managed to catch sight of an eagle flying upward over bushes.Kuang reached Toronto which lies slightly near the border at a misty dawn. There was frost and the broad downtown streets were very quiet. Though it was early, Kuang phoned his schoolmate in a booth nearby at once rather than waiting for him to come. They had a good time together. 去年秋天的一次考试后，光向东横穿整个大陆，来到多伦多探望他的同学，这次旅行的距离测量起来大约有五千多公里。 他的火车从群山围绕的温哥华启程。在证实了自己的行李都在火车上之后，光就在座位上安坐下来。因为在与人交流方面有天赋，他在5分钟内就和另一个乘客聊起天来。他们的话题包括加拿大的传统、加拿大的总理、种族的混合，还有让人心惊胆战的大瀑布。中午吃了一顿美味的自助餐后，他很高兴发现外面的风景非常让人印象深刻。他看见了远处美丽的海港、富裕的市区，还有延绵几千亩的枫树林，他甚至还设法看见了一只在灌木丛上空翱翔的鹰。光在一个薄雾笼罩的黎明到达稍稍接近边境的多伦多，地上有霜，宽阔的市区街道很安静。尽管还很早，光却不愿等待，立刻就在附近电话亭给同学打了个电话。他们在一起度过了美好的时光。 16.A Woman Doctor-Lina女医生丽娜Born in a pigs’ nest, Lina led a poor life in her childhood. She was looked down upon by the children of her generation. But she intended to become a doctor after she came across Lin Qiaozhi by chance, who was delivering medical courses to an audience crowding around her. Before moving off, Lin inspired her to carry on her study. With Lin’s support, Lina entered an institute and studied hard sparing no time for entertainment. Her being outspoken and modest won respect for her. Her excellent arguing skills and observation ability put others into the shade.Now, Lina has become a specialist in human beings’ emergency sickness. Her kindness and considerate behavior to the poor were well known. The organization she founded carried out campaigns and welfare projects to help cut the death rate for the poor. Her job was hard but worthwhile. She often refers to the connection between her achievement and Lin Qiaozhi, and says that her poor childhood is the bond between her and the poor. 丽娜出生在猪圈里，童年过着贫穷的生活，被和她同辈的孩子看不起。但是在她偶然遇见了林巧芝之后却打定注意想要成为一名医生，当时林巧芝正在给拥挤在她身边的观众传授医疗课程，在离开之前，林巧芝鼓舞她继续坚持学习。在林的支持下，丽娜进入了一所学院。她努力学习，毫不浪费时间玩闹娱乐。她的坦诚和谦虚为她赢得了尊敬，她优秀的辩论技巧和观察能力使其他的人都黯然失色。 现在，丽娜已经成为一名人类紧急病症专家。她对穷人的好心和考虑周到的一举一动都众所周知，她建立的组织开展各种活动和福利项目来为穷人减少死亡率。她的工作艰苦却很值得。她常常提到她的成就和林巧芝之间的联系，还总是说她贫穷的童年就是她与穷人之间的纽带。 17A New Farming Way 新的耕种方式Tuan was a farmer in Vietnam. For decades, he had been struggling to rid his family of hunger. However, it always confused him how to expand the output of his crops. This disturbing problem led to his regretting being a farmer. He would rather have chosen another job.One day, when skimming through a newspaper, Tuan read a comment on Yuan Longpin. He underlined Yuan’s nationality and occupation, and then focused on his discovery and the statistics of his research. He found the knowledge Yuan circulated very practical. Therefore, he made a summary and began to build up a new farming method. He planted super grain of rich nutrition and equipped himself to keep his crops roots free from bacteria and pests. He also enriched minerals in the soil while reducing chemical fertilizers. Though it cost him more time and freedom, he was full of hope.The next year, Tuan was sunburnt but satisfied with his production very much. Thanks to Yuan Longpin, he not only won the battle against hunger, but he could also export his crops abroad. 俊是一名越南的农民，几十年来，他都一直在努力使家人摆脱饥饿。然而，如何扩大他的农作物产量这一问题却一直在困扰着他。这个恼人的问题导致了他后悔当一名农民，而宁愿自己当初选择其它的工作。 一天，俊在浏览报纸的时候，读到一篇关于袁隆平的评论。他在袁的国籍和职业下面划了线，然后将焦点集中在他的发现和研究数据上。他发现袁传播的知识非常实用，因此，他做了摘要，并开始建立一种新的耕作方式。他种植营养丰富的超级谷物，添置设备以使作物的根部免受细菌害虫的伤害；他还增加土壤所含的矿物质，同时减少化学肥料的使用。尽管耗费了他更多的时间和自由，他却充满着希望。第二年，俊被晒黑了，但是却对自己的生产非常满意。多亏了袁隆平，他不仅赢得了对抗饥饿的战斗，而且还将自己的作物出口到国外呢。 18.Chaplin-A Great Master of Humour幽默大师卓别林Chaplin was an extraordinary performer who starred in and directed many outstanding comedies. Few were bored watching his moustache, his gestures or his entertaining reactions when chased by detectives. Being drunk, sliding on a banana skin or whispering his own failures to nobody, he made us feel more content with our life without any verbal explanation. His particular sense of humor has astonished everybody throughout the world up to now. In a small budget film, he played a badly-off and homeless person wearing worn-out shoes and messy clothes. On one occasion, he was trapped by a snowstorm in a vast mountainous area. Though he overcame many difficulties, he wasn’t fortunate enough. With all the porridge eaten up, he picked out a shoe and boiled it to eat. He cut off the leather bottom and chewed it like a pancake. According to an actress, his acting was so convincing and amusing that everybody couldn’t help bursting into laughter. 卓别林是一名非凡的演员，他主演并导演了多部杰出的喜剧。看见他可笑的小胡子、滑稽的手势动作，还有面对警探的追捕时有趣的反应，很少有人会觉得厌烦。喝醉酒啦，踩到香蕉皮滑倒啦，或者自言自语（低语）自己的糗事啦，他无需任何语言解释的表演总是使我们对自己的生活感到更加满意。他独特的幽默感直到现在依然使世界各地的人们都感到惊讶。在一部小预算的电影里，他穿着磨破的鞋子和脏兮兮的衣服，扮演了一名贫穷又无家可归的人。在一幕场景中，他被一场暴风雪困在一片多山的区里。尽管他克服了许多困难，但是他还是运气不好的。粥都吃完了，他只好挑出一只鞋子煮来吃。他切下皮革的鞋底，像烙饼一样地咀嚼起来。据一名女演员所说，他的表演是如此地令人信服而又逗人发笑的，以致在场的所有人都忍不住大笑起来。 19.A Misunderstanding 一场误会In general, spoken statements are the major way of communication, but body language and facial expressions also have such kinds of function. For example, yawning means being not interested and turning one’s back to someone or swinging your fist shows your anger. But what those gestures really mean is subjective in different cultures. Thus, misunderstandings happen now and then in today’s world of cultural crossroads.Once, representing the Adults’ Education Association, I went to the airport to meet an official of high rank from Columbia and take him to his dormitory and then to the canteen. After the flight arrived, I saw a man looking around curiously. So I approached to greet him. He suddenly dashed to hug me and kissed me on both cheeks. As a young girl, I felt truly embarrassed and put up my hands to defend myself. His false smile told me that he had lost face.Later, I received a cassette from him, in which he recorded his apology. On hearing that Columbians were more likely to kiss others, I soon felt at ease. 通常说来，口头表达是人们交流的主要方法，但是肢体语言和面部表情也有这种功能。例如，打哈欠意味着不感兴趣，背对别人或向其挥舞拳头表达的是愤怒。但是在不同的文化中那些手势表达的真正意思是很主观的。由此，误会就时不时地发生在今天这个文化交叉碰撞的世界里。有一回，我代表成人教育协会到机场去接一位从哥伦比亚来的高级官员，我得带他到宿舍和食堂。当他的航班到达时，我看见一名男子好奇地东张西望，于是走上前去和他打招呼。他突然猛冲过来拥抱我，还亲了我的脸颊。还是个年轻姑娘的我感到真尴尬，不由自主举起手来保护自己。他的假笑告诉我他感到丢了面子。后来，我收到他送来的一盒磁带，里面录了他的道歉。当听到这只是因为哥伦比亚人更倾向于见面时互相亲吻时，我很快就感到轻松安心了。 20.A Unique Theme Park独一无二的主题公园As soon as our shuttle got close to the theme park by the freeway, everyone came to life and put on cloth sneakers in advance for an outing. Our translator paid for the admission, and we started enjoying the various attractions in the sunlight.According to the travel brochure, this unique park is famous for its well preserved minority culture. We experienced many deeds of the early settlers, such as swinging across rivers, hunting creatures in the jungle, or taking part in swords fighting tournaments.This park is also famous for its wooden souvenirs. Whichever we bought in the central shop was made of wood, and wherever we went we could see minority carpenters working. They made wooden tools, wooden cartoon figures, wooden athletic products and so on. They even built a huge wooden engine with a length of 20 metres, which was modeled after a real one.This theme park is really a fantasy amusement park. No wonder it has become the brand of local tourism. 我们走高速公路的来往穿梭巴士一接近主题公园，大家都活跃了起来，并且提前穿上了布鞋，做好这趟外出旅游的准备。翻译付了入场费后，我们就开始在阳光下欣赏各种各样吸引人的东西。 根据旅行手册的介绍，这个独一无二的公园因其得到良好保护的少数名族文化而闻名。我们体验了许多早期定居者所做的事，如荡过河啦，在丛林中猎杀动物啦，或者参加剑术比赛啦等等。这个公园还因为它的木制纪念品而闻名，我们在中心商场购买的任何一件物品，都是用木头制作的，无论我们走到哪里，都可以看见少数名族的木匠们在忙碌。他们制作的有木制工具、木制的卡通人物、木制的运动用的产品，等等等等。他们甚至还根据一台真实发动机仿造了一台长度有20米的木制发动机。这个主题公园真是个充满幻想的娱乐公园，怪不得它成为当地旅游业的一个品牌。 21.A Strange Disease奇怪的疾病When the construction of the firework factory came to the stage of painting, a pump was put in. Then, all the painters in the neighbourhood were defeated by a severe disease whose characteristic was alike to that of a bad burn.An expert physician was instructed to attend to the victims and handle this case. He was enthusiastic, but he didn’t foresee that it was a hard challenge. After simple enquiry, he announced that the polluted paint was to blame. But without positive evidence, people suspected and rejected his view, saying the theory he put forward made no sense. Being much more strict with himself, he contributed himself to the case. Apart from making enquiries, he made detailed charts and analysed the data cautiously. Finally, he drew a scientific conclusion, linking the disease to the radium in the pump. Exposed to radium, a kind of radioactive material in the universe, people absorbed radiation and got sick immediately.Spinning the pump backward, he took away the radium. This simple movement cured all the victims. 当那座烟花工厂的建设到了油漆阶段时，一个水泵被安装进来，接着，在它附近的油漆工都得了一种严重的疾病（疾病击败油漆工），其特征与烧伤相似。一位经验丰富的内科医生被指定去照顾受害者并负责处理这一案例。他热情地投入到工作中，但是却没有预见到这是一次艰难的挑战。在简单的询问后，他就宣布说罪魁祸首是受污染的油漆（油漆应受责备）。但是没有确实的证据，人们很怀疑并拒绝他的观点，大家都说他提出的理论毫无道理。他对自己要求更加严格，全身心地投入。除了询问，他还制作了详细的图表，谨慎地分析各项数据，最后，他终于得出了一个科学的结论，把疾病和水泵中的镭联系起来。镭是宇宙中的一种放射性物质，当暴露在镭的辐射中时，人体吸收其射线，立刻染上疾病。他把水泵向后旋转，拿走了里面的镭，这个简单的动作治愈了所有的受害者。 22.Sightseeing in the United Kingdom观光联合王国After the wedding, my cousin and his wife went to the United Kingdom for nationwide sightseeing. He faxed a letter to me in English yesterday. To my delight, he no longer made any tense error. And his description roughly clarified my questions about the UK–its currency, its administration, the institution which divides it into four provinces, and the historical conflicts and quarrels when Southern Ireland broke away from the UK.Unwilling to leave out any attraction, my cousin arranged his enjoyable journey carefully. One attractive place he visited was a castle in the countryside of Scotland, which lies near a port. It used to be the headquarters（请注意：音频里面是headquarter，没有加s，是不对的。）of the Communism Union but broke down during the war. Finding nothing could take the place of this splendid architecture, people accomplished rebuilding it in 1952. It was to their credit that all furnished rooms are consistent with what they used to be. My cousin was thrilled by its collections consisting of statues plus royal uniforms folded in glass tanks. Though there was no possibility to buy some of these exhibits, it was convenient to take photos, which he sent me along with his fax. 我的表弟和他妻子在举办了婚礼后到联合王国做全国旅游观光去了。他昨天传真了一封英文信给我，让我高兴的是，他再也不犯时态错误了，而且他的描述也粗略地向我阐明了关于英国的一些问题——它的货币啦，行政管理啦，把它分成四个行政区的制度啦，还有在南爱尔兰脱离联合王国时发生的一些历史上的冲突和争拗。因为不愿意漏掉任何一个景点，我表弟仔细地安排了他愉快的旅程。他参观的其中一个吸引人的地方是苏格兰乡村的一个城堡。城堡靠近一座港口，曾经是共产主义联盟会的总部，但是在战争中倒塌了。人们发现没有任何东西可以取代这座辉煌的建筑，于是在1952年完成了重建。值得赞扬的是，所有配备家具的房间都和它们过去一致的。由雕像加折叠在玻璃柜里的皇家制服组成的收藏品使我表弟震撼不已。尽管没有可能购买这些展览品，拍照却很方便，他在传真中一起发给了我。 23.An Air Crash飞机失事I was a previous typist in a post office. Because I couldn’t tolerate typing any more postage bills or postcodes on a typewriter every day, I resigned. With a greedy motivation of making big money, I took up working as a business representative for the G.E Ecology Company, which produced goods by recycling useful materials from our dustbins. My new job left me good impressions in many aspects except that the working timetable was full of traveling by jets.Once, when speeding up, our jet was swallowed by a thunderstorm, which destroyed our GPS receiver and made us lose sight of the directions. A constantly flashing light showed that our jet was in danger. A steward instantly asked us to put on masks and fasten the safety belts, and then pressed a button to switch on the escaping capsule. It slid sideways out of the opening at once and landed in a desert area safely. Lacking food and tablets, we were nervous and uncertain at first. But we all kept optimistic and made good adjustment to the situation. We swept up the surrounding mud to make our settlement and were back on our feet soon. Finally, guided by the smoke of our crashing jet, some local citizens came by carriages and saved us. 我以前是一家邮局的打字员，因为忍受够了每天在打字机上打邮资账单或邮政编码，我辞了职。带着想挣大钱的贪婪动机，我开始给一家叫G.E生态公司的企业当商务代表，这家公司通过回收我们垃圾箱里的有用材料生产商品。我的新工作在多方面都给了我很好的印象，除了一点：乘飞机旅行挤满了我的工作时间表。有一次，我们的喷气飞机在加速时被一场雷暴吞没，不仅损坏了GPS信号接收器，还使我们看不见方向。一盏持续闪亮的灯说明我们的飞机正处在危险中。一名乘务员立刻让我们戴上面罩、系牢安全带，接着按下一枚按钮 打开逃生仓电源，逃生仓马上侧着滑出出口，安全降落在一片荒凉的地区。因为缺少食品和药品，我们一开始都又紧张又心里没底，但是我们都保持乐观，做好调整适应这一新境况。我们打扫干净周围的泥土，安顿下来，很快就恢复过来。最后，在我们坠机烟雾的指引下，一些当地的居民搭乘马车到来，我们都获救了。 24.An Amateur Journalist业余记者Jane is a housewife, but delighted to work as an amateur journalist. It is a dilemma for her to rush between family and work, and it is also unusual for the News Department to depend on an amateur to cover crimes. But Jane is really gifted. It is admirable that she is seldom accused of making mistakes. And, eager to become more professional, she concentrates on her job and updates herself now and then.Once she is informed of a new case, her normal working process is as follows: first, she makes appointments with guilty people for interviews. So as to acquire accurate stories, she usually demands to record what they say. Meanwhile, a technically good colleague will assist her in taking photographs. Second, she assesses whether they are deliberately hiding the truth. If she is skeptical about their words, she will look into the case herself. Third, she writes thorough stories ahead of the deadline and submits it to the senior chief editor, who polishes and approves every section. Finally, her stories will be published in different editions of their magazine. 简是一名家庭主妇，但却非常乐意做一名业余记者。在家和工作之间奔波总是使她左右为难，而且对于新闻部来说，依靠一名业余人员来报道罪案也是不同寻常的，但是简真的很有天赋，让人钦佩的是她极少因为犯错而受到责备。因为渴望做得更加专业，她全神贯注于工作，且时不时地就提升自身的业务水平。一旦接到新案子的通知，她通常的工作程序如下：首先，她和有罪的人约了作采访。为了获得准确的新闻，她通常要求做录音，同时，一位技术上好的同事会协助她拍照；接着，她对受采访的人是否有故意隐瞒真相作出评估。如果她怀疑他们的话，就会亲自调查案件；然后，她在截稿期限前写出详尽的报道，呈交给高级主编，由他对每个部分做润色和批准；最后，她的新闻就发表在杂志的各个版本中了。 25.First Aid急救A boy fell ill. His organs were damaged by the radiation of an infrared ray stove. But before the ambulance arrived, a number of other injuries happened to this unlucky boy over and over again. First, he was choked by some poisonous liquid from the kettle on the cupboard. Then his wrist skin was burnt by electric shock. Finally, his ankle was cut by a pan.Fortunately, the boy’s nurse gave him proper temporary treatments according to his complex symptoms. She mildly squeezed the poisonous liquid out of his throat and put bandages firmly in place to apply pressure to the ankle wound to stop bleeding. As for the burn, she used scissors to remove his sleeve, poured a basin of cold water over the burn to cool it and put her hands on a damp blouse to cover his swollen tissue tightly. She also inspired his bravery to fight against the unbearable pain. Her first aid made a vital difference in saving his life. A ceremony was held to honour the nurse who overcame a variety of barriers to save the boy. 有个孩子病倒了，他的体内器官被一台红外线烤炉的放射线灼伤了。但是在救护车到来前，这个不幸的孩子身上还一而再、再而三地发生了许多别的伤害。开始是被橱柜上水壶里的有毒液体噎住，然后是手腕的皮肤被电击烧伤，最后，一只平底锅还割伤了他的脚踝。幸运的是，男孩的保姆根据他的复杂症状给予了适当的临时治疗。她轻轻地从他喉咙里把有毒液体挤了出来；并在脚踝合适的位置紧紧扎上绷带，施加压力使伤口的流血止住；对于烧伤，她用剪刀剪去他的袖子，倒了一盆凉水给烧伤位置降温，并找来一件湿的女式衬衫紧紧盖住他肿胀的皮肤组织。此外，她还激发起他的勇敢和难以忍受的疼痛做斗争。她的急救在挽救他性命中起了至关重要的作用。人们举办了一场典礼来表彰这位克服各种障碍挽救了男孩的小保姆。 26.Abstract Art抽象艺术Abstract art used to be controversial. On one hand, the artists stopped painting delicate figures but attempted to adopt special techniques to give people different visual impacts. On the other hand, their works, including sculptures carved out of marble or fragile clay, were all with a specific aim of showing feelings. Some conventional scholars who were allergic to abstract art said it was evidently ridiculous and neither art nor geometry. Their Traditional Art Committee predicted its soon disappearing.But nowadays, abstract art has become part of the permanent possessions of contemporary civilization. Galleries along the Madison Avenue give scores of superb exhibitions on typical abstract works, appealing to many who have a preference for abstract art. The Shadow of Egypt, a café in this district, has become the home to those aggressive abstract artists. Consequently, it is not a coincidence for you to meet one of these artists of great reputation in the flesh. They are asked for signatures and given bunches of fragrant flowers plus they are given a great deal of praise by their faithful fans. 抽象艺术曾经颇受争议，一方面，抽象艺术家们不再画精致的画像，而是试图采用特别的技巧给人们以不同的视觉冲击；另一方面，他们的作品，包括用大理石和易碎的粘土雕刻出来的雕像，都以表达感情为其明确的目的。有些对抽象艺术反感的传统学者说抽象艺术是极其明显地荒谬可笑，说它既不是艺术，又不是几何学，他们的传统艺术委员会还预言了它的迅速消失。但是到了今天，抽象艺术已经成为当代文明永久财产的一部分，麦蒂逊大道的画廊为典型的抽象艺术作品举办了许多出色的展览，吸引了许多对抽象艺术有偏爱的人。这区有家叫埃及之影的咖啡馆已经成为那些有进取精神的抽象艺术家们活动的根据地，所以，亲眼见到一位名声极大的艺术家本人并不是什么巧合的事，他们被忠实的崇拜者索取签名，并被给予成束的芬芳花朵和大量的赞扬。 27.A Russian Poem俄国童谣Since childhood, Anton had often recited poems, accompanied by pianists and violinists, at wedding ceremonies before brides and bridegrooms exchanged rings. Gradually, he found writing poems the most appropriate way to convey his joy and sorrow. When his poem Contradictory Blank won him a national championship and a scholarship to the Moscow University from a sponsor, he was just an unknown librarian. After getting his diploma, he devoted his life to writing poems. Using concrete but flexible language and the minimum of words is his style. He tried out different patterns and preferred nursery rhyme in particular. The following is a translation of one of his works made up of 3 sections:Little sparrow with heavy load,Ran out of energy and very cold;No compass and all sweat salty,Can you go through the endless darkness?Little balloon let out by the thread,Flew over cottages and was very glad;With warmth transformed from sunlight,He said he could forever fly;Take it easy, little balloon;Don’t tease the sparrow with his wound;On the bare branch and have a rest;This diamond heart will eventually get success. 从童年时起，安东就常常在钢琴师或小提琴师的伴奏下在婚礼上朗诵诗歌，为新郎新娘交换戒指前的仪式助兴。渐渐地，他发现写诗是表达他的欢乐和悲伤的最合适方式。在他还是个寂寞无闻的图书管理员时，他的诗《矛盾的空白》就获得了全国诗歌创作冠军，并为他赢得一位赞助人提供的奖学金，到莫斯科大学深造。获得文凭后，他将一生都投入到诗歌创作中。使用具体而灵活的语言和最少的词语数量是他的风格，他还喜欢尝试不同的诗歌形式，特别是童谣。下面由三部分组成的译文就是他的作品中的一首：小麻雀，负重担， 小气球，脱绳系， 别紧张，小气球筋疲力尽挡风寒， 飞越农舍真高兴， 别笑麻雀伤口留，汗水成盐无指引， 阳光给予它温暖， 光光的树梢歇片刻，能否穿越无边暗？ 永远高飞不费力； 恒（钻石）心终把成功求。 28.Let’s Help Adolescents帮助青少年Whether they are male or female, adolescents feel like deciding on everything themselves in spite of parents’ instruction, especially when they face problems like sex, mental stress, etc., which make them feel ashamed and embarrassed. Thus they often automatically get into troubles due to their imperfect comprehension and judgement. Some are addicted to cigarettes, only several packets of which will hurt their lungs and make them breathless quickly. Others can’t quit drinking alcohol, whose harmful effects include causing young pregnant women to abort or give birth to abnormal babies. The worst is drug abuse, for the withdrawal is tough once their bodies are accustomed to the drugs. Meanwhile, those who share needles bought from illegal chemists are at great risk of being infected with desperate AIDS. If so, neither injecting nor taking pills can guarantee their survival.However, don’t be disappointed at or have prejudice against our children so easily. After all, being awkward is an appendix of youth. As long as we strengthen communication with them instead of only banning this or banning that, we will surely help them avoid anything unfit. 不论男女，青少年们都喜欢不顾家长的指导，自己对一切作决定，特别是当他们面对如性、心理压力等等一些使他们觉得羞愧和尴尬的问题时更是如此。因此，由于他们理解力和判断力的不足，他们常常会无意识地陷入困境中。有的对香烟上瘾，只要几包就会对他们的肺造成损害，使他们很容易就气喘吁吁；有的没法戒除酒精带来的不良后果，包括造成年轻的怀孕女性流产或生下不正常的婴儿；最糟糕的是滥用毒品，因为一旦他们的身体对毒品习惯了，要想戒毒就相当困难了。同时，那些共用从非法药剂师处购买的注射器的青少年冒着感染令人绝望的艾滋病的极大风险，一旦感染上，不管是打针还是吃药都没法保证他们的生存了。然而，请不要轻易就对我们的孩子失望或抱有偏见，毕竟，不成熟是年轻的必然附属品。只要我们加强和他们的沟通，而不是仅仅禁止这样，不准那样，我们一定能帮助他们避开不健康的东西。 29.Refresh Our Environment恢复环境生机As the director stated on behalf of his researching group, the data of this graph makes a clear presentation of the future environmental tendency. On one hand, the quantity of fuel keeps on decreasing by 9% per year while the growth of a wide range of pollution has been a global trend. On the other hand, the mildly but steadily going up of the average temperature is resulting in catastrophes like widespread floods. Without disagreement, they subscribe to the view that it is humans’ existence and their randomly consuming energy that result in this phenomenon.Many people have a commitment that developing nuclear power or energy from outer space will stop bad consequences coming about. However, scientists and educators are opposed to this view even if our needs may be met on the whole. They tend to advocate refreshing our circumstances by saving energy and recycling waste. It is suggested that we use energy-saving appliances such as electrical motors, microwaves and so on and not be casual about little things like recycling a can. So please glance around and see what you can do. So long as everybody makes contribution, we will not have to put up with this problem anymore. 正如那位主任代表他的研究小组所说明的那样，这张图表的数据清楚地描述了未来环境的趋势：一方面，燃料的数量以每年9%的速度持续减少，同时，大范围污染的增长已经成为一种全球趋势；另一反面，平均气温轻微却稳定地升高正在造成像广泛的洪涝那样的灾难。无不同意地，他们一致赞成是人类的存在和任意的消耗能源才造成了这一现象。许多人都信奉开发核能和外太空能源会防止糟糕的后果发生的理论，然而，即使这样可以基本上满足我们的需要，科学家和教育家们仍然反对这一观点。他们更倾向于拥护用节省能源和回收废料的方法恢复环境生机，并建议我们要使用节省能源的器具，如电力发动机、微波炉等，还建议我们不要对如回收罐子这种小事漫不经心。因此，看看你身边是否有你能做的事，只要每个人都作出贡献，我们就不必再忍受这个问题的困扰了。 30.A Volcano Eruption火山爆发As the best candidate, I was appointed to collect and evaluate information for a database about diverse natural disasters, such as hurricanes, typhoons or thunderstorms. Sometimes I did this by giving out questionnaires to those who went through them. But sometimes I had to go through actual disasters myself. The Musaki Volcano was one of them.At that time, I lived in a bungalow alongside the volcano with a novelist, who came for the appreciation of its eruption. One day, when I was drawing diagrams on the balcony and he was bathing inside, the volcano erupted unexpectedly. The ash and lava fountains shooting highly in the sky varied from 50 to 100 meters in height. It was absolutely fantastic! I even noticed a rainbow appear in the fog caused by a heat wave.But, glancing through our surroundings, I foresaw the potential danger and found no guarantee of our safety. The uncomfortable gas almost made us unconscious. Sweats of anxiety began to drop. Managing to stop panicking and trembling, we quickly put on our protective suits, helmets and boots and eventually made our way to a safe place. How lucky we were even though my precious equipment and documents were all burnt to the ground! 作为最好的候选人，我被委派为一个数据库收集和评估各种自然灾害的信息，例如飓风、台风或雷暴等。有时我通过向经历过这些灾害的人分发调查问卷来收集信息，有时却得亲自经历实际的灾害。Musaki火山就是其中之一。那时，我和一名来欣赏火山爆发的小说家同住在火山边上的一座平房里。有一天，当我正在阳台上画图表而他在屋里洗澡时，火山突然爆发了，喷射到天空中的火山灰和岩浆喷泉从50米到100米不等，这一情景绝对地奇异，我甚至还注意到一条彩虹出现在热浪造成的雾里。然而，我向四周看了一下，马上预见到了潜在的危险，也发现了我们的安全毫无保障。令人不舒服的气体几乎使我们失去知觉，忧虑的汗水开始流淌下来。我们努力使自己不要惊慌和颤抖，迅速穿上保护套装、头盔和靴子，最后成功前往安全的地方。尽管我珍贵的设备和文件都烧得精光，但是我们真的非常幸运。 31.Defeat Disability战胜残疾Yang’s ambition was to get an architect certificate or become a bowling master. But when he was conducting experiments with a microscope in the basement, a tank on the bench exploded, sending him flying outwards through the exit. He was out of breath while knowing he lost his eyesight as well as 70% of his hearing. In other words, he was disabled.Feeling clumsy, he was annoyed at first though nobody made fun of him. He cut out going outdoors and just sat around at home talking to his parrot or tortoise silently. His sister resigned to help him in many ways. Her assistance and encouragement were so beneficial to his psychology that he adapted to his disability soon and became outgoing again. In a college accessible to him, he studied politics and literature. He always sat in the front row near the entry without any absence and, with the help of his handy laptop, he studied well by means of dictation. His thesis, Abolishing Slavery, met with all professors’ approval. After class, he and his companions often played drum music, which was noisy but suitable for his hearing. After graduation, he made high profits by designing software for a firm. All in all, in his community, he won his dignity and people’s congratulations.He always wished all the best to his disabled fellows and encouraged them, “Never mind! All you have is adequate to get your achievement.” 阳的雄心是，要么获得一张建筑师证书，要么成为一名保龄球高手。但是在地下室里的显微镜下进行试验时，放在长凳上的一只大桶突然爆炸，把他从出口处炸飞了出去。当知道自己除了失去70%的听力之外，还失去了视力时，他完全喘不过气来。换句话说，他残疾了。最初，尽管没人取笑他，他还是非常气恼于自己的笨拙。他取消了外出，总是在家里闲坐，和他的鹦鹉和乌龟默默相对。他的姐姐辞了职，用许多方式帮助他。她的帮助和鼓励对他的心理是如此地有益，以致他很快就适应了自己的残疾，再次变得外向起来。他在一所接受他就读的学校里学习政治和文学，总是坐在靠近入口的前排，从不缺席。在他轻便好用的手提电脑的帮助下，他用听写的方式学习得很好。他的论文《废除奴隶制》受到所有教授的一致认可。课后，他和伙伴们还常常演奏大声却适合他听觉的鼓乐。毕业后，他通过设计软件为一家公司获得很高的利润。总之，在他的社区里，他赢得了自己的尊严和人们的祝贺。他一直都把所有最好祝愿给予他残疾的同伴，并鼓励他们：“没关系，你拥有的一切一定足够你取得自己的成就！” 32．Happy Marriage Needs Fighting For幸福的婚姻需要争取As a talented navy officer, he was bound to be busy. When his wife rang him up to declare her divorce alarm, he was still scanning a digital counter to check the data so as to give an assessment of the theoretical framework for a biochemical weapon. His junior staff’s sympathy made him feel embarrassed.His wife was a part-time clerk. With his high bonus, she lived in a grand house with elegant cushions and bedding. Her favour was reading stars’ biographies or absurd fictions with endless chapters in her armchair. People envied her leisure life very much. But in fact, she was tired of being left alone. She sent emails to his mailbox every week to state her thinking and ask for his accompaniment, but never received reply of satisfaction. Tired of his explanation that he must obey the orders, she filed for divorce.Because he desired to get their holy affection back, he set other affairs aside. He trimmed his fingernails short and changed his overweight figure as well as his awful haircut. He wore an apron to prepare delicious cuisine for her. He also bought her a necklace and piles of flowers hoping that their receiver could turn around.After being tested out for 3 months in all, he eventually succeeded. 作为一名才华出众的海军军官，他注定是要忙碌的。当他的妻子打来电话宣布和他离婚的警告时，他还在查看一台数码计数器核对数据，以对一种生物化学武器的理论框架做出评估。他的下级职员表现出的同情使他很尴尬。他的妻子是一位非全日性工作的职员，有了他的高津贴，她住在一所装饰有优雅垫子和寝具的富丽堂皇的屋子里。她的爱好是坐在扶手椅上读读明星们的传记或一些有没完没了章节的荒谬小说。别人都很妒忌她安逸的生活，但是实际上，她厌透了被独自丢下。她每周都给他的邮箱发电子邮件陈述她的想法，要求他的陪伴，但却从未收到满意答复。受够了他总是必须服从命令的解释，她提出了离婚。因为渴望重新获得这份神圣的爱，他把别的事务都放在一边。他剪短了指甲，改变了超重的身材和糟糕的发型，还穿上围裙为她做可口的菜肴，他甚至还给她买了项链和成堆的鲜花，希望它们的接受者能够回心转意。在被考验了总共3个月后，他最终成功了。 33.Mark and a Seal马克和海豹Mark rented an accommodation with his pension near the shore. He paid annual visits there to enjoy the vivid beauty in the depths of the pure sea.Once, with his underwater telescope and flashlight, Mark dived along the boundary between the steep reef and the area of seaweed conservation. Suddenly, an awesome Antarctic seal with sharp teeth appeared opposite him. Every cell in his body was scared to death. But soon, he was aware that he wasn’t the target of an attack. With a neat wound in its lip caused by a shark, this grey seal was washed upside down by the tides time after time. But it tried to jog Mark as if to urge him to help it. So Mark abandoned fleeing away. With its teamwork, Mark used a net to drag the seal to the shallow water. Without pausing he helped it out after a simple operation and settled it in a narrow cave by the seaside. Every time he brought it tasty fish, it would yell and suck his hands happily. Witnesses said their anecdotes reflected a magic dimension of the relationship between humans and animals. 马克用他的退休金在海岸边租了一间住所，每年都去那儿欣赏纯净的大海深处那生动的美丽。有一次，马克带着他的水下望远镜和手电筒，潜到陡峭的暗礁和海草保护区间的分界线。突然，一只长着尖利牙齿、使人畏惧的南极海豹出现在他对面。马克吓坏了，但是很快，他就意识到，他不是攻击的目标。这只灰色海豹的唇上有道鲨鱼咬出的整齐伤口，还时不时地被潮水冲得头上脚下。尽管如此，它却总是努力轻轻碰撞马克，似乎在催促他帮助它。于是马克放弃了逃跑。在这只海豹的合作下，马克用一张网把它拖到浅水区，并毫不停歇给它动了一个简单的手术，帮助它解决了问题，然后将它安置在海边一个狭窄的洞里。每次当马克给它带来鲜美可口的鱼时，它就会高兴地大声叫唤，还吮吸他的手。目击者都说他们的轶事映射出人与动物关系中奇妙的一个方面。 34.Helping the Remote Village援助山村A year ago, the famous astronaut received an invitation by airmail from a remote village. Intending to sniff some fresh air, he and his interpreter paid a fortnight visit there. It was a privilege for them to be there, but they were shocked by what they saw. The tracks were muddy. The river was drying up. Most villagers only possessed one broom, a few tins and several jars and their rectangular grass huts with round angles were surrounded by weeds. Besides, their school had no roof and platform, and the students had no concept of clicking a computer at all. They were badly in need.Soon, the astronaut made a generous voluntary donation to the village. There were textbooks for students, sewing machines for tailors and tractors for farmers. His distribution catalogue also included operating a clinic and a trunk library, as well as giving weekly lessons to teach relevant farming knowledge like how to dry out seeds or raise oxen. He himself not only helped do some paperwork but also purchased grills for boys to toast potatoes and combs for girls who were dying to get one. The other day, he heard from the villagers again inviting him to participate in the donation anniversary. For political and security reasons, he couldn’t adjust his outgoing arrangement-otherwise he would go. But his deeds were remembered forever. 一年前，那位著名的宇航员收到一份由一个偏远村庄通过航空邮件寄来的邀请。因为想要呼吸一下新鲜空气，他和翻译到那儿做了一次两周的访问。当地之行使他们倍感荣幸，但却震惊于所见所闻。泥泞的道路、河流干枯，大部分的村民拥有的财产只不过是一只扫帚、几个瓶瓶罐罐而已，圆角的矩形草屋四周长满了杂草，学校也没有屋顶和讲台，学生们更对点击操作电脑毫无概念。他们生活确实相当困难。很快，宇航员就向村庄做了慷慨的自愿捐赠。捐赠品中有给学生的课本，给裁缝的缝纫机，还有给农民的拖拉机。捐赠金的分配目录中还包括一间诊所和一间书箱图书馆的运作，并有传授像怎么使种子干透，或者怎么养牛这种相关农业知识的每周课程。他自己不仅亲自帮助做一些文书工作，还给男孩子们购买了烤马铃薯的烤架、给渴望得到梳子的女孩子们买了梳子。前几天，他又收到了村民们邀请他参加捐赠周年会的来信。出于政治和安全原因，他无法调整外出时间安排，否则他就会去了。不过他所做的一切村民们都永远记得。 35.Study in America留学美国Nannan’s father runs an enterprise near the Ming Tombs selling batteries and drills to the Daqing Oilfield. Hoping to get the qualification to help govern it, Nannan made much preparation and then left her motherland with her visa to study in America. Having reached her destination, she settled in an inn recommended by the travel agent.As far as Nannan was concerned, she always kept it up in China. But she had to acknowledge it was not easy to adjust herself to the new academic requirements, which were not parallel with China’s. Though she was occupied with lectures and seminars day in and day out, the essays she drafted were still contradicted by her tutors. As for her routine life, she felt that it was hard to fit in, too. For example, she found English idioms difficult to understand. And it was out of the question to eat delicious Chinese foods though many optional cafeterias served abundant substitutes. In addition, she had to wait in a queue early for the minibus that took her to school and it was usually so cold that she felt numb. What bothered her most was that she received no apology when her sleeping was disturbed by a barking dog in a shopkeeper’s cage.Luckily, with her parents comforting her by videophone, she became autonomous soon and eventually got her bachelor’s degree successfully. 楠楠的父亲在明陵附近经营一家企业，销售电池和钻机到大庆油田。抱着获得相应资格帮助管理的希望，楠楠做了大量准备，然后带着签证离开祖国去美国留学。抵达目的地后，她在一间旅行代理推荐的旅馆安顿下来。就楠楠而言，她在国内一直保持着良好的状态，但是在国外，她却不得不承认，要适应新学院的要求不容易，它们和国内的要求不相同。尽管她整天都忙着听讲座、参加研讨会努力学习，她起草的论文还是被导师驳了回来。至于日常生活，她也感觉难于适应，例如，她发觉英语成语很难理解，而且不可能吃到地道的中国食品，尽管可选的许多餐馆都有提供丰富的替代品。此外，她还得冒着把人冻得麻木的寒冷早起排队等小型巴士去学校。最使她烦恼的是，一名店主笼子里的狗的吠叫闹得她睡不好觉，但却没有任何人向她道歉。幸运的是，在她父母通过可视电话的安慰下，她很快就锻炼得自主独立起来，并最终成功获得了学士学位。 36.Immigrate to America移民美国Attracted by the boom in America, my nephew teamed up with a Korean to illegally cross the Bearing Strait in the Arctic to America. To avoid the Customs’ punishment, they hid in a small ferry called the North Pole Seagull, sitting back to back without sleeping, showering and shaving for 3 days, and had no chance to mourn their lost luggage when landing. The hardship of this crossing was apparent.At first, he made a living by means of raising cattle and then was hired in aircraft industries. He lived in a Catholic district. Taking in a small percentage of Pakistani immigrants, the majority of the residents were from Italy and Denmark, who all kept up their customs and cultures. Different blocks here were distinctly marked out and indicated from the racial angle. It was unfair and needed reforming. But with nowhere else to go, my nephew lived on and managed to make a life for himself.My nephew’s fortune came when he bravely helped a conductor brake a ream to stop it from slipping out of the rails. The man was elected vice chairman of the Socialist Party later. It occurred to my nephew that he could grasp this opportunity to ask for his help. The man who was thankful helped him apply to the civil authority for the right to live in America by inserting his brave deed into his documents. Unlike a great many other applicants, his application was approved by the Federal Justice Ministry. Before long, he started his own bakery and lived a better life. 因为受到美国繁荣的吸引，我的侄子与一名韩国人合作，从北极的白令海峡偷渡到美国。为了避开海关的惩处，他们躲在一艘叫“北极海鸥”的渡轮里，背靠背坐着，整整3天没有睡觉、洗澡和刮胡子，上岸的时候也没有机会心痛他们丢失的行李，这次横渡的艰辛是显而易见的。起初，他借助饲养牲畜谋生，后来受雇于飞机制造工业。他住的地方是一个天主教区，除了包括一小部分（百分比）的巴基斯坦移民，大部分的居民都来自于意大利和丹麦，他们都保持着自己的风俗和文化，使这里的街区都从种族的角度清楚地划出界线，明确标示。这很不公平，极需改革，但我的侄子没别的地方可去，只好继续居住下去，想法设法开始新的生活。我侄子的好运在他勇敢地帮助一名列车员刹停一列电车以防止其滑出轨道时到来了。那个人后来被选为社会党的副主席，我侄子就想到应该抓住机会请求他的帮助。这个人充满感激，立即把我侄子的勇敢事迹插入到申请文件中，帮助我侄子向美国国内政权当局申请美国居住权。不像别的许多申请人，我侄子的申请很快被联邦司法部批准了。不久，他就开了自己的面包店，过上了稍好一点的生活。 37.Be Careful about Cloning谨慎对待克隆After a series of initial experiments and corrections, the scientist’s hard work paid off when the twin clone turkeys were hatched with normal feather and claws. This breakthrough possibly enabled people to bring their adored pets back to life. However, it bothered him from time to time that their health was in poor condition because they were unable to resist illnesses. This drawback cast him down. Merely 2 weeks later, the clones and their carrier died, which struck frustration into his heart. He retired before he attained his ambition and became a member of an opera chorus to relieve his depression.Shortly afterwards, the media published a conservative argument objecting to cloning owing to moral problems, and suggested the constitution include compulsory regulations to forbid obtaining commercial profits from cloning.When interviewed, the scientist stared at the decorations on the ceiling, thinking for a while, and then said, “I’m not in favour of any arbitrary assumption, but undertaking cloning does differ from the straightforward procedure of making loafs out of flour. Until we accumulate enough exact knowledge, any practice is in vain and is bound to fail. Altogether, being more careful is reasonable or we may walk into a side road.” 在最初一系列的实验和修正之后，科学家的辛苦工作终于取得了成功，一对双生的克隆火鸡孵化出来，羽毛和爪子都很正常。这一突破或许能让人们使他们喜爱的宠物死而复生。然而，使他不时地烦恼的是，因为它们无法抵抗疾病，使得它们的健康状况极差。这个缺点让他很沮丧。仅仅过了2个星期，克隆体和母体都死亡了，这使他内心里充满了挫折，他也因此在达到自己目标前就退休了，并选择加入歌剧合唱团来减轻消沉的感觉。之后不久，媒体就因为道德问题而发表了反对克隆的保守论点，并且建议宪法应该包括强制性的法规禁止通过克隆获得商业利益。当被采访时，科学家盯着天花板上的装饰物思考了一会儿，说：“我不赞成任何任意的假设，但是从事克隆与用面粉制作面包的简单过程确实不大相同。在我们积累了足够的准确知识前，任何实际操作都是徒劳无功的，注定会失败。总而言之，更加谨慎地对待克隆是合理的，否则我们或许会误入歧途。” 38.Strange Patent Applications 奇怪的专利申请I set about working in the current Patent Office after resigning from the court personnel. Competent and dynamic, I never feel passive while diving into the identifications of whether applications are valid and practical according to the new version of the criteria.With the expectation of distinguishing their own importance, some people leave the beaten track and file strange products with us now and then, for example, lantern that can be attached on your forehead, cubic walnuts, refrigerator made of straw and glue, perfume that nobody can bear to smell, and so on.Once, a man made a triangle helicopter out of stainless wires and string. He called us up and merrily claimed it was stable and convenient to use, and never out of order. I asked him to hang on, but this innocent man just rang off and set out to fly from his courtyard. I dialed his number in the directory trying to ring him back, but never got through.Merciful God blessing, an abrupt freezing rainfall made his powder wet. Luckily, the trouble was without any extension except that he crashed into a greengrocer’s making all the ripe fruits become messy jam. When people seized this crazy man with caution and sobered him by tapping his face, he complained about the bad weather instead of associating his failure with his unscientific design. 从法院人事部辞职后，我开始在现在的专利局工作。我工作起来既称职又有活力，在投身于根据新版的申请标准鉴定专利申请，以防他们无效或不实用时，我从未感觉到消极没劲。为了显示与众不同，时不时就有人违反常规，向我们提交一些奇怪的产品申请，例如固定在前额的信号灯、立方体的胡桃、用稻草和胶水制作的冰箱、没人能受得了的香水等。有一次，有个人用不锈钢丝和绳子制作了一架三角形的直升飞机。他致电给我们，高兴地声称其确实牢固，而且方便使用，从不发生故障。我请他稍等，但这个天真的人挂了电话就开始从院子里起飞。我拨打他在电话簿上的号码试图回电给他，却无法接通。仁慈的上帝保佑，一场突然降临的冻雨打湿了他的火药，使他造成的麻烦没有扩大，只是撞入一间水果店，把所有成熟的水果都压成一塌糊涂的果酱。当人们小心地抓住这个失去理智的人，轻轻拍打他的脸使他清醒过来时，他还在抱怨糟糕的坏天气，却没有将他的失败与他不科学的设计联系起来。 Pronunciation and Status口音与身份An ambassador and a referee were consulting a professor on the caption of a Buddhistic alphabet when a sobbing woman stopped them to sell an antique musical bathtub. Her dirty garment and the handkerchief around her waist were badly in need of sending to a laundry. The ambassador uncomfortably gave her a handful of pence from his wallet and said, “Take this fortune away, troublesome woman.”When her figure faded away, the brilliant professor said, “You are mistaken and your improper remark on her should be condemned. In terms of this extraordinary woman, you can’t classify her status by her horrible clothes or disgusting nails. Her clean woolen vest and stockings, especially her classic pronunciation, all suggested her upper status.” The ambassador gave a whistle in amazement, and advised making her acquaintance. The professor hesitated for a while, then compromised.The outcome was that she was an authentic superior police officer. When they were shown in her office and saw her once more, she brought them a teapot of tea and some cookies, laughing and saying, “I rubbed some cream and wax on my garment and passed myself off as a shabby woman among thieves and robbers to investigate a plot. Generally speaking, your overlooking me and my adaptation are the best help. But my pronunciation seemed to have betrayed me.” 一位大使和一位裁判正在就一张佛教符号表的文字说明请教教授，这时，一名哭哭啼啼的女人把他们拦住，要卖给他们一个古董音乐澡盆，她肮脏的衣服和腰间的手帕都急需送到洗衣店清洗。大使很不舒服地从钱包里掏出一把便士说：“把这大笔钱拿走，麻烦的女人！”等她的身影渐渐远去，那位才华横溢的教授说：“你错了，你对她不适当的评论语应该受到谴责。就这个不同寻常的女人来说，你不能根据她糟糕的衣服或令人恶心的指甲给她的身份地位分类。她干净的羊毛背心和袜子，尤其是她一流的发音，都暗示着她的上层身份。”大使惊奇地吹了声口哨，建议去认识她。教授犹豫了一会儿，最后妥协了。结果呢，她真的是一位高级警官。当他们被带进她的办公室再次见到她时，她给他们拿来一壶茶和一些饼干，笑着说：“我把奶油和蜡涂在大衣上假扮成寒酸肮脏的女人混进在小偷和抢劫犯中间，是为了调查一宗阴谋。通常说来，你们对我的忽视和我对此的适应就是最好的帮助。但是我的发音似乎暴露了我啊。” A Sly Murder 一宗狡猾的谋杀案When giving a lecture about the significance of punctuation, the academic professor was interrupted and arrested by the police for murdering his wife, a receptionist of a kindergarten. The police found some photos he deleted from their e-album showing that they used to have a gay life. But, fed up with her wrinkled face, he murdered her instead of divorcing her to avoid fortune division. He cut up a kind of seashell with a sharpened knife, and hammered it into powder on a skateboard, and made at most one gram, which was enough to accelerate one’s pulse until he or she dies. This kind of poison can date back to 10,000 BC when people rubbed it on spears to kill beasts. The professor mixed the poison with onion, watermelon and yogurt for his wife. Howling and scratching her chest, she felt dizzy and died soon.After tentative examination, the police assumed she died of heart disease. But systematic botanical analyses showed that the watermelon spit on the messy mat and the quilt was poisonous. Regardless of exhaustion and starvation, the acute and skilful policemen used radioactive equipment to make sure the category of the poison. Primitive and not ample as their alternative equipment was, they got perfect accuracy somehow.People applauded the police and the woman’s family can look ahead with relief now. 那位学院的教授在发表关于标点符号重要意义的演讲时被警察打断了，他因谋杀自己的妻子——一位幼儿园的接待员——而被逮捕。警察找到了一些被他从电子相册里删除的照片，照片表明，他们曾经有过快乐的生活，但是，因为厌烦了妻子起皱的脸，他杀死她而不是和她离婚以避免离婚时的财产分割。他用一把磨利的小刀切碎一种贝壳，然后在滑板上锤打成粉末，最多1克就足以加速人的脉搏直到其死亡。这种毒药可以追溯到公元前10，000年，当时它就被涂抹在长予上杀死野兽。教授把这种毒药混合在洋葱、西瓜和酸奶里给他的妻子，后者叫喊、抓挠胸口、头晕目眩，很快就死了。在初步检查之后，警察设想她是死于心脏病。但是系统的植物学分析却表明，吐在凌乱的席子和被子上的西瓜有毒。敏锐而又技术娴熟的警察不顾疲劳和饥饿，用放射性的设备确定了毒素的种类。尽管可供选择的设备原始，且数量不足，他们还是设法取得了完美的准确度。人们都为警察欢呼鼓掌，而那位女人的家人现在也可以带着欣慰为将来打算了。]]></content>
      <categories>
        <category>其它</category>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[36计]]></title>
    <url>%2F2018%2F06%2Fothers%2Freading%2F36%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[《三十六计》或称三十六策，是指中国古代三十六个兵法策略，语源于南北朝，成书于明清。它是根据中国古代军事思想和丰富的斗争经验总结而成的兵书，是中华民族悠久非物质文化遗产之一。 原书按计名排列，共分六套，即胜战计、敌战计、攻战计、混战计、并战计、败战计。前三套是处于优势所用之计，后三套是处于劣势所用之计。 第一套 胜战计处于绝对优势地位之计谋。君御臣、大国御小国之术也。亢龙有悔。 第一计 瞒天过海本指光天化日之下不让天知道就过了大海。形容极大的欺骗和谎言，什么样的欺骗手段都使得出来。【原典】备周则意怠①；常见则不疑。阴在阳之内，不在阳之对②。太阳，太阴③。【注释】兵法：三十六计①备周则意怠：防备十分周密，往往容易让人斗志松懈，削弱战力。②阴在阳之内，不在阳之对：阴阳是我国古代传统哲学和文化思想的基点，其思想笼罩着大千宇宙、细末尘埃，并影响到意识形态的一切领域。阴阳学说是把宇宙万物作为对立的统一体来看待，表现出朴素的辩证思想。阴、阳二字早在甲骨文、金文中出现过，但作为阴气、阳气的阴阳学说，最早是由道家始祖楚国人老子所倡导，并非《易经》提出。此计中所讲的阴指机密、隐蔽；阳，指公开、暴露。阴在阳之内，不在阳之对，在兵法上是说秘计往往隐藏于公开的事物里，而不在公开事物的对立面上。③太阳，太阴：太，极，极大。此句指非常公开的事物里往往蕴藏着非常机密的计谋。【释义】防备得周全时，更容易麻痹大意；习以为常的事，也常会失去警戒。秘密常潜藏在公开的事物里，并非存在于公开暴露的事物之外。公开暴露的事物发展到极端，就形成了最隐秘的潜藏状态。【浅解】所谓瞒天过海，就是故意一而再、再而三地用伪装的手段迷惑、欺骗对方，使对方放松戒备，然后突然行动，从而达到取胜的目的。【按语】阴谋作为，不能于背时秘处行之。夜半行窃，僻巷杀人，愚俗之行，非谋士之所为也。如：开皇九年，大举伐陈。先是弼请缘江防人，每交代之际，必集历阳，大列旗帜，营幕蔽野。陈人以为大兵至，悉发国中士马，既而知防人交代。其众复散，后以为常，不复设备，及若弼以大军济江，陈人弗之觉也。因袭南徐州，拔之。【解析】“瞒天过海”之谋略决不可以与“欺上瞒下”、“掩耳盗铃”或者诸如夜中行窃、拖人衣裘、僻处谋命之类等同，也决不是谋略之士所应当做的事情。虽然，这两种在某种程度上都含有欺骗性在内，但其动机、性质、目的是不相同的，自是不可以混为一谈。这一计的兵法运用，常常是着眼于人们在观察处理世事中，由于对某些事情的习见不疑而自觉不自觉地产生了疏漏和松懈，故能乘虚而示假隐真，掩盖某种军事行动，把握时机，出奇制胜。【探源】见《永乐大典·薛仁贵征辽事略》。唐太宗贞观十七年，御驾亲征，领三十万大军以宁东土。一日，浩荡大军东进来到大海边上，帝见眼前只是白浪排空，海茫无穷，即向众总管问及 过海之计，四下面面相觑。忽传一个近居海上的豪民请求见驾，并称三十万过海军粮此家业已独备。帝大喜，便率百官随这豪 民来到海边。只见万户皆用一彩幕遮围，十分严密。豪民老人东向倒步引帝入室。室内更是绣幔彩锦，茵褥铺地。百官进酒， 宴饮甚乐。不久，风声四起，波响如雷，杯盏倾侧，人身摇动，良久不止。太宗警惊，忙令近臣揭开彩幕察看，不看则已，一 看愕然。满目皆一片清清海水横无际涯，哪里是什么在豪民家作客，大军竟然已航行在大海之上了！原来这豪民是新招壮士薛仁贵扮成，这“瞒天过海”计策就是他策划的。 “瞒天过海”用在兵法上，实属一种示假隐真的疑兵之计， 用来作战役伪装，以期达到出其不意的战斗成果。【故事】公元589年，隋朝将大举攻打陈国。这陈国乃是公元557年陈霸先称帝建国，定国号为陈，建都城于建康，也就是今天的南京。战前，隋朝将领贺若弼因奉命统领江防，经常组织沿江守备部队调防。每次调防都命令部队于历阳（也就是今天安徽省和县一带地方）集中。还特令三军集中时，必须大列旗帜，遍支警帐，张扬声势，以迷惑陈国。果真陈国难辨虚实，起初以为大军将至，尽发国中士卒兵马，准备迎敌面战。可是不久，又发现是隋军守备人马调防，并非出击，陈便撤回集结的迎战部队。如此五次三番，隋军调防频繁，蛛丝马迹一点不露，陈国竟然也司空见惯，戒备松懈。直到隋将贺若弼大军渡江而来，陈国居然未有觉察。隋军如同天兵压顶，令陈兵猝不及防，遂一举拔取陈国的南徐州（今天的江苏省镇江市一带）。 第二计 围魏救赵本指围攻魏国的都城以解救赵国。现借指用包超敌人的后方来迫使它撤兵的战术。【原典】共敌不如分敌①，敌阳不如敌阴②。【注释】①共敌不如分敌：共，集中的。分，分散，使分散。句意：攻打集中的敌人，不如设法分散它而后再打。②敌阳不如敌阴：敌，动词，攻打。句意为 先打击气势旺盛的敌人，不如后打击气势旺盛的敌人。【释义】进攻兵力集中、实力强大的敌军，不如使强大的敌军分散减弱了再攻击。攻击敌军的强盛部位，不如攻击敌军的薄弱部份来得有效。【浅解】所谓围魏救赵，是指当敌人实力强大时，要避免和强敌正面决战，应该采取迂回战术，迫使敌人分散兵力，然后抓住敌人的薄弱环节发动攻击，致敌于死地。【按语】治兵如治水：锐者避其锋，如导疏；弱者塞其虚，如筑堰。故当齐救赵 时，孙膑谓田忌曰：“夫解杂乱纠纷者不控拳，救斗者，不搏击，批亢捣虚，形格势禁，则自为解耳。”【解析】对敌作战，好比治水：敌人势头强大， 就要躲过冲击，如用疏导之法分流。对弱小的敌人，就抓住时机消灭它，就象筑堤围堰，不让水流走。所以当齐救赵时，孙子对田忌说：“想理顺乱丝和结绳，只能用手指慢慢去解开，不能握紧拳头去捶打；排解搏斗纠纷，只能动口劝说，不能动手参加。对敌人，应避实就虚，攻其要害，使敌方受到挫折，受到牵制，围困可以自解。”【故事】公元前354年，赵国进攻卫国，迫使卫国屈服于它。卫国原来是入朝魏国的，后来改向亲附赵国，魏惠王不由十分恼火，于是决定派庞涓讨伐赵国。不到一年时间，庞涓便攻到了赵国的国都邯郸。邯郸危在旦夕。赵国国君赵成侯一面竭力固守，一面派人火速奔往齐国求救（此时，赵国与齐国结盟）。齐威王任命田忌为主将，以孙膑为军师，率军救赵。孙膑出计，要军中最不会打仗的齐城、高唐佯攻魏国的军事要地——襄陵，以麻痹魏军。而大军却绕道直插大梁。庞涓得到魏惠王的命令只得火速返国救援。魏军为疲惫之师，怎能打过齐国以逸待劳的精锐之师。所以大败。 第三计 借刀杀人比喻自己不出面，假借别人的手去害人。【原典】敌已明，友未定①，引友杀敌，不自出力，以《损》②推演。【注释】①友未定：“友”指军事上的盟者，也即除敌、我两方之外的第三者中，可以一时结盟而借力的人、集团或国家。友未定，就是说盟友对主战的双方，尚持徘徊、观望的态度，其主意不明不定的情况。②《损》：出自《易经·损》卦：“损：有孚，元吉，无咎，可贞，利有攸往。”孚，信用。元，大。贞，正。意即，取抑省之道去行事，只要有诚心，就会有大的吉利，没有错失，合于正道，这样行事就可一切如意。又有《象》损卦：“损：损下益上，其道上行。”意指“损”与“益”的转化关系，借用盟友的力量去打击敌人，势必要使盟友受到损失，但盟友的损失正可以换得自己的利益。【释义】敌人的情况已经明了，友方的态度尚未确定。利用友方的力量去消灭敌人，自己不需要付出什么力量。这是从《损》卦推演出的计策。【浅解】所谓借刀杀人，是指在对付敌人的时候，自己不动手，而利用第三者的力量去攻击敌人，用以保存自己的实力；再进一步，则巧妙地利用敌人的内部矛盾，使其自相残杀，以达到致敌于死地的目的。【按语】敌象已露，而另一势力更张，将有所为，便应借此力以毁敌人。如：郑桓公将欲袭郐，先向郐之豪杰、良臣、辨智、果敢之士，尽书姓名，择郐之良田赂之，为官爵之名而书之，因为设坛场郭门之处而埋之，衅之以鸡缎，若盟状。郐君以为内难也，而尽杀其良臣。桓公袭郐，遂取之。诸葛亮之和吴拒魏，及关羽围樊、裹，曹欲徙都，懿及蒋济说曹曰：“刘备、孙权外亲内疏，关羽得志，权心不愿也。可遣人蹑其后，许割江南以封权，则樊围自释。”曹从之，羽遂见擒。【故事】刘秀借刀杀李铁。 第四计 以逸待劳指作战时不首先出击，养精蓄锐，以对付从远道来的疲劳的敌人。【原典】《三十六计通解与运用》《三十六计通解与运用》困敌之势①，不以战；损刚益柔②。【注释】①困敌之势：迫使敌人处于围顿的境地。②损刚益柔：语出《易经·损》。“刚”、“柔”是两个相对的事物现象，在一定的条件下相对的两方有可相互转化。“损”，卦名。本卦为异卦相叠（兑下艮上）。上卦为艮，艮为山，下卦为兑，兑为泽。上山下泽，意为大泽浸蚀山根之象，也就说有水浸润着山，抑损着山，故卦名叫损”。“损刚益柔”是根据此卦象讲述“刚柔相推，而主变化”的普遍道理和法则。 此计正是根据“损”卦的道理，以“刚”喻敌，以“柔”喻已，意谓困敌可用积极防御，逐渐消耗敌人的有生力量，使之由强变弱，而我因势利导又可使自己变被动为主动，不一定要用直接进攻的方法，同样可以制胜。【按语】此即致敌之法也。兵书云：“凡先处战地而待敌者逸，后处战地而趋战者劳。故善战者，致人而不致于人。”兵书论敌，此为论势，则其旨非择地以待敌；而在以简驭繁，以不变应变，以小变应大变，以不动应动以小动应大动，以枢应环也。如：管仲寓军令于内政，实而备之；孙膑于马陵道伏击庞涓；李牧守雁门，久而不战，而实备之，战而大破匈奴。【故事】三国时，吴国杀了关羽，刘备怒不可遏，亲自率领七十万大军伐吴。蜀军从长江上游顺流进击，居高临下，势如破竹。举兵东下，连胜十余阵，锐气正盛，直至彝陵，哮亭一带，深入吴国腹地五六百里。孙权命青年将领陆逊为大都督，率五万人迎战。陆逊深谙兵法，正确地分析了形势，认为刘备锐气始盛，并且居高临下，吴军难以进攻。于是决定实行战略退却，以观其变。吴军完全撤出山地，这样，蜀军在五六百里的山地一带难以展开，反而处于被动地位，欲战不能，兵疲意阻。相持半年，蜀军斗志松懈。陆逊看到蜀军战线绵延数百里，首尾难顾，在山林安营扎寨，犯了兵家之忌。时机成熟，陆逊下令全面反攻，打得蜀军措手不及。陆逊—把火，烧毁蜀军七百里连营，蜀军大乱，伤亡惨重，慌忙撤退。陆逊创造了战争史上以少胜多、后发制人的著名战例。 第五计 趁火打劫本指趁人家失火的时候去抢东西。现比喻乘人之危，捞一把。【原典】敌之害大①，就势取利，刚决柔也②。【注释】①敌之害大：害，指敌人所遭遇到的困难，危厄的处境。②刚决柔也：语出《易经·夬》卦。 夬，卦名。本卦为异卦相叠（乾下兑上）。上卦为兑，兑为泽；下卦为乾，乾为天。兑上乾下，意为有洪水涨上天之象。《夬夬》的《彖》辞说：“央，决也。刚决柔也。”决，冲决、冲开、去掉的意思。因乾卦为六十四卦的第一卦，乾为天，是大吉大利，吉利的贞卜，所以此卦的本义是力争上游，刚健不屈。所谓刚决柔，就是下乾这个阳刚之卦，在冲决上兑这个阴柔的卦。此计是以“刚”喻己，以“柔”喻敌，言乘敌之危，就势而取胜的意思。【按语】敌害在内，则劫其地；敌害在外，则劫其民；内外交害，败劫其国。如：越王乘吴国内蟹稻不遗种而谋攻之，后卒乘吴北会诸侯于黄池之际，国内空虚，因而捣之，大获全胜。【故事】多尔衮趁乱入关。 第六计 声东击西指表面上声言要攻打东面，其实是攻打西面。军事上使敌人产生错觉的一种战术。【原典】敌志乱萃①，不虞②，坤下兑上 ③之象，利其不自主而取之。【注释】①敌志乱萃：援引《易经．萃》卦中《象》辞：“乃乱乃萃，其志乱也”之意。萃，悴，即憔悴。是说敌人情志混乱而且憔悴。②不虞：未意科，未预料。③坤下兑上：萃卦为异卦相叠（坤下兑上）。上卦为兑，兑为泽；下并为坤，坤为地。有泽水淹及大地，洪水横流之象。此计是运用“坤下兑上”之卦象的象理，喻“敌志乱萃”而造成了错失丛杂、危机四伏的处境，我则要抓住敌人这不能自控的混乱之势，机动灵活地运用时东时西，似打似离，不攻而示它以攻，欲攻而又示之以不攻等战术，进一步造成敌人的错觉，出其不意地一举夺胜。【按语】西汉，七国反，周亚夫坚壁不战。吴兵奔壁之东南陬，亚夫便备西北；已而吴王精兵果攻西北，遂不得入。此敌志不乱，能自去也。汉末，朱隽围黄巾于宛，张围结垒，起土山以临城内，鸣鼓攻其西南，黄巾悉众赴之，隽自将精兵五千，掩其东北，遂乘虚而入。此敌志乱萃，不虞也。然则声东击西之策，须视敌志乱否为定。乱，则胜；不乱，将自取败亡，险策也。【故事】韩信木罂渡黄河。 第二套 敌战计处于势均力敌态势之计谋。或跃于渊。 第七计 无中生有本指本来没有却硬说有。现形容凭空捏造。【原典】诳也，非诳也，实其所诳也①。少阴、太阴、太阳②。【注释】①诳也，非诳也，实其所诳也：诳，欺诈、诳骗。实，实在，真实，此处作意动词。句意为：运用假象欺骗对方，但并非一假到底，而是让对方把受骗的假象当成 真象。②少阴，太阴，太阳：此“阴”指假象，“阳”指真象。 句意为：用大大小小的假象去掩护真象。【按语】无而示有，诳也。诳不可久而易觉，故无不可以终无。无中生有，则由诳而真，由虚而实矣，无不可以败敌，生有则败敌矣，如：令狐潮围雍丘，张巡缚嵩为人千余，披黑夜，夜缒城下；潮兵争射之，得箭数十万。其后复夜缒人，潮兵笑，不设备，乃以死士五百砍潮营，焚垒幕，追奔十余里。【故事】张仪诓楚助强秦。 第八计 暗度陈仓指正面迷惑敌人，而从侧翼进行突然袭击。比喻暗中进行活动。 后多比喻暗中进行某种活动（多指男女私通）。【原典】示之以动①，利其静而有主，“益动而巽②”。【注释】①示之以动：示，给人看。动，此指军事上的正面佯攻、佯动等迷惑敌方的军事行动。②益动而巽：语出《易经．益》卦。益，卦名。此卦为异卦相叠（震下巽上）。上卦为巽，巽为风；下卦为震，震为雷。意即风雷激荡，其势愈增，故卦名为益。与损卦之义，互相对立，构成一个统一的组纷。《益卦》的《彖》辞说：“益动而巽，日进无疆。”这是说益卦下震为雷为动，上巽为风为顺，那么，动而合理，是天生地长，好处无穷。此计是利用敌人被我“示之以动”的迷惑手段所蒙蔽，而我即乘虚而入，以达军事上的出奇制胜。【按语】奇出于正，无正不能出奇。不明修栈道，则不能暗渡陈仓。昔邓艾屯白水之北；姜维遥廖化屯白水之南，而结营焉。艾谓诸将日：“维令卒还，吾军少，法当来渡，而不作桥，此维使化持我．令不得还。必自东袭取洮城矣。”艾即夜潜军，径到洮城。维果来渡。而艾先至，据城，得以不破。此则是姜维不善用暗渡陈仓之计；而邓艾察知其声东击西之谋也。【故事】韩信奇兵取三秦。 第九计 隔岸观火隔着河看对岸的火。比喻对别人的危难不予援救而在一旁看热闹。【原典】阳乖序乱①，阴以待逆②。暴戾恣睢③，其势自毙。顺以动豫，豫顺以动④。【注释】①阳乖序乱：阳，指公开的。乖，违背，不协调。此指敌方内部矛盾激化，以致公开地表现出多方面秩序混乱、倾轧。②阴以待逆：阴，暗下的。逆，叛逆。此指暗中静观敌变，坐待敌方更进一步的局面恶化。③暴戾恣睢：戾，凶暴，猛烈。睢，任意胡为。④顺以动豫，豫顺以动：语出《易经．豫》卦。豫，卦名。本卦为异卦相叠（坤下震上）。本卦的下卦为坤为地，上卦为震为雷。是雷生于地，雷从地底而出，突破地面，在空中自在飞腾。《豫卦》的《彖》辞说“豫，刚应而志行，顺以动。”意即豫卦的意思是顺时而动，正因为豫卦之意是顺时而动，所以天地就能随和其意，做事就顺当自然。此计正是运用本卦顺时以动的哲理，说坐观敌人的内部恶变，我不急于采取攻逼手段，顺其变，“坐山观虎斗”，最后让敌人自残自杀，时机—到而我即坐收其利，一举成功。【按语】乖气浮张，逼则受击，退则远之，则乱自起。昔袁尚、袁熙奔辽东，众尚有数千骑。初，辽东太守公孙康，恃远不服。及曹操破乌丸，或说曹遂征之，尚兄弟可擒也。操曰：“吾方使斩送尚、熙首来，不烦兵矣。”九月，操引兵自柳城还，康即斩尚、熙，传其首。诸将问其故，操日：“彼素畏尚等，吾急之，则并力；缓之，则相图，其势然也。”或曰：此兵书火攻之道也，按兵书《火攻篇》前段言火攻之法，后段言慎动之理，与隔岸观火之意，亦相吻合。【故事】郭嘉定计灭袁氏。 第十计 笑里藏刀比喻外表和气而内心阴险。【原典】信而安之①，阴以图之②，备而后动， 勿使有变。刚中柔外也③。【注释】①信而安之：信，使信。安，使安，安然，此指不生 疑心。②阴以图之：阴，暗地里。③刚中柔外：表面柔顺，实质强硬尖利。【按语】兵书云：“辞卑而益备者，进也；……无约而请和者，谋也。”故凡敌人之巧言令色，皆杀机之外露也。宋曹玮知渭州，号令明肃，西夏人惮之。一日玮方对客弈棋，会有叛夸数千，亡奔夏境。堠骑（骑马的侦宿员）报至，诸将相顾失色，公言笑如平时。徐谓骑日．“吾命也，汝勿显言。”西夏人闻之，以为袭己，尽杀之。此临机应变之用也。若勾践之事夫差．则意使其久而安之矣。【故事】隋文帝智灭南陈。 第十一计李代桃僵原指桃、李共患难。比喻兄弟相爱相助。后用来指互相顶替或代人受过。【原典】势必有损，损阴以益阳①。【注释】①损阴以益阳：阴：此指某些细微的、局部的事物。阳，此指事物带整体意义的、全局性的事物。这是说在军事谋略上，如果暂时要以某种损失、失利为代价才能最终取胜，指挥者应当机立断，作出某些局部、或暂时的牺牲，去保全或者争取全局的、整体性的胜利。这是运用我国古代阴阳学说的阴阳相生相克、相互转化的道理而制定的军事谋略。【按语】我敌之情，各有长短。战争之事，难得全胜，而胜负之诀，即在长短之相较，乃有以短胜长之秘诀。如以下驷敌上驷，以上驷敌中驷，以中驷敌下驷之类：则诚兵家独具之诡谋，非常理之可测也。【故事】三叉用计保孤儿。 第十二计 顺手牵羊顺手就牵了羊。比喻不费劲，乘机便得到的。现多指乘机拿走人家东西的偷窃行为。【原典】微隙在所必乘①；微利在所必得。少阴，少阳②。【注释】①微隙在所必乘：微隙，微小的空隙，指敌方的某些漏洞、疏忽。②少阴，少阳：少阴，此指敌方小的疏漏，少阳，指我方小的得利。此句意为我方要善于捕捉时机，伺隙捣虚，变敌方小的疏漏而为我方小的得利。【按语】大军动处，其隙甚多，乘间取利，不必以胜。胜固可用，败亦可用。【故事】追废帝郑和下西洋。第三套 攻战计处于进攻态势之计谋。飞龙在天。 第十三计 打草惊蛇打动草惊动了藏在草里的蛇。后用以指做事不周密，行动不谨慎，而使对方有所觉察。【原典】疑以叩实①，察而后动； 复者，阴之媒也②。【注释】①疑以叩实：叩，问，查究。意为发现了疑点就应 当考实查究清楚。②复者，阴之媒也：复者，反复去做，即反复去叩实而后动。阴，此指某些隐藏着的、暂时尚不明显或未暴露的事物、情况。媒，媒介。句意为反复叩实查究，而后采取相应的行动，实际是发现隐藏之敌的重要手段。【按语】敌力不露，阴谋深沉，未可轻进，应遍探其锋。兵书云：“军旁有险阻、潢井、葭苇、山林、翳荟者，必谨复索之，此伏奸所藏也。”【故事】魏军兵败木门道。 第十四计 借尸还魂迷信人认为人死后灵魂可附着于别人的尸体而复活。后用以比喻已经消灭或没落的事物，又假托别的名义或以另一种形式重新出现。【原典】有用者，不可借①；不能用者，求借②。借不能用者而用之，匪我求童蒙，童蒙求我③。【注释】①有用者，不可借；意为世间许多看上去很有用处的东西，往往不容易去驾驭而为己用。②不能用者，求借：此句意与①句相对言之。即有些看上去无什用途的东西，往往有时我还可以借助它而为己发挥作用。犹如我欲“还魂”还必得借助看似无用的“尸体”的道理。此言兵法，是说兵家要善于抓住一切机会，甚至是看去无什用处的东西，努力争取主动，壮大自己，即时利用而转不利为有利，乃至转败为胜。③匪我求童蒙，童蒙求我：语出《易经．蒙》卦。蒙，卦名。本纷是异卦相叠（下坎上艮）。本卦上卦为艮为山，下卦为坎为水为险。山下有险，草木丛生，故说“蒙”。这是蒙卦卦象。这里“童蒙”是指幼稚无知、求师教诲的儿童。此句意为不是我求助于愚昧之人，而是愚昧之人有求于我了。【按语】换代之际，纷立亡国之后者，固借尸还境之意也。凡—切寄兵权于人，而代其攻宁者，皆此用也。【故事】立张楚陈胜为王。 第十五计 调虎离山设法使老虎离开山头。比喻为了便于行事，想法子引诱人离开原来的地方。【原典】待天以困之①，用人以诱之②，往蹇来连返③。【注释】①待天以困之：天，指自然的各种条件或情况。此句意为战场上我方等待天然的条件或情况对敌方不利时，我再去围困他。②用人以诱之：用人为的假象去诱惑他（指敌人），使他向我就范。③往蹇来返：语出《易经．蹇》卦。蹇，卦名。本卦为异卦相叠（艮下坎上）。上卦为坎为水，下卦为艮为山。山上有水流，山石多险，水流曲折，言行道之不容易，这是本卦的卦象。蹇，困难；返，广大美好貌。这句意为：去时艰难，来时美好。此计运用这个道理，是说战场上若遇强敌，要善用谋，用假象使敌人离开驻地，诱他就我之范，丧失他的优势，使他处处皆难，寸步难行，由主动变被动，而我则出其不意而致胜。【按语】兵书曰：“下政攻城”。若攻坚，则自取败亡矣。敌既得地利，则不可争其地。且敌有主而势大：有主，则非利不来趋；势大，则非天人合用，不能胜。汉末，羌率众数千，遮虞诩于队仓崤谷。诩即停军不进，而宣言上书请兵，须到乃发。羌闻之，乃分抄旁县。翔因其兵散，日夜进道，兼行百余里，令军士各作两灶，日倍增之，羌不敢逼，遂大破之。兵到乃发者，利诱之也；日夜兼进者，用天时以困之也；倍增其灶者，惑之以人事也。【故事】石碏设计除暴君。 第十六计 欲擒故纵石刻：欲擒故纵石刻：欲擒故纵要捉住他，故意先放开他。比喻为了进一步的控制，先故意放松一步。【原典】逼则反兵；走则减势①。紧随勿迫。累其气力，消其斗志，散而后擒，兵不血刃②。需，有孚，光③。【注释】①逼则反兵，走则减势：走，跑。逼迫敌人太紧，他可能因此拼死反扑，若让他逃跑则可减削他的气势。②兵不血刃：血刃，血染刀刃。此句意为兵器上不 沾血。②需，有孚，光：语出《易经．需卦》。需，卦名。本卦为异卦相叠（乾下坎上）。需的下卦为乾为天，上卦为坎为水，是降雨在即之象。也象征着一种危险存在着（因为“坎”有险义），必得去突破它，但突破危险又要善于等待。“需”，等待。《易经，需》卦卦辞：“需，有孚，光”。孚，诚心。光，通广。句意为：要善于等待，要有诚心（包含耐性），就会有大吉大利。【按语】所谓纵着，非放之也，随之，而稍松之耳。“穷寇勿追”，亦即此意，盖不追者，非不随也，不追之而已。武侯之七纵七擒，即纵而随之，故蹑展转推进，至于不毛之地。武侯之七纵，其意在拓地，在借孟获以服诸蛮，非兵法也。故论战，则擒者不可复纵。【故事】诸葛亮七擒孟获。 第十七计 抛砖引玉以自己的粗浅的意见引出别人高明的见解。【原典】类以诱之①，击蒙也②。【注释】①类以诱之：出示某种类似的东西并去诱惑他。②击蒙也：语出《易经．蒙》如。参前“借尸还魂”计注释④。击，撞击，打击。句意为：诱惑敌人，便可打击这种受我诱惑的愚蒙之人了。【按语】诱敌之法甚多，最妙之法，不在疑似之间，而在类同，以固其惑。以旌旗金鼓诱敌者，疑似也；以老弱粮草诱敌者，则类同也。如：楚伐绞，军其南门，屈瑕曰：“绞小而轻，轻则寡谋，请勿捍采樵者以诱之。”从之，绞人获利。明日绞人争出，驱楚役徙于山中。楚人坐守其北门，而伏诸山下，大败之，为城下之盟而还。又如孙膑减灶而诱杀庞涓。【故事】萧翼智赚《兰亭序》帖。 第十八计擒贼擒王作战要先擒拿主要敌手。比喻做事要抓关键。【原典】摧其坚，夺其魁，以解其体。龙战于野，其道穷也①。【注释】①龙战于野，其道穷也：语出《易经．坤》卦。坤，卦名。本卦是同卦相叠（坤下坤上），为纯阴之卦。引本卦上六，《象辞》：“龙战于野，其道穷也。”是说即使强龙争斗在田野大地之上，也是走入了困顿的绝境。比喻战斗中擒贼擒王谋略的威力。【按语】攻胜则利不胜取。取小遗大，卒之利、将之累、帅之害、攻之亏也。舍胜而不摧坚擒王．是纵虎归山也。擒王之法，不可图辨旌旗，而当察其阵中之首动。昔张巡与尹子奇战，直冲敌营，至子奇麾下，营中大乱，斩贼将五十余人，杀士卒五千余人。迎欲射子奇而不识，剡蒿为矢，中者喜谓巡矢尽，走白子奇，乃得其状，使霁云射之，中其左目，几获之，子奇乃收军退还。【故事】西门豹治邺。 第三套 混战计处于不分敌友、军阀混战态势之计谋。见龙在野。 第十九计 釜底抽薪从锅底抽掉柴火。比喻从根本上解决问题。【原典】不敌其力①，而消其势②，兑下乾上之象③。【注释】①不敌其力：敌，动词，攻打。力，最坚强的部位。②而消其势：势，气势。③兑下乾上之象：《易经》六十四卦中，《履》卦为 “兑下乾上”，上卦为乾为天．下卦为兑为泽。又，兑为阴卦，为柔；乾为阳卦，为刚。兑在下，从循环关系和规律上说，下必冲上，于是出现“柔克刚”之象。此计正是 运用此象推理衍之，喻我取此计可胜强敌。【按语】水沸者，力也，火之力也，阳中之阳也，锐不可当；薪者，火之魄也，即力之势也，阴中之阴也，近而无害；故力不可当而势犹可消。尉缭子曰：“气实则斗，气夺则走。”面夺气之法，则在攻心，昔吴汉为大司马，有寇夜攻汉营，军中惊扰，汉坚卧不动，军中闻汉不动，有倾乃定。乃选精兵反击，大破之：此即不直当其力而扑消其势也。宋薛长儒为汉、湖、滑三州通判，驻汉州。州兵数百叛，开营门，谋杀知州、兵马监押，烧营以为乱。有来告者，知州、监押皆不敢出。长儒挺身徒步，自坏垣入其营中，以福祸语乱卒日：“汝辈皆有父母妻子，何故作此？叛者立于左，胁从者立于右！”于是，不与谋者数百人立于右；独主谋者十三人突门而出，散于诸村野，寻捕获。时谓非长儒，则一城涂炭矣！此即攻心夺气之用也。或日：敌与敌对，捣强敌之虚以败其将成之功也。【故事】曹操奇兵袭乌巢。 第二十计 混水摸鱼比喻趁混乱时机攫取不正当的利益。也作“浑水摸鱼”。【原典】乘其阴乱①，利其弱而无主。随，以向晦入宴息②。【注释】①乘其阴乱：阴，内部。意为乘敌人内部发生混乱。②随，以向晦入宴息：语出《易经．随》卦。随，卦名。本卦为异卦相叠（震下兑上）。本卦上卦为兑为泽；下卦为震为雷。言雷入泽中，大地寒凝，万物蛰伏，故如象名“随”。随，顺从之意。《随卦》的《象》辞说：“泽中有雷，随，君子以向晦入宴息。”意为人要随应天时去作息，向晚就当入室休息。此计运用此象理，是说打仗时要得于抓住敌方的可乘之隙，而我借机行事，使乱顺我之意，我便乱中取利。【按语】动荡之际，数力冲撞，弱者依违无主，散蔽而不察，我随而取之。《六韬》日：“三军数惊，士卒不齐，相恐以敌强，相语以不利，耳目相属，妖言不止，众口相惑，不畏法令，不重其将：此弱征也。”是鱼，混战之际，择此而取之。如：刘备之得荆州，取西川，皆此计也。【故事】搅乱局淝水败苻坚。 第二十一计 金蝉脱壳蝉变为成虫时要脱去幼早的壳。比喻用计脱身。【原典】存其形，完其势①；友不疑，敌不动。巽而止蛊②。【注释】①存其形，完其势，保存阵地已有的战斗形貌，进一步完备继续战斗的各种态势。②巽而止蛊：语出《易经·蛊》卦。蛊，卦名。本卦为异卦相叠（巽下艮上）。本卦上卦为艮为山为刚，为阳卦；巽为风为柔，为阴势。故“蛊”的卦象是“刚上柔下”，意即高山沉静，风行于山下，事可顺当。又，艮在上卦，为静；巽为下卦，为谦逊，故说“谦虚沉静”，“弘大通泰”是天下大治之象。此计引本卦《彖》辞：“巽而止，蛊。”其意是我暗中谨慎地实行主力转移，稳住敌人，我则乘敌不惊疑之际脱离险境，就可安然躲过战乱之危。“蛊”，意为顺事。【按语】共友击敌，坐观其势。尚另有一敌，则须去而存势。则金蝉脱壳者，非徒走也，盖为分身之法也。故大军转动．而旌旗金鼓，俨然原阵，使敌不敢动，友不生疑，待己摧他敌而返，而友敌始知，或犹且不如。然则金蝉脱壳者，在对敌之际，而抽精锐以袭别阵也。如：诸葛亮卒于军，司马懿追焉，姜维令仪反旗鸣鼓，若向懿者，懿退，于是仪结营而去。檀道济被围，乃命军士悉甲，身自（白）服乘舆徐出外围，魏惧有伏，不敢逼，乃归。【故事】慈禧用计回北京。 第二十二计 关门捉贼关起门来捉进入屋内的盗贼。【原典】小敌困之①。剥，不利有攸往②。【注释】①小敌困之：对弱小或者数量较少的敌人，要设法去困围（或者说歼灭）他。②剥，不利有攸往：语出《易经．剥》卦。剥，卦名。本卦异卦相叠（坤下艮上），上卦为艮为山，下卦为坤为地。意即广阔无边的大地在吞没山，故外名日“剥”。“剥”，落的意思。卦辞：“剥，不利有彼往”意为：剥卦说，有所往则不利。此计引此卦辞，是说对小股敌人要即时围困消灭，而不利于去急追或者远袭。【按语】捉贼而必关门，非恐其逸也，恐其逸而为他人所得也；且逸者不可复追，恐其诱也。贼署，奇兵也，游兵也，所以劳我者也。吴子曰：“今使一死贼，伏于矿野，千人追之，莫不枭视狼顾。何者？恐其暴起而害己也。是以—人投命，足惧千夫。”追贼者，贼有脱逃之机，势必死斗；若断其去路，则成擒矣。故小敌必困之，不能，则放之可也。【故事】白起长平败赵括。 第二十三计 远交近攻石刻：远交近攻石刻：远交近攻结交离得远的国家而进攻邻近的国家。这是秦国用以并吞六国，统一全国的外交策略。【原典】形禁势格①，利从近取，害以远隔②。上火下泽③。【注释】①形禁势格：禁，禁止。格，阻碍。句意为受到地势的限制和阻碍。②利从近取，害以远隔：句意为，先攻取就近的敌人有利，越过近敌先去攻取远隔之敌是有害的。③上火下泽：语出《易经·睽》卦。睽，卦名。本卦为异卦相叠（兑下离上）。上卦为离为火，下卦为兑为泽。上离下泽，是水火相克，水火相克则又可相生，循环无穷。又“睽”，乘违，即矛盾。本卦《象》辞：“上火下泽，睽。”意为上火下泽，两相离违、矛盾。此计运用“上火下泽”相互离违的道理，说明采取“远交近攻”的不同做法，使敌相互矛盾、离违，而我正好各个击破。【按语】混战之局，纵横捭阖之中，各自取利。远不可攻，而可以利相结；近者交之，反使变生肘腑。范雎之谋，为地理之定则，其理甚明。【故事】定国策范雎拜相。 第二十四计 假道伐虢以借路为名，实际上要侵占该国（或该路）。虢，诸侯国名。也作“假道灭虢”。【原典】两大之间，敌胁以从，我假以势①。困，有言不信②。【注释】①两大之间，敌胁以从，我假以势：假，借。句意为：处在我与敌两个大国之中的小国，敌方若胁迫小国屈从于他时，我则要借机去援救，造成一种有利的军事态势。②困，有言不信：语出《易经·困》卦。困，卦名。本纷为异卦相叠（坎下兑上），上卦为兑为泽，为阴；下卦为坎为水，为阳。卦象表明，本该容纳于泽中的水，离开泽而向下渗透，以致泽无水而受困，水离开泽流散无归也自困，故卦名为“困”。“困”，困乏。卦辞：“困，有言不信。”意为，处在困乏境地，难道不相信这基吗？此计运用此卦理，是说处在两个大国中的小国，面临着受人胁迫的境地时，我若说援救他，他在困顿中会不相信吗？【按语】假地用兵之举，非巧言可诳，必其势不受—方之胁从，则将受双方之夹击。如此境况之际，敌必迫之以威，我则诳之以不害，利其幸存之心，速得全势，彼将不能自阵，故不战而灭之矣。如：晋侯假道于虞以伐虢，晋灭虢，虢公丑奔京师，师还，袭虞灭之。【故事】蠢虞公贪财丧国。 第四套 并战计对付友军反为敌态势之计谋。终日乾乾。 第二十五计 偷梁换柱比喻暗中玩弄手法，以假代真。【原典】频更其阵，抽其劲旅，待其自败， 而后乘之①，曳其轮也②。【注释】①句中的几个“其”字，均指盟友、盟军言之。②曳其轮也：“语出《易经，既济》纷。既济，龄名，本卦为异卦相叠（离下坎上）。上卦为坎为水，下卦为离为火。水处火上，水势压倒火势，救火之事，大告成功，故卦名“即济”。既，已经；济，成功。本卦初九?《象》辞：“曳其轮，义无咎也。”意为，拖住了车轮，车子就不能运行了。此计运用此象理，是说好比拖住了车轮，车子就不能运行了。己方抽其友方劲旅，如同抽出梁木，房屋就会坍塌，于是己方就可以控制他了。【按语】阵有纵横，天衡为梁，地轴为柱。梁柱以精兵为之，故观其阵，则知精兵之所有。共战他敌时，频更其阵，暗中抽换其精兵，或竟代其为梁柱；势成阵塌，遂兼其兵。并此敌以击他敌之首策也。【故事】狸猫换太子。 第二十六计 指桑骂槐指着桑树骂槐树。比喻借题发挥，指着这个骂那个。【原典】大凌小者，警以诱之①。刚中而应，行险而顺②。【注释】①大凌小者，警以诱之：强大者要控制弱下者，要用警戒的办法去诱导他。②刚中而应，行险而顺：语出《易经．师》卦。师卦名。本卦为异卦相叠（坎下坤上）。本卦下卦为坎为水，上卦为坤为地，水流地下，随势而行。这正如军旅之象，故名为“师”。本卦《彖》辟说：“刚中而应，行险而顺，以此毒天下，而民从之。”“刚中而应”是说九二以阳爻居于下坎的中信，叫“刚中”，又上应上坤的六五，此为此应。下卦为坎，坎表示险，上卦为坤，坤表示顺，故又有“行险而顺”之象。以此卦象的道理督治天下，百姓就会服从。这是吉祥之象。“毒”，督音，治的意思。此计运用此象理，是说治军，有时采取适当的强刚手段便会得到应和，行险则遇顺。【按语】率数未服者以对敌，若策之不行，而利诱之，又反启其疑，于是故为自误，责他人之失，以暗警之。警之者，反诱之也。此盖以刚险驱之也。或曰：此遣将之法也。【故事】严军纪穰苴斩庄贾。 第二十七计 假痴不癫假装痴呆，掩人耳目，另有所图。【原典】宁伪作不知不为，不伪作假知妄为①。静不露机，云雷屯也②。【注释】①宁伪作不知不为，不伪作假知妄为：宁可假装着无知而不行动，不可以假装假知而去轻举妄动。②静不露机，云雷屯也：语出《易经．屯》卦。屯卦名。本卦为异卦相叠（震下坎上），震为雷，坎为雨，此卦象为雷雨并作，环境险恶，为事困难。“屯，难也”。《屯卦》的《彖》辞又说“云雷，屯。”坎为雨，又为云，震为雷。这是说，云行于上，雷动于下，云在上有压抑雷之象征，这是屯卦之卦象。此计运用此象理，是说在军事上，有时为了以退求进，必得假痴不癫，老成持重，以达后发制人。这就如同云势压住雷动，且不露机巧一样，最后一旦爆发攻击，便出其不意而获胜。【按语】假作不知而实知，假作不为而实不可为，或将有所为。司马懿之假病昏以诛曹爽，受巾帼假请命以老蜀兵，所以成功；姜维九伐中原，明知不可为而妄为之，则似痴矣，所以破灭。兵书曰：“故善战者之胜也，无智名，无勇功。”当其机未发时，静屯似痴；若假癫，则不但露机，则乱动而群疑。故假痴者胜，假癫者败。或日：假痴可以对敌，并可以用兵。宋代，南俗尚鬼。狄青征侬智高时，大兵始出桂林之南，因佯祝曰：“胜负无以为据。”乃取百钱自持，与神约，果大捷，则投此钱尽钱面也。左右谏止，傥不如意，恐沮师，青不听。万众方耸视，已而挥手一掷，百钱旨面。于是举兵欢呼，声震林野，青亦大喜；顾左右。取百丁（钉）来，即随钱疏密，布地而帖丁（钉）之，加以青纱笼，手自封焉。曰：“俟凯旋，当酬神取钱。”其后平邕州还师，如言取钱，幕府士大夫共祝视，乃两面钱也。【故事】燕王装疯夺皇权。 第二十八计 上屋抽梯上楼以后拿掉梯子。借指与人密谈。也用以比喻怂恿人，使人上当。【原典】假之以便，唆之使前，断其援应，陷之死地①。遇毒，位不当也②。【注释】①假之以便，唆之使前，断其援应，陷之死地：假，借。句意：借给敌人一些方便（即我故意暴露出一些破绽），以诱导敌人深入我方，乘机切断他的后援和前应，最终陷他于死地。②遇毒，位不当也：语出《易经．噬嗑》卦。噬嗑，卦名。本卦为异卦相叠（震下离上）。上卦为离为火，下卦为震为雷，是既打雷，又闪电，威严得很。又离为阴卦，震为阳卦，是阴阳相济，刚柔相交，以喻人要恩威并用，严明结合，故封名为“噬嗑”，意为咀嚼。本卦六三．《象》辞：“遇毒，位不当也。”本是说，抢腊肉中了毒（古人认为腊肉不新鲜，含有毒素，吃了可能中毒），因为六三阴兑爻于阳位，是位不当。此计运用此理，是说敌人受我之唆，犹如贪食抢吃，只怪自己见利而受骗，才陷于了死地。【按语】唆者，利使之也。利使之而不先为之便，或犹且不行。故抽梯之局，须先置梯，或示之梯。如：慕容垂、姚苌诸人怂秦苻坚侵晋，以乘机自起。【故事】刘琦登楼求妙计。 第二十九计 树上开花比喻将本求利，别人收获。语出《荡寇志》。【原典】借局布势，力小势大①。鸿渐于陆，其羽可用为仪也②。【注释】①借局布势，力小势大：句意为借助某种局面（或手段）布成有利的阵势，兵力弱小但可使阵势显出强大的样子。②鸿渐于陆，其羽可用为仪：语出《易经．渐》卦。渐，卦名，本卦为异卦相叠（艮下巽上）．上卦为巽为木，下卦为艮为山。卦象为木植长于山上，不断生长，也喻人培养自己的德性，进而影响他人，渐，即渐进。本卦上九说“鸿渐于陆，其羽可为仪，吉利，”是说鸿雁走到山头，它的羽毛可用来编织舞具这是吉利之兆。此计运用此理，是说弱小的部队通过凭借某种因素，改变外部形态之后，自己阵容显得充实强大了，就象鸿雁长了羽毛丰满的翅膀一样。【按语】此树本无花，而树则可以有花，剪彩贴之，不细察者不易发，使花与树交相辉映，而成玲珑全局也。此盖布精兵于友军之阵，完其势以威敌也。【故事】田单大摆火牛阵。 第三十计 反客为主本是客人却用主人的口气说话。后指在一定的场合下采取主动措施，以声势压倒别人。【原典】乘隙插足，扼其主机①，渐之进也②。【注释】①乘隙插足，扼其主机：把准时机插足进去，掌握他的要害关节之处。②渐之进也：语出《易经．渐》卦。（渐卦解释见前计②）本卦《彖》辞：“渐之进也。”意为渐就是渐进的意思。此计运用此理，是说乘隙插足，扼其主机。《易经．渐》卦上说的就是这个意思，要循序渐进。【按语】为人驱使者为奴，为人尊处者为客，不能立足者为暂客，能立足者为久客，客久而不能主事者为贱客，能主事则可渐握机要，而为主矣。故反客为主之局：第—步须争客位；第二步须乘隙；第三步须插足；第四足须握机；第五乃为主。为主，则并人之军矣；此渐进之阴谋也。如李渊书尊李密，密卒以败；汉高视势未敌项羽之先，卑事项羽。使其见信，而渐以侵其势，至垓下—役，—亡举之。【故事】郭子仪单骑退敌。 第五套 败战计处于败军态势之计谋，潜龙勿用。 第三十一计 美人计以美女诱人的计策。【原典】美人计美人计兵强者，攻其将；将智者，伐其情①。将弱兵颓，其势自萎。利用御寇，顺相保也②。【注释】①兵强者，攻其将；兵智者，伐其情：句意：对兵力强大的敌人，就攻击他的将帅，对明智的敌人，就打击他的情绪。②利用御寇，顺相保也：语出《易经．渐》卦。（卦名解释见计“树上开花”注②）本身九三《象》辞：“利御寇，顺相保也。”是说利于抵御敌人，顺利地保卫自己。此计运用此象理，是说利用敌人自身的严重缺点，己方顺势以对，使其自颓自损，己方一举得之。【按语】兵强将智，不可以敌，势必事先。事之以土地，以增其势，如六国之事秦：策之最下者也。事之以币帛，以增其富，如宋之事辽金：策之下者也。惟事以美人，以佚其志，以弱其体，以增其下之怨。如勾践以西施重宝取悦夫差，乃可转败为胜。【故事】报国仇西施赴吴。 第三十二计 空城计在敌众我寡的情况下，缺乏兵备而故意示意人以不设兵备，造成敌方错觉，从而惊退敌军之事。后泛指掩饰自己力量空虚、迷惑对方的策略。【原典】虚者虚之，疑中生疑①；刚柔之际②，奇而复奇。【注释】①虚者虚之，疑中生疑：第一个“虚”为名词，意为空虚的，第二个“虚”为动词，使动，意为让它空虚。全句意：空虚的就让它空虚，使他在疑惑中更加产生疑惑。空城计空城计②刚柔之际：语出《易经·解》卦。解，卦名。本卦为异卦相叠（坎下震上）。上卦为震为雷，下卦为坎为雨。雷雨交加，荡涤宇内，万象更新，万物萌生，故卦名为解。解，险难解除，物情舒缓。本卦初六．《象》辞“刚柔之际，义无咎也”，是使刚与柔相互交会，没有灾难。【按语】此计运用此象理，是说敌我交会，相战，运用此计可产生奇妙而又奇妙的功效。古人按语说：虚虚实实，兵无常势。虚而示虚，诸葛而后，不乏其人。如吐蕃陷瓜州，王君焕死，河西汹惧。以张守归圭为瓜州刺史，领余众，方复筑州城。版干（筑城墙用的夹板和立柱）裁立．敌又暴至。略无守御之具。城中相顾失色，莫有斗志。守圭日：“徒众我寡，又疮痍之后，不可以矢石相持，须以权道制之。”乃于城上，置酒作乐，以会将士。敌疑城中有备，不敢攻而退。又如齐祖铤为北徐州刺史，至州，会有阵寇百姓多反。铤不关城门，守陴者，皆令下城，静座街巷，禁断行人鸡犬。贼无所见闻，不测所以，或疑人走城空，不设警备。铤复令大叫，鼓噪聒天，贼大惊，顿时走散。 [2]【故事】失街亭孔明弄险。 第三十三计 反间计原指使敌人的间谍为我所用，或使敌人获取假情报而有利于我的计策。后指用计谋离间敌人引起内讧。【原典】疑中之疑①。比之自内，不自失也②。【注释】①疑中之疑：句意为在疑阵中再布疑阵。②比之自内，不自失也：语出《易经·比》卦。比，卦名，本卦为异卦相叠（坤下坎上）。本卦上卦为坎为为相依相赖，故名“比”。比，亲比，亲密相依。本纷六二。《象》辞：“比之自内，不自失也。”此计运用此象理，是说在布下一重重的疑阵之后，能使来自敌内部的间谍归顺于我。【按语】间者，使敌自相疑忌也；反间者，因敌之间而间之也。如燕昭王薨，惠王自为太子时，不快于乐毅。田单乃纵反间曰：“乐毅与燕王有隙，畏诛，欲连兵王齐，齐人未附。故且缓攻即墨，以待其事。齐人唯恐他将来，即墨残矣。惠王闻之，即使骑劫代将，毅遂奔赵。又如周瑜利用曹操间谍，以间其将；陈平以金纵反间于楚军，间范增，楚王疑而去之。亦疑中之疑之局也。【故事】群英会蒋干中计。 第三十四计 苦肉计故意毁伤身体以骗取对方信任，从而进行反间的计谋。【原典】人不自害，受害必真；假真真假，间以得行①。童蒙之吉，顺以巽也②。【注释】①人不自害，受害为真；假真真假，间以得行：（正常情况下）人不会自我伤害，若他受害必然是真情；（利用这种常理）我则以假作真，以真作假，那么离间计就可实行了。②童蒙之吉，顺以巽也：语出《易经．蒙》卦（卦名解释见第十四计注）。本卦六五．《象》辞：“童蒙之吉，顺以巽也。”本意是说幼稚蒙昧之人所以吉利，是因为柔顺服从。本计用此象理，是说用采用这种办法欺骗敌人，就是顺应着他那柔弱的性情达到目的。【按语】间者，使敌人相疑也；反间者，因敌人之疑，而实其疑也；苦肉计者，盖假作自间以间人也。凡遣与己有隙者以诱敌人，约为响应，或约为共力者：皆苦肉计之类也。如：郑武公伐胡而先以女妻胡君，并戮关其思；韩信下齐而骊生遭烹。【故事】王佐断臂诈投金，黄盖诈降曹操。 第三十五计 连环计本为元杂剧名。剧本写汉末董卓专权，王允设计，先许嫁美女貂蝉与吕布，后又献给董卓，以离间二人，致使吕布杀死董卓。后用以指一个接一个相互关联的计策。【原典】将多兵众，不可以敌，使其自累，以杀其势。在师中吉，承天宠也①。【注释】①在师中古，承天变也：语出《易经．师》卦（卦名讲释见前第二十六计注）。本卦九二．《象》辞：“在师中吉，承天宠也”是说主帅身在军中指挥，吉利，因为得到上天的宠爱。此计运用此象理，是说将帅巧妙地运用此计，克敌制胜，就如同有上天护佑一样。【按语】庞统使曹操战舰勾连，而后纵火焚之，使不得脱。则连环计者，其结在使敌自累，而后图之。盖一计累敌，—计攻敌，两计扣用，以摧强势也。如宋毕再遇赏引敌与战，且前且却，至于数四。视日已晚，乃以香料煮黑，布地上。复前博战，佯败走。敌乘胜追逐。其马已饥，闻豆香，乃就食，鞭之不前。遇率师反攻，遂大胜。皆连环之计也。【故事】献貂蝉王允除董卓。 第三十六计 走为上计指战争中看到形势对自己极为不利时就逃走。现多用于做事时如果形势不利没有成功的希望时就选择退却、逃避的态度。【原典】全师避敌①。左次无咎，未失常也②【注释】①全师避敌：全军退却，避开强敌。②左次无咎：未失常也：语出《易经．师》卦（卦名解释见前二十六计注）。本卦六四．《象》辞：“左次无咎，未失常也。”是说军队在左边扎营，没有危险，（因为扎营或左边或右边，要依时情而定）并没有违背行军常道。【按语】敌势全胜，我不能战。则：必降；必和；必走。降则全败，和则半败，走则未败。未败者，胜之转机也。如宋毕再遇与金人对垒，度金兵至者日众，难与争锋。—夕拔营去，留旗帜于营，豫缚生羊悬之，置其前二足于鼓上，羊不堪悬，则足击鼓有声。金人不觉为空营，相持数日，乃觉，欲追之，则已远矣。（《战略考．南宋》）可谓善走者矣。]]></content>
      <categories>
        <category>其它</category>
        <category>读书</category>
      </categories>
      <tags>
        <tag>日常生活</tag>
        <tag>36计解说</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[英语作文模板]]></title>
    <url>%2F2018%2F06%2Fothers%2Fenglish%2F%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87%E6%A8%A1%E6%9D%BF%2F</url>
    <content type="text"><![CDATA[题目：Internet 现象意义段：Owing to the speedy economic development, the number of people who use the Internet has considerably increased/declined.意义：It is universally acknowledged that the Internet plays a crucial role in modern society. 利弊分析：主题句：Due attention has to be paid to the issue of Internet. (利) With the reform and opening－up in recent decades, people in mounting numbers have come to realize the significance of Internet. (弊)Unfortunately, many of them utilize the Internet in an irrational way. And if we let this situation continue as it is, we do not know where humans will be in the forthcoming future. 建议措施：主题句：Accordingly, it is imperative for us to take drastic measures. 建议1：To begin with, we should appeal to the authorities to make strict laws to regulate the Internet. 建议2：In addition, we should cultivate the awareness of people that the Internet is essential to us. Only in this way can we reverse this disturbing trend illustrated above. 我的看法段：Obviously, the Internet, like anything else, has more than one side. While they are so indispensable to mankind, they also bring us serious problems. It is only hoped that mankind, while making the most out of the Internet, will eventually find a satisfactory solution to the problems caused by it.]]></content>
      <categories>
        <category>其它</category>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java实现Excel用户信息的导出]]></title>
    <url>%2F2018%2F03%2Fjava%2Fjava%E6%A1%88%E4%BE%8B%2F%E7%94%A8java%E5%AE%9E%E7%8E%B0Excel%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E7%9A%84%E5%AF%BC%E5%87%BA%2F</url>
    <content type="text"><![CDATA[导出Excel大致有以下5个步骤： 1.创建一个excel文件工作薄；（HSSFWorkbook workbook = new HSSFWorkbook()） 2.创建一张表；HSSFSheet sheet = workbook.createSheet(“统计表”) 3.创建一行；HSSFRow row = sheet.createRow(0) 4.填充一列数据; row.createCell(0).setCellValue(“数据”) 5.设置一个单元格样式；cell.setCellStyle(style) 本案例是根据用户名，手机号，部门，权限作条件查找来导出用户信息首先，添加依赖： &lt;dependency&gt; &lt;groupId&gt;org.apache.poi&lt;/groupId&gt; &lt;artifactId&gt;poi&lt;/artifactId&gt; &lt;version&gt;3.14&lt;/version&gt; &lt;/dependency&gt; 然后，在Service层加入以下几个方法： /** * 生成用户表excel */ public void createTitle(HSSFWorkbook workbook, HSSFSheet sheet){ HSSFRow row = sheet.createRow(0); //设置列宽，setColumnWidth的第二个参数要乘以256，这个参数的单位是1/256个字符宽度 sheet.setColumnWidth(1,12*256); sheet.setColumnWidth(3,17*256); //设置为居中加粗 HSSFCellStyle style = workbook.createCellStyle(); HSSFFont font = workbook.createFont(); font.setBold(true); style.setAlignment(HSSFCellStyle.ALIGN_CENTER); style.setFont(font); HSSFCell cell; cell = row.createCell(0); cell.setCellValue(&quot;序号&quot;); cell.setCellStyle(style); cell = row.createCell(1); cell.setCellValue(&quot;用户名&quot;); cell.setCellStyle(style); cell = row.createCell(2); cell.setCellValue(&quot;手机号&quot;); cell.setCellStyle(style); cell = row.createCell(3); cell.setCellValue(&quot;部门&quot;); cell.setCellStyle(style); cell = row.createCell(4); cell.setCellValue(&quot;权限&quot;); cell.setCellStyle(style); cell = row.createCell(5); cell.setCellValue(&quot;创建人&quot;); cell.setCellStyle(style); cell = row.createCell(6); cell.setCellValue(&quot;变更人&quot;); cell.setCellStyle(style); cell = row.createCell(7); cell.setCellValue(&quot;创建时间&quot;); cell.setCellStyle(style); cell = row.createCell(8); cell.setCellValue(&quot;创建时间&quot;); cell.setCellStyle(style); } //生成excel文件 public void buildExcelFile(String filename,HSSFWorkbook workbook) throws Exception{ FileOutputStream fos = new FileOutputStream(filename); workbook.write(fos); fos.flush(); fos.close(); } //浏览器下载excel public void buildExcelDocument(String filename,HSSFWorkbook workbook,HttpServletResponse response) throws Exception{ response.setContentType(&quot;application/vnd.ms-excel&quot;); response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot;+URLEncoder.encode(filename, &quot;utf-8&quot;)); OutputStream outputStream = response.getOutputStream(); workbook.write(outputStream); outputStream.flush(); outputStream.close(); } 最后，在Controller层进行调用： /** * 生成用户表excel */ @ResponseBody @RequestMapping(value = &quot;/getUserExcel&quot;, method = RequestMethod.GET) public String getUserExcel(@RequestParam(value = &quot;username&quot;,required = false) String username, @RequestParam(value = &quot;telephone&quot;,required = false) String telephone, @RequestParam(value = &quot;deptId&quot;,required = false) Integer deptId, @RequestParam(value = &quot;aclId&quot;,required = false) List&lt;Integer&gt; aclId, HttpServletResponse response) throws Exception { HSSFWorkbook workbook = new HSSFWorkbook(); HSSFSheet sheet = workbook.createSheet(&quot;统计表&quot;); sysOcrUserService.createTitle(workbook,sheet); SysOcrUser sysOcrUser = new SysOcrUser(); if(StringUtils.isNotEmpty(username)){ sysOcrUser.setUsername(username); } if(StringUtils.isNotEmpty(telephone)){ sysOcrUser.setTelephone(telephone); } if(deptId !=null ){ sysOcrUser.setDeptId(deptId); } if(aclId !=null &amp;&amp; aclId.size() &gt; 0){ sysOcrUser.setAclId(aclId); } List&lt;SysOcrUserDto&gt; rows = sysOcrUserService.getAllUsersByContion(sysOcrUser); //设置日期格式 HSSFCellStyle style = workbook.createCellStyle(); style.setDataFormat(HSSFDataFormat.getBuiltinFormat(&quot;m/d/yy h:mm&quot;));//m/d/yy h:mm //新增数据行，并且设置单元格数据 int rowNum=1; int index = 1; for(SysOcrUserDto user:rows){ HSSFRow row = sheet.createRow(rowNum); row.createCell(0).setCellValue(index);//序号从1自增 index++; row.createCell(1).setCellValue(user.getUsername()); row.createCell(2).setCellValue(user.getTelephone()); row.createCell(3).setCellValue(user.getDeptName()); //遍历权限 StringBuffer acls=new StringBuffer(); for(SysOcrAcl acl:user.getSysOcrAcls()){ acls.append(acl.getAclName()+&quot;，&quot;); } row.createCell(4).setCellValue(acls.substring(0,acls.length()-1)); row.createCell(5).setCellValue(user.getCreateUser()); row.createCell(6).setCellValue(user.getChangeUser()); HSSFCell cell = row.createCell(7); cell.setCellValue(user.getChangeTime()); cell.setCellStyle(style); rowNum++; } String fileName = &quot;导出用户的excel.xls&quot;; //生成excel文件 sysOcrUserService.buildExcelFile(fileName, workbook); //浏览器下载excel sysOcrUserService.buildExcelDocument(fileName,workbook,response); return &quot;download excel&quot;; } 导出的Excel效果如图：]]></content>
      <categories>
        <category>java</category>
        <category>java案例</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java案例</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery插件]]></title>
    <url>%2F2017%2F12%2Ffront%2F06jQuery%2FjQuery%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[一. jQuery插件简介jQuery插件是一种建立在jQuery之上的用以提高网站开发效率与实现效果的JavaScript脚本库。适当使用jQuery插件，有利于创建交互性更强、操作性更好、界面更加美观的Web应用。 jQuery插件的主要特点： 界面美观。 集成度高，使用十分方便。 扩展性强，可根据需要进行修改。 常用的jQuery插件： jQuery UI插件 jQuery EasyUI插件 第三方jQuery插件 二. jQuery UI插件2.1 jQuery UI简介jQuery UI是jQuery开发团队自己开发的以jQuery为基础的开源的UI插件库，由jQuery官方负责维护。官网：www.jqueryui.com在jQuery UI中，包含一系列UI设计方面的插件。 折叠面板（Accordion） 自动完成（Autocomplete） 按钮（Button） 日期选择器（Datepicker） 对话框（Dialog） 2.2 jQuery UI的使用例如：在页面中添加一个旋转器（Spinner）插件。HTML代码： &lt;input name=&quot;mySpinner&quot; type=&quot;text&quot; id=&quot;mySpinner&quot; value=&quot;0&quot; size=&quot;3&quot; maxlength=&quot;3&quot;&gt; jQuery程序代码： &lt;script type=&quot;text/javascript&quot;&gt; $(document).ready(function(){ $(&quot;#mySpinner&quot;).spinner(); }); &lt;/script&gt; 2.3 jQuery UI的应用基础安装插件，调用插件的初始化方法。如： $(&quot;#mySpinner&quot;).spinner(); $(&quot;#mySpinner&quot;).spinner({min:0,max:100,step:1}); 为在jQuery UI插件上调用一个方法，可向插件传递相应的方法名称。如： $(&quot;#mySpinner&quot;).spinner(&quot;value&quot;); $(&quot;#mySpinner&quot;).spinner(&quot;value&quot;,0); jQuery UI插件共有的方法： option方法：用于获取或设置插件选项的值。 $(&quot;#mySpinner&quot;).spinner( &quot;option&quot;,&quot;min&quot;); $(&quot;#mySpinner&quot;).spinner( &quot;option&quot;,&quot;min&quot;,-100); disable方法：用于禁用插件。$(&quot;#mySpinner&quot;).spinner(&quot;disable&quot;); enable方法：用于启用插件。$(&quot;#mySpinner&quot;).spinner(&quot;enable&quot;); destroy方法：用于销毁插件。$(&quot;#mySpinner&quot;).spinner(&quot;destroy&quot;); 2.4 jQuery UI的应用实例Accordion插件: Accordion插件用于创建折叠面板。Autocomplete插件: 用于实现自动完成功能，即根据用户的输入自动在一组选项中进行搜索或过滤，以便让用户从动态更新的列表中快速找到所需要的选项。Autocomplete插件用于实现自动完成功能，即根据用户的输入自动在一组选项中进行搜索或过滤，以便让用户从动态更新的列表中快速找到所需要的选项。Button插件: Button插件用于创建带有适当悬停与激活样式的按钮。Datepicker插件: Datepicker插件用于创建日期选择器，以便从中选定日期。 三. jQuery EasyUI插件jQuery EasyUI是一个广为使用的基于jQuery核心开发的UI插件库。在jQuery EasyUI中，集成了各种类型的为数众多的UI插件。官网： http://www.jeasyui.com插件分类:Base（基础）Layout（布局）Menu（菜单）与 Button（按钮）Form（表单）Window（窗口）DataGrid（数据网格）与 Tree（树） 四. 第三方jQuery插件常用的第三方jQuery插件:Password Strength（密码强度检测插件）uploadify（文件上传插件）zTree（树状插件）ColorPicker（颜色选择器插件）jQZoom（图片放大镜插件）]]></content>
      <categories>
        <category>前端</category>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery_Ajac应用]]></title>
    <url>%2F2017%2F12%2Ffront%2F06jQuery%2FjQuery_Ajac%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[一. Ajax简介1.1 Ajax的基本概念Ajax：Asynchronous JavaScript and XML（异步JavaScript和XML），是一种创建交互式网页应用的开发技术。Ajax的核心理念是使用XMLHttpRequest对象发送异步请求。 Ajax并非一种全新的技术，而是多种技术的相互融合。HTML/XHTMLCSSDOMXMLXMLHttpRequest对象JavaScript 1.2 Ajax的应用模式在传统的Web应用模式中，浏览器是使用同步方式发送请求并等待响应。Ajax应用模式可将请求与响应改为异步方式（即非同步方式）。在发送请求后，浏览器就无须空等服务器的响应，而是让用户继续对其中的Web应用程序进行其他操作。当服务器处理请求并返回响应时，再告知浏览器按程序所设定的方式进行相应的处理。 与传统的Web应用模式相比，Ajax应用模式的运行效率更高，而且用户的体验也更佳。Ajax具有异步交互的特点，可实现Web页面区域的动态更新（在此过程中无须刷新整个页面），因此特别适用于交互较多、数据读取较为频繁的Web应用。 1.3 Ajax的编程基础Ajax应用程序必须是由客户端和服务器一同合作的应用程序。JavaScript是编写Ajax应用程序的客户端语言，而XML则是请求或响应时建议使用的交换信息的格式。 Ajax的核心为XMLHttpRequest组件，可通过JavaScript创建其对象实例。XMLHttpRequest组件在Firefox、NetScape、Safari、Opera中称为XMLHttpRequest，在IE中则是称为Microsoft XMLHTTP或Msxml2.XMLHTTP的ActiveX组件（在IE7中已更名为XMLHttpRequest）。 为兼容各种不同的浏览器，必须先进行测试，以正确创建XMLHttpRequest对象。 创建了XMLHttpRequest对象后，为实现相应的Ajax的功能，可在JavaScript脚本中调用XMLHttpRequest对象的方法或访问XMLHttpRequest对象的属性。 二. jQuery的Ajax应用技术为降低Ajax应用的编程难度，jQuery 提供了一系列与Ajax有关的方法。 2.1 使用load()方法加载数据语法格式：load(url[,data ] [,callback)]);功能：从服务器加载数据，并将返回的数据置于所匹配的元素中。 2.2 使用$.get()方法发送请求$.get()方法以GET方式发送异步请求。语法格式：$.get(url[,data][,callback][,type]) 2.3 使用$.post()方法发送请求$.post()方法以POST方式发送异步请求。语法格式：$.post(url[,data][,callback][,type]) 2.4 使用$.getScript()方法加载JavaScript脚本在jQuery中，可通过$.getScript()全局方法加载JavaScript脚本。语法格式：$.getScript(url [,callback]) 2.5 使用$.getJSON()方法加载JSON数据在jQuery中，可通过$.getJSON()全局方法加载JSON数据。语法格式：$.getJSON(url[,data][,callback]) 2.6 使用$.ajax()方法发送请求语法格式：$.ajax(options);options为请求的有关设置，格式为{name1:value1, name2:value2, …}常用参数：url, type, data, dataType, success, error 2.7 使用serialize()方法序列化表单语法格式：serialize()功能：对表单或表单中的某些元素进行序列化。 2.8 使用Ajax事件监控请求在jQuery中，存在6个ajax的全局性事件。ajaxCompleteajaxErrorajaxSendajaxStartajaxStopajaxSuccess]]></content>
      <categories>
        <category>前端</category>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery表单操作]]></title>
    <url>%2F2017%2F12%2Ffront%2F06jQuery%2FjQuery%E8%A1%A8%E5%8D%95%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[一. 表单简介表单是HTML文档或页面中的一个特定区域，其主要功能是让用户输入有关的数据，然后再提交到服务器端进行处理。 表单标记 &lt;form&gt; &lt;/form&gt; 常用属性：Name, Action, Method, Enctype, Target 在表单内，通常包含有一系列用于生成各种表单元素的标记。如：&lt;input&gt;, &lt;textarea&gt;, &lt;select&gt;等等 表单元素：文本框，密码域，单选按钮，复选框，文本域，列表框，提交按钮，重置按钮，普通按钮 二. 表单的元素操作2.1 文本框的操作文本框主要用于输入单行文本。相关操作主要包括获取或设置文本框的值、更改文本框的编辑状态等。获取文本框的值：val()设置文本框的值：val(value) 设置文本框不可编辑：attr(&quot;disabled&quot;, &quot;disabled&quot;|true)设置文本框可编辑：removeAttr(&quot;disabled&quot;), attr(&quot;disabled&quot;, flase) 2.2 文本域的操作文本域主要用于输入多行文本。相关操作主要包括获取或设置文本域的值、更改文本域的编辑状态等，其实现方法与文本框相应操作的实现方法是相同的。 2.3 单选按钮的操作单选按钮主要用于在同组选项中确保选中且只选中其中的一项。相关操作主要包括选中、取消选中与是否选中的状态判断等。选中单选按钮: attr(&quot;checked&quot;,true|&quot;checked&quot;)取消选中单选按钮: removeAttr(&quot;checked&quot;), attr(&quot;checked&quot;,false)判断选中状态: attr(&quot;checked&quot;) == &quot;checked&quot; 2.4 复选框的操作复选框主要用于在同组选项中进行任意的选择。相关操作主要包括选中、取消选中与是否选中的状态判断等。 选中复选框: attr(&quot;checked&quot;,true|&quot;checked&quot;)取消选中复选框: removeAttr(&quot;checked&quot;), attr(&quot;checked&quot;,false)判断选中状态: attr(&quot;checked&quot;) == &quot;checked&quot; 2.5 列表框的操作列表框主要用于在一组选项中进行相应的选择。相关操作主要包括获取或设置列表框的值以及列表框选项的清空与添加等。获取列表框的值: val()设置列表框的值（即选中相应的选项）: val(value)清空列表框的选项: empty()向列表框添加选项: append(&quot;&lt;option value=&#39;选项值&#39;&gt;选项文本&lt;/option&gt;&quot;) 三. 表单的事件处理焦点的获取: focus(fn), focus()焦点的失去: blur(fn), blur()值的改变: change(fn), change()文本的选择: select(fn), select()表单的提交: submit(fn), submit() 四. 表单的数据验证&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt; &lt;title&gt;表单数据验证示例&lt;/title&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;./jQuery/jquery.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; $(document).ready(function(){ $(&quot;form :input.required&quot;).each(function(){ var $required=$(&quot;&lt;font color=&#39;red&#39;&gt;*&lt;/font&gt;&quot;); //创建元素 $(this).after($required); //添加元素 }) $(&quot;form :input&quot;).blur(function(e){ if($(this).is(&quot;#account&quot;)){ if($(this).val()==&quot;&quot;){ alert(&quot;账号不能为空！&quot;); } } if($(this).is(&quot;#password&quot;)){ if($(this).val()==&quot;&quot;){ alert(&quot;密码不能为空！&quot;); }else if($(this).val().length&lt;6){ alert(&quot;密码长度不能小于6位！&quot;); } } }) $(&quot;#submit&quot;).click(function(e){ var account=$(&quot;#account&quot;).val(); var password=$(&quot;#password&quot;).val(); var type=$(&quot;#type&quot;).val()+&quot;(&quot;+$(&quot;#type option:selected&quot;).text()+&quot;)&quot;; if (account==&quot;&quot;){ alert(&quot;请输入账号！&quot;); $(&quot;#account&quot;).focus(); return false; } if (password==&quot;&quot;){ alert(&quot;请输入密码！&quot;); $(&quot;#password&quot;).focus(); return false; } if (password.length&lt;6){ alert(&quot;密码长度不能小于6位！&quot;); $(&quot;#password&quot;).focus(); return false; } alert(&quot;账号：&quot;+account+&quot;\r\n密码：&quot;+password+&quot;\r\n类型：&quot;+type); }); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;form id=&quot;form&quot;&gt; 账号：&lt;input name=&quot;account&quot; type=&quot;text&quot; id=&quot;account&quot; size=&quot;10&quot; maxlength=&quot;10&quot; class=&quot;required&quot;&gt; &lt;br&gt; 密码：&lt;input name=&quot;password&quot; type=&quot;password&quot; id=&quot;password&quot; size=&quot;10&quot; maxlength=&quot;10&quot; class=&quot;required&quot;&gt; &lt;br&gt; 类型：&lt;select name=&quot;type&quot; id=&quot;type&quot;&gt; &lt;option value=&quot;0&quot;&gt;管理员&lt;/option&gt; &lt;option value=&quot;1&quot; selected&gt;教师&lt;/option&gt; &lt;option value=&quot;2&quot;&gt;学生&lt;/option&gt; &lt;/select&gt; &lt;br&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; id=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;input type=&quot;reset&quot; name=&quot;reset&quot; id=&quot;reset&quot; value=&quot;重置&quot;&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery事件处理]]></title>
    <url>%2F2017%2F11%2Ffront%2F06jQuery%2FjQuery%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[一. 事件简介除了文档对象就绪事件ready以外，jQuery还提供了为数众多的各种事件，包括鼠标事件、键盘事件、表单事件与浏览器事件等。通过为事件绑定或注册相应的事件处理函数，可在该事件发生时自动执行预定的任务。为方便起见，jQuery为用户统一了所有事件的名称。例如：鼠标事件click：单击事件。dblclick：双击事件。 键盘事件keydownkeyup 表单事件blurfocus 浏览器事件loadunload 二. 事件方法jQuery统一了所有事件的名称，并提供了相应的事件方法。事件方法名与事件的名称的相同的。例如：click事件的事件方法名为clickdblclick事件的事件方法名为dblclick 事件处理函数的绑定: 要为事件绑定处理函数，应以事件处理函数作为参数调用相应的事件方法。基本格式： EventMethodName(function(){ … }); 事件处理函数的执行: 必要时，可通过调用不带任何参数的事件方法来触发相应的事件，从而执行其事件处理函数。基本格式：EventMethodName(); 三. 事件的基本操作事件的绑定, 方法： bind(name[,data],fn); one(name[,data],fn); //例如： $(&quot;#btnOK&quot;).bind(&quot;click&quot;,function(){ alert(&quot;OK!&quot;); }); 事件的解绑, 方法：unbind([name][[,]fn]);例如：$(&quot;#btnOK&quot;).unbind(&quot;click&quot;); 事件的触发, 基本方法： trigger(eventName); triggerHandler(eventName); 例如：$(&quot;#btnOK&quot;).trigger(&quot;click&quot;); 必要时，可在触发事件的同时为事件传递参数。语法格式： trigger(eventName,[paramValue1, paramValue2, ...]); triggerHandler(eventName,[paramValue1, paramValue2, ...]); // 例如： $(&quot;#btnOK&quot;).trigger(&quot;click&quot;, [&quot;Hello&quot;,&quot;World&quot;]); 为接收传递过来的参数值，相应的事件处理函数也必须添加有关参数。基本格式： function(eventObject, param1, param2, ...){ ...... }) 四. 悬停操作的模拟所谓悬停操作，是指将鼠标指针移动到一个对象上，然后又从该对象移走。在jQuery中，可使用hover ()方法实现悬停操作的模拟。语法格式：hover(over,out); 五. 事件对象的应用事件对象只能在事件处理函数中进行访问。一旦事件处理函数执行完毕，相应的事件对象就被销毁了。 5.1 事件对象的获取为获取事件对象，只需在事件处理函数中添加一个参数即可。例如： $(&quot;#btnOK&quot;).bind(&quot;click&quot;,function(event){ ...... }) event：事件对象。事件对象的常用属性：type, pageX, pageY事件对象属性的访问格式：event.property 5.2 事件冒泡的阻止对于事件的处理，DOM标准规定应同时使用事件捕获与事件冒泡这两个事件模型。对于事件捕获模型来说，事件的响应是从DOM树的顶层向下进行的；对于事件冒泡模型来说，事件的响应是从DOM树的底层向上进行的。 对于jQuery而言，始终在事件冒泡阶段注册事件处理程序。事件冒泡往往会导致一些令人头疼的问题，因此通常需要阻止事件的冒泡。jQuery中，只需调用事件对象的stopPropagation()方法，即可阻止事件的冒泡。 5.3 默认行为的阻止基本方法：调用事件对象的preventDefault()方法。 若要同时阻止事件的冒泡与浏览器的默认行为，可在事件处理程序中返回false。 六. 动画效果的实现在jQuery中，通过利用有关的事件并调用相关的方法，可以实现各种不同的动画效果。 6.1 显示隐藏效果隐藏元素，方法：hide([speed[,callback]])speed：用于指定完全隐藏元素所需要的时间。可以是数字（单位为毫秒），也可以是”slow”（表示600毫秒）、”normal”（默认值，表示400毫秒）与”fast”（表示200毫秒）。callback：可选参数，用于指定隐藏完成后要触发的回调函数。 例如： $(&quot;img&quot;).hide(); $(&quot;img&quot;).hide(300); $(&quot;img&quot;).hide(&quot;slow&quot;); 显示元素，方法：show([speed[,callback]])例如： $(&quot;img&quot;).show(); $(&quot;img&quot;).show(300); $(&quot;img&quot;).show(&quot;slow&quot;); 切换元素的可见状态, 方法：toggle() 6.2 淡入淡出效果有关方法： fadeIn(speed,[callback]) fadeOut(speed,[callback]) fadeTo(speed,opacity,[callback]) opacity：不透明度，其值为0到1之间的数字，0表示完全透明，1表示完全不透明。 6.3 滑上滑下效果有关方法： slideDown(speed[,callback]) slideUp(speed[,callback]) slideToggle(speed[,callback]) 6.4 自定义动画效果创建自定义动画, 方法：animate(styles,speed,callback)停止自定义动画, 方法：stop(clearQueue,gotoEnd)延迟动画的执行, 方法：delay(time)判断元素是否处于动画状态, 方法：is(&quot;:animated&quot;) 例如： if(!$(selector).is(&quot;:animated&quot;)){ … //添加新的动画 } 七. 表格操作的实现在jQuery中，通过利用有关的事件并调用相关的方法，可以很方便地实现各种相当实用的表格操作。]]></content>
      <categories>
        <category>前端</category>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery元素操作]]></title>
    <url>%2F2017%2F11%2Ffront%2F06jQuery%2FjQuery%E5%85%83%E7%B4%A0%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[一. 元素操作简介在开发各类Web应用时，经常要对页面中的有关元素进行相应的操作。包括：元素内容的操作元素值的操作元素属性的操作元素样式的操作元素节点的操作 二. 元素内容的操作元素的内容：元素起始标记与结束标记之间的内容。文本内容不包括元素的子标记。HTML内容包括元素的子标记。如： &lt;div&gt; &lt;span&gt;Hello,Word!&lt;/span&gt; &lt;/div&gt; &lt;div&gt;元素的文本内容： Hello,Word! &lt;div&gt;元素的HTML内容： &lt;span&gt;Hello,Word!&lt;/span&gt; 元素内容获取：text()：获取全部匹配元素的文本内容。html()：获取第一个匹配元素的HTML内容。 元素内容设置：text(value)：将全部匹配元素的文本内容设置为value。html(value)：将全部匹配元素的HTML内容设置为value。 三. 元素值的操作元素值的获取：val()：获取第一个匹配元素的当前值，返回值可能是一个字符串，也可能是一个数组。 元素值的设置：val(value)：将所有匹配元素的值设置为value。val(arrValue)：将所有匹配的select元素的值设置为arrValue（arrValue为字符串数组）。 四. 元素属性的操作元素属性的获取： attr(property) 元素属性的设置 attr(property,value) attr(property,fn) attr({property1: value1, property2: value2, ...}) 元素属性的删除: removeAttr(property) 五. 元素样式的操作元素样式属性的操作: css(name) css(name,value) css({name1:value1, name2:value2, ...}) 元素样式类的操作: addClass(class) removeClass(class) toggleClass(class) toggleClass(class,true|false) 六. 元素节点的操作包括节点的查找、创建、插入、删除、清空、复制、替换、包裹与遍历等。 6.1 元素节点的查找: 使用jQuery选择器。6.2 元素节点的创建: $(htmlcode), 如：var $p1 = $(&quot;&lt;p&gt;Hello,World!&lt;/p&gt;&quot;); var $p2 = $(&quot;&lt;p&gt;您好，世界！&lt;/p&gt;&quot;); 6.3 元素节点的插入:在元素内部插入节点: append(content) prepend(content) appendTo(selector) prependTo(selector) 在元素外部插入节点: after(content) before(content) insertAfter(selector) insertBefore(selector) 6.4 元素节点的删除:remove() detach() 6.5 元素节点的清空: empty()6.6 元素节点的复制:clone() clone(true|false) 6.7 元素节点的替换:replaceWith(content) replaceAll(selector) 6.8 元素节点的包裹wrap(tag|fn) unwrap() wrapAll(tag) wrapInner(tag|fn) 6.9 元素节点的遍历: each(callback)callback是一个回调函数。该函数可以接受一个形参index（遍历元素的序号，从0开始）。]]></content>
      <categories>
        <category>前端</category>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery选择器]]></title>
    <url>%2F2017%2F11%2Ffront%2F06jQuery%2FjQuery%E9%80%89%E6%8B%A9%E5%99%A8%2F</url>
    <content type="text"><![CDATA[一. 选择器简介选择器是jQuery应用的基础，主要用于获取页面中的有关元素，以便进一步对选中的元素执行某些操作。基本格式：$(selector) $()”为jQuery的工厂函数 参数selector为相应的选择符例如：$(&quot;#username&quot;) $(&quot;div&quot;) $(&quot;.myClass&quot;) 基于选择器，可进一步根据需要调用有关方法对其所选中的元素进行相应的操作。基本格式：$(selector).methodName([parameterList]);例如：$(&quot;div&quot;).hide(); jQuery支持链式操作，即多个有关方法允许以链的形式串连起来，并依次执行。例如： $(&quot;div&quot;).show().addClass(&quot;myClass&quot;); $(&quot;div&quot;).show().removeClass(&quot;myClass&quot;); 二. 基本选择器ID选择器: ID选择器根据HTML DOM元素的id属性值来匹配元素。语法格式：$(&quot;#idValue&quot;)例如：$(&quot;#username&quot;); 标记选择器: 标记选择器根据HTML DOM元素的标记名来匹配元素。语法格式：$(&quot;tagName&quot;)例如：$(&quot;div&quot;);使用标记选择器所获取的元素往往会有多个。此时，为获取其中的某个元素，可调用eq()方法。语法格式：eq(index), index：相应元素的索引值（从0开始计数）。 类名选择器: 类名选择器根据HTML DOM元素所使用的CSS样式类的名称来匹配元素。语法格式：$(&quot;.className&quot;)例如：$(&quot;.myClass&quot;); 交集选择器: 交集选择器根据多个直接连接的选择符来匹配元素，最终所获取的元素就是这些选择符共同匹配的元素。语法格式：$(&quot;selector1selector2...selectorN&quot;) 并集选择器: 并集选择器根据多个以逗号“,”连接的选择符来匹配元素，最终所获取的元素就是这些选择符分别匹配的元素。语法格式：$(&quot;selector1,selector2,...,selectorN&quot;) 全局选择器: 全局选择器通常又称为通配符选择器，使用通配符“”作为选择符，可匹配页面上的所有DOM元素。语法格式：`$(““)` 三. 层次选择器后代选择器: 后代选择器用于匹配指定祖先元素的有关后代元素。语法格式：$(&quot;ancestor descendant&quot;)例如：$(&quot;ul li&quot;); 子女选择器: 子女选择器用于匹配指定双亲元素的有关子女元素。语法格式：$(&quot;parent&gt;child&quot;)例如：$(&quot;form&gt;input&quot;); 近邻选择器: 用于匹配在指定元素后的同级（或同辈）的相邻的那个元素。语法格式：$(&quot;prev+next&quot;)例如：$(&quot;div+img&quot;); 同胞选择器: 用于匹配在指定元素后的有关同胞元素（即与指定元素同辈的元素）。语法格式：$(&quot;prev~siblings&quot;)例如：$(&quot;div~img&quot;) 四. 表单选择器表单选择器用于匹配经常在表单内出现的元素。 五. 过滤选择器过滤选择器通常又简称为过滤器，可根据需要将元素的索引值、内容、属性、子元素位置、表单域属性以及可见性等作为筛选条件，以进一步获取所需要的元素。 包括：简单过滤器: 简单过滤器用于实现简单的筛选操作，如获取一组元素中的第一个元素、最后一个元素等。 内容过滤器: 内容过滤器较为灵活，可根据元素包含的文本内容以及是否含有匹配的元素执行筛选操作。 属性过滤器: 属性过滤器以元素的属性作为过滤条件来进行元素的筛选。 子元素过滤器: 子元素过滤器用于筛选元素的子元素。 可见性过滤器: 可见性过滤器较为简单，就是根据元素的可见状态进行筛选。 表单域属性过滤器: 表单域属性过滤器又称为表单元素属性过滤器，可根据表单元素的状态属性进行筛选。]]></content>
      <categories>
        <category>前端</category>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery概述]]></title>
    <url>%2F2017%2F11%2Ffront%2F06jQuery%2FjQuery%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[一. jQuery简介jQuery是一个快速、小巧、简洁且功能丰富JavaScript库。诞生于2006年1月，其创始人与技术领袖为John Resig（约翰∙瑞森）。 jQuery的设计宗旨： Write Less, Do More。 写更少的代码，做更多的事情 功能：基于jQuery所提供的API，可使Web前端的开发变得更加轻松。 优点： jQuery是一个优秀的轻量级框架，具有体积小、功能强、配置简单、用法灵巧、兼容性好等优点。 jQuery易于扩展，并拥有为数众多、深受追捧的各种插件。 jQuery的主要功能： 元素选择 元素操作 动画特效 事件处理 Ajax交互 官方网站：http://jquery.com jQuery无需安装，只需将其库文件直接添加到站点之中即可。如： &lt;script language=&quot;javascript&quot; src=&quot;jQuery库文件的相对路径或绝对路径&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;jQuery库文件的相对路径或绝对路径&quot; &gt;&lt;/script&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript_贪吃蛇案例]]></title>
    <url>%2F2017%2F11%2Ffront%2F04cases%2F%E8%B4%AA%E5%90%83%E8%9B%87%E6%A1%88%E4%BE%8B%2F</url>
    <content type="text"><![CDATA[一. 案例介绍根据面向对象思想，贪吃蛇游戏中有如下对象： 地图：地图属性有宽，高，背景颜色，地图中有格子，格子属性有宽，高； 操作按钮：开始，暂停，重新开始。（游戏对象）； 蛇：属性有宽，高，方向，状态（有多少节身子），方法为显示，跑动； 食物：属性有宽高，背景颜色，横坐标，纵坐标。 关键技术点： 显示蛇：根据状态向地图里加元素； 蛇跑起来：把小蛇的头的坐标给小蛇的第一部分身体，第一部分身体给下一部分身体，蛇头根据方向变，删除原来的蛇，然后新建蛇；当蛇出界时，死亡并结束，当蛇头吃掉自己的时候，死亡并结束； 食物被吃掉，蛇加一节，去掉原来的食物，重新生成新的食物； 添加定时器，绑定按钮，添加游戏控制按钮。 注意： 小蛇和食物都是相对于地图显示的，小蛇和食物都是地图的子元素，小蛇和食物在游戏开始时是随机位置显示并且脱离文档流的。 二. 实现步骤2.1 画地图和操作按钮 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;贪吃蛇&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;../css/bootstrap.min.css&quot; /&gt; &lt;style&gt; .container { width: 100%; padding-top: 10px; position: relative; } .map { width: 600px; height: 600px; background-color: white; position: relative; margin: 0 auto; padding-top: 10px; border: 1px #ccc solid; background: -webkit-linear-gradient(top, transparent 19px, #ccc 20px), -webkit-linear-gradient(left, transparent 19px, #ccc 20px); background: -moz-linear-gradient(top, transparent 19px, #ccc 20px), -moz-linear-gradient(left, transparent 19px, #ccc 20px); background: -o-linear-gradient(top, transparent 19px, #ccc 20px), -o-linear-gradient(left, transparent 19px, #ccc 20px); background: -ms-linear-gradient(top, transparent 19px, #ccc 20px), -ms-linear-gradient(left, transparent 19px, #ccc 20px); background: linear-gradient(top, transparent 19px, #ccc 20px), linear-gradient(left, transparent 19px, #ccc 20px); -webkit-background-size: 19px 20px; -moz-background-size: 20px 20px; background-size: 20px 20px; } .btn-operation { width: 600px; margin: 0 auto; height: 40px; line-height: 40px; text-align: center; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;!-- 画出地图 设置样式 --&gt; &lt;div id=&quot;map&quot; class=&quot;map&quot;&gt;&lt;/div&gt; &lt;div class=&quot;btn-operation&quot;&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-danger&quot; onclick=&quot;startGame()&quot;&gt; 开始 &lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-warning&quot; onclick=&quot;pauseGame()&quot;&gt; 暂停 &lt;/button&gt; &lt;button type=&quot;button&quot; class=&quot;btn btn-info&quot; onclick=&quot;restartGame()&quot;&gt; 重新开始 &lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;script src=&quot;../scripts/food.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;../scripts/snake.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;../scripts/game.js&quot;&gt;&lt;/script&gt; &lt;script&gt; //初始化游戏对象 var game = new Game(document.getElementById(&#39;map&#39;)); //初始化游戏 game.init(); //开始游戏 function startGame() { game.start(); this.disabled = !this.disabled; } //暂停游戏 function pauseGame() { game.pause(); } //重新开始 function restartGame() { game.init(); } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 2.2 封装食物对象 //食物的自调用函数 (function() { //创建一个数组来存放吃到的食物 var elements = []; //构造函数创建对象 function Food(width, height, color, x, y) { //元素的宽和高：默认20 this.width = width || 20; this.height = height || 20; //元素的颜色：默认浅蓝色 this.color = color || &#39;lightblue&#39;; //元素的横纵坐标：默认为0 this.x = x || 0; this.y = y || 0; } //为元素添加初始化的方法。需要公用的方法最好放原型里，因为要在页面上显示，所以需要传入map Food.prototype.init = function(map) { //先删除食物 //外部无法访问的函数 remove(); // 创建元素 var div = document.createElement(&#39;div&#39;); // 把元素追加到map中 map.appendChild(div); // 设置元素的样式：宽、高、颜色 div.style.width = this.width + &#39;px&#39;; div.style.height = this.height + &#39;px&#39;; div.style.backgroundColor = this.color; //先脱离文档流 div.style.position = &#39;absolute&#39;; //横纵坐标随机产生的 this.x = parseInt(Math.random() * (map.offsetWidth / this.width)) * this.width; this.y = parseInt(Math.random() * (map.offsetHeight / this.height)) * this.height; //元素的横纵坐标 div.style.left = this.x + &#39;px&#39;; div.style.top = this.y + &#39;px&#39;; //把div元素追加到elements数组中 elements.push(div); }; //私有的函数：删除食物 function remove() { //elements数组中有这个食物 for (var i = 0; i &lt; elements.length; i++) { var ele = elements[i]; //找到这个食物的父级元素 从地图上删除食物 ele.parentNode.removeChild(ele); //删除数组的div元素：在i处删除一项 elements.splice(i, 1); } } //把Food暴露给window window.Food = Food; })(); 2.3 封装小蛇对象 //小蛇的自调用函数 (function() { //定义一个数组用来存放小蛇 var elements = []; // 小蛇的构造函数 function Snake(width, height, direction) { //每个部分的宽和高 this.width = width || 20; this.height = height || 20; //小蛇的身体部分 this.body = [ { x: 3, y: 2, color: &#39;red&#39; }, //小蛇的头部 { x: 2, y: 2, color: &#39;black&#39; }, //小蛇的身体 { x: 1, y: 2, color: &#39;black&#39; } //小蛇的身体 ]; //方向 this.direction = direction || &#39;right&#39;; } //通过原型添加方法，给小蛇添加初始化方法 Snake.prototype.init = function(map) { remove(); //循环遍历 for (var i = 0; i &lt; this.body.length; i++) { //每一个数组元素都是一个对象 var obj = this.body[i]; //创建div var div = document.createElement(&#39;div&#39;); //追加到map中 map.appendChild(div); //设置div的样式 div.style.position = &#39;absolute&#39;; div.style.width = this.width + &#39;px&#39;; div.style.height = this.height + &#39;px&#39;; //横纵坐标 div.style.left = obj.x * this.width + &#39;px&#39;; div.style.top = obj.y * this.height + &#39;px&#39;; //背景颜色 div.style.backgroundColor = obj.color; //把div追加到elements数组中 elements.push(div); } }; //通过原型添加move方法 Snake.prototype.move = function(food, map) { //小蛇的身体部分：把前一个的横纵坐标给下一个 var i = this.body.length - 1; //逆序循环 for (; i &gt; 0; i--) { this.body[i].x = this.body[i - 1].x; this.body[i].y = this.body[i - 1].y; } // 判断方向：改变小蛇的头部的坐标 switch (this.direction) { case &#39;right&#39;: this.body[0].x += 1; break; case &#39;left&#39;: this.body[0].x -= 1; break; case &#39;top&#39;: this.body[0].y -= 1; break; case &#39;bottom&#39;: this.body[0].y += 1; break; } //判断有没有吃到食物 //小蛇的头的坐标和食物的坐标一致 var headX = this.body[0].x * this.width; var headY = this.body[0].y * this.height; //判断小蛇的头部坐标和食物的坐标是否相同 if (headX == food.x &amp;&amp; headY == food.y) { //获取小蛇的最后的尾巴 var last = this.body[this.body.length - 1]; //以对象的方式加入到数组中 this.body.push({ x: last.x, y: last.y, color: last.color }); //把食物删除，然后初始化食物 food.init(map); } }; //添加私有的删除函数 function remove() { var i = elements.length - 1; //逆序找到这个元素的父元素 for (; i &gt;= 0; i--) { var ele = elements[i]; //从地图上删除元素 ele.parentNode.removeChild(ele); //从数组中删除 elements.splice(i, 1); } } //把Snake暴露给window window.Snake = Snake; })(); 2.4 封装游戏对象 //游戏的自调用函数 (function() { var that = null; //游戏的构造函数 function Game(map) { this.food = new Food(); //食物对象 this.snake = new Snake(); //小蛇对象 this.map = map; //地图 that = this; //保留当前的实例对象到that变量中，此时that就是this } //游戏初始化 Game.prototype.init = function() { //食物初始化 this.food.init(this.map); //小蛇初始化 this.snake.init(this.map); //先让小蛇显示 //调用按键的方法 this.bindKey(); }; //开始游戏 Game.prototype.start = function() { if (this.timeId) { clearInterval(this.timeId); } this.runSnake(this.food, this.map); }; //暂停游戏 Game.prototype.pause = function() { clearInterval(this.timeId); }; //添加原型函数：设置小蛇可以自由移动 Game.prototype.runSnake = function(food, map) { //此时的this是实例对象 //setInterval 方法是通过window调用的this指向改变了 this.timeId = setInterval( function() { this.snake.move(food, map); this.snake.init(map); //横坐标的最大值 map的属性在style标签中 var maxX = map.offsetWidth / this.snake.width; //纵坐标的最大值 var maxY = map.offsetHeight / this.snake.height; var headX = this.snake.body[0].x; var headY = this.snake.body[0].y; // 横坐标方向的检测 if (headX &lt; 0 || headX &gt;= maxX) { //撞墙了 停止定时器 clearInterval(this.timeId); console.log(&#39;游戏结束&#39;); alert(&#39;游戏结束&#39;); } //纵坐标方向的检测 if (headY &lt; 0 || headY &gt;= maxY) { //撞墙了 停止定时器 clearInterval(this.timeId); console.log(&#39;游戏结束&#39;); alert(&#39;游戏结束&#39;); } }.bind(that), 200 ); //绑定到that中即实例对象 }; //获取用户的按键 改变小蛇的方向 Game.prototype.bindKey = function() { //这里的this应该是触发keydown事件的对象document，所以这里的this就是document //获取用户的按键 document.addEventListener( &#39;keydown&#39;, function(e) { switch (e.keyCode) { case 37: this.snake.direction = &#39;left&#39;; break; case 38: this.snake.direction = &#39;top&#39;; break; case 39: this.snake.direction = &#39;right&#39;; break; case 40: this.snake.direction = &#39;bottom&#39;; break; } }.bind(that), false ); //绑定实例对象 }; //暴露给window window.Game = Game; })();]]></content>
      <categories>
        <category>前端</category>
        <category>前端案例</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript正则表达式]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[一. 正则表达式简介二. 在javascript使用正则&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 写在script标签中 --&gt; &lt;script&gt; alert(&#39;hello&#39;); &lt;/script&gt; &lt;!-- 写在外部js文件中，在页面引入 --&gt; &lt;script src=&quot;../scripts/1.js&quot;&gt;&lt;/script&gt; &lt;!-- &lt;script src=&quot;../scripts/1.js&quot;&gt; alert(&#39;不会执行&#39;);&lt;/script&gt; --&gt; &lt;script&gt; alert(走路大摇大摆) //报错 alert(&#39;我是最大的牌&#39;);//不会执行 &lt;/script&gt; &lt;!-- 正常运行 --&gt; &lt;script&gt;alert(&#39;一起摇摆&#39;);&lt;/script&gt; &lt;!-- 标准写法 --&gt; &lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt; &lt;script lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 写在行内 --&gt; &lt;input type=&quot;button&quot; value=&quot;最靓的崽&quot; onclick=&quot;alert(&#39;我就是这条街最靓的崽!&#39;)&quot; /&gt; &lt;/body&gt; &lt;/html&gt; 三. 案例##]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript垃圾回收机制]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%2F</url>
    <content type="text"><![CDATA[垃圾回收机制]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript面向对象编程]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[一. 面向对象介绍二. 创建对象方式&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 写在script标签中 --&gt; &lt;script&gt; alert(&#39;hello&#39;); &lt;/script&gt; &lt;!-- 写在外部js文件中，在页面引入 --&gt; &lt;script src=&quot;../scripts/1.js&quot;&gt;&lt;/script&gt; &lt;!-- &lt;script src=&quot;../scripts/1.js&quot;&gt; alert(&#39;不会执行&#39;);&lt;/script&gt; --&gt; &lt;script&gt; alert(走路大摇大摆) //报错 alert(&#39;我是最大的牌&#39;);//不会执行 &lt;/script&gt; &lt;!-- 正常运行 --&gt; &lt;script&gt;alert(&#39;一起摇摆&#39;);&lt;/script&gt; &lt;!-- 标准写法 --&gt; &lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt; &lt;script lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 写在行内 --&gt; &lt;input type=&quot;button&quot; value=&quot;最靓的崽&quot; onclick=&quot;alert(&#39;我就是这条街最靓的崽!&#39;)&quot; /&gt; &lt;/body&gt; &lt;/html&gt; 三. 原型的引入四. 继承]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript_DOM和事件]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript_DOM%E5%92%8C%E4%BA%8B%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[一. DOM介绍二. 事件&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 写在script标签中 --&gt; &lt;script&gt; alert(&#39;hello&#39;); &lt;/script&gt; &lt;!-- 写在外部js文件中，在页面引入 --&gt; &lt;script src=&quot;../scripts/1.js&quot;&gt;&lt;/script&gt; &lt;!-- &lt;script src=&quot;../scripts/1.js&quot;&gt; alert(&#39;不会执行&#39;);&lt;/script&gt; --&gt; &lt;script&gt; alert(走路大摇大摆) //报错 alert(&#39;我是最大的牌&#39;);//不会执行 &lt;/script&gt; &lt;!-- 正常运行 --&gt; &lt;script&gt;alert(&#39;一起摇摆&#39;);&lt;/script&gt; &lt;!-- 标准写法 --&gt; &lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt; &lt;script lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 写在行内 --&gt; &lt;input type=&quot;button&quot; value=&quot;最靓的崽&quot; onclick=&quot;alert(&#39;我就是这条街最靓的崽!&#39;)&quot; /&gt; &lt;/body&gt; &lt;/html&gt; 三. 属性操作四. 节点操作五. 事件详解六. 偏移量七. 综合案例]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript_BOM]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascrpt_BOM%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[一. BOM介绍二. 对话框&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 写在script标签中 --&gt; &lt;script&gt; alert(&#39;hello&#39;); &lt;/script&gt; &lt;!-- 写在外部js文件中，在页面引入 --&gt; &lt;script src=&quot;../scripts/1.js&quot;&gt;&lt;/script&gt; &lt;!-- &lt;script src=&quot;../scripts/1.js&quot;&gt; alert(&#39;不会执行&#39;);&lt;/script&gt; --&gt; &lt;script&gt; alert(走路大摇大摆) //报错 alert(&#39;我是最大的牌&#39;);//不会执行 &lt;/script&gt; &lt;!-- 正常运行 --&gt; &lt;script&gt;alert(&#39;一起摇摆&#39;);&lt;/script&gt; &lt;!-- 标准写法 --&gt; &lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt; &lt;script lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 写在行内 --&gt; &lt;input type=&quot;button&quot; value=&quot;最靓的崽&quot; onclick=&quot;alert(&#39;我就是这条街最靓的崽!&#39;)&quot; /&gt; &lt;/body&gt; &lt;/html&gt; 三. 定时器四. location对象五. history对象六. navigator对象]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript内置对象]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[一. 内置对象math对象&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // Math.PI // 圆周率 // Math.random() // 生成随机数 // Math.floor() / Math.ceil() // 向下取整/向上取整 // Math.round() // 取整，四舍五入 // Math.abs() // 绝对值 // Math.max() / Math.min() // 求最大和最小值 // Math.sin() / Math.cos() // 正弦/余弦 // Math.power() / Math.sqrt() // 求指数次幂/求平方根 console.log(Math.abs(&#39;-1&#39;));//1 console.log(Math.abs(null));//0 console.log(Math.abs(&quot;string&quot;));//NaN console.log(Math.ceil(11.7)); //12 console.log(Math.ceil(11.2)); //2 console.log(Math.floor(11.7)); //11 console.log(Math.floor(11.2)); //11 console.log(Math.max(1, 2, 3));//3 console.log(Math.min(1, 2, 3));//1 // 取1~100的随机数 function sum(m, n) { var num = Math.floor(Math.random() * (m - n) + n); console.log(&#39;随机数：&#39; + num) } sum(1, 100); &lt;/script&gt; &lt;/html&gt; date对象&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // 获取当前时间，UTC世界时间，距1970年1月1日（世界标准时间）起的毫秒数 var now = new Date(); console.log(now.valueOf()); //1584789027582 获取距1970年1月1日（世界标准时间）起的毫秒数 var val = new Date(1584789027582); console.log(&#39;val :&#39;, val); //Sat Mar 21 2020 19:10:27 GMT+0800 (中国标准时间) var d1 = new Date(&#39;2020-3-21&#39;); console.log(&#39;d1 :&#39;, d1);//Sat Mar 21 2020 00:00:00 GMT+0800 (中国标准时间) var d2 = new Date(2020, 2, 21); // 月份从0开始 console.log(&#39;d2 :&#39;, d2); //Sat Mar 21 2020 00:00:00 GMT+0800 (中国标准时间) var d3 = Date.now(); console.log(&#39;d3 :&#39;, d3); //1584789543600 function formatDate(d) { //如果date不是日期对象，返回 if (!date instanceof Date) { return; } var year = d.getFullYear(), month = d.getMonth() + 1, date = d.getDate(), hour = d.getHours(), minute = d.getMinutes(), second = d.getSeconds(); month = month &lt; 10 ? &#39;0&#39; + month : month; date = date &lt; 10 ? &#39;0&#39; + date : date; hour = hour &lt; 10 ? &#39;0&#39; + hour : hour; minute = minute &lt; 10 ? &#39;0&#39; + minute : minute; second = second &lt; 10 ? &#39;0&#39; + second : second; return year + &#39;-&#39; + month + &#39;-&#39; + date + &#39; &#39; + hour + &#39;:&#39; + minute + &#39;:&#39; + second; } var d4 = formatDate(new Date()); console.log(&#39;d4 :&#39;, d4); //2020-03-21 19:26:11 console.log(&quot;===================================&quot;); var dt = new Date(); // //获取年份 console.log(dt.getFullYear()); //2020 //获取月份 console.log(dt.getMonth() + 1);//3，是0开始的 真实的月份是需要加1的 //获取日期 console.log(dt.getDate()); //21 //获取小时 console.log(dt.getHours()); //21 //获取分钟 console.log(dt.getMinutes()); //58 //获取秒 console.log(dt.getSeconds()); //9 //获取星期 console.log(dt.getDay());//6,星期从0开始的 console.log(&quot;===================================&quot;); console.log(dt.toDateString());//Sat Mar 21 2020-----英文的---日期 console.log(dt.toLocaleDateString());//2020/3/21-------数字格式--日期 console.log(dt.toTimeString());//22:00:27 GMT+0800 (中国标准时间)------小时分钟秒 console.log(dt.toLocaleTimeString());//下午10:00:27----小时分钟秒 console.log(dt.valueOf());//1584799227049----毫秒值 console.log(dt);//Sat Mar 21 2020 22:00:27 GMT+0800 (中国标准时间) console.log(dt.toString()); //Sat Mar 21 2020 22:00:27 GMT+0800 (中国标准时间)--转成字符串 &lt;/script&gt; &lt;/html&gt; array对象&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // 创建了一个空数组 var arr1 = new Array(); // 创建了一个数组，里面存放了3个字符串 var arr2 = new Array(&#39;刘玄德&#39;, &#39;关云长&#39;, &#39;张翼德&#39;); // 创建了一个数组，里面存放了4个数字 var arr3 = new Array(1, 2, 3, 4); var arr = [1, 2, 3, 4]; // 方式1 推荐 arr = []; // 方式2 arr.length = 0; // 方式3 arr.splice(0, arr.length); var obj = []; console.log(obj instanceof Array);//true console.log(Array.isArray(obj));//true var arr4 = [&#39;段誉&#39;, &#39;虚竹&#39;]; console.log(arr4.toString());//段誉,虚竹 console.log(arr4.valueOf()); // [&quot;段誉&quot;, &quot;虚竹&quot;] var arr5 = []; arr5.push(&#39;「恶贯满盈」段延庆&#39;); arr5.push(&#39;「无恶不做」叶二娘&#39;); console.log(arr5.pop(), arr5.length);//「无恶不做」叶二娘 1 var arr6 = []; arr6.unshift(&#39;「恶贯满盈」段延庆&#39;); arr6.unshift(&#39;「无恶不做」叶二娘&#39;); console.log(&#39;arr6 :&#39;, arr6);//[&quot;「无恶不做」叶二娘&quot;, &quot;「恶贯满盈」段延庆&quot;] console.log(arr6.shift(), arr6.length);//「无恶不做」叶二娘 1 var arr7 = [21, 11, 7, 2, 17]; console.log(arr7.sort()); //[11, 17, 2, 21, 7] var arr8 = [21, 11, 7, 2, 17]; console.log(arr8.reverse()); //[17, 2, 7, 11, 21] console.log(&#39;==========================&#39;); var arr9 = [1, 3, 5]; console.log(&#39;arr9 :&#39;, arr9.concat(7, 9)); //[1, 3, 5, 7, 9] console.log(arr9.slice(1)); //[3, 5] console.log(arr9);//[1, 3, 5] var arr10 = [&#39;三国演义&#39;, &#39;水浒传&#39;, &#39;红楼梦&#39;]; arr10.splice(2, 0, &quot;西游记&quot;); console.log(arr10); //[&quot;三国演义&quot;, &quot;水浒传&quot;, &quot;西游记&quot;, &quot;红楼梦&quot;] var index = arr10.indexOf(&quot;红楼梦&quot;); console.log(index); //3 var arr11 = [&#39;半&#39;, &#39;醒&#39;, &#39;半&#39;, &#39;醉&#39;, &#39;日&#39;, &#39;复&#39;, &#39;日&#39;]; var index1 = arr11.indexOf(&quot;半&quot;); console.log(index1);//0 var arr12 = [18, 19, 20]; console.log(arr12.every(x =&gt; x &gt; 10));//true console.log(arr12.filter(x =&gt; x &gt; 18));//[19, 20] var arr13 = [&quot;三国演义&quot;, &quot;水浒传&quot;, &quot;西游记&quot;, &quot;红楼梦&quot;]; arr13.forEach(n =&gt; { console.log(&#39;[&#39; + n + &#39;]&#39;); }); //[&quot;[三国演义]&quot;, &quot;[水浒传]&quot;, &quot;[西游记]&quot;, &quot;[红楼梦]&quot;] console.log(arr13.map(n =&gt; { return &#39;[&#39; + n + &#39;]&#39; })); console.log(arr13); console.log(arr13.some(n =&gt; n == &#39;三国演义&#39;));//true console.log(arr13.join(&#39;,&#39;));//三国演义,水浒传,西游记,红楼梦 &lt;/script&gt; &lt;/html&gt; string对象&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; var str = &quot;邹琼俊&quot;; str = &quot;邹玉杰&quot;; console.log(str[0]); //邹 for (var i = 0; i &lt; str.length; i++) { console.log(str[i]); } console.log(str.length); var name = new String(&#39;小小刀&#39;); console.log(name.charAt(2));//刀 console.log(name.charCodeAt(2));//20992 console.log(name[2]);//刀 console.log(&#39;======================&#39;); //把ASCII码转换成字符串 var str1 = String.fromCharCode(83, 79, 83); console.log(str1);//SOS var str2 = &quot;我&quot;; console.log(str2.concat(&quot;喜欢&quot;, &quot;你&quot;));//我喜欢你 var msg = &quot;姑苏城外寒山寺&quot;; console.log(msg.slice(4, 7));//寒山寺 console.log(msg.substring(4, 6));//寒山 console.log(msg.substr(4, 2));//寒山 var msg1 = &#39;你是谁 &#39;; console.log(msg1.trim());//你是谁 var index = str.indexOf(&quot;杰&quot;); console.log(index); //2 var str3 = &quot;桃花庵下桃花仙&quot;; var index3 = str3.lastIndexOf(&#39;桃&#39;); console.log(index3);//4 var str4 = &quot;萧峰、萧远山、慕容博、鸠摩智&quot;; var arr4 = str4.split(&quot;、&quot;); console.log(&#39;arr4 :&#39;, arr4);// [&quot;萧峰&quot;, &quot;萧远山&quot;, &quot;慕容博&quot;, &quot;鸠摩智&quot;] var str5 = &quot;name&quot;; str5 = str5.toLocaleLowerCase(); console.log(str5); //name var str6 = &quot;name&quot;; str6 = str6.toLowerCase(); console.log(str6); //name var str7 = &quot;user&quot;; str7 = str7.toLocaleUpperCase(); console.log(str7);//USER var str8 = &quot;user&quot;; str8 = str8.toUpperCase(); console.log(str8);//USER &lt;/script&gt; &lt;/html&gt; string对象操作案例 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; //案例1： 查找字符串&quot;桃花庵下桃花仙&quot;中所有“花”出现的位置。 var str1 = &#39;桃花庵下桃花仙&#39;; var arr = []; do { var index = str1.indexOf(&#39;花&#39;, index + 1); if (index != -1) { arr.push(index); } } while (index &gt; -1); console.log(arr);//[1,5] //案例2：把字符串“桃花仙人种桃树”中所有的“桃”替换成“李” var str2 = &#39;桃花仙人种桃树&#39;; //实现方式1 do { str2 = str2.replace(&#39;桃&#39;, &#39;李&#39;); } while (str2.indexOf(&#39;桃&#39;) &gt; -1); console.log(str2);//李花仙人种李树 //实现方式2 console.log(str2.replace(/桃/ig, &#39;李&#39;));//李花仙人种李树 &lt;/script&gt; &lt;/html&gt; number对象&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script&gt; // Number.isNaN(value) console.log(Number.isNaN(NaN)); // true // NaN !== NaN console.log(Number.isNaN(Number(&quot;1&quot;))); // false console.log(Number.isNaN(Number(&quot;zouyujie&quot;))); // true // Number.parseFloat(string) console.log(Number.parseFloat(NaN)); // NaN console.log(Number.parseFloat(&quot;11.27&quot;)); // 11.27 console.log(Number.parseFloat(Infinity)); // Infinity console.log(Number.parseFloat(&quot;11&quot;)); // 11 // Number.parseInt(string[, radix]) console.log(Number.parseInt(NaN)); // NaN console.log(Number.parseInt(&quot;11.27&quot;)); // 11 console.log(Number.parseInt(&quot;11&quot;)); // 11 console.log(Number.parseInt(&quot;11&quot;, 2)); // 3 console.log(Number.parseInt(&quot;11&quot;, 3)); // 4 console.log(Number.parseInt(&quot;11&quot;, 8)); // 9 console.log(Number.parseInt(&quot;11&quot;, 16)); // 17 console.log(Number.parseInt(Infinity)); // NaN // Number.prototype.toFixed() var num = new Number(11.27); console.log(num.toFixed(1)); //11.3 console.log(num.toFixed(5)); //11.27000 &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; boolean对象&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script&gt; var bool = new Boolean(1); console.log(bool.toString());//true console.log(bool.valueOf());//true bool = new Boolean(&#39;what&#39;); console.log(bool.toString()); //true console.log(bool.valueOf());//true bool = new Boolean(0); console.log(bool.toString()); //false console.log(bool.valueOf());//false &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript对象]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[一. 对象创建对象的4中方式&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; //1.字面量创建 var obj = { name: &quot;楚留香&quot;, age: 32, identity: &quot;盗帅&quot;, skill: function () { console.log(&quot;弹指神功&quot;) } } //2.new Object()创建对象 var user = new Object(); user.name = &#39;陆小凤&#39;; user.age = 35; user.identity = &#39;大侠&#39;; user.skill = function () { console.log(&#39;灵犀一指&#39;); } // 3.工厂函数创建对象 function createPerson(name, age, identity) { var person = new Object(); person.name = name; person.age = age; person.identity = identity; person.skill = function () { console.log(&#39;天外飞仙&#39;); } return person; } var per = createPerson(&#39;叶孤城&#39;, 32, &#39;白云城主&#39;); // 4.自定义构造函数 function Person(name, age, identity) { this.name = name; this.age = age; this.identity = identity; this.skill = function () { console.log(&#39;夺命十三剑&#39;); } } var person = new Person(&#39;燕十三&#39;, 27, &#39;剑客&#39;); var baseObj = {}; baseObj.name = &quot;诗&quot;; //字符串类型 //方法 baseObj.say = function () { console.log(&#39;韶华易逝，莫负流年&#39;); } console.log(baseObj[&quot;name&quot;]);//诗 &lt;/script&gt; &lt;/html&gt; 属性和方法 添加属性：对象.名字=值 访问属性：对象.名字或对象[“名字”] 添加方法：对象.名字=函数 访问方法：对象.名字() new关键字new在执行时会做4件事情 会在内存中创建一个新的空对象； 会让this指向这个新对象； 执行构造函数，目的是给这个新的对象添加属性和方法； new会返回这个新的对象。 this关键字 最终指向的是调用它的对象 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; function fun() { var name = &quot;一萧烟雨&quot;; console.log(this.name == window.name);//true console.log(this.name); //空白 console.log(this); //Window } fun(); window.fun(); //等价于fun(); var obj = { name:&quot;一萧烟雨&quot;, fun:function(){ console.log(this.name); //一萧烟雨 } } obj.fun(); &lt;/script&gt; &lt;/html&gt; 对象操作&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; var user = { name: &#39;冷面寒枪-罗成&#39;, age: 22, wife: &#39;窦线娘&#39; }; for (var key in user) { console.log(key + &#39;:&#39; + user.key); //name:undefined age:undefined wife:undefined console.log(typeof key); //string // console.log(key + &#39;:&#39; + user[key]); } // name:冷面寒枪-罗成 // age:22 // wife:窦线娘 delete user.wife; for (var key in user) { console.log(key + &#39;:&#39; + user[key]); } // name:冷面寒枪-罗成 // age:22 &lt;/script&gt; &lt;/html&gt; 二. 数据类型值类型和引用类型&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; var name = &quot;沈浪&quot;; var age = 27; var baseObj = { name: &#39;霍天都&#39;, nickname: &#39;天都居士&#39;, weapons: &#39;剑&#39;, say: function () { } } var other = baseObj; var x = 1; var y = 2; fun(x, y); function fun(num1, num2) { num1 = num1 + 1; num2 = num2 + 2; console.log(x, y, num1, num2);//1 2 2 4 } function Person(name, nickname, weapons) { this.name = name; this.nickname = nickname; this.weapons = weapons; } var per1 = new Person(&#39;吴六奇&#39;, &#39;雪中神丐&#39;, &#39;竹棒&#39;); function fun1(person) { person.name = &quot;夏雪宜&quot;; person.nickname = &quot;金蛇郎君&quot;; person.weapons = &quot;金蛇剑&quot;; } fun1(per1); //Person {name: &quot;夏雪宜&quot;, nickname: &quot;金蛇郎君&quot;, weapons: &quot;金蛇剑&quot;} console.log(per1); &lt;/script&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript函数和作用域]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E5%87%BD%E6%95%B0%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%2F</url>
    <content type="text"><![CDATA[一. 函数&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // 匿名函数 (function () { console.log(&#39;好春光&#39;); }) //函数定义 function doSomething() { console.log(&#39;无形装逼&#39;); } // 调用函数 doSomething(); //函数定义：求一个数组的和 function getSum() { var arr = [1, 3, 5, 7, 9]; var sum = 0; for (var i = 0; i &lt; arr.length; i++) { sum += arr[i]; } console.log(sum); } //调用函数 getSum(); //25 function doSomething() { console.log(&#39;无形装逼&#39;); } function doSomething() { console.log(&#39;最是致命&#39;); } doSomething(); //最是致命 function getSumByArr(arr) { var sum = 0; for (var i = 0; i &lt; arr.length; i++) { sum += arr[i]; } console.log(sum); } var arr = [2, 4, 6, 8, 10]; getSumByArr(arr);//30 var x = 1, y = 2; fn(x, y); //3 function fn(a, b) { console.log(a + b); a--; b--; } console.log(x, y);//1 2 // 求n-m之间所有数的和 function getRangeSum(n, m) { var sum = 0; for (var i = n; i &lt;= m; i++) { sum += i; } return sum; } console.log(getRangeSum(1, 10)); //55 function fun() { // 使用arguments对象可以获取传入的每个参数的值 var sum = 0; for (var i = 0; i &lt; arguments.length; i++) { sum += arguments[i]; } return sum; } console.log(fun(1, 2, 3));//6 console.log(fun(2, 8));//10 //函数自调用 (function () { console.log(&quot;hello&quot;); })(); var f1 = function () { console.log(&#39;函数&#39;) } f1(); function fn() { } console.log(typeof fn);//function function startSay(fn) { console.log(&quot;我说&quot;); fn();//fn此时应该是一个函数 } function subSay() { console.log(&quot;我说 桥边姑娘&quot;); } startSay(subSay); function fn(b) { var a = 1; return function () { console.log(a + b); } } fn(4)();//5 &lt;/script&gt; &lt;/html&gt; 三. 作用域&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; //---------------全局变量------------------ var day = &quot;2020-03-15&quot;; { var num = 10; console.log(day);//2020-03-15 } console.log(num);//10 if (true) { var name = &quot;金竹山&quot;; } console.log(name);//金竹山 for (var i = 0; i &lt; 1; i++) { var week = &quot;星期一&quot;; } console.log(week);//星期一 //---------------隐式全局变量------------------ function f1() { number = 27; //隐式全局变量 } f1(); console.log(number);//27 var num1 = 1; num2 = 2; delete num1;//把num1删除了 delete num2;//把num2删除了 console.log(typeof num1);//number console.log(num1 + 10); //11 console.log(typeof num2);//undefined //---------------局部变量------------------ function fn() { var book = &quot;Vue.js 2.x实践指南&quot;; } // console.log(book); //Uncaught ReferenceError: book is not defined //---------------词法作用域------------------ var msg = &quot;他是横空出世的英雄&quot;; var nextMsg = &quot;他有海阔天空的心胸&quot;; function sing() { var nextMsg = &quot;他是盖世无双的侠客&quot;; console.log(msg); console.log(nextMsg); } sing(); //他是横空出世的英雄 // 他是盖世无双的侠客 &lt;/script&gt; &lt;/html&gt; 作用域链 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; function f1() { var num = 2;//1级链 function f2() { num = 3;//2级链 console.log(num); } f2(); } var num = 1; //0级链 f1();//3：0级链 &lt;/script&gt; &lt;/html&gt; 变量提升 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // console.log(num); //undefined // var num = 10; // //-------------------------- // var num; // console.log(num);//undefined // num = 10; say(); //刀，是什么样的刀？金丝大环刀！ function say() { console.log(&#39;刀，是什么样的刀？金丝大环刀！&#39;); } // //-------------------------- function say() { console.log(&#39;刀，是什么样的刀？金丝大环刀！&#39;); } say(); //刀，是什么样的刀？金丝大环刀！ &lt;/script&gt; &lt;/html&gt; 预解析 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // fun();//undefined ——执行调用 // var num = 97;//这个变量的声明会提升到变量使用之前 // function fun() { // console.log(num); // } //-------------预解析后------------------ // var num; // function fun() { // console.log(num); // } // fun();//undefined ——执行调用 // num = 97; //------------------------------- // var num = 97; // fun();//undefined ——执行调用 // function fun() { // console.log(num); // var num = 99;//这个变量的声明会提升到变量使用之前 // } // console.log(num);//97 //-------------预解析后------------------ // var num = 97; // function fun() { // var num; // console.log(num); // num = 99; // } // fun();//undefined ——执行调用 //------------------------------- &lt;/script&gt; &lt;script&gt; say();//他有海阔天空的心胸 function say() { console.log(&#39;他有海阔天空的心胸&#39;) } &lt;/script&gt; &lt;script&gt; say();//他是盖世无双的侠客 function say() { console.log(&#39;他是盖世无双的侠客&#39;) } &lt;/script&gt; &lt;/html&gt; 代码执行： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; console.log(say); var say = 1; console.log(say); function say() { console.log(&#39;函数调用&#39;) } console.log(say); //------------预解析后------------ var say; function say() { console.log(&#39;函数调用&#39;) } console.log(say); say = 1; console.log(say);//1 console.log(say);//1 &lt;/script&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript数组]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[一. 数组&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; var sort = [&quot;天机棒&quot;, &quot;龙凤双环&quot;, &quot;小李飞刀&quot;, &quot;嵩阳铁剑&quot;, &quot;温侯银戟&quot;, &quot;蛇鞭&quot;, &quot;金刚铁拐&quot;, &quot;青魔手&quot;, &quot;东海玉萧&quot;] // var arr = new Array();//定义了一个数组 // console.log(arr); //Array(0) // alert(arr);//空的弹窗，什么内容都不显示 // var arr = new Array(3); // console.log(arr[0], arr[1], arr[2]);//undefined undefined undefined var arr = new Array(&quot;松树&quot;, &quot;竹子&quot;, &quot;梅花&quot;); //申明一个数组存储岁寒三友的名字 console.log(&#39;arr :&#39;, arr); //arr : (3) [&quot;松树&quot;, &quot;竹子&quot;, &quot;梅花&quot;] // var arr = []; // console.log(arr); //[] // var person = [&quot;孙白发&quot;, &quot;上官金虹&quot;, &quot;李寻欢&quot;]; // console.log(person[0]); //孙白发 // console.log(person[1]); //上官金虹 // console.log(person[2]); //李寻欢 // console.log(person[3]); //undefined:这个数组的最大下标为2,因此返回undefined // var arr = [&quot;张三丰&quot;, &quot;张无忌&quot;, &quot;空见&quot;]; // for (var i = 0; i &lt; arr.length; i++) { // console.log(arr[i]); // } // // for of的方式遍历数组 // for (var item of arr) { // console.log(item); // } var person = [&quot;孙白发&quot;, &quot;上官金虹&quot;, &quot;李寻欢&quot;]; person[1] = &quot;李寻欢&quot;; //把上官金虹替换成了李寻欢 person[3] = &quot;阿飞&quot;; //给数组新增加了一个阿飞的值 person.push(&#39;荆无命&#39;); //在数组的后面增加了一个值 console.log(&#39;person :&#39;, person); var arr = [&quot;梅、兰、竹、菊&quot;, 100, true]; &lt;/script&gt; &lt;/html&gt; 案例： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; //案例1：求数组中所有元素的和 var arr1 = [1, 3, 5, 7, 9]; var sum1 = 0; for (var i = 0; i &lt; arr1.length; i++) { sum1 += arr1[i]; } console.log(&#39;求和:&#39; + sum1); //25 // 案例2：求数组中所有元素中的最大值 var arr2 = [1, 2, 3, 4, 5, 6, 7, 21, 256, 257, 28, 29, 31]; //马兰开花二十一 //假设max变量中存储的是最大值 var max = arr2[0]; for (var i = 0; i &lt; arr2.length; i++) { //判断这个变量的值和数组中每个元素的值是不是最大值 if (max &lt; arr2[i]) { max = arr2[i]; //赋值，把大的值给max } } console.log(&quot;最大值:&quot; + max); //257 // 案例3：求数组中所有元素中的最小值 var arr3 = [1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0]; //下雪-爱新觉罗·弘历 var min = arr3[0];//假设min里存储的就是最小值 for (var i = 0; i &lt; arr3.length; i++) { if (min &gt; arr3[i]) { min = arr3[i]; //赋值，把小的值给min } } console.log(&quot;最小值:&quot; + min); //0 // 案例4：求数组中所有元素的平均值 var arr4 = [2, 4, 6, 8, 10]; var sum4 = 0; for (var i = 0; i &lt; arr4.length; i++) { sum4 += arr4[i]; } console.log(&quot;平均值:&quot; + sum4 / arr4.length); //6 // 案例5：把数组中每个元素用-拼接到一起产生一个字符串并输出 var arr5 = [&quot;花有重开日&quot;, &quot;人无再少年&quot;, &quot;岁月流走&quot;, &quot;蓦然回首&quot;]; var str = &quot;&quot;;//空的字符串 for (var i = 1; i &lt; arr5.length; i++) { str += &quot;-&quot; + arr5[i]; } //花有重开日-人无再少年-岁月流走-蓦然回首 console.log(arr5[0] + str); //方式二 console.log(arr5.join(&#39;-&#39;)); //通过join方法，后面讲 // 案例6：反转数组——把数组中的数据的位置调换 var arr6 = [1, 2, 3, 4, 5]; //循环的目的是控制交换的次数 for (var i = 0; i &lt; arr6.length / 2; i++) { //先把第一个元素的值放在第三方变量中 var temp = arr6[i]; arr6[i] = arr6[arr6.length - 1 - i]; arr6[arr6.length - 1 - i] = temp; } console.log(&quot;数组反转：&quot;, arr6); //数组反转： (5) [5, 4, 3, 2, 1] // 案例7：冒泡排序- var arr7 = [10, 20, 50, 30, 80, 40]; //循环控制比较的轮数 for (var i = 0; i &lt; arr7.length - 1; i++) { //控制每一轮的比较的次数 for (var j = 0; j &lt; arr7.length - 1 - i; j++) { if (arr7[j] &lt; arr7[j + 1]) { //从大到小排列 var temp = arr7[j]; //利用临时变量来交换数据 arr7[j] = arr7[j + 1]; arr7[j + 1] = temp; } } } console.log(&quot;冒泡：&quot;, arr7);//冒泡： (6) [80, 50, 40, 30, 20, 10] &lt;/script&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript流程控制]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%2F</url>
    <content type="text"><![CDATA[一. 顺序结构if语句： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; var money = 120000; if (money &gt; 100000) { console.log(&#39;愿意嫁&#39;); } var age = 35; if (age &lt; 18) { console.log(&#39;未成年人&#39;); } else if (age &gt;= 18 &amp;&amp; age &lt; 45) { console.log(&#39;青年人&#39;); } else if (age &gt;= 45 &amp;&amp; age &lt;= 59) { console.log(&#39;中年人&#39;); } else { //&gt;=60 console.log(&#39;老年人&#39;); } //判断奇偶数 var number = parseInt(prompt(&quot;请输入一个数字&quot;)); if (number % 2 == 0) { //能被2整除 console.log(&quot;偶数&quot;); } else { console.log(&quot;奇数&quot;); } //两个数字中的最大值 var x = 5; var y = 10; var result = x &gt; y ? x : y; console.log(result); //10 &lt;/script&gt; &lt;/html&gt; 二. 分支结构&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; var num = parseInt(prompt(&quot;请输入一个星期的数字&quot;)); switch (num) { case 1: console.log(&quot;星期一&quot;); break; case 2: console.log(&quot;星期二&quot;); break; case 3: console.log(&quot;星期三&quot;); break; case 4: console.log(&quot;星期四&quot;); break; case 5: console.log(&quot;星期五&quot;); break; case 6: console.log(&quot;星期六&quot;); break; case 7: console.log(&quot;星期日&quot;); break; default: console.log(&quot;输入错误&quot;); } var msg; // 会自动把msg转换成false if (msg) { // todo... } &lt;/script&gt; &lt;/html&gt; 三. 循环结构&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // // 当循环条件为true时，执行循环体， // // 当循环条件为false时，结束循环。 // while (循环条件) { // //循环体 // } // 计算1-100之间所有数的和 // 初始化变量 var i = 1;//计数器 var sum = 0; // 判断条件 while (i &lt;= 100) { // 循环体 sum += i; // 计数器自增 i++; } console.log(sum); //5050 console.log(&quot;========================================&quot;) // do { // // 循环体; // } while (循环条件); // 求100以内所有4的倍数的和 var i = 1; var sum = 0; do { if (i % 4 == 0) { sum += i; } i++; } while (i &lt;= 100); console.log(sum);//1300 // 问用户:做我女朋友好吗?提示用户请输入y/n ,如果用户不输入y就一直问：做我女朋友好吗?如果用户输入的y，则结束，并提示用户：表白成功 do { //把用户输入的结果存储到result变量中 var result = prompt(&quot;做我女朋友好吗?y/n&quot;); } while (result != &quot;y&quot;); alert(&quot;表白成功&quot;); console.log(&quot;========================================&quot;) // for循环的表达式之间用的是;号分隔的，千万不要写成, for (初始化表达式1; 判断表达式2; 自增表达式3) { // 循环体4 } &lt;/script&gt; &lt;/html&gt; for循环 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // 打印99乘法表 var str = &#39;&#39;; for (var i = 1; i &lt;= 9; i++) { for (var j = i; j &lt;= 9; j++) { str += i + &#39; x &#39; + j + &#39; = &#39; + i * j + &#39;\t&#39;; } str += &#39;\n&#39;; } console.log(str); console.log(&quot;========================================&quot;) //求1-100之间所有奇数的和 var sum2 = 0; for (var i = 1; i &lt;= 100; i++) { if (i % 2 != 0) { //奇数 sum2 += i; } } console.log(&quot;奇数和为:&quot; + sum2); //2500 console.log(&quot;========================================&quot;) //用五角星拼三角形：随着行数的增加，每一行都会比上一行多一个五角星 for (var i = 0; i &lt;= 5; i++) { //控制每一行有几个星星 for (var j = 0; j &lt;= i; j++) { document.write(&quot;★&quot;); } document.write(&quot;&lt;br/&gt;&quot;); } &lt;/script&gt; &lt;/html&gt; continue和break &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // 求1-100之间不能被7整除的整数的和 var sum1 = 0; for (var i = 1; i &lt;= 100; i++) { if (i % 7 != 0) { continue; } sum1 += i; } console.log(&#39;sum1 :&#39;, sum1); // 735 // 求整数1～100的累加值，但要求碰到个位为4的数则停止累加 var sum2 = 0; for (var i = 1; i &lt;= 100; i++) { if (i % 10 == 4) { break; } sum2 += i; } console.log(&#39;sum2 :&#39;, sum2);//6:1+2+3 debugger; &lt;/script&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript变量和数据类型]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[三. 变量变量的引入，声明和初始化 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // var name; //正常 // var $name; //正常 // var _sex; //正常 // var &amp;sex; //错误 // var 11; //错误 // var age18;//正常 // var 17age; //错误 // var 沈浪; //正常 var a = 10; var b = 20; //a的变量中的值和b变量中的值取出来相加，将结果重新赋值给a这个变量 a = a + b;//30 //a变量的值和b变量的值取出来相减，将结果重新赋值给b b = a - b;//10 //a变量的值和b变量的值取出来相减，将结果重新赋值给a a = a - b;//20 console.log(a, b); // 20 10 // 使用第三方的变量进行交换 var temp = a; a = b; b = temp; // 变量的交换---位运算:只需要看代码,不需要理解 var num1 = 10; var num2 = 20; num1 = num1 ^ num2; num2 = num1 ^ num2; num1 = num1 ^ num2; console.log(num1, num2); var name = &quot;阳顶天&quot;; var age = 33; /* 说明：这是一个唱歌方法 author:作者 */ function sing(author) { console.log(author + &#39;：喜欢我 别遮脸 任由途人发现&#39;); } &lt;/script&gt; &lt;/html&gt; 进制： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 二进制 --&gt; * 00000001----1 * 00000010----2 * 00000011----3 * 00000100----4 * 00000101----5 * 00000110----6 * 00000111----7 * 00001000----8 * 00001001----9 &lt;!-- 八进制 --&gt; * 00000001----1 * 00000002----2 * 00000003----3 * 00000004----4 * 00000005----5 * 00000006----6 * 00000007----7 * 00000010----8 * 00000011----9 * 00000012----10 &lt;!-- 十进制 --&gt; * 0----0 * 1----1 * 2----2 * 3----3 * 4----4 * 5----5 * 6----6 * 7----7 * 8----8 * 9----9 * 10----10 &lt;!-- 十六进制 --&gt; * 00000001----1 * 00000002----2 * 00000003----3 * 00000004----4 * 00000005----5 * 00000006----6 * 00000007----7 * 00000008----8 * 00000009----8 * 0000000a----10 * 0000000b---11 * 0000000c----12 * 0000000d---13 * 0000000e---14 * 0000000f---15 * 00000010---16 &lt;/body&gt; &lt;script&gt; // 二进制 var num1 = 0b11; //3 // 八进制 var num2 = 07;//对应十进制的7 var num3 = 016;//对应十进制的14 // 十进制 var num4 = 3; //3 // 十六进制 var num5 = 0x1a;//26 console.log(&#39;num1 :&#39;, num1); console.log(&#39;num2 :&#39;, num2); //7 console.log(&#39;num3 :&#39;, num3); //14 console.log(&#39;num5 :&#39;, num5); //26 // 进制转换 var res; //10进制转为16进制 res = (10).toString(16) // =&gt;&quot;a&quot; console.log(&#39;res :&#39;, res); //8进制转为16进制 res = (012).toString(16) // =&gt;&quot;a&quot; console.log(&#39;res :&#39;, res); //16进制转为10进制 res = (0x1b).toString(10) // =&gt;&quot;27&quot; console.log(&#39;res :&#39;, res); //16进制转为8进制 res = (0x16).toString(8) // =&gt;&quot;26&quot; console.log(&#39;res :&#39;, res); //10进制转为2进制 res = (1111).toString(2) // =&gt; &quot;10001010111&quot; console.log(&#39;res :&#39;, res); //8进制转为2进制 res = (01111).toString(2) //=&gt;&quot;1001001001&quot; console.log(&#39;res :&#39;, res); //16进制转为2进制 //=&gt; res = (0x16).toString(2) // =&gt; &quot;10110&quot; console.log(&#39;res :&#39;, res); /* * 把m进制的数字num转为n进制 */ function main(num, m, n) { var s = num + &#39;&#39;; var result = parseInt(s, m).toString(n); return result; } &lt;/script&gt; &lt;/html&gt; 四. 数据类型Number类型 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; console.log(Number.MAX_VALUE);//数字的最大值 console.log(Number.MIN_VALUE);//数字的最小值 var x = 0.25; var y = 0.21; var sum = x + y;//亚妮？!=0.46 console.log(&#39;sum :&#39;, sum); //sum : 0.45999999999999996 console.log(sum == 0.46); // false console.log(&#39;Infinity :&#39;, Infinity); var t1 = 1.7976931348623157E+10308; console.log(t1); //Infinity var t2 = -1.7976931348623157E+10308; console.log(t2);//-Infinity console.log(Number(&#39;英雄本色&#39;)); //NaN var val; console.log(val + 1); //NaN console.log(isNaN(10)); //false console.log(isNaN(&#39;纵横四海&#39;)); //true &lt;/script&gt; &lt;/html&gt; 复杂的数据类型： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; // 创建对象 // var student = {}; // var student = new Object(); var student = { name: &#39;邹宇峰&#39;, age: 5 }; var name = student.name;//对象取值 console.log(&#39;name :&#39;, name); //name : 邹宇峰 student.age = 6; //对象赋值 console.log(&#39;age :&#39;, student.age);//age : 6 var name2 = student[&#39;name&#39;]; console.log(&#39;name2 :&#39;, name2);//name2 : 邹宇峰 for (var k in student) { console.log(&#39;属性名 :&#39;, k, &#39;属性值：&#39;, student[k]); } // 属性名 : name 属性值： 邹宇峰 // 属性名 : age 属性值： 6 &lt;/script&gt; &lt;/html&gt; 其他数据类型： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; var str = &quot;hero&quot;; str = &#39;hero&#39;; var talk = &quot;大傻说：投降输一半&quot;; console.log(talk.length);//9 console.log(&#39;大唐\t不良人何在&#39;);//大唐 不良人何在 console.log(&#39;大唐\不良人何在&#39;);//大唐不良人何在 console.log(&quot;紫霞秘籍，&quot; + &quot;入门初基&quot;);//紫霞秘籍，入门初基 console.log(&#39;1&#39; + &#39;1&#39;); //11 console.log(1 + 1);//2 console.log(&#39;葵花宝典，登峰造极&#39; + true);//葵花宝典，登峰造极true console.log(1 + true); //2 console.log(1 + false); //1 console.log(&#39;2&#39; - 1);//1 var isSpring = true; //是春天吗 var isBelle = false; //是美女吗 var msg; console.log(msg); //undefined var user = null; console.log(user); //null &lt;/script&gt; &lt;/html&gt; 数据类型转换： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; //转整数 console.log(parseInt(&quot;17&quot;));//17 console.log(parseInt(&quot;17日&quot;));//17 console.log(parseInt(&quot;鹅2&quot;));//NaN console.log(parseInt(&quot;2月17日&quot;));//2 console.log(parseInt(&quot;3.14&quot;));//3 console.log(parseInt(&quot;3.14圆周率&quot;));//3 console.log(&quot;=============================&quot;); //转小数 console.log(parseFloat(&quot;17&quot;));//17 console.log(parseFloat(&quot;17日&quot;));//17 console.log(parseFloat(&quot;鹅2&quot;));//NaN console.log(parseFloat(&quot;2月17日&quot;));//2 console.log(parseFloat(&quot;3.14&quot;));//3.14 console.log(parseFloat(&quot;3.14圆周率&quot;));//3.14 console.log(&quot;=============================&quot;); // 转数字 console.log(Number(&quot;17&quot;));//17 console.log(Number(&quot;17日&quot;));//NaN console.log(Number(&quot;鹅2&quot;));//NaN console.log(Number(&quot;2月17日&quot;));//NaN console.log(Number(&quot;3.14&quot;));//3.14 console.log(Number(&quot;3.14圆周率&quot;));//NaN console.log(&quot;=============================&quot;); var str = &#39;200&#39;; console.log(+str); // 取正：200 console.log(-str); // 取负：-200 console.log(str - 0); //200 //转字符串 // var msg; // //报错：Cannot read property &#39;toString&#39; of undefined // console.log(msg.toString()); // msg = null; // //报错：Cannot read property &#39;toString&#39; of null // console.log(msg.toString()); // var num = 1; // console.log(num.toString());//1 var msg; console.log(String(msg)); //undefined var res = null; console.log(String(res)); //null console.log(String(1)); //1 var result = 1 + &#39;&#39;; console.log(result); //1 //获取数据类型 console.log(typeof (result));//string console.log(&quot;=============================&quot;); console.log(Boolean(0));//false console.log(Boolean(&quot;&quot;));//false console.log(Boolean(null));//false console.log(Boolean(undefined));//false console.log(Boolean(NaN));//false console.log(Boolean(1));//true console.log(Boolean(2));//true console.log(Boolean(-2));//true console.log(Boolean(&quot;李淳风&quot;));//true console.log(&quot;=============================&quot;); var userName = &#39;袁天罡&#39;; var age = 300; console.log(&#39;userName :&#39;, typeof userName);//userName : string console.log(&#39;age :&#39;, typeof age);//age : number &lt;/script&gt; &lt;/html&gt; ## 五. 运算符&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;script&gt; //前置++ var num1 = 1; ++num1; var num2 = 2; console.log(num1 + ++num2); //2+3=5 console.log(&quot;=============================&quot;); //后置++ var num1 = 1; num1++; var num2 = 2; console.log(num1 + num2++); //2+2=4 var result = &#39;11&#39; == 11; // true var result = &#39;11&#39; === 11; // false 值相等，类型不相等 var result = 11 === 11; // true console.log(&quot;=============================&quot;); var num3 = 10; var result = num3 % 3;//num变量与3取余---&gt;10/3的余数 console.log(result); //1 console.log(&quot;=============================&quot;); var num = 0; num += 1; //相当于 num = num + 1; var res = 4 &gt;= 6 || &#39;你&#39; != &#39;我&#39; &amp;&amp; !(2 * 2 == 6) &amp;&amp; true; //true console.log(&#39;res :&#39;, res); &lt;/script&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript概述]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[一. javascript是什么JavaScript 是 web 开发人员必须学习的 3 门语言中的一门： HTML 定义了网页的内容 CSS 描述了网页的布局 JavaScript 控制了网页的行为 二. 首个javascript代码首个javascript代码： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 写在script标签中 --&gt; &lt;script&gt; alert(&#39;hello&#39;); &lt;/script&gt; &lt;!-- 写在外部js文件中，在页面引入 --&gt; &lt;script src=&quot;../scripts/1.js&quot;&gt;&lt;/script&gt; &lt;!-- &lt;script src=&quot;../scripts/1.js&quot;&gt; alert(&#39;不会执行&#39;);&lt;/script&gt; --&gt; &lt;script&gt; alert(走路大摇大摆) //报错 alert(&#39;我是最大的牌&#39;);//不会执行 &lt;/script&gt; &lt;!-- 正常运行 --&gt; &lt;script&gt;alert(&#39;一起摇摆&#39;);&lt;/script&gt; &lt;!-- 标准写法 --&gt; &lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt; &lt;script lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 写在行内 --&gt; &lt;input type=&quot;button&quot; value=&quot;最靓的崽&quot; onclick=&quot;alert(&#39;我就是这条街最靓的崽!&#39;)&quot; /&gt; &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript概述]]></title>
    <url>%2F2017%2F11%2Ffront%2F03javascript%2Fjavascript%E8%BF%90%E7%AE%97%E7%AC%A6%2F</url>
    <content type="text"><![CDATA[一. javascript是什么JavaScript 是 web 开发人员必须学习的 3 门语言中的一门： HTML 定义了网页的内容 CSS 描述了网页的布局 JavaScript 控制了网页的行为 二. 首个javascript代码首个javascript代码： &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;Document&lt;/title&gt; &lt;!-- 写在script标签中 --&gt; &lt;script&gt; alert(&#39;hello&#39;); &lt;/script&gt; &lt;!-- 写在外部js文件中，在页面引入 --&gt; &lt;script src=&quot;../scripts/1.js&quot;&gt;&lt;/script&gt; &lt;!-- &lt;script src=&quot;../scripts/1.js&quot;&gt; alert(&#39;不会执行&#39;);&lt;/script&gt; --&gt; &lt;script&gt; alert(走路大摇大摆) //报错 alert(&#39;我是最大的牌&#39;);//不会执行 &lt;/script&gt; &lt;!-- 正常运行 --&gt; &lt;script&gt;alert(&#39;一起摇摆&#39;);&lt;/script&gt; &lt;!-- 标准写法 --&gt; &lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt; &lt;script lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; lang=&quot;JavaScript&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 写在行内 --&gt; &lt;input type=&quot;button&quot; value=&quot;最靓的崽&quot; onclick=&quot;alert(&#39;我就是这条街最靓的崽!&#39;)&quot; /&gt; &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>前端</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法思想-穷举]]></title>
    <url>%2F2017%2F09%2Fjava%2Fjava%E7%AE%97%E6%B3%95%2F%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3-%E7%A9%B7%E4%B8%BE%2F</url>
    <content type="text"><![CDATA[穷举算法（Exhaustive Attack method）：是一种最简单的算法，依赖于计算机强大的计算能力，来穷尽每一种可能的情况，从而解决问题。 简单的说 ：穷举法就是用循环把各种可能的情况都给走一遍，然后用if条件把满足要求的结果给筛选出来。 适用场景：穷举算法效率不高，适合于一些没有明显规律可循的场合。 穷举算法的基本思想： 对于一种可能的情况，计算其结果。 判断结果是否满足要求，如果不满足，则执行第（1）步来搜索下一个可能的情况；如果满足要求，则表示找到正确答案。 下面来用一个例子来实现穷举算法： 鸡兔同笼问题： 一个笼子里关有鸡兔共35头，一共94只脚，笼中鸡兔各有多少只。 分析：鸡的数量应该在0~35之间。代码如下： import java.util.Scanner; /** * 鸡兔同笼问题 * 一个笼子里关有鸡兔共35头，一共94只脚，笼中鸡兔各有多少只。 */ public class Example { static int chicken,habbit; //chicken代表鸡的个数，habbit代表兔的个数 public static int qiongJu (int head,int foot) { //穷举算法 int re,i,j; re = 0; for(i=0;i &lt;= head;i++) { j = head-i; if(i*2 + j*4 ==foot){//判断，找到答案 re=1; chicken = i; habbit = j; } } return re; } public static void main(String[] args) { int re,head,foot; System.out.println(&quot;用穷举发求解鸡兔同笼的问题：&quot;); Scanner input = new Scanner(System.in); System.out.print(&quot;请输入的头的数量：&quot;); head = input.nextInt(); System.out.print(&quot;请输入脚的数量：&quot;); foot = input.nextInt(); re = qiongJu(head,foot); if(re == 1){ System.out.println(&quot;鸡有&quot;+chicken+&quot;只，兔有&quot;+habbit+&quot;只。&quot;); }else { System.out.println(&quot;无法求解！&quot;); } } } 执行结果如下图所示： 下面都是穷举法相关的例子： 1. 韩信点兵问题韩信知道部队人数大约1000人左右，具体数字不详，5人一组剩余1人，7个人一组还剩两个人，8个人一组还剩3个人，问：这支部队有多少人? 代码如下： /** * 韩信点兵问题 */ public class Example { public static void main(String[] args) { for(int i=0;i&lt;=2000;i++) { if(i%5==1 &amp;&amp; i%7==2 &amp;&amp; i%8==3) { System.out.println(i); } } } } 执行结果如下图所示： 2. 找出100以内的与7有关的数。/** * 找出100以内的与7有关的数。 */ public class Example { public static void main(String[] args) { for(int a=1;a&lt;100;a++) { if(a%7==0 || a%10==7 || a/10==7) { System.out.print(a+&quot;\t&quot;); } } } } 执行结果如下图所示： 3. 有三种硬币若干：1分，2分，5分。要组合1毛5，有哪些组合方式？/** * 有三种硬币若干：1分，2分，5分。要组合1毛5，有哪些组合方式？ */ public class Example { public static void main(String[] args) { for(int a=0;a&lt;=15;a++) {//一分的硬币最多有15个 for(int b=0;b&lt;=7;b++) {//二分的硬币最多有7个 for(int c=0;c&lt;=3;c++) {//五分的硬币最多有3个 if(a*1+b*2+c*5 == 15) { System.out.println(&quot;一分钱的硬币需要&quot;+a+&quot;个，&quot; + &quot;两分钱的硬币需要&quot;+b+&quot;个，五分钱的硬币需要&quot;+c+&quot;个。&quot;); } } } } } } 执行结果如下图所示： 4. 小张有100元，他要买香皂（5元），牙刷（2元），洗发水（20元）。要想把100元正好花完，并且只买一瓶洗发水，如何买这三样东西？/** * 小张有100元，他要买香皂（5元），牙刷（2元），洗发水（20元）。 * 要想把100元正好花完，并且只买一瓶洗发水，如何买这三样东西？ */ public class Example { public static void main(String[] args) { for(int a=0;a&lt;=20;a++) { for(int b=0;b&lt;=50;b++) { if(a*5+b*2+20 == 100) { System.out.println(&quot;香皂&quot;+a+&quot;块，牙刷&quot; +b+&quot;个。&quot;); } } } } } 执行结果如下图所示： 5. 百鸡买百钱。有100文钱，要买100只鸡回家。公鸡2文钱一只，母鸡1文钱一只，小鸡半文钱一只。如何买？/** * 白钱买百鸡 */ public class Example { public static void main(String[] args) { for(int a=0;a&lt;=50;a++) { for(int b=0;b&lt;=100;b++) { for(int c=0;c&lt;=200;c++) { if(a*1+b+c*0.5 == 100 &amp;&amp; a+b+c==100) { System.out.println(&quot;公鸡&quot;+a+&quot;个，母鸡&quot;+b+&quot;个，小鸡&quot;+c+&quot;个。&quot;); } } } } } } 执行结果如下图所示：（执行结果有很多种，在此未显示完）]]></content>
      <categories>
        <category>java</category>
        <category>java算法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java语言3种方式实现九九乘法表]]></title>
    <url>%2F2017%2F07%2Fjava%2Fjava%E6%A1%88%E4%BE%8B%2F%E7%94%A8java%E8%AF%AD%E8%A8%803%E7%A7%8D%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[第一种：(两层for循环) /** * 测试打印九九乘法表 * @author cui_yonghua */ public class Test99 { public static void main(String[] args) { for(int i=1;i&lt;=9;i++){ for(int j=1;j&lt;=i;j++){ System.out.print(j+&quot;*&quot;+i+&quot;=&quot;+(i*j)+&quot;\t&quot;); } System.out.println(); } } } 控制台打印效果如下： 第二种（在单个for循环里写）： /** * 测试打印九九乘法表 * @author cui_yonghua */ public class Test99 { public static void main(String[] args) { for(int i=1,j=1;j&lt;=9;i++){ System.out.print(i+&quot;*&quot;+j+&quot;=&quot;+i*j+&quot; &quot;); if(i==j){ i=0; j++; System.out.println(); } } } } 控制台打印效果如下：第三种：(用while语句实现) public class Test99 { public static void main(String[] args) { int i = 9,j = 9;//定义整形变量 while(i &gt;= 1) {//当变量i大于或者等于1的时候执行循环 while (j&lt;=i &amp;&amp; j&gt;0) { System.out.print(i+&quot;*&quot;+j+&quot;=&quot;+i*j+&quot; &quot;); j--; } System.out.println(&quot; &quot;); i--; j = i; } } } 控制台打印效果如下：]]></content>
      <categories>
        <category>java</category>
        <category>java案例</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java案例</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络比较重要的概念]]></title>
    <url>%2F2017%2F07%2Fothers%2Fcomputer%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%AF%94%E8%BE%83%E9%87%8D%E8%A6%81%E7%9A%84%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[分层OSI模型有哪几层？ 应用层（数据）：定义了应用进程间的通信和交互的规则，通过应用进程间的交互来完成特定网络应用。 表示层（数据）：用于应用层数据的编码和转换功能，确保一个系统的应用层发送的数据能被另一个系统的应用层识别。 会话层（数据）：负责建立、管理和终止表示层实体之间的通信会话。 传输层（段）：建立端到端的链接，为上层协议提供端到端的可靠和透明的数据传输服务，包括处理差错控制和流量控制等问题，向上层屏蔽了下层数据通信的细节。 网络层（包）：通过IP寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点，正确无误地按照地址传送给目的端的运输层。 数据链路层（帧）：将比特组合成字节，再将字节组合成帧，使用MAC地址访问介质，并进行差错检测。 物理层（比特流）：实现相邻计算机节点之间比特流的透明传送，尽可能屏蔽掉具体传输介质和物理设备的差异。 每一层使用的是什么设备？ 网关：应用层、传输层 路由器：网络层 交换机：数据链路层、网络层 网桥：数据链路层 集线器：物理层 中继器：物理层 网络层地址解析协议 ARP网络层实现主机之间的通信，而链路层实现具体每段链路之间的通信。因此在通信过程中，IP 数据报的源地址和目的地址始终不变，而 MAC 地址随着链路的改变而改变。 ARP 实现由 IP 地址得到 MAC 地址。每个主机都有一个 ARP 高速缓存，里面有本局域网上的各主机和路由器的 IP 地址到 MAC 地址的映射表。 如果主机 A 知道主机 B 的 IP 地址，但是 ARP 高速缓存中没有该 IP 地址到 MAC 地址的映射，此时主机 A 通过广播的方式发送 ARP 请求分组，主机 B 收到该请求后会发送 ARP 响应分组给主机 A 告知其 MAC 地址，随后主机 A 向其高速缓存中写入主机 B 的 IP 地址到 MAC 地址的映射。 网际控制报文协议 ICMPICMP 是为了更有效地转发 IP 数据报和提高交付成功的机会。它封装在 IP 数据报中，但是不属于高层协议。 ICMP 报文分为差错报告报文和询问报文。 PingPing 是 ICMP 的一个重要应用，主要用来测试两台主机之间的连通性。 Ping 的原理是通过向目的主机发送 ICMP Echo 请求报文，目的主机收到之后会发送 Echo 回答报文。Ping 会根据时间和成功响应的次数估算出数据包往返时间以及丢包率。 TracerouteTraceroute 是 ICMP 的另一个应用，用来跟踪一个分组从源点到终点的路径。 Traceroute 发送的 IP 数据报封装的是无法交付的 UDP 用户数据报，并由目的主机发送终点不可达差错报告报文。 源主机向目的主机发送一连串的 IP 数据报。第一个数据报 P1 的生存时间 TTL 设置为 1，当 P1 到达路径上的第一个路由器 R1 时，R1 收下它并把 TTL 减 1，此时 TTL 等于 0，R1 就把 P1 丢弃，并向源主机发送一个 ICMP 时间超过差错报告报文； 源主机接着发送第二个数据报 P2，并把 TTL 设置为 2。P2 先到达 R1，R1 收下后把 TTL 减 1 再转发给 R2，R2 收下后也把 TTL 减 1，由于此时 TTL 等于 0，R2 就丢弃 P2，并向源主机发送一个 ICMP 时间超过差错报文。 不断执行这样的步骤，直到最后一个数据报刚刚到达目的主机，主机不转发数据报，也不把 TTL 值减 1。但是因为数据报封装的是无法交付的 UDP，因此目的主机要向源主机发送 ICMP 终点不可达差错报告报文。 之后源主机知道了到达目的主机所经过的路由器 IP 地址以及到达每个路由器的往返时间。 路由选择协议路由选择协议都是自适应的，能随着网络通信量和拓扑结构的变化而自适应地进行调整。 互联网可以划分为许多较小的自治系统 AS，一个 AS 可以使用一种和别的 AS 不同的路由选择协议。 可以把路由选择协议划分为两大类： 自治系统内部的路由选择：RIP 和 OSPF 自治系统间的路由选择：BGP 内部网关协议 RIPRIP 是一种基于距离向量的路由选择协议。距离是指跳数，直接相连的路由器跳数为 1。跳数最多为 15，超过 15 表示不可达。 RIP 按固定的时间间隔仅和相邻路由器交换自己的路由表，经过若干次交换之后，所有路由器最终会知道到达本自治系统中任何一个网络的最短距离和下一跳路由器地址。 RIP 协议实现简单，开销小。但是 RIP 能使用的最大距离为 15，限制了网络的规模。并且当网络出现故障时，要经过比较长的时间才能将此消息传送到所有路由器。 内部网关协议 OSPF开放最短路径优先 OSPF，是为了克服 RIP 的缺点而开发出来的。 开放表示 OSPF 不受某一家厂商控制，而是公开发表的；最短路径优先表示使用了 Dijkstra 提出的最短路径算法 SPF。 OSPF 具有以下特点： 向本自治系统中的所有路由器发送信息，这种方法是洪泛法。 发送的信息就是与相邻路由器的链路状态，链路状态包括与哪些路由器相连以及链路的度量，度量用费用、距离、时延、带宽等来表示。 只有当链路状态发生变化时，路由器才会发送信息。 所有路由器都具有全网的拓扑结构图，并且是一致的。相比于 RIP，OSPF 的更新过程收敛的很快。 外部网关协议 BGPAS 之间的路由选择很困难，主要是由于： 互联网规模很大； 各个 AS 内部使用不同的路由选择协议，无法准确定义路径的度量； AS 之间的路由选择必须考虑有关的策略，比如有些 AS 不愿意让其它 AS 经过。 BGP 只能寻找一条比较好的路由，而不是最佳路由。 每个 AS 都必须配置 BGP 发言人，通过在两个相邻 BGP 发言人之间建立 TCP 连接来交换路由信息。 传输层UDP 和 TCP 的特点 UDP是无连接的，尽最大可能交付，没有拥塞控制，面向报文（对于应用程序传下来的报文不合并也不拆分，只是添加 UDP 首部），支持一对一、一对多、多对一和多对多的交互通信。 虽然 UDP 不提供可靠交付，但在某些情况下 UDP 确是一种最有效的工作方式，比如： QQ 语音、 QQ 视频 、直播等等 TCP是面向连接的，提供可靠交付，有流量控制，拥塞控制，提供全双工通信，面向字节流（把应用层传下来的报文看成字节流，把字节流组织成大小不等的数据块），每一条 TCP 连接只能是点对点的（一对一）。 TCP的可靠体现在TCP在传递数据之前，会有三次握手来建立连接，而且在数据传递时，有确认、窗口、重传、拥塞控制机制，在数据传完后，还会断开连接用来节约系统资源。这不仅使协议数据单元的首部增大很多，还要占用许多处理机资源。TCP 一般用于文件传输、发送和接收邮件、远程登录等场景。 TCP 三次握手假设 A 为客户端，B 为服务器端。 首先 B 处于 LISTEN（监听）状态，等待客户的连接请求。 A 向 B 发送连接请求报文，SYN=1，ACK=0，选择一个初始的序号 x。 B 收到连接请求报文，如果同意建立连接，则向 A 发送连接确认报文，SYN=1，ACK=1，确认号为 x+1，同时也选择一个初始的序号 y。 A 收到 B 的连接确认报文后，还要向 B 发出确认，确认号为 y+1，序号为 x+1。 B 收到 A 的确认后，连接建立。 三次握手的原因 第三次握手是为了防止失效的连接请求到达服务器，让服务器错误打开连接。 客户端发送的连接请求如果在网络中滞留，那么就会隔很长一段时间才能收到服务器端发回的连接确认。客户端等待一个超时重传时间之后，就会重新请求连接。但是这个滞留的连接请求最后还是会到达服务器，如果不进行三次握手，那么服务器就会打开两个连接。如果有第三次握手，客户端会忽略服务器之后发送的对滞留连接请求的连接确认，不进行第三次握手，因此就不会再次打开连接。 TCP 的四次挥手以下描述不讨论序号和确认号，因为序号和确认号的规则比较简单。并且不讨论 ACK，因为 ACK 在连接建立之后都为 1。 A 发送连接释放报文，FIN=1。 B 收到之后发出确认，此时 TCP 属于半关闭状态，B 能向 A 发送数据但是 A 不能向 B 发送数据。 当 B 不再需要连接时，发送连接释放报文，FIN=1。 A 收到后发出确认，进入 TIME-WAIT 状态，等待 2 MSL（最大报文存活时间）后释放连接。 B 收到 A 的确认后释放连接。 四次挥手的原因 客户端发送了 FIN 连接释放报文之后，服务器收到了这个报文，就进入了 CLOSE-WAIT 状态。这个状态是为了让服务器端发送还未传送完毕的数据，传送完毕之后，服务器会发送 FIN 连接释放报文。 TIME_WAIT 客户端接收到服务器端的 FIN 报文后进入此状态，此时并不是直接进入 CLOSED 状态，还需要等待一个时间计时器设置的时间 2MSL。这么做有两个理由： 确保最后一个确认报文能够到达。如果 B 没收到 A 发送来的确认报文，那么就会重新发送连接释放请求报文，A 等待一段时间就是为了处理这种情况的发生。 等待一段时间是为了让本连接持续时间内所产生的所有报文都从网络中消失，使得下一个新的连接不会出现旧的连接请求报文。 TCP 协议如何保证可靠传输 应用数据被分割成 TCP 认为最适合发送的数据块。 TCP 给发送的每一个包进行编号，接收方对数据包进行排序，把有序数据传送给应用层。 校验和： TCP 将保持它首部和数据的检验和。这是一个端到端的检验和，目的是检测数据在传输过程中的任何变化。如果收到段的检验和有差错，TCP 将丢弃这个报文段和不确认收到此报文段。 TCP 的接收端会丢弃重复的数据。 流量控制： TCP 连接的每一方都有固定大小的缓冲空间，TCP的接收端只允许发送端发送接收端缓冲区能接纳的数据。当接收方来不及处理发送方的数据，能提示发送方降低发送的速率，防止包丢失。TCP 使用的流量控制协议是可变大小的滑动窗口协议。 （TCP 利用滑动窗口实现流量控制） 拥塞控制： 当网络拥塞时，减少数据的发送。 ARQ协议： 也是为了实现可靠传输的，它的基本原理就是每发完一个分组就停止发送，等待对方确认。在收到确认后再发下一个分组。 超时重传： 当 TCP 发出一个段后，它启动一个定时器，等待目的端确认收到这个报文段。如果不能及时收到一个确认，将重发这个报文段。 ARQ协议自动重传请求（Automatic Repeat-reQuest，ARQ）是OSI模型中数据链路层和传输层的错误纠正协议之一。它通过使用确认和超时这两个机制，在不可靠服务的基础上实现可靠的信息传输。如果发送方在发送后一段时间之内没有收到确认帧，它通常会重新发送。ARQ包括停止等待ARQ协议和连续ARQ协议。 停止等待ARQ协议 停止等待协议是为了实现可靠传输的，它的基本原理就是每发完一个分组就停止发送，等待对方确认（回复ACK）。如果过了一段时间（超时时间后），还是没有收到 ACK 确认，说明没有发送成功，需要重新发送，直到收到确认后再发下一个分组； 在停止等待协议中，若接收方收到重复分组，就丢弃该分组，但同时还要发送确认； 优点： 简单 缺点： 信道利用率低，等待时间长 无差错情况: 发送方发送分组,接收方在规定时间内收到,并且回复确认.发送方再次发送。 出现差错情况（超时重传）: 停止等待协议中超时重传是指只要超过一段时间仍然没有收到确认，就重传前面发送过的分组（认为刚才发送过的分组丢失了）。因此每发送完一个分组需要设置一个超时计时器，其重传时间应比数据在分组传输的平均往返时间更长一些。这种自动重传方式常称为 自动重传请求 ARQ 。另外在停止等待协议中若收到重复分组，就丢弃该分组，但同时还要发送确认。连续 ARQ 协议 可提高信道利用率。发送维持一个发送窗口，凡位于发送窗口内的分组可连续发送出去，而不需要等待对方确认。接收方一般采用累积确认，对按序到达的最后一个分组发送确认，表明到这个分组位置的所有分组都已经正确收到了。 确认丢失和确认迟到 确认丢失 ：确认消息在传输过程丢失。当A发送M1消息，B收到后，B向A发送了一个M1确认消息，但却在传输过程中丢失。而A并不知道，在超时计时过后，A重传M1消息，B再次收到该消息后采取以下两点措施：1. 丢弃这个重复的M1消息，不向上层交付。 2. 向A发送确认消息。（不会认为已经发送过了，就不再发送。A能重传，就证明B的确认消息丢失）。 确认迟到 ：确认消息在传输过程中迟到。A发送M1消息，B收到并发送确认。在超时时间内没有收到确认消息，A重传M1消息，B仍然收到并继续发送确认消息（B收到了2份M1）。此时A收到了B第二次发送的确认消息。接着发送其他数据。过了一会，A收到了B第一次发送的对M1的确认消息（A也收到了2份确认消息）。处理如下：1. A收到重复的确认后，直接丢弃。2. B收到重复的M1后，也直接丢弃重复的M1。 连续ARQ协议连续 ARQ 协议可提高信道利用率。发送方维持一个发送窗口，凡位于发送窗口内的分组可以连续发送出去，而不需要等待对方确认。接收方一般采用累计确认，对按序到达的最后一个分组发送确认，表明到这个分组为止的所有分组都已经正确收到了。 优点： 信道利用率高，容易实现，即使确认丢失，也不必重传。 缺点： 不能向发送方反映出接收方已经正确收到的所有分组的信息。 比如：发送方发送了 5条 消息，中间第三条丢失（3号），这时接收方只能对前两个发送确认。发送方无法知道后三个分组的下落，而只好把后三个全部重传一次。这也叫 Go-Back-N（回退 N），表示需要退回来重传已经发送过的 N 个消息。 滑动窗口和流量控制TCP 利用滑动窗口实现流量控制。流量控制是为了控制发送方发送速率，保证接收方来得及接收。 窗口是缓存的一部分，用来暂时存放字节流。发送方和接收方各有一个窗口，接收方通过 TCP 报文段中的窗口字段告诉发送方自己的窗口大小，发送方根据这个值和其它信息设置自己的窗口大小。 发送窗口内的字节都允许被发送，接收窗口内的字节都允许被接收。如果发送窗口左部的字节已经发送并且收到了确认，那么就将发送窗口向右滑动一定距离，直到左部第一个字节不是已发送并且已确认的状态；接收窗口的滑动类似，接收窗口左部字节已经发送确认并交付主机，就向右滑动接收窗口。接收窗口只会对窗口内最后一个按序到达的字节进行确认，发送方得到一个字节的确认之后，就知道这个字节之前的所有字节都已经被接收。 拥塞控制如果网络出现拥塞，分组将会丢失，此时发送方会继续重传，从而导致网络拥塞程度更高。因此当出现拥塞时，应当控制发送方的速率。这一点和流量控制很像，但是出发点不同。流量控制是为了让接收方能来得及接收，而拥塞控制是为了降低整个网络的拥塞程度。 TCP 主要通过四个算法来进行拥塞控制：慢开始、拥塞避免、快重传、快恢复。 发送方需要维护一个叫做拥塞窗口（cwnd）的状态变量，注意拥塞窗口与发送方窗口的区别：拥塞窗口只是一个状态变量，实际决定发送方能发送多少数据的是发送方窗口。 为了便于讨论，做如下假设： 接收方有足够大的接收缓存，因此不会发生流量控制； 虽然 TCP 的窗口基于字节，但是这里设窗口的大小单位为报文段。 慢开始与拥塞避免发送的最初执行慢开始，令 cwnd = 1，发送方只能发送 1 个报文段；当收到确认后，将 cwnd 加倍，因此之后发送方能够发送的报文段数量为：2、4、8 … 注意到慢开始每个轮次都将 cwnd 加倍，这样会让 cwnd 增长速度非常快，从而使得发送方发送的速度增长速度过快，网络拥塞的可能性也就更高。设置一个慢开始门限 ssthresh，当 cwnd &gt;= ssthresh 时，进入拥塞避免，每个轮次只将 cwnd 加 1。 如果出现了超时，则令 ssthresh = cwnd / 2，然后重新执行慢开始。 快重传与快恢复在接收方，要求每次接收到报文段都应该对最后一个已收到的有序报文段进行确认。例如已经接收到 M1 和 M2，此时收到 M4，应当发送对 M2 的确认。 在发送方，如果收到三个重复确认，那么可以知道下一个报文段丢失，此时执行快重传，立即重传下一个报文段。例如收到三个 M2，则 M3 丢失，立即重传 M3。 在这种情况下，只是丢失个别报文段，而不是网络拥塞。因此执行快恢复，令 ssthresh = cwnd / 2 ，cwnd = ssthresh，注意到此时直接进入拥塞避免。 慢开始和快恢复的快慢指的是 cwnd 的设定值，而不是 cwnd 的增长速率。慢开始 cwnd 设定为 1，而快恢复 cwnd 设定为 ssthresh。 应用层Web 页面请求过程总体来说分为以下几个过程: DNS解析 TCP连接 发送HTTP请求 服务器处理请求并返回HTTP报文 浏览器解析渲染页面 连接结束]]></content>
      <categories>
        <category>其它</category>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>概念</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C语言-数据结构-排序汇总（代码可直接运行）]]></title>
    <url>%2F2017%2F07%2Fothers%2Fcomputer%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84C%E8%AF%AD%E8%A8%80%2F</url>
    <content type="text"><![CDATA[一. 冒泡排序冒泡排序（英语：Bubble Sort）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序（如从大到小、首字母从A到Z）错误就把他们交换过来。 #include &lt;stdio.h&gt; void bubble_sort(int arr[], int len) { int i, j, temp; for (i = 0; i &lt; len - 1; i++) for (j = 0; j &lt; len - 1 - i; j++) if (arr[j] &gt; arr[j + 1]) { temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; } } int main() { int arr[] = { 22, 34, 3, 32, 82}; int len = (int) sizeof(arr) / sizeof(*arr); bubble_sort(arr, len); for (int i = 0; i &lt; len; i++) printf(&quot;%d &quot;, arr[i]); return 0; } 二. 选择排序选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。 #include &lt;stdio.h&gt; void swap(int *a,int *b) //交换两个数 { int temp = *a; *a = *b; *b = temp; } void selection_sort(int arr[], int len) { int i,j; for (i = 0 ; i &lt; len - 1 ; i++) { int min = i; for (j = i + 1; j &lt; len; j++) //走訪未排序的元素 if (arr[j] &lt; arr[min]) //找到目前最小值 min = j; //紀錄最小值 swap(&amp;arr[min], &amp;arr[i]); //做交換 } } int main() { int arr[] = { 22, 34, 3, 32, 82}; int len = (int) sizeof(arr) / sizeof(*arr); selection_sort(arr, len); for (int i = 0; i &lt; len; i++) printf(&quot;%d &quot;, arr[i]); return 0; } 三. 插入排序插入排序（英语：Insertion Sort）是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。 #include &lt;stdio.h&gt; void insertion_sort(int arr[], int len){ int i,j,temp; for (i=1;i&lt;len;i++){ temp = arr[i]; for (j=i;j&gt;0 &amp;&amp; arr[j-1]&gt;temp;j--) arr[j] = arr[j-1]; arr[j] = temp; } } int main() { int arr[] = { 22, 34, 3, 32, 82}; int len = (int) sizeof(arr) / sizeof(*arr); insertion_sort(arr, len); for (int i = 0; i &lt; len; i++) printf(&quot;%d &quot;, arr[i]); return 0; } 四. 希尔排序希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。希尔排序是非稳定排序算法。希尔排序是基于插入排序的以下两点性质而提出改进方法的： 插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率 但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位 #include &lt;stdio.h&gt; void shell_sort(int arr[], int len) { int gap, i, j; int temp; for (gap = len &gt;&gt; 1; gap &gt; 0; gap = gap &gt;&gt; 1) for (i = gap; i &lt; len; i++) { temp = arr[i]; for (j = i - gap; j &gt;= 0 &amp;&amp; arr[j] &gt; temp; j -= gap) arr[j + gap] = arr[j]; arr[j + gap] = temp; } } int main() { int arr[] = { 22, 34, 3, 32, 82}; int len = (int) sizeof(arr) / sizeof(*arr); shell_sort(arr, len); for (int i = 0; i &lt; len; i++) printf(&quot;%d &quot;, arr[i]); return 0; } 五. 归并排序把数据分为两段，从两段中逐个选最小的元素移入新数据段的末尾。可从上到下或从下到上进行。 迭代法： #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; int min(int x, int y) { return x &lt; y ? x : y; } void merge_sort(int arr[], int len) { int* a = arr; int* b = (int*) malloc(len * sizeof(int)); int seg, start; for (seg = 1; seg &lt; len; seg += seg) { for (start = 0; start &lt; len; start += seg + seg) { int low = start, mid = min(start + seg, len), high = min(start + seg + seg, len); int k = low; int start1 = low, end1 = mid; int start2 = mid, end2 = high; while (start1 &lt; end1 &amp;&amp; start2 &lt; end2) b[k++] = a[start1] &lt; a[start2] ? a[start1++] : a[start2++]; while (start1 &lt; end1) b[k++] = a[start1++]; while (start2 &lt; end2) b[k++] = a[start2++]; } int* temp = a; a = b; b = temp; } if (a != arr) { int i; for (i = 0; i &lt; len; i++) b[i] = a[i]; b = a; } free(b); } int main() { int arr[] = { 22, 34, 3, 32, 82}; int len = (int) sizeof(arr) / sizeof(*arr); merge_sort(arr, len); for (int i = 0; i &lt; len; i++) printf(&quot;%d &quot;, arr[i]); return 0; } 递归法： #include &lt;stdio.h&gt; void merge_sort_recursive(int arr[], int reg[], int start, int end) { if (start &gt;= end) return; int len = end - start, mid = (len &gt;&gt; 1) + start; int start1 = start, end1 = mid; int start2 = mid + 1, end2 = end; merge_sort_recursive(arr, reg, start1, end1); merge_sort_recursive(arr, reg, start2, end2); int k = start; while (start1 &lt;= end1 &amp;&amp; start2 &lt;= end2) reg[k++] = arr[start1] &lt; arr[start2] ? arr[start1++] : arr[start2++]; while (start1 &lt;= end1) reg[k++] = arr[start1++]; while (start2 &lt;= end2) reg[k++] = arr[start2++]; for (k = start; k &lt;= end; k++) arr[k] = reg[k]; } void merge_sort(int arr[], const int len) { int reg[len]; merge_sort_recursive(arr, reg, 0, len - 1); } int main() { int arr[] = { 22, 34, 3, 32, 82}; int len = (int) sizeof(arr) / sizeof(*arr); merge_sort(arr, len); for (int i = 0; i &lt; len; i++) printf(&quot;%d &quot;, arr[i]); return 0; } 六. 快速排序在区间中随机挑选一个元素作基准，将小于基准的元素放在基准之前，大于基准的元素放在基准之后，再分别对小数区与大数区进行排序。 迭代法： #include &lt;stdio.h&gt; typedef struct _Range { int start, end; } Range; Range new_Range(int s, int e) { Range r; r.start = s; r.end = e; return r; } void swap(int *x, int *y) { int t = *x; *x = *y; *y = t; } void quick_sort(int arr[], const int len) { if (len &lt;= 0) return; // 避免len等於負值時引發段錯誤（Segment Fault） // r[]模擬列表,p為數量,r[p++]為push,r[--p]為pop且取得元素 Range r[len]; int p = 0; r[p++] = new_Range(0, len - 1); while (p) { Range range = r[--p]; if (range.start &gt;= range.end) continue; int mid = arr[(range.start + range.end) / 2]; // 選取中間點為基準點 int left = range.start, right = range.end; do { while (arr[left] &lt; mid) ++left; // 檢測基準點左側是否符合要求 while (arr[right] &gt; mid) --right; //檢測基準點右側是否符合要求 if (left &lt;= right) { swap(&amp;arr[left],&amp;arr[right]); left++;right--; // 移動指針以繼續 } } while (left &lt;= right); if (range.start &lt; right) r[p++] = new_Range(range.start, right); if (range.end &gt; left) r[p++] = new_Range(left, range.end); } } int main() { int arr[] = { 22, 34, 3, 32, 82}; int len = (int) sizeof(arr) / sizeof(*arr); quick_sort(arr, len); for (int i = 0; i &lt; len; i++) printf(&quot;%d &quot;, arr[i]); return 0; } 递归法： #include &lt;stdio.h&gt; void swap(int *x, int *y) { int t = *x; *x = *y; *y = t; } void quick_sort_recursive(int arr[], int start, int end) { if (start &gt;= end) return; int mid = arr[end]; int left = start, right = end - 1; while (left &lt; right) { while (arr[left] &lt; mid &amp;&amp; left &lt; right) left++; while (arr[right] &gt;= mid &amp;&amp; left &lt; right) right--; swap(&amp;arr[left], &amp;arr[right]); } if (arr[left] &gt;= arr[end]) swap(&amp;arr[left], &amp;arr[end]); else left++; if (left) quick_sort_recursive(arr, start, left - 1); quick_sort_recursive(arr, left + 1, end); } void quick_sort(int arr[], int len) { quick_sort_recursive(arr, 0, len - 1); } int main() { int arr[] = { 22, 34, 3, 32, 82}; int len = (int) sizeof(arr) / sizeof(*arr); quick_sort(arr, len); for (int i = 0; i &lt; len; i++) printf(&quot;%d &quot;, arr[i]); return 0; } 、]]></content>
      <categories>
        <category>其它</category>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>C语言</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java求其最大公约数和最小公倍数]]></title>
    <url>%2F2017%2F06%2Fjava%2Fjava%E6%A1%88%E4%BE%8B%2Fjava%E6%B1%82%E5%85%B6%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%2F</url>
    <content type="text"><![CDATA[题目：输入两个正整数m 和n，求其最大公约数和最小公倍数。 思路分析：在循环中，只要除数不等于0，用较大数除以较小的数，将小的一个数作为下一轮循环的大数，取得的余数作为下一轮循环的较小的数，如此循环直到较小的数的值为0，返回较大的数，此数即为最小公约数，最小公倍数为两数之积除以最小公倍数。 代码如下： package mytest; import java.util.Scanner; public class Example { public static void main(String[] args) { System.out.print(&quot;请输入正整数 m 的值：&quot;); Scanner scanner = new Scanner(System.in); int m = scanner.nextInt(); System.out.print(&quot;请输入正整数 n 的值：&quot;); Scanner scanner1 = new Scanner(System.in); int n = scanner1.nextInt(); Example example = new Example(); int a = example.division(m,n); int b = m*n/a; System.out.println(m+&quot;和&quot;+n+&quot;的最大公约数为：&quot;+a+&quot;，最小公倍数为：&quot;+b); } public int division(int x,int y){ int t; if(x&lt;y){//交换位置 t=x; x=y; y=t; } while (y!=0){ if(x==y){ return 1; }else { int k = x % y; x=y; y=k; } } return x; } }]]></content>
      <categories>
        <category>java</category>
        <category>java案例</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java案例</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java把三个数由小到大输出]]></title>
    <url>%2F2017%2F06%2Fjava%2Fjava%E6%A1%88%E4%BE%8B%2Fjava%E6%8A%8A%E4%B8%89%E4%B8%AA%E6%95%B0%E7%94%B1%E5%B0%8F%E5%88%B0%E5%A4%A7%E8%BE%93%E5%87%BA%2F</url>
    <content type="text"><![CDATA[题目：输入三个整数x,y,z，请把这三个数由小到大输出。 思路分析：我们想办法把最小的数放到x上，先将x与y进行比较，如果x&gt; y则将x与y的值进行交换，然后再用x与z进行比较，如果x&gt; z则将x与z的值进行交换，这样能使x最小。 代码如下： package mytest; import java.util.Scanner; public class Example { public static void main(String[] args) { Example example = new Example(); System.out.println(&quot;请输入3个整数：&quot;); int a = example.input(); int b = example.input(); int c = example.input(); if(a&gt;b){ int t = a; a = b; b = t; } if(a&gt;c){ int t = a; a = c; c = t; } if(b&gt;c){ int t = b; b = c; c = t; } System.out.println(&quot;这三个数排序为：&quot;+a+&quot; &quot;+b+&quot; &quot;+c); } public int input(){ int value = 0; Scanner scanner = new Scanner(System.in); value = scanner.nextInt(); return value; } }]]></content>
      <categories>
        <category>java</category>
        <category>java案例</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java案例</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[操作系统介绍]]></title>
    <url>%2F2017%2F06%2Fdeploy%2Flinux%2F20170607_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[没有安装操作系统的计算机，通常被称为：裸机 如果想在 裸机 上运行自己所编写的程序，就必须用机器语言书写程序 如果计算机上安装了操作系统，就可以在操作系统上安装支持的高级语言环境，用高级语言开发程序 操作系统的作用 是现代计算机系统中 最基本和最重要 的系统软件 是 配置在计算机硬件上的第一层软件，是对硬件系统的首次扩展 主要作用是管理好硬件设备，并为用户和应用程序提供一个简单的接口，以便于使用 而其他的诸如编译程序、数据库管理系统，以及大量的应用软件，都直接依赖于操作系统的支持 不同应用领域的主流操作系统 桌面操作系统 服务器操作系统 嵌入式操作系统 移动设备操作系统 1、桌面操作系统Windows 系列：用户群体大macOS：适合于开发人员Linux：应用软件少 2、服务器操作系统Linux：安全、稳定、免费；占有率高Windows Server：付费；占有率低 3、嵌入式操作系统Linux 4、移动设备操作系统：iOS，Android（基于 Linux） 虚拟机虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统 虚拟系统通过生成现有操作系统的全新虚拟镜像，具有真实操作系统完全一样的功能 进入虚拟系统后，所有操作都是在这个全新的独立的虚拟系统里面进行，可以独立安装运行软件，保存数据，拥有自己的独立桌面，不会对真正的系统产生任何影响 而且能够在现有系统与虚拟镜像之间灵活切换的一类操作系统]]></content>
      <categories>
        <category>部署</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《代码之髓--编程语言核心概念》读后感]]></title>
    <url>%2F2017%2F05%2Fothers%2Fcomputer%2F%E4%BB%A3%E7%A0%81%E4%B9%8B%E9%AB%93--%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[启始篇《代码之髓–编程语言核心概念》 [日] 西尾泰和(Nishio Hirokazu) 著 曾一鸣 译 人民邮电出版社 2014年8月第1版 书中的示例源代码可以从作者的网站上下载： http://nhiro.org/langbook/ 有用语句摘抄p3: ruby语言中false, nil为假，其余都为真（包括数字0）。c语言中0为假，非0为真。python语言中0为假，空的容器（如空字符串，空的列表等）为假。java语言中0不是布尔值，所以既不是真也不是假。所以，0为真，0为假，0即非真也非假的语言都存在。 p5: 在招聘网站dice.com上检索一下，就可知道APL语言的没落了。 p8: 1946年，第一台电子计算机—ENIAC(埃尼阿克，Electronic Numerical Integrator and Computer)问世。它是第一台可编程计算机。编程方式就是用电缆把不同的端口连接起来。修改程序很费劲。 1949年，EDSAC(爱达赛克，Electronic Delay Storage Automatic Calculator, 电子延迟存储自动计算机）问世。它是通过纸带打孔的方式来记录和读取数据。程序通过纸带输入。修改程序简单了很多。 paper tape ： https://en.wikipedia.org/wiki/File:PaperTapes-5and8Hole.jpg 作者设计的，基于浏览器的EDSAC仿真器： http://nhiro.org/learn_language/repos/EDSAC-on-browser/index.html p10: FORTRAN的全称是Formula Translating System(公式翻译系统)。设计者是John Backus。 P11: Perl语言设计者Larry Wall在其著作Programming Perl(中文版为《Perl语言编程》中国电力出版社，何伟平 译)中提出，程序员的3大美德：懒惰、急躁和傲慢（laziness, impatience and hubris）。 p17： Forth语言开发与1958年左右，是一种几乎没有语法的语言。设计者是Charles H. Moore。 作者的网页上Forth模拟器：http://nhiro.org/learn_language/FORTH-on-browser.html p24: 前缀表达式和后缀表达式也被称为波兰表示法和逆波兰表示法，得名于最先研究它们的波兰人Jan Lukasiewicz。前缀表达式总括号是不必要的。 p28，p42： if…else…, while, for, foreach语句都是为了更可读而发明的，只用条件跳转就可以实现这些功能。 p40: 函数在不同时期，不同语言中，有事务、程序（procedure）、子程序（subroutine）、方法（method）等不同叫法，都是一回事。 p43: 函数的诞生。把反复使用的命令封装在一起再利用，这种需求在很早以前就有了。1949年的EDSAC就使用了带有这一功能的技术。参见 https://www.cl.cam.ac.uk/~mr10/edsacposter.pdf。那时函数的返回正确的地址是靠每次调用前修改在函数结尾中的跳转指令的目的地址。调用处要知道返回命令的地址，以便修改其中的返回地址。假设函数增加了几条语句，所有调用的地方都要修改。 后来设计专用的寄存器以保存返回地址，并同时设计有跳转到该寄存器所记录的地址的命令，这样就调用处就不用知道函数的返回命令的地址了，只要填写返回地址寄存器就可以了。但是，这种方法也有一个问题，如果调用函数X其间又调用了函数Y，则返回地址就会被覆盖，函数X执行之后应该返回的目的地址就找不到了。 最终的解决办法是使用栈。 p45：函数名使一组操作更可读。 p47: 过去有些语言无法实现递归调用，现在几乎所有的语言都支持这一编程技术。 p54: 出错时如何处理，大体上可以分为2中方法：使用返回值和使用异常处理。除了c语言外，大多数语言都支持异常处理。 使用返回值处理错误有2个问题：1）遗漏错误。忘了或者懒得检查返回值，并做处理。比如，c语言中写文件的函数fprintf()，它在执行错误时返回负值。你对这个检查过吗？还是想当然地以为执行成功从而遗漏了错误呢？一个很少会出错的函数可能通过很多测试，真正发现问题，可能是产品发布很久以后了。由于时间久远、又是在远程的生产环境下，追查问题往往会很辛苦。此外，由于连锁反应，问题看起来是在和出错的函数没有任何关系的地方发现的，这样一来就更难发现真正的问题所在了。理性情况下，严格检查返回的错误值，并处理，就不会造成遗漏错误的情况。然而，现实中忘记或忽略检查返回值的情况不胜枚举。2）处理返回错误代码，会使得源代码很难读懂。常常是少量正常处理的代码夹在大量的错误处理代码的缝隙中间，使得程序流程难以读懂。把错误处理代码集中起来，用goto语句跳转到错误处理代码，是个好办法。参见Linus Torvalds的文章 http://www.linuxfromscratch.org/alfs/view/hacker/part2/hacker/coding-style.html p60: PL/I语言中异常和失败叫做条件（condition），抛出异常的命令不是现在一般的raise或throw，而是signal。 p61: John Goodenough 1975年提出了现代异常的处理方式: 一是明确声明命令可能抛出的异常，二是需要有将可能出错的操作括起来的语句结构。参见 https://www.sei.cmu.edu/about/leadership/display.cfm?customel_datapageid_2623=3002 p62: CLU语言使用了except一词，但是CLU语言中抛出异常的命令和PL/I语言一样，都是signal。C++语言选用throw作为触发异常的命令，是因为raise和signal两个词已经在标准库中作为函数名字占用了。于是触发异常的表述就变成了抛出异常。 p65: 1990年左右，微软公司开始引入结构化异常处理（SEH, try, except, __finally），1995年java也引入finally。现今，python和ruby语言也支持finally。 p66: c++中没有finally，使用的是RAII（资源获取即初始化），Bjarne Stroustrup认为，RAII比finally更优雅。 p67: 2001年出现的D语言，引入了作用域守护(scope guard)的概念，定义从某作用域退出时要执行的操作。 p70: 同一种错误，是返回错误码，还是抛出异常，不同语言有不同的做法。在生产环境下，不同的软件目的不同，简单地停止操作有时可能不太妥当。但是，作者认为，至少是在学习和开发阶段，一出错就立刻抛出异常，终止操作立刻报告是较好的，这种思想被称为错误优先（fail first）。 p73: 检查型异常没有得到普及，参见C#语言的设计者Anders Hejlsberg所说“The Trouble with Checked Exceptions” https://www.artima.com/intv/handcuffs.html p88: Perl语言中，local的变量是动态作用域（从perl4开始），my的变量是静态作用域（从perl5开始） p89: Python语言的内置作用域是其他语言的所谓全局作用域，python的全局作用域是文件作用域。 p97: 位值制计数法发明于印度，途径阿拉伯国家传到欧洲，因此被称为阿拉伯数字。有一本年代可考的著作是花剌子模（al-khwarizmi）于公元825年写的《印度数的计算法》，这是关于数位最古老的记载。值得一提的是，al-khwarizmi这个词在拉丁语里被记为Algoritmi,这就是现代英语中算法（algorithm）的词源。 p99: calculate的词源是拉丁语中表达算盘中的算珠的词calculus。Calcium（钙）一词的词源同样来于此。 p132: java、python、ruby将数组作为一种最基本的容器，lisp、scheme、haskell将链表作为最基本的容器。 p147: 表明源码编码方式的魔术注释符。 emacs： # -*- coding: shift_jis -*- vim： # vim: set fileencoding=shift_jis : p150: c语言只规定了char类型最低为8bit，IBM7.01（1952年）和UNIVAC 1103（1953年）采用了9bit。但是时至21世纪的今天，8bit的机器占了绝大多数。char是character（字符）的前4个字母。 p161: 《Java Concurrency in Practice》 Brain Goetz, Joshua Bloch, Doug Lea 著，中文版《Java并发编程实战》 机械工业出版社 童云兰 译。竞争发生的3个条件：a）共享变量 b）修改变量 c）同时访问。只要任何一个条件不具备，就可以避免竞争。 避免条件a。采用进程（不共享内存，当然访问文件、数据库等还可能竞争）。或者采用actor模型，即传递消息来通信，而不共享内存。Erlan、Scala就采用了actor模型。 避免条件b。c/c++中const声明的变量，Scala中val声明的变量，Java中Immutable模式（就是类的私有成员，不提供setter）下的变量都是不能改写的。从而对它们的访问不存在竞争。 避免条件c。采用协作式多任务的模式。即一个任务主动在适当的时候，让出资源，让别人使用。这并不总能够容易做到。另一种方式是用锁（lock，mutex，semaphore都是锁一类的东西） p176：模块和包是一个意思，就是把相关的变量和函数放在一起，便于管理。Perl、Java叫包。Python、Ruby叫模块。 p188: JavaScript中函数f前面使用new运算符后，会执行下面4个操作： 创建新的对象x；新创建的对象x的原型变为函数f的原型；把新创建的对象x传给this，执行函数f的内容；返回对象x。 p213：发表于2002年的一篇关于Trait的论文很好地整理的类的两种截然相反的作用。一种是用于创建实例的作用，它要求类是全面的、包含所有必需的内容的、大的类。另一种作用是作为再利用单元的作用，它要求类是按功能分的、没有多余内容的、小的类。参见：Nathanael Schaerli, Stephane Ducasse, Oscar Nierstrasz, Andrew Black. “Traits: Composable Units of Behaviour”, 2002. p216: Perl 6也引入了和Trait类似的概念，叫做Roll。PHP也从5.4版开始引入了这种功能。Ruby在2.0版引入了mix method, 可以像Trait一样操作模块。 目标近年来，看了一些书，同时，随着工作年限的增长，对工作、学习、生活等方面都有了一定的认知和感触，所以想输出点东西落地，写点东西，一方面降低自己的大脑中知识存储容量，另一方面也为了将来回头看时，还能欣慰自己曾经留下了一点东西。]]></content>
      <categories>
        <category>其它</category>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>读书</tag>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java实现打印各种图形总结 (包括长方形 三角形 菱形 平行四边形等)]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E6%A1%88%E4%BE%8B%2Fjava%E6%89%93%E5%8D%B0%E5%9B%BE%E5%BD%A2%2F</url>
    <content type="text"><![CDATA[嵌套循环：循环中还可以声明循环。相当于内层循环的整体充当外层循环的循环体 1.首先来实现一个比较简单的，在控制台打印一个长方形： /** * 测试打印长方形 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { for(int j = 0;j &lt; 4;j++){//外层循环控制行数 for(int i = 0;i &lt; 5;i++){//内层循环控制列数 System.out.print(&quot;*&quot;); } System.out.println(); } } } 控制台输出如下：2.下面再看打印三角形: /** * 测试打印三角行 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { for(int j = 0;j &lt; 4;j++){//外层循环控制行数 for(int i = 0;i &lt; j + 1;i++){//每行输出j + 1个 System.out.print(&quot;*&quot;); } System.out.println(); } } } 控制台输出如下：3.打印如图所示： /** * 测试打印图形 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { for(int j = 0;j &lt; 4;j++){//外层循环控制行数 for(int i = 0;i &lt; j + 1;i++){//每行输出j + 1个 System.out.print(&quot;*&quot;); } System.out.println(); } for(int i = 0; i &lt; 5;i++){ for(int j = 0;j &lt; 5-i;j++){//for(int j = i;j &lt; 5;j++) System.out.print(&quot;*&quot;); } System.out.println(); } } } 控制台输出如下：4.打印如图所示：可以理解为 /** * 测试打印图形 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { for(int i = 0;i &lt; 5;i++){ for(int k = 0;k &lt; 4 - i;k++){ System.out.print(&quot; &quot;); } for(int j = 0;j &lt; i + 1;j++){ System.out.print(&quot;* &quot;); } System.out.println(); } } } 控制台输出如下： 5.再看打印菱形，如图所示： /** * 测试打印菱形 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { for(int i = 0;i &lt; 5;i++){ for(int k = 0;k &lt; 4 - i;k++){ System.out.print(&quot; &quot;); } for(int j = 0;j &lt; i + 1;j++){ System.out.print(&quot;* &quot;); } System.out.println(); } //下半部分 for(int i = 0;i &lt; 4;i++){ for(int k = 0;k &lt; i + 1;k++){ System.out.print(&quot; &quot;); } for(int j = 0;j &lt; 4 - i;j++){ System.out.print(&quot;* &quot;); } System.out.println(); } } } 控制台输出如下：6.那么，打印数字菱形该怎么做呢，代码如下： /** * 测试打印图形 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { for(int i=1;i&lt;=5;i++){ for(int j=1;j&lt;=5-i;j++){ System.out.print(&quot; &quot;); } for(int j=1;j&lt;=2*i-1;j++){ System.out.print(i); } System.out.println(); } for(int i=1;i&lt;=4;i++){ for(int j=1;j&lt;=i;j++){ System.out.print(&quot; &quot;); } for(int j=1;j&lt;=2*(5-i)-1;j++){ System.out.print(5-i); } System.out.println(); } } } 控制台输出如下：7.若打印空心菱形，代码如下： /** * 测试打印空心菱形 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { for(int i=1;i&lt;=5;i++){ for(int j=1;j&lt;=5-i;j++){ System.out.print(&quot; &quot;); } for(int j=1;j&lt;=2*i-1;j++){ if(j==1||j==2*i-1){ System.out.print(&quot;*&quot;);//上半截 } else{ System.out.print(&quot; &quot;); } } System.out.println(); } for(int i=1;i&lt;=4;i++){ for(int j=1;j&lt;=i;j++){ System.out.print(&quot; &quot;); } for(int j=1;j&lt;=2*(5-i)-1;j++){ if(j==1||j==2*(5-i)-1){ System.out.print(&quot;*&quot;); } else{ System.out.print(&quot; &quot;); } } System.out.println(); } } } 控制台输出如下：若根据用户输入的数字来打印菱形的行数，代码实现如下： import java.util.Scanner; /** * 使用for循环输出空心的菱形 */ public class Example { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(&quot;请输入菱形的行数：&quot;); int i = scanner.nextInt(); printHollowRhombus(i); } public static void printHollowRhombus(int size) { if (size % 2 == 0) { size++;// 计算菱形大小 } for (int i = 0; i &lt; size / 2 + 1; i++) { for (int j = size / 2 + 1; j &gt; i + 1; j--) { System.out.print(&quot; &quot;);// 输出左上角位置的空白 } for (int j = 0; j &lt; 2 * i + 1; j++) { if (j == 0 || j == 2 * i) { System.out.print(&quot;* &quot;);// 输出菱形上半部边缘 } else { System.out.print(&quot; &quot;);// 输出菱形上半部空心 } } System.out.println(&quot;&quot;); //换行 } for (int i = size / 2 + 1; i &lt; size; i++) { for (int j = 0; j &lt; i - size / 2; j++) { System.out.print(&quot; &quot;);// 输出菱形左下角空白 } for (int j = 0; j &lt; 2 * size - 1 - 2 * i; j++) { if (j == 0 || j == 2 * (size - i - 1)) { System.out.print(&quot;* &quot;);// 输出菱形下半部边缘 } else { System.out.print(&quot; &quot;);// 输出菱形下半部空心 } } System.out.println(&quot;&quot;); //换行 } } } 执行结果如下图所示： 8.打印平行四边形： /** * 测试打印平行四边形 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { for(int i=0;i&lt;=5;i++){ for(int j=1;j&lt;=5-i;j++){ System.out.print(&quot; &quot;); } for(int j=1;j&lt;=5;j++){ System.out.print(&quot;*&quot;); } System.out.println(); } } } 控制台输出如下：9.若随意输出一个n,输出打印n行，代码如下： import java.util.Scanner; /** * 测试打印图形 * @author cui_yonghua */ public class PintPic { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for(int i = 1; i&lt;=n; i++){ //输出n-i个空格 for(int j = 1; j&lt;=n-i; j++){ System.out.print(&quot; &quot;); } //输出2*i-1个星 for(int j = 1; j&lt;=2*i-1; j++){ System.out.print(&quot;*&quot;); } //换行 System.out.println(); } } } 比如，随便输入一个数字6，效果如图： 有不到的地方欢迎大家评论指正，交流。]]></content>
      <categories>
        <category>java</category>
        <category>java案例</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java案例</tag>
        <tag>java打印图形</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java面向对象进阶]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2Fjava%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[继承封装多态抽象Object类super关键字final关键字接口内部类]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java面向对象基础]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2Fjava%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[完成一个项目（或功能）的思路1）所要完成的功能对应的类的对象是否存在。2）若存在，则通过对象直接调用对应的类中的属性或方法即可3）若不存在，需要创建类的对象。甚至说，类都不存在，就需要设计类。 面向对象编程的三条主线 ：1）类及类的构成成分：属性 方法 构造器 代码块 内部类2）面向对象编程的特征：封装性 继承性 多态性 （抽象性）3）其它的关键字：this super package import static final abstract interface … 1. 类的成分类的组成成分： 属性（成员变量，Field） 方法（成员方法，函数，Method） 构造器构造器的作用：①创建对象 ②给创建的对象的属性赋值 设计类时，若不显式声明类的构造器的话，程序会默认提供一个空参的构造器; 一旦显式的定义类的构造器，那么默认的构造器就不再提供; .如何声明类的构造器。格式：权限修饰符 类名(形参){ } 类的多个构造器之间构成重载 类对象的属性赋值的先后顺序：①属性的默认初始化 ②属性的显式初始化③通过构造器给属性初始化 ④通过”对象.方法”的方式给属性赋值 代码块：是类的第4个成员作用：用来初始化类的属性分类：只能用static来修饰。 静态代码块： 1.里面可以有输出语句 2.随着类的加载而加载，而且只被加载一次 3.多个静态代码块之间按照顺序结构执行 4.静态代码块的执行要早于非静态代码块的执行。 5.静态的代码块中只能执行静态的结构(类属性，类方法) 非静态代码块： 1.可以对类的属性(静态的 &amp; 非静态的)进行初始化操作，同时也可以调用本类声明的方法(静态的 &amp; 非静态的) 2.里面可以有输出语句 3.一个类中可以有多个非静态的代码块，多个代码块之间按照顺序结构执行 4.每创建一个类的对象，非静态代码块就加载一次。 5.非静态代码块的执行要早于构造器 内部类 : 类的第5个成员： 相当于说，我们可以在类的内部再定义类。外面的类：外部类。里面定义的类：内部类 内部类的分类：成员内部类（声明在类内部且方法外的） vs 局部内部类(声明在类的方法里) 成员内部类： 3.1是外部类的一个成员：①可以有修饰符（4个）②static final ③可以调用外部类的属性、方法 * 3.2具体类的特点：①abstract ②还可以在其内部定义属性、方法、构造器 局部内部类： 关于内部类，掌握三点： 如何创建成员内部类的对象（如：创建Bird类和Dog类的对象） 如何区分调用外部类、内部类的变量(尤其是变量重名时) 局部内部类的使用 （见TestInnerClass1.java） 2. 类的初始化 (创建类的对象)3. 面向对象的三大特性面向对象编程的特征：封装性 继承性 多态性 （抽象性） 1. 封装性的思想：对象有明确的边界，对边界内部起保护作用通俗来说：尽可能的隐藏对象内部的实现细节，控制用户对对象的修改及访问权限 将类的属性私有化； 提供公共的方法（setter &amp; getter）来实现调用 四种权限都可以用来修饰属性、方法、构造器:2. 继承性的思想 ： 通过”class A extends B”类实现类的继承 继承一个已经存在的类时，就可以复用这个类的方法和字段，同时可以在新类中添加新的方法和字段。注意：构造方法不能继承！ 3. 多态性的思想 ：父类引用指向子类对象 对象的多态性：可以直接应用在抽象类和接口上有2中表现方式：①.重载，重写；②.子类对象的多态性使用的前提：①要有继承关系； ②要有方法的重写 格式：Person p = new Man();//向上转型 // 虚拟方法调用：通过父类的引用指向子类的对象实体，当调用方法时，实际执行的是子类重写父类的方法 p1.eat(); p1.walk(); // p1.entertainment(); 关于向下转型： ①向下转型,使用强转符：()②为了保证不报ClassCastException，在向下转型前，进行判断：instanceof instanceof一般使用于多态的时候，在代码中判断对象的引用类型具体为哪一种类型。返回结果是boolean类型的。 注意：1. instanceof关键字不能比较基本类型的数据； 2. 可以对对象和接口使用；3. 比较是基于多态的；4. 右边比较的类型只能为类和接口 // 若a是A类的实例，那么a也一定是A类的父类的实例。 if (p1 instanceof Woman) {//用法：对象的引用 instanceof 类或接口 System.out.println(&quot;hello!&quot;); Woman w1 = (Woman) p1; w1.shopping(); } if (p1 instanceof Man) { Man m1 = (Man) p1; m1.entertainment(); } 4. 重载和重写方法的重载（overload） 要求 ：同一个类中 2.方法名必须相同 3.方法的参数列表不同（①参数的个数不同②参数类型不同）补充 ：方法的重载与方法的返回值类型没有关系！ 方法的重写（override)子类用特殊的方法实现，替换掉父类继承给它的方法实现 【面试题】方法的重载与重写的区别？重载：“两同一不同”：同一个类，同一个方法名，不同的参数列表。 注：方法的重载与方法的返回值无关！构造器是可以重载的重写：（前提：在继承的基础之上，子类在获取了父类的结构以后，可以对父类中同名的方法进行“重构”）方法的返回值，方法名，形参列表形同；访问修饰符比父类 相同或者更宽；子类方法的异常类型不大于父类的；两个方法要同为static或同为非static。 5. this和superthis： 使用在类中，可以用来修饰属性、方法、构造器 表示当前对象或者是当前正在创建的对象 当形参与成员变量重名时，如果在方法内部需要使用成员变量，必须添加this来表明该变量时类成员 在任意方法内，如果使用当前类的成员变量或成员方法可以在其前面添加this，增强程序的阅读性 在构造器中使用“this(形参列表)”显式的调用本类中重载的其它的构造器 5.1 要求“this(形参列表)”要声明在构造器的首行！5.2 类中若存在n个构造器，那么最多有n-1构造器中使用了this。 super: super，相较于关键字this，可以修饰属性、方法、构造器 super修饰属性、方法：在子类的方法、构造器中，通过super.属性或者super.方法的形式，显式的调用父类的指定属性或方法。尤其是，当子类与父类有同名的属性、或方法时，调用父类中的结构的话，一定要用“super.” 通过“super(形参列表)”，显式的在子类的构造器中，调用父类指定的构造器！ 任何一个类(除Object类)的构造器的首行，要么显式的调用本类中重载的其它的构造器“this(形参列表)”或显式的调用父类中指定的构造器“super(形参列表)”,要么默认的调用父类空参的构造器”super()”建议在设计类时，提供一个空参的构造器！ 6. java的值传递机制1）方法的参数传递 形参：方法声明时，方法小括号内的参数 实参：调用方法时，实际传入的参数的值 2）规则：java中的参数传递机制：值传递机制 形参是基本数据类型的：将实参的值传递给形参的基本数据类型的变量 形参是引用数据类型的：将实参的引用类型变量的值（对应的堆空间的对象实体的首地址值）传递给形参的引用类型变量 案例1：基本数据类型的值传递 /** * 基本数据类型值传递 */ public class TestArgsTransfer { public static void main(String[] args) { TestArgsTransfer tt = new TestArgsTransfer(); int i = 10; int j = 5; System.out.println(&quot;i:&quot; + i + &quot; j:&quot; + j);//i : 10 j : 5 tt.swap(i, j);//将i的值传递给m，j的值传递给n System.out.println(&quot;i:&quot; + i + &quot; j:&quot; + j);//i : 10 j : 5 } //定义一个方法，交换两个变量的值 public void swap(int m,int n) { int temp = m; m = n; n = temp; System.out.println(&quot;m:&quot; + m + &quot; n:&quot; + n);//m:5 n:10 } } 控制台打印效果如下： 案例2：引用数据类型的值传递 /** * 引用数据类型值传递 */ public class TestArgsTransfer { public static void main(String[] args) { TestArgsTransfer tt = new TestArgsTransfer(); DataSwap ds = new DataSwap(); System.out.println(&quot;ds.i:&quot; + ds.i + &quot; ds.j:&quot; + ds.j); tt.swap(ds); System.out.println(&quot;ds：&quot;+ds); System.out.println(&quot;ds.i:&quot; + ds.i + &quot; ds.j:&quot; + ds.j); } //交换元素的值 public void swap(DataSwap d){ int temp = d.i; d.i = d.j; d.j = temp; System.out.println(&quot;交换元素的值:&quot;+d);//打印引用变量d的值 } } class DataSwap{ int i = 10; int j = 5; } 控制台打印效果如下： 7. 其它关键字1. abstract：抽象的，可以用来修饰类、方法 abstract修饰类：抽象类 1) 不可被实例化 2) 抽象类有构造器 (凡是类都有构造器) 3) 抽象方法所在的类，一定是抽象类。 4) 抽象类中可以没有抽象方法。5) 当我们设计一个类，不需要创建此类的实例时候，就可以考虑将其设置为抽象的，由其子类实现这个类的抽象方法以后，就行实例化 abstract修饰方法：抽象方法 1) 格式：没有方法体，包括{}.如：public abstract void eat();2) 抽象方法只保留方法的功能，而具体的执行，交给继承抽象类的子类，由子类重写此抽象方法。3) 若子类继承抽象类，并重写了所有的抽象方法，则此类是一个”实体类”,即可以实例化4) 若子类继承抽象类，没有重写所有的抽象方法，意味着此类中仍有抽象方法，则此类必须声明为抽象的！ 2. 接口（interface） : 是与类并行的一个概念 接口可以看做是一个特殊的抽象类。是常量与抽象方法的一个集合，不能包含变量、一般的方法。 接口是没有构造器的。 接口定义的就是一种功能。此功能可以被类所实现（implements）。比如：class CC extends DD implements AA 实现接口的类，必须要重写其中的所有的抽象方法，方可实例化。若没有重写所有的抽象方法，则此类仍为一个抽象类 类可以实现多个接口。—-java 中的类的继承是单继承的 接口与接口之间也是继承的关系，而且可以实现多继承 5,6描述的是java中的继承的特点。 接口与具体的实现类之间也存在多态性 3. static : 修饰属性（类变量）: 由类创建的所有的对象，都共用这一个属性 当其中一个对象对此属性进行修改，会导致其他对象对此属性的一个调用。vs 实例变量（非static修饰的属性，各个对象各自拥有一套副本） 类变量随着类的加载而加载的，而且独一份 静态的变量可以直接通过“类.类变量”的形式来调用 类变量的加载是要早于对象。所以当有对象以后，可以“对象.类变量”使用。但是”类.实例变量”是不行的。 类变量存在于静态域中。 static修饰方法（类方法）: 随着类的加载而加载，在内存中也是独一份 可以直接通过“类.类方法”的方式调用 内部可以调用静态的属性或静态的方法，而不能调用非静态的属性或方法。反之，非静态的方法是可以调用静态的属性或静态的方法 静态的方法内是不可以有this或super关键字的！注：静态的结构(static的属性、方法、代码块、内部类)的生命周期要早于非静态的结构，同时被回收也要晚于非静态的结构 4. final:最终的 ，可以用来修饰类、属性、方法 final修饰类：这个类就不能被继承。如：String类、StringBuffer类、System类 final修饰方法：不能被重写。如：Object类的getClass() final修饰属性：此属性就是一个常量，一旦初始化后，不可再被赋值。习惯上，常量用大写字符表示。此常量在哪里赋值：①此常量不能使用默认初始化 ②可以显式的赋值、代码块、构造器。变量用static final修饰：全局常量。比如：Math 类的PI]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java中GUI编程]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2Fjava%E4%B8%ADGUI%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[1. GUI编程介绍AWT(Abstract Window Toolkit)包括了很多类的接口，用于Java Application的GUI(Graphics User Interface图形用户界面)编程。 GUI编程主要包括： AWT与Swing； 如何创建图形界面； 布局管理器 2. 部分组件JTextField 单行文本框JTextArea 多行文本域JLabel 标签JComboBox 下拉列表JCheckBox 复选JRadioButton 单选JButton 按钮 3. java.awt包和java.swing包java.awt包是java内置的包，要使用该包中的类，则必须显式地声明语句：import java.awt.*。其中包括以下内容： 便于用户输入的一组丰富的界面组件； 将组件放置在适当位置的几种布局管理器； 事件处理模型； 图形和图像工具等等。 java.swing具有跨平台性。而且能绘制比AWT更丰富的图形界面。Swing包中控件类的体系结构:Swing是纯java组件，使所有的应用程序在不同的平台上运行时具有本机外观和相同的行为。java.Swing包包含了一系列Swing控件，如果要使用该包中的类，则必须显式地声明如下语句：import javax.swing.*;java.Swing包中控件类的体系结构: 4. 组件类与容器类组件（Component）：基本图形元素，如按钮，文本框，文本域，多选按钮，单选按钮等。容器(Container)：可以容纳组件的区域，在容器上可以添加别的组件。如：Frame,Window等。注意：容器中可以容纳组件，也可以容纳比它“容量级别小”的容器。 有两种类型的容器：Window和PanelWindow是能够独立存放的容器，Window得子类有Frame和最常用的窗体Dialog。对话框Panel不能单独存在，必须放入Window或其子类中 5. Swing GUI框架 1）顶层容器： JFrame：用于框架窗口的类，此窗口带有边框、标题、用于关闭和最小化窗口的图标等。带GUI的应用程序通常至少使用一个框架窗口。 JDialog：用于对话框的类。 JApplet：用于使用Swing组件的java.Applet的类(在Java Applet中，可以实现图形绘制、字体和颜色控制、动画和声音的插入、人机交互及网络交流等功能.Applet还提供各种名为抽象窗口工具箱 ) 1）中间容器： JPanel：最灵活、最常用的中间容器。 JScrollPane：与JPanel类似，但还可在大的组件或可扩展组件周围提供滚动条。 JTablePane：包含多个组件，但一次只显示一个组件。用户可在组件之间方便地切换。 JToolBar：按行或列排列一组组件（通常是按钮） 6. Java.Swing.JFrameJFrame常用方法： 7. JPanel容器 JPanel是最简单的容器类。应用程序可以将其他组件放在面板提供的空间内。 JPanel只能存在于其他的容器（Window或其子类）中，一般被放在JFrame中。 JFrame可以被划分为若干个JPanel，然后在JPanel上进一步进行组件的布局 面板的默认布局管理器是FlowLayout布局管理器 不能为JPanel设置标题 java.Swing.JPanel的常用方法 8. 布局管理器 布局管理器作用：决定组件在容器上如何摆放； 决定组件的大小；Frame的默认布局管理器是BorderLayout;JAVA中常用的布局： FlowLayout（流式布局） BorderLayout（边框布局） GridLayout（网格布局） GridBagLayout（网格包布局） CardLayout （卡片布局）]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java反射机制总结]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2Fjava%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[反射：通过class文件的对象，来获取构造函数，字段，方法的操作。 类对象：类加载的产物，封装了类的信息(类名，父类，接口，属性，方法) 框架开发原理：反射机制 + XML解析 学习反射的目的：有些时候，JDK中的方法没有在帮助文档中提供，但是通过查看源码，却发现有这个 方法，如果必须要用这个方法，就可以通过反射的方法来获取，进行使用。 反射应用场景： Jdbc加载驱动； Spring IOC 框架； 动态代理模式：详情可点击：代理模式详解 (附java语言源码) 获取类对象：有3种方式 通过 类名.class属性 获取类对象(每个类都有class属性)。 通过类得对象，获取类对象(通过getClass()获得)。 通过 class.forName(&quot;类得权限定名&quot;) ，获取类对象。 比如我们有一个Person类： public class Person { } public class TestPeopleReflect { public static void main(String[] args)throws ClassNotFoundException{ //那么这个person，就是Person类的实例对象 Person person = new Person(); //第一种，任何一个类都有一个隐含的静态成员变量class Class c1 = Person.class; System.out.println(c1); //第二种，已经知道该类的对象，通过getClass()获得 Class c2 = person.getClass(); System.out.println(c2); //第三种，Class类的forName()方法,得抛出ClassNotFoundException Class c3 = Class.forName(&quot;thread.Person&quot;); System.out.println(c3); //这里，c1,c2,c3都是Class类的实例，我们称c1, c2 ,c3为Person类的类类型 //不难看出，c1 == c2结果是true, c2 == c3结果也是true } } 控制台打印结果如下图所示：通过类的类类型，我们经常会用到的方法就是newInstance()方法，通过该方法可以创建该类的实例。 编译时刻加载类称为静态加载，使用new方法新建实例即为静态加载类运行时刻加载类称为动态加载 案例：利用反射，在泛型为int的arryaList集合中存放一个String类型的对象原理：集合中的泛型只在编译器有效，而到了运行期，泛型则会失效， import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; import java.util.ArrayList; public class TestReflect { public static void main(String[] args) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException { ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(); list.add(5); list.add(7); //list.add(&quot;ddd&quot;);在编译期，泛型生效，插入字符串对象，会报错 Class c = list.getClass(); Method method = c.getMethod(&quot;add&quot;, Object.class); method.invoke(list,&quot;ddd&quot;); System.out.println(method); System.out.println(list); } } 控制台打印结果如下：]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java网络编程总结]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2Fjava%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[包括网络模型的对比，常见网络协议如TCP，UDP，HTTP的介绍，Socket编程及案例 1. OSI 和 TCP/IP模型对比OSI : 为了促进计算机网络的发展，国际标准化组织ISO于1977年成立了一个委员会，在现有网络的基础上，提出了不基于具体机型、操作系统或公司的网络体系结构，称为开放系统互连参考模型，即OSI/RM (Open System Interconnection Reference Model)。OSI模型把网络通信的工作分为7层，分别是物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。 物理层：物理层处于OSI的最底层，是整个开放系统的基础。物理层涉及通信信道上传输的原始比特流(bits)，它的功能主要是为数据端设备提供传送数据的通路以及传输数据。 数据链路层：数据链路层的主要任务是实现计算机网络中相邻节点之间的可靠传输，把原始的、有差错的物理传输线路加上数据链路协议以后，构成逻辑上可靠的数据链路。需要完成的功能有链路管理、成帧、差错控制以及流量控制等。其中成帧是对物理层的原始比特流进行界定，数据链路层也能够对帧的丢失进行处理。 网络层：网络层涉及源主机节点到目的主机节点之间可靠的网络传输，它需要完成的功能主要包括路由选择、网络寻址、流量控制、拥塞控制、网络互连等。 传输层：传输层起着承上启下的作用，涉及源端节点到目的端节点之间可靠的信息传输。传输层需要解决跨越网络连接的建立和释放，对底层不可靠的网络，建立连接时需要三次握手，释放连接时需要四次挥手。 会话层：会话层的主要功能是负责应用程序之间建立、维持和中断会话，同时也提供对设备和结点之间的会话控制，协调系统和服务之间的交流，并通过提供单工、半双工和全双工3种不同的通信方式，使系统和服务之间有序地进行通信。 表示层：表示层关心所传输数据信息的格式定义，其主要功能是把应用层提供的信息变换为能够共同理解的形式，提供字符代码、数据格式、控制信息格式、加密等的统一表示。 应用层：应用层为OSI的最高层，是直接为应用进程提供服务的。其作用是在实现多个系统应用进程相互通信的同时，完成一系列业务处理所需的服务。 TCP/IP，即Transmission Control Protocol/Internet Protocol的简写，中译名为传输控制协议/因特网互联协议，是Internet最基本的协议、Internet国际互联网络的基础。TCP/IP参考模型采用4层的层级结构，每一层都呼叫它的下一层所提供的协议来完成自己的需求，这4个层次分别是：网络接口层、互联网层(IP层)、传输层(TCP层)、应用层。 网络接口层：TCP/IP协议对网络接口层没有给出具体的描述，网络接口层对应着物理层和数据链路层。 互联网层(IP层)：互联网层是整个TCP/IP协议栈的核心。它的功能是把分组发往目标网络或主机。同时，为了尽快地发送分组，可能需要沿不同的路径同时进行分组传递。因此，分组到达的顺序和发送的顺序可能不同，这就需要上层必须对分组进行排序。互联网层除了需要完成路由的功能外，也可以完成将不同类型的网络（异构网）互连的任务。除此之外，互联网层还需要完成拥塞控制的功能。 传输层(TCP层)：TCP层负责在应用进程之间建立端到端的连接和可靠通信，它只存在与端节点中。TCP层涉及两个协议，TCP和UDP。其中，TCP协议提供面向连接的服务，提供按字节流的有序、可靠传输，可以实现连接管理、差错控制、流量控制、拥塞控制等。UDP协议提供无连接的服务，用于不需要或无法实现面向连接的网络应用中。 应用层：应用层为Internet中的各种网络应用提供服务。 IP地址（Internet Protocol）：唯一标识网络上的每一台计算机IP地址的组成：32位，由4个8位二进制数组成IP地址 = 网络地址(标识计算机或网络设备所在的网段) +主机地址(标识特定主机或网络设备) 2. 常见网络协议下面这张图可以看出TCP/IP协议簇中不同的层次中有着很多不同的网络协议，下面主要介绍传输层的TCP、UDP协议和应用层的HTTP协议。 1）TCP协议TCP（Transmission Control Protocol ，传输控制协议）是面向连接的传输层协议。TCP层是位于IP层之上，应用层之下的中间层。不同主机的应用层之间经常需要可靠的、像管道一样的连接，但是IP层不提供这样的流机制，而是提供不可靠的包交换。TCP协议采用字节流传输数据。TCP报文段包括协议首部和数据两部分，协议首部的固定部分有20个字节，首部的固定部分后面是选项部分。下面是报文段首部各个字段的含义： 源端口号以及目的端口号，各占2个字节，端口是传输层和应用层的服务接口，用于寻找发送端和接收端的进程，一般来讲，通过端口号和IP地址，可以唯一确定一个TCP连接，在网络编程中，通常被称为一个socket接口。 序号，占4字节，用来标识从TCP发送端向TCP接收端发送的数据字节流。 确认序号，占4字节，包含发送确认的一端所期望收到的下一个序号，因此，确认序号应该是上次已经成功收到数据字节序号加1. 数据偏移，占4位，用于指出TCP首部长度，若不存在选项，则这个值为20字节，数据偏移的最大值为60字节。 保留字段占6位，暂时可忽略，值全为0。 标志位URG（紧急） : 为1时表明紧急指针字段有效ACK（确认）：为1时表明确认号字段有效PSH（推送）：为1时接收方应尽快将这个报文段交给应用层RST（复位）：为1时表明TCP连接出现故障必须重建连接SYN（同步）：在连接建立时用来同步序号FIN （终止）： 为1时表明发送端数据发送完毕要求释放连接 接收窗口占2个字节，用于流量控制和拥塞控制，表示当前接收缓冲区的大小。在计算机网络中，通常是用接收方的接收能力的大小来控制发送方的数据发送量。TCP连接的一端根据缓冲区大小确定自己的接收窗口值，告诉对方，使对方可以确定发送数据的字节数。 校验和占2个字节，范围包括首部和数据两部分。 选项是可选的，默认情况是不选。 三次握手与四次挥手： TCP是面向连接的协议，因此每个TCP连接都有3个阶段：连接建立、数据传送和连接释放。连接建立经历三个步骤，通常称为“三次握手”。TCP三次握手过程如下： 第一次握手：客户机发送连接请求报文段到服务器，并进入SYN_SENT状态，等待服务器确认。（SYN = 1,seq=x） 第二次握手：服务器收到连接请求报文，如果同意建立连接，向客户机发回确认报文段，并为该TCP连接分配TCP缓存和变量。(SYN=1,ACK=1,seq=y,ack=x+1)。 第三次握手：客户机收到服务器的确认报文段后，向服务器给出确认报文段，并且也要给该连接分配缓存和变量。此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。(ACK=1,seq=x+1,ack=y+1)。 TCP四次挥手过程如下：由于TCP连接是全双工的，因此每个方向都必须单独进行关闭。这原则是当一方完成它的数据发送任务后就能发送一个FIN来终止这个方向的连接。收到一个 FIN只意味着这一方向上没有数据流动，一个TCP连接在收到一个FIN后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。 TCP客户端发送一个FIN，用来关闭客户到服务器的数据传送。 服务器收到这个FIN，它发回一个ACK，确认序号为收到的序号加1。和SYN一样，一个FIN将占用一个序号。 服务器关闭客户端的连接，发送一个FIN给客户端。 客户端发回ACK报文确认，并将确认序号设置为收到序号加1。 2）UDP协议UDP，用户数据报协议，英文全称是User Datagram Protocol，它是TCP/IP协议簇中无连接的运输层协议。UDP协议的格式如下图所示：UDP协议十分简单，它由两部分组成：首部和数据。其中，首部仅有8个字节，包括源端口和目的端口，长度（UDP用于数据报的长度）、校验和。 3）HTTP协议HTTP，超文本传输协议，英文全称是Hypertext Transfer Protocol，它是互联网上应用最为广泛的一种网络协议。HTTP是一种应用层协议，它是基于TCP协议之上的请求/响应式的协议，即一个客户端与服务器建立连接后，向服务器发送一个请求；服务器接到请求后，给予相应的响应信息。HTTP协议默认的端口号为80. HTTP协议是基于TCP协议之上的请求/响应式协议，下面主要介绍HTTP报文的格式，HTTP报文主要有请求报文和响应报文两种。首先看请求报文的格式：HTTP请求报文由请求行、首部行和实体主体组成，由浏览器发送给服务器。上面这张图中SP表示空格，cr lf表示回车和换行。 HTTP响应报文格式：上面这张图是HTTP响应报文，它由状态行、首部行和实体主体组成。下面两张图是在谷歌浏览器内访问服务器查看的HTTP请求和响应。HTTP请求方法和响应状态码：在上面的HTTP请求报文例子中，我们可以看到请求方法是GET，这表示请求读取由URL所标志的信息，除了GET，还有其它几种常用的方法。在HTTP响应报文的例子中，我们可以看到状态码是200，表示响应成功。下表是其它状态码，总共5大类，33种。HTTP请求的GET方法和POST方法的区别？GET和POST是HTTP请求的两种方法，主要区别在于GET方法是请求读取由URL所标志的信息，POST是给服务器添加信息 HTTPS和HTTP的区别HTTPS（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。HTTPS和HTTP的区别主要为以下四点： 1、https协议需要到ca申请证书，一般免费证书很少，需要交费。 2、http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。 3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。 4、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。 3. Java网络编程Socket编程：Java的网络编程主要涉及到的内容是Socket编程，Socket，套接字，就是两台主机之间逻辑连接的端点。TPC/IP协议是传输层协议，主要解决数据如何在网络中传输，而HTTP是应用层协议，主要解决如何包装数据。Socket，本质上就是一组接口，是对TCP/IP协议的封装和应用(程序员层面上)。整体流程：Socket编程主要涉及到客户端和服务器端两个方面，首先是在服务器端创建一个服务器套接字(ServerSocket)，并把它附加到一个端口上，服务器从这个端口监听连接。端口号的范围是0到65536，但是0到1024是为特权服务保留的端口号，我们可以选择任意一个当前没有被其他进程使用的端口。客户端请求与服务器进行连接的时候，根据服务器的域名或者IP地址，加上端口号，打开一个套接字。当服务器接受连接后，服务器和客户端之间的通信就像输入输出流一样进行操作。下面是一个客户端和服务器端进行数据交互的简单例子，通过这个例子可以初步对Socket编程有个把握。 /** * 服务器端 */ public class Server { public static void main(String[] args) throws IOException { try { //创建一个Socket,接收客户端请求,监听5000 ServerSocket serverSocket = new ServerSocket(5000); System.out.println(&quot;服务器启动成功，等待用户接入…&quot;); //使用accept()侦听并接收到此ServerSocket的连接 Socket socket = serverSocket.accept();//侦听到之前都是阻塞的 System.out.println(&quot;有客户端接入，客户IP：&quot; + socket.getInetAddress()); // 从客户端生成网络输入流，用于接收来自网络的数据 InputStream is = socket.getInputStream(); // BufferedReader读取字符流 BufferedReader br = new BufferedReader(new InputStreamReader(is)); String info; // BufferedReader的方法可以一行一行的读 while((info = br.readLine())!=null){ System.out.println(&quot;客户端：&quot;+info); } //给客户端一个响应 String reply = &quot;欢迎登陆&quot;; //通过输出流将响应发送回给客户端 OutputStream os = socket.getOutputStream(); os.write(reply.getBytes()); //释放相应资源 os.close(); br.close(); is.close(); socket.close(); serverSocket.close(); } catch (IOException e) { e.printStackTrace(); } } } /** * 客户端 */ public class Client { public static void main(String[] args) throws IOException { //创建一个客户端的Socket try { Socket socket = new Socket(&quot;localhost&quot;,5000); System.out.println(&quot;连接服务器成功&quot;); //通过输出流发送请求 //直接输出数据流 String info = &quot;用户名：张三；密码：123456&quot;; // 从客户端生成网络输出流，用来把数据发送到网络上 OutputStream os = socket.getOutputStream(); //打散成数据数组 byte[] infos = info.getBytes(); os.write(infos); //关闭输出流，这是一个半关闭 socket.shutdownOutput(); //通过输入流接收服务器给我的响应 InputStream is = socket.getInputStream(); BufferedReader br = new BufferedReader(new InputStreamReader(is)); String reply; while((reply = br.readLine())!=null){ System.out.println(&quot;服务器：&quot;+reply); } //释放资源 os.close(); socket.close(); } catch (UnknownHostException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } } } 先启动服务器端，再启动客户端，测试代码如下图所示：下面以一个例子介绍：实现服务器和客户端的多线程连接；并且服务器和客户端可以无限对话。 import java.io.*; import java.net.*; import java.util.Scanner; /** * 接收客户请求，基于客户一个响应:线程构造方法中去绑定客户端的Socket */ public class LogicThread extends Thread { private Socket socket; public LogicThread(Socket socket){ this.socket=socket; } //接收客户请求，基于客户一个响应 public void run(){ InputStream is=null; BufferedReader br=null; PrintWriter pw=null; OutputStream os=null; try{ Scanner input = new Scanner(System.in); //获得输入流，获得用户的请求 while(true){ is= socket.getInputStream(); br = new BufferedReader(new InputStreamReader(is)); System.out.println(socket.getInetAddress()+&quot;说:&quot;+br.readLine()); //给客户端一个响应 //通过输出流将响应发送回给客户端 String reply =input.next(); os = socket.getOutputStream(); pw = new PrintWriter(os); pw.println(reply); pw.flush(); } //释放相应资源 }catch (IOException e) { e.printStackTrace(); }finally { try{ pw.close(); os.close(); br.close(); is.close(); } catch (IOException e) { e.printStackTrace(); } } } } import java.io.*; import java.net.*; /** * 监听客户请求:一旦监听到有客户请求，立即创建一个线程，开启线程 */ public class LogicServicer { public static void main(String[] args) { try { //接收客户端请求 //创建一个Socket ServerSocket serverSocket = new ServerSocket(8848); System.out.println(&quot;服务器已启动...&quot;); //使用accept()侦听并接收到此ServerSocket的连接 //一直监听客户请求 while(true){ Socket socket = serverSocket.accept();//侦听到之前都是阻塞的 System.out.println(&quot;已连接&quot;); //创建一个和该客户端响应的线程 LogicThread logicThread = new LogicThread(socket); logicThread.start(); } } catch (IOException e) { e.printStackTrace(); } } } import java.io.*; import java.net.*; import java.util.Scanner; /** * 客户端：发送请求到服务器，接收服务器的响应 */ public class LogicClient { public static void main(String[] args) { Scanner input = new Scanner(System.in); OutputStream os=null; PrintWriter pw=null; InputStream is=null; BufferedReader br=null; //创建一个客户端的Socket try { Socket socket = new Socket(&quot;localhost&quot;,8848); System.out.println(&quot;客户端已启动&quot;); //通过输出流发送请求 while(true){ String info =input.next(); os = socket.getOutputStream(); pw = new PrintWriter(os); pw.println(info); pw.flush(); //通过输入流接收服务器给我的响应 is = socket.getInputStream(); br = new BufferedReader(new InputStreamReader(is)); System.out.println(&quot;服务器：&quot;+br.readLine()); } //释放资源 } catch (UnknownHostException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); }finally{ try { os.close(); pw.close(); br.close(); is.close(); } catch (IOException e) { e.printStackTrace(); } } } } 先启动服务器，再启动客户端，客户端和服务器对话结果如下图所示：]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用java实现4种加密解密算法]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E7%AE%97%E6%B3%95%2F%E7%94%A8java%E5%AE%9E%E7%8E%B04%E7%A7%8D%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[案例1： 换位加密解密算法import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class demo { static char[] jiami(char[] str, int n) //加密算法 { int i, j, k, d; int len; char[] temp, miwen, mtemp = {}; len = str.length; //字符串长度 if ((d = len % n) != 0) { len = len + n - d; } if ((temp = new char[len + 1]) == null) //申请内存 { System.out.print(&quot;申请内存失败!\n&quot;); System.exit(1); } if ((miwen = new char[len + 1]) == null) //申请内存 { System.out.print(&quot;申请内存失败!\n&quot;); System.exit(1); } else { mtemp = miwen; } System.arraycopy(str, 0, temp, 0, str.length); for (i = str.length; i &lt; len; i++) { temp[i] = 32; } temp[len] = &#39;\0&#39;; i = 0; for (k = 0; k &lt; n; k++) //转换，加密 { for (j = 0; j &lt; len / n; j++) { mtemp[i] = temp[k + j * n]; i++; } } mtemp[i] = &#39;\0&#39;; temp = null; return miwen; //返回密文 } static char[] jiemi(char[] str, int n) //解密算法 { int i, j, k = 0, d; int len; char[] temp, mingwen, mtemp = {}; len = str.length; if ((d = len % n) != 0) { len = len - d; } n = len / n; if ((temp = new char[len + 1]) == null) //申请内存 { System.out.print(&quot;申请内存失败!\n&quot;); System.exit(1); } if ((mingwen = new char[len + 1]) == null) //申请内存 { System.out.print(&quot;申请内存失败!\n&quot;); System.exit(1); } else { mtemp = mingwen; } System.arraycopy(str, 0, temp, 0, str.length); for (i = str.length; i &lt; len; i++) { temp[i] = 32; } temp[len] = &#39;\0&#39;; i = 0; for (k = 0; k &lt; n; k++) //恢复出明文 { for (j = 0; j &lt; len / n; j++) { mtemp[i] = temp[k + j * n]; i++; } } while (mtemp[--i] == 32) ; i++; mtemp[i] = &#39;\0&#39;; return mingwen; //返回明文 } public static void main(String[] args) throws IOException { int n, i; char[] srcstr = new char[100]; char[] miwen; String go; System.out.print(&quot;换位加密解密算法演示！\n&quot;); do { System.out.print(&quot;\n请先输入换位加密矩阵每行的字符数：&quot;); Scanner input = new Scanner(System.in); n = input.nextInt(); //输入换位加密矩阵每行的字符数 System.out.println(&quot;请输入明文：&quot;); //输入明文字符串 BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in)); String str = bufferedReader.readLine(); srcstr = str.toCharArray(); System.out.print(&quot;输入的明文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(srcstr[i]); } miwen = jiami(srcstr, n); //加密 System.out.print(&quot;\n加密后的密文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(miwen[i]); } miwen = jiemi(miwen, n); //解密 System.out.print(&quot;\n解密出的明文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(miwen[i]); } System.out.print(&quot;\n继续执行(y/n)?&quot;); go = input.next(); } while (go.equalsIgnoreCase(&quot;y&quot;)); System.out.println(&quot;演示结束！&quot;); } } 案例2： 替换加密解密算法 import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; public class demo { static char[] jiami(char[] str, int n) //加密算法 { int i, len; char[] miwen; len = str.length; if ((miwen = new char[len + 1]) == null) //申请内存 { System.out.print(&quot;申请内存失败!\n&quot;); System.exit(1); } for (i = 0; i &lt; len; i++) //移位替换 { miwen[i] = (char) (str[i] + n); } miwen[len] = &#39;\0&#39;; return miwen; } static char[] jiemi(char[] str, int n) //解密算法 { int i, len; char[] mingwen; len = str.length; if ((mingwen = new char[len + 1]) == null)//申请内存 { System.out.print(&quot;申请内存失败!\n&quot;); System.exit(1); } for (i = 0; i &lt; len; i++) //移位替换 { mingwen[i] = (char) (str[i] - n); } mingwen[len] = &#39;\0&#39;; return mingwen; } public static void main(String[] args) throws IOException { int i, n; char[] srcstr = new char[100]; char[] miwen; String go; System.out.print(&quot;替换加密解密算法演示！\n&quot;); do { System.out.print(&quot;\n请先输入替换加密解密算法中的密钥：&quot;); Scanner input = new Scanner(System.in); n = input.nextInt(); //密钥 System.out.print(&quot;请输入明文字符串：&quot;); BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in)); String str = bufferedReader.readLine(); srcstr = str.toCharArray(); //明文字符串 System.out.print(&quot;输入的明文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(srcstr[i]); } miwen = jiami(srcstr, n); //加密 System.out.print(&quot;\n加密后的密文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(miwen[i]); } miwen = jiemi(miwen, n); //解密 System.out.print(&quot;\n解密出的明文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(miwen[i]); } System.out.print(&quot;\n继续执行(y/n)?&quot;); go = input.next(); } while (go.equalsIgnoreCase(&quot;y&quot;)); System.out.println(&quot;演示结束！&quot;); } } 执行结果如下： 案例3：位加密解密算法import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; public class demo { static char[] bitcode(char[] str, char n) //位加密解密算法 { int i, len; char[] wen; len = str.length; if ((wen = new char[len + 1]) == null) { System.out.print(&quot;申请内存失败!\n&quot;); System.exit(1); } for (i = 0; i &lt; len; i++) { wen[i] = (char) (str[i] ^ n); //异或运算 } wen[len] = &#39;\0&#39;; return wen; } public static void main(String[] args) throws IOException { int i; char ch; char[] srcstr = new char[100]; char[] miwen; String go; System.out.print(&quot;位加密解密算法演示！\n&quot;); do { System.out.print(&quot;\n请先输入替换加密解密算法中的密钥：&quot;); Scanner input = new Scanner(System.in); ch = input.next().charAt(0); //密钥 System.out.print(&quot;请输入明文字符串：&quot;); BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in)); String str = bufferedReader.readLine(); srcstr = str.toCharArray(); //明文字符串 System.out.print(&quot;输入的明文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(srcstr[i]); } miwen = bitcode(srcstr, ch); //加密 System.out.print(&quot;\n加密后的密文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(miwen[i]); } miwen = bitcode(miwen, ch); //解密 System.out.print(&quot;\n解密出的明文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) { System.out.print(miwen[i]); } System.out.print(&quot;\n继续执行(y/n)?&quot;); go = input.next(); } while (go.equalsIgnoreCase(&quot;y&quot;)); System.out.println(&quot;演示结束！&quot;); } } 执行结果如下： 案例4： 一次一密加密算法import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Random; import java.util.Scanner; public class demo { static int MAX = 100; static char[] key = new char[MAX]; //用于保存密钥 static int len; static char[] bitcode(char[] str) //一次一密加密算法 { int i; char[] wen; if ((wen = new char[len + 1]) == null) { System.out.printf(&quot;申请内存失败!\n&quot;); System.exit(1); } for (i = 0; i &lt; len; i++) { wen[i] = (char) (str[i] ^ key[i]); //异或运算 } wen[len] = &#39;\0&#39;; return wen; } public static void main(String[] args) throws IOException { int i; char[] srcstr = new char[MAX]; char[] miwen, mingwen; String go; Scanner input = new Scanner(System.in); // srand(time(NULL)); //随机种子 System.out.printf(&quot;一次一密加密解密算法演示！\n&quot;); do { System.out.printf(&quot;请输入明文字符串：&quot;); BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in)); String str = bufferedReader.readLine(); srcstr = str.toCharArray(); //明文信息 Random r = new Random(); //随机种子 len = srcstr.length; for (i = 0; i &lt; len; i++) { key[i] = (char) (r.nextInt(10) + &#39;0&#39;); //产生密钥序列 } System.out.printf(&quot;此次加密解密演示的密钥序列为：&quot;); for (i = 0; i &lt; len; i++) { System.out.printf(&quot;%c&quot;, key[i]); } // System.out.printf(&quot;\n&quot;); miwen = bitcode(srcstr); //加密 System.out.printf(&quot;\n输入的明文为：&quot;); for (i = 0; i &lt; srcstr.length; i++) System.out.print(srcstr[i]); System.out.printf(&quot;\n加密后的密文为：&quot;); for (i = 0; i &lt; miwen.length; i++) System.out.print(miwen[i]); mingwen = bitcode(miwen); //解密 System.out.printf(&quot;\n解密出的明文为：&quot;); for (i = 0; i &lt; mingwen.length; i++) System.out.print(mingwen[i]); System.out.print(&quot;\n\n继续执行(y/n)?&quot;); go = input.next(); } while (go.equalsIgnoreCase(&quot;y&quot;)); System.out.println(&quot;演示结束！&quot;); } } 执行结果如下：]]></content>
      <categories>
        <category>java</category>
        <category>java算法</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java中的多线程总结]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2FJava%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[1. 进程（Process）：进程是系统中独立存在的实体，拥有自己独立的资源，拥有自己私有的地址空间。进程的实质，就是程序在多道程序系统中的一次执行过程，它是动态产生，动态消亡的，具有自己的生命周期和各种不同的状态。进程具有并发性，它可以同其他进程一起并发执行，按各自独立的、不可预知的速度向前推进。 描述进程的有一句话非常经典——进程是系统进行资源分配和调度的一个独立单位。（注意，并发性（concurrency）和并行性（parallel）是不同的。并行指的是同一时刻，多个指令在多台处理器上同时运行。并发指的是同一时刻只能有一条指令执行，但多个进程指令被被快速轮换执行，看起来就好像多个指令同时执行一样。）进程由 程序 、 数据 和 进程控制块 三部分组成。 2. 线程：有时被称为轻量级进程(Lightweight Process，LWP），是程序执行流的最小单元，是CPU调度和分派的基本单位，可完成一个独立的顺序控制流程。线程是进程中的一个实体，是被系统独立调度和分派的基本单位，线程自己不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程的其它线程共享进程所拥有的全部资源。 什么是多线程：如果在一个进程中同时运行了多个线程，用来完成不同的工作，则称之为“多线程”。多个线程交替占用CPU资源，而非真正的并行执行。 多线程的好处： 充分利用CPU的资源； 简化编程模型； 带来良好的用户体验 3. 在Java中创建线程的方式一、继承java.lang.Thread类：编写简单，可直接操作线程，适用于单继承 定义MyThread类继承Thread类； 重写run()方法，编写线程执行体； 创建线程对象，调用start()方法启动线程 public class TestThread extends Thread { @Override public void run() { //run()方法中编写线程执行的代码 for(int i=0;i&lt;10;i++) { System.out.println(Thread.currentThread().getName()+&quot;:&quot;+i); } } public static void main(String[] args) { TestThread thread = new TestThread(); //thread.start()：启动线程调用了父类的start方法 thread.start(); } } 执行结果如下： 二、实现java.lang.Runnable接口(推荐)：避免单继承局限性，便于共享资源 定义MyRunnable类实现Runnable接口； 实现run()方法，编写线程执行体； 创建线程对象，调用start()方法启动线程 public class TestThread implements Runnable { @Override public void run() { //run()方法中编写线程执行的代码 for(int i=0;i&lt;10;i++) { System.out.println(Thread.currentThread().getName()+&quot;:&quot;+i); } } public static void main(String[] args) { TestThread myRunnable = new TestThread(); Thread myThread = new Thread(myRunnable);//创建线程对象 myThread.start(); //启动线程 } } 执行结果同上。 三、实现Callable接口Runnable接口中的run()方法的返回值是void，它做的事情只是纯粹地去执行run()方法中的代码而已；Callable接口中的call()方法是有返回值的，是一个泛型，和Future、FutureTask配合可以用来获取异步执行的结果。 4. 线程的状态： 线程共包括以下5种状态： 新建状态(New) : 线程对象被创建后，就进入了新建状态。此时它和其他Java对象一样，仅仅由Java虚拟机分配了内存，并初始化其成员变量值。 就绪状态(Runnable): 也被称为“可执行状态”。线程对象被调用了该对象的start()方法，该线程处于就绪状态。Java虚拟机会为其创建方法调用栈和程序计数器。处于就绪状态的线程，随时可能被CPU调度执行，取决于JVM中线程调度器的调度。 运行状态(Running) : 线程获取CPU权限进行执行。需要注意的是，线程只能从就绪状态进入到运行状态。 阻塞状态(Blocked) : 阻塞状态是线程因为某种原因放弃CPU使用权，暂时停止运行。直到线程进入就绪状态，才有机会转到运行状态。阻塞的情况分三种： &gt; (01) 等待阻塞 -- 通过调用线程的wait()方法，让线程等待某工作的完成。 &gt; (02) 同步阻塞 -- 线程在获取synchronized同步锁失败(因为锁被其它线程所占用)，它会进入同步阻塞状态。 &gt; (03) 其他阻塞 -- 通过调用线程的sleep()或join()或发出了I/O请求时，线程会进入到阻塞状态。当sleep()状态超时、join()等待线程终止或者超时、或者I/O处理完毕时，线程重新转入就绪状态。 死亡状态(Dead) : 线程执行完了、因异常退出了run()方法或者直接调用该线程的stop()方法（容易导致死锁，现在已经不推荐使用），该线程结束生命周期。 线程调度 ： 指按照特定机制为多个线程分配CPU的使用权 5. wait()、notify()、nofityAll()方法 在Object.java中，定义了wait(), notify()和notifyAll()等方法。 wait()：作用是让“当前线程”等待（会释放锁），而“当前线程”是指正在cpu上运行的线程！ notify()和notifyAll()的作用，则是唤醒当前对象上的等待线程；notify()是唤醒单个线程，而notifyAll()是唤醒所有的线程。 Object类中关于等待/唤醒的API详细信息如下： notify() ： 唤醒在此对象监视器上等待的单个线程，使其进入“就绪状态”。 notifyAll()： 唤醒在此对象监视器上等待的所有线程，使其进入“就绪状态”。 wait() ：让当前线程处于“等待(阻塞)状态”。 wait(long timeout) ： 让当前线程处于“等待(阻塞)状态”。wait(long timeout, int nanos) ： 让当前线程处于“等待(阻塞)状态”。 6. yield()、sleep()、join()和interrupt()方法 yield() ：是Thread类的静态方法。它能让当前线程暂停，但不会阻塞该线程，而是由“运行状态”进入到“就绪状态”，从而让 其它具有相同优先级的等待线程获取执行权；但是，并不能保证在当前线程调用yield()之后，其它具有相同优先级的线程就一定能获得执行权；也有可能是 当前线程又进入到“运行状态”继续运行！值得注意的是，yield()方法不会释放锁。 sleep()是Thread类的静态方法。该方法声明抛出了InterrupedException异常。所以使用时，要么捕捉，要么声明抛出。sleep() 的作用是让当前线程休眠，即当前线程会从“运行状态”进入到“休眠(阻塞)状态”。sleep()会指定休眠时间，线程休眠的时间会大于/等于该休眠时间；在线程重新被唤醒时，它会由“阻塞状态”变成“就绪状态”，从而等待cpu的调度执行。常用来暂停程序的运行。同时注意，sleep()方法不会释放锁。 sleep()有2种重载方式： //让当前正在执行的线程暂停millis毫秒，并进入阻塞状态， //该方法受到系统计时器和线程调度器的精度和准度的影响。 static void sleep(long millis) : //让当前正在执行的线程暂停millis毫秒加nanos微秒，并进入阻塞状态， //该方法受到系统计时器和线程调度器的精度和准度的影响。 static void sleep(long millis , int nanos) ： join() 是Thread的一个实例方法。表示，当某个程序执行流中调用其他线程的join方法时，调用线程将被阻塞，直到被join的线程执行完毕.即当前线程内，用某个线程对象调用join()后，会使当前线程等待，直到该线程对象的线程运行完毕，原线程才会继续运行。 join()有3种重载的形式： join(): 等待被join的线程执行完成; join(long millis)： 等待被join的线程的时间最长为millis毫秒，若在millis毫秒内，被join的线程还未执行结束，则不等待。 join(long millis , int nanos): 等待被join的线程的时间最长为millis毫秒加nanos微秒，若在此时间内，被join的线程还未执行结束，则不等待。 interrupt(): interrupt()是Thread类的一个实例方法，用于中断本线程。这个方法被调用时，会立即将线程的中断标志设置为“true”。所以当中断处于“阻塞状态”的线程时，由于处于阻塞状态，中断标记会被设置为“false”，抛出一个 InterruptedException。所以我们在线程的循环外捕获这个异常，就可以退出线程了。 7. Synchronized关键字和Volatile关键字Synchronized关键字 ： 在java中，每一个对象有且仅有一个同步锁。这也意味着，同步锁是依赖于对象而存在。当当前线程调用某对象的synchronized方法时，就获取了该对象的同步锁。例如，synchronized(obj)，当前线程就获取了“obj这个对象”的同步锁。不同线程对同步锁的访问是互斥的。 实例锁 : 锁在某一个实例对象上。如果该类是单例，那么该锁也具有全局锁的概念。实例锁对应的就是synchronized关键字。全局锁 : 该锁针对的是类，无论实例多少个对象，那么线程都共享该锁。全局锁对应的就是static synchronized（或者是锁在该类的class或者classloader对象上）。 就是说，一个非静态方法上的synchronized关键字，代表该方法依赖其所属对象。一个静态方法上synchronized关键字，代表该方法依赖这个类本身。 Volatile关键字 ：volatile关键字的作用主要有两个：（1）多线程主要围绕可见性和原子性两个特性而展开，使用volatile关键字修饰的变量，保证了其在多线程之间的可见性，即每次读取到volatile变量，一定是最新的数据（2）代码底层执行不像我们看到的高级语言—-Java程序这么简单，它的执行是Java代码–&gt;字节码–&gt;根据字节码执行对应的C/C++代码–&gt;C/C++代码被编译成汇编语言–&gt;和硬件电路交互，现实中，为了获取更好的性能JVM可能会对指令进行重排序，多线程下可能会出现一些意想不到的问题。使用volatile则会对禁止语义重排序，当然这也一定程度上降低了代码执行效率从实践角度而言，volatile的一个重要作用就是和CAS结合，保证了原子性，详细的可以参见java.util.concurrent.atomic包下的类，比如AtomicInteger。 8. 线程的优先级和守护线程：1、线程优先级 java中的线程优先级的范围是1～10，1最低，默认的优先级是5。优先级高的线程获得CPU资源的概率较大。Thread提供了setPriority(int newPriority)和getPriority()方法来设置和返回线程优先级。 Thread类有3个静态常量：——MAX_PRIORITY = 10——MIN_PRIORITY = 1——NORM_PRIORITY = 5 2、守护线程 java 中有两种线程：用户线程和守护线程。可以通过isDaemon()方法来区别它们：如果返回false，则说明该线程是“用户线程”；否则就是“守护线程”。用户线程一般用户执行用户级任务，而守护线程也就是“后台线程”，一般用来执行后台任务。需要注意的是：Java虚拟机在“用户线程”都结束后会后退出。 守护线程又称“后台线程”、“精灵线程”，它有一个特征——如果所有前台线程都死亡，后台线程自动死亡。通过setDaemon(true)来设置一个线程。 9. 线程的休眠和礼让线程的休眠： 让线程暂时睡眠：指定时长，线程进入阻塞状态； 睡眠时间过后线程会再进入可运行状态 public class TestThread { public static void bySec(long s) { for (int i = 0; i &lt; s; i++) { System.out.println(i + 1 + &quot;秒&quot;); try { Thread.sleep(1000);//线程休眠1秒 } catch (InterruptedException e) { e.printStackTrace(); } } } public static void main(String[] args) { System.out.println(&quot;*****主线程开始休眠*****&quot;); TestThread.bySec(5); //让主线程休眠5秒 System.out.println(&quot;*****主线程休眠结束*****&quot;); } } 测试结果如下： 线程的礼让：暂停当前线程，允许其他具有相同优先级的线程获得运行机会，该线程处于就绪状态，不转为阻塞状态。【只是提供一种可能，但是不能保证一定会实现礼让】 public class TestThread implements Runnable { public void run(){ for(int i=0;i&lt;5;i++){ System.out.println(Thread.currentThread().getName()+&quot;正在运行：&quot;+i); if(i==3){ System.out.print(&quot;线程礼让：&quot;); Thread.yield();//当i=3时，当前线程礼让 } } } public static void main(String[] args) { TestThread testThread = new TestThread(); Thread t1 = new Thread(testThread,&quot;线程A&quot;); Thread t2 = new Thread(testThread,&quot;线程2&quot;); t1.start(); t2.start(); } } 执行结果如下图：(结果不唯一) 10. AQS的介绍AQS全称为Abstract Queued Sychronizer，翻译过来应该是 抽象队列同步器。 如果说java.util.concurrent的基础是CAS的话，那么AQS就是整个Java并发包的核心了，ReentrantLock、CountDownLatch、Semaphore等等都用到了它。AQS实际上以双向队列的形式连接所有的Entry，比方说ReentrantLock，所有等待的线程都被放在一个Entry中并连成双向队列，前面一个线程使用ReentrantLock好了，则双向队列实际上的第一个Entry开始运行。 AQS定义了对双向队列所有的操作，而只开放了tryLock和tryRelease方法给开发者使用，开发者可以根据自己的实现重写tryLock和tryRelease方法，以实现自己的并发功能。 11. 线程的同步机制前提：如果我们创建的多个线程，存在着共享数据，那么就有可能出现线程的安全问题：当其中一个线程操作共享数据时，还未操作完成，另外的线程就参与进来，导致对共享数据的操作出现问题。解决方式：要求一个线程操作共享数据时，只有当其完成操作完成共享数据，其它线程才有机会执行共享数据。]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java枚举和注解]]></title>
    <url>%2F2017%2F05%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2Fjava%E6%9E%9A%E4%B8%BE%E5%92%8C%E6%B3%A8%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[1. 枚举类枚举 (enum)类型是Java 5新增的特性，它是一种新的类型，允许用常量来表示特定的数据片断，而且全部都以类型安全的形式来表示。Java 中的每一个枚举都继承自 java.lang.Enum 类。当定义一个枚举类型时，每一个枚举类型成员都可以看作是 Enum 类的实例，这些枚举成员默认都被 final、public, static 修饰，当使用枚举类型成员时，直接使用枚举名称调用成员即可。 先看一个简单的枚举类： public enum SeasonEnum { SPRING,SUMMER,FALL,WINTER; } enum和class、interface的地位一样 使用enum定义的枚举类默认继承了java.lang.Enum，而不是继承Object类。枚举类可以实现一个或多个接口。 枚举类的所有实例都必须放在第一行展示，不需使用new 关键字，不需显式调用构造器。自动添加public static final修饰。 使用enum定义、非抽象的枚举类默认使用final修饰，不可以被继承。 枚举类的构造器只能是私有的 枚举类内也可以定义属性和方法，可是是静态的和非静态的。比如： public enum SeasonEnum { SPRING(&quot;春天&quot;),SUMMER(&quot;夏天&quot;),FALL(&quot;秋天&quot;),WINTER(&quot;冬天&quot;); private final String name; private SeasonEnum(String name){ this.name = name; } public String getName() { return name; } } 实际上在第一行写枚举类实例的时候，默认是调用了构造器的，所以此处需要传入参数，因为没有显式申明无参构造器，只能调用有参数的构造器。构造器需定义成私有的，这样就不能在别处申明此类的对象了。枚举类通常应该设计成不可变类，它的Field不应该被改变，这样会更安全，而且代码更加简洁。所以我们将Field用private final修饰。 举一个例子测试一下： /** * 自定义函数枚举 */ public enum Color { RED(&quot;红色&quot;, 1), GREEN(&quot;绿色&quot;, 2), BLANK(&quot;白色&quot;, 3), YELLO(&quot;黄色&quot;, 4); private String name ; private int index ; Color(String name, int index) { this.name = name; this.index = index; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getIndex() { return index; } public void setIndex(int index) { this.index = index; } } /** * 测试 */ public class ColorTest { public static void main(String[] args) { //输出某一枚举的值 System.out.println(Color.RED.getName()); System.out.println(Color.RED.getIndex()); //遍历所有的枚举 for( Color color : Color.values()){ System.out.println( color + &quot; name: &quot; + color.getName() + &quot; index: &quot; + color.getIndex() ); } } } 测试结果如下图所示： 总结： 1、枚举的本质是类，在没有枚举之前，仍然可以按照java最基本的编程手段来解决需要用到枚举的地方。枚举屏蔽了枚举值的类型信息，不像在用public static final定义变量必须指定类型。枚举是用来构建常量数据结构的模板，这个模板可扩展。枚举的使用增强了程序的健壮性，比如在引用一个不存在的枚举值的时候，编译器会报错。枚举的更多用法还需要在开发中去研究创造，Java5、Java6增加了不少新的特性，技术在升级，对程序员来说就要学习，如果你热爱java的话。否则别人用到新特性的代码你看不懂，那才叫郁闷。 2、枚举在Java家族中只占了很小的一块比重，所以我在项目中用枚举的地方不是很多，毕竟，一个项目是很多人开发维护的，用一个陌生的东西，会给其他的同事造成阅读困难。所以常量大都是用public static final 来定义的。 2. 注解1).JDK提供的常用的三个注解 @Override: 限定重写父类方法, 该注释只能用于方法; @Deprecated: 用于表示某个程序元素(类, 方法等)已过时; @SuppressWarnings: 抑制编译器警告 2).元注解：可以对已有的注解进行解释说明。@Retention: SOURCE CLASS RUNTIME@Target:@Documented:javadoc@Inherited]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java中IO流]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2FJava%E4%B8%ADIO%E6%B5%81%2F</url>
    <content type="text"><![CDATA[1. IO流的结构： 2. IO流的划分 按照流的流向的不同：输入流 输出流 (站位于程序的角度) ； 按照流中的数据单位的不同：字节流 字符流 （纯文本文件使用字符流 ，除此之外使用字节流）； 按照流的角色的不同：节点流 处理流 （流直接作用于文件上是节点流（4个），除此之外都是处理流） 4. 字节流java中字节流主要两个基类为InputStream和OutputStream，分别对应字节输入流和字节输出流。 InputStream（输入流）：主要功能是将数据一个字节一个字节的读到内存，InputStream是一个抽象类，不能实例化，主要定义的方法有： int read(byte[] b) ：从当前位置从输入流中读取b.length个字节的数据存放到b中，实际读取到的数据要看输入流中的字节数，最多读取的数量就是b.length，返回值为实际读取的字节数； int read(byte[] b, int off, int len) ：从当前位置从输入流中读取len个字节的数据存放到b中，第一个字节存放的位置为b[off],第二个字节存放位置为b[off+1],依此类推。实际中读取的数据可能并没有len个字节，具体看输入流中还存在多少自己数据。返回值为实际读取的字节数； int available() ：返回此输入流中可以读取(或跳过)的字节数量的估量值，前提是此输入流没有被另一个方法请求而导致阻塞； void close() ：关闭此输入流并且释放此输入流占用的所有系统资源； abstract int read() ：从当前位置从输入流中读取下一个字节的数据，如果读到流的尾部，则返回-1，为抽象方法 为了处理具体场景的数据，InputStream有很多派生类，包括：AudioInputStream（音频输入流）ByteArrayInputStream(字符数组输入流)FileInputStream(文件输入流)FilterInputStream(过滤器输入流)ObjectInputStream(对象输入流)PipedInputStream（管道输入流）SequenceInputStream(顺序输入流)StringBufferdInputStream(带缓存的字符串输入流) OutputStream(输出流)：OutputStream的主要作用是将数据一个字节一个子集的写入到文件或者网络中，OutputStream也是抽象类，不能实例化，主要定义的方法有： void write(byte[] b) ：将字节数组b中的数据全部写入到输出流中，注意仅仅是写入到流中，要写入到目标设备还需要调用flush()函数； void write(byte[]b, int off, int len) ：将字节数组b中的数据，从off位置开始算起，写入len个字节到输出流，即将b[off],b[off+1],…,b[off+len-1]这些字节写入到输出流中； abstract void write(int b) ：先将int转换为byte类型，然后将低位数据写入到输出流中； void close() ：关闭输出流并释放该输出流占用的所有系统资源； void flush() ：刷新此输出流，并将该流中缓冲的字节数据全部写入到目标设备（文件或网络）。 OutputStream主要的派生类有：ByteArrayOutputStream(字节数组输出流)FileOutputStream(文件输出流)FilterOutputStream(过滤器输出流)ObjectOutputStream(对象输出流)PipedOutputStream(管道输出流) 5. 字符流java中字符流主要由两个基类Reader和Writer，分别对应字符输入流和字符输流。 Reader ：主要功能是将数据一个字符一个字符的读入到内存，Reader也是抽象类，不能实例化，主要的方法有： int read() ：从流中读取单个字符； int read(char[] cbuf) ：从当前位置读取cbuf.length个字符到cbuf数组中，但实际读取的字符个数取决于流中剩余字符个数。返回值为实际读取的字符个数； abstract int read(char[] cbuf, int off, int len) ：从当前位置读取len个字符到cbuf中，第一个字符存放在cbuf[off]中，第二个字符存放在cbuf[off+1]中，依次类推。实际读取的字符的个数取决于流中剩余的字符个数，返回值为实际读取的字符个数； abstract viud close() ：关闭流，并且释放该流占用的所有系统资源； Reader主要的派生类有：BufferedReader(带缓冲区的Reader)CharArrayReader(字符数组Reader)FilterReader(过滤器Reader)InputStreamReader(输入流Reader)PipedReader(管道Reader)StringReader(字符串Reader)FileReader(文件Reader) Writer ：主要功能是将数据一个字符一个字符的写入到文件或者网络中，Writer也是抽象类，不能实例化，主要的方法有： void write(char[] cbuf) ：将字符数组写入到流中； void write(String str) ：将字符串写入到流中； void write(int c) ：int型数据为32位，4个字节，取int型的低16位组成一个字符，然后将这个字符写入到流中，忽略高16位数据； void Write(String str, int off, int len) ：将字符串str指定位置的子串写入到流中，子串起始位置为off，子串长度为len； Writer append(char c) ：追加字符c到此Writer流中，追加到尾部。返回值为追加后的此Writer； Writer append(CharSequence csq,int start,int end) ：追加字符序列csq的子序列到Writer流中,子序列为序列csq的start到end部分，追加到尾部，返回值为追加后的此序列； abstract void close() ：关闭流，在关闭之前先调用flush()； abstract void flush() ：刷新流，并将已经在流中的数据写入到指定目标设备，如文件，网络； abstract void write(char[] cbuf, int off, int len) ：将字符数组cbuf中的指定部分写入到流中，从off开始，写入len个字符，即写cbuf[off],cbuf[off+1],…,cbuf[off+len-1] Writer主要的派生类有：BufferedWriter(带缓冲区的Writer)CharArrayWriter(字符数组Writer)FilterWriter(过滤器Writer)OutputWriter(输出流Writer)PipedWriter(管道Writer)PrintWriter(打印Writer)StringWriter(字符串Writer) 6. 其它的流1.转换流：实现字节流与字符流之间的转换 InputStreamReader: 输入时，实现字节流到字符流的转换，提高操作的效率（前提是，数据是文本文件） ===&gt;解码：字节数组---&gt;字符串 OutputStreamWriter：输出时，实现字符流到字节流的转换。 ===&gt;编码： 字符串----&gt;字节数组 例子：从键盘输入字符串，要求将读取到的整行字符串转成大写输出。然后继续进行输入操作，直至当输入“e”或者“exit”时，退出程序。 2.标准的输入输出流 System.in: The &quot;standard&quot; input stream:从键盘输入数据 System.out:The &quot;standard&quot; output stream：从显示器输出数据 3.打印流 (都是输出流) PrintStream(处理字节) PrintWriter(处理字符) 可以使用System.setOut（PrintStream p）重新设置一下输出的位置。 PrintStream p = new PrintStream(new FileOutputStream(&quot;hello.txt&quot;),true); 4.数据流（处理基本数据类型、String类、字节数组） DataInputStream DataOutputStream 5.对象流 (用来处理对象的) ObjectInputStream（Object readObject();） ObjectOutputStream (void writeObject(Object obj)) 如何创建流的对象： ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(new File(&quot;person.txt&quot;))); ObjectInputStream ois = new ObjectInputStream(new FileInputStream(new File(&quot;person.txt&quot;))); 6.随机存取文件流 ：RandomAccessFile 既可以充当一个输入流，又可以充当一个输出流：public RandomAccessFile(File file, String mode) ； 支持从文件的开头读取、写入。若输出的文件不存在，直接创建。若存在，则是对原有文件内容的覆盖； 支持任意位置的“插入”。]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java中的泛型总结]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2Fjava%E6%B3%9B%E5%9E%8B%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[1. 泛型的介绍泛型 ：约束集合中元素的类型，是JDK1.5的一个非常重要的特性，它减少了对象间的转换，约束其输入参数类型，对Collection集合下的实现类都可以定义泛型。 泛型作用： 解决元素存储安全性的问题； 解决获取数据元素时，需要类型强转的问题。 注意的点： 不同泛型之间不能相互赋值，泛型不存在多态； 访问时，无须向下转型； 编译时即可检查，而非运行时抛出异常； 参数化类型，类型安全的集合，限制元素类型必须一致。 2. 泛型的使用泛型有三种使用方式，分别为：泛型类、泛型接口、泛型方法在Java库中，使用变量E表示集合的元素类型，K和V分别表示关键字与值的类型。 1)泛型类的定义和使用 ：一个泛型类（generic class）就是具有一个或多个类型变量的类。定义一个泛型类十分简单，只需要在类名后面加上&lt;&gt;，再在里面加上类型参数。比如： public class Pair&lt;T&gt; { private T value; public Pair(T value) { this.value = value; } public T getValue() { return value; } public void setValue(T value) { this.value = value; } public static void main(String[] args) { Pair&lt;String&gt; pair=new Pair&lt;String&gt;(&quot;Hello&quot;); String str = pair.getValue(); System.out.println(str);//打印hello pair.setValue(&quot;World&quot;); str = pair.getValue(); System.out.println(str);//打印出world } } 2)泛型接口的定义和使用 ： interface Pair&lt;T,U&gt; { void show(T t,U u); } class PairTest implements Pair&lt;String,Date&gt;{ @Override public void show(String str, Date date) { System.out.println(str); System.out.println(date); } public static void main(String[] args) { PairTest pairTest = new PairTest(); pairTest.show(&quot;hello&quot;,new Date()); } } 测试结果如下： 3)泛型方法的定义和使用 ： public class TestGeneric { public static void main(String[] args) { String str=get(&quot;Hello&quot;, &quot;World&quot;); System.out.println(str);//控制台会打印出Hello } public static &lt;T, U&gt; T get(T t, U u) { if (u != null) return t; else return null; } } 3. 通配符：类型通配符一般是使用？代替具体的类型实参，注意了，此处’？’是类型实参，而不是类型形参 ！再直白点的意思就是，此处的？和Number、String、Integer一样都是一种实际的类型，可以把？看成所有类型的父类。是一种真实的类型。 可以解决当具体类型不确定的时候，这个通配符就是 ? ；当操作类型时，不需要使用类型的具体功能时，只使用Object类中的功能。那么可以用 ? 通配符来表未知类型。]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java基础]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2F06_java%E6%A0%B8%E5%BF%83%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[1. 包装类型把int变为Integer的赋值写法，称为自动装箱（Auto Boxing），反过来，把Integer变为int的赋值写法，称为自动拆箱（Auto Unboxing）。 包装类型的比较必须使用equals()。比如对两个Integer实例进行比较：绝对不能用==比较，因为Integer是引用类型，必须使用equals()比较： Java核心库提供的包装类型可以把基本类型包装为class；自动装箱和自动拆箱都是在编译期完成的（JDK&gt;=1.5）；装箱和拆箱会影响执行效率，且拆箱时可能发生NullPointerException；整数和浮点数的包装类型都继承自Number；包装类型提供了大量实用方法。 进制转换： public class Main { public static void main(String[] args) { // 最常用的静态方法parseInt()可以把字符串解析成一个整数 int x1 = Integer.parseInt(&quot;100&quot;); // 100 int x2 = Integer.parseInt(&quot;100&quot;, 16); // 256,因为按16进制解析 System.out.println(Integer.toString(100)); // &quot;100&quot;,表示为10进制 System.out.println(Integer.toString(100, 36)); // &quot;2s&quot;,表示为36进制 System.out.println(Integer.toHexString(100)); // &quot;64&quot;,表示为16进制 System.out.println(Integer.toOctalString(100)); // &quot;144&quot;,表示为8进制 System.out.println(Integer.toBinaryString(100)); // &quot;1100100&quot;,表示为2进制 } } 2. JavaBeanJavaBean是一种符合命名规范的class，它通过getter和setter来定义属性。 作用：JavaBean主要用来传递数据，即把一组数据组合成一个JavaBean便于传输。此外，JavaBean可以方便地被IDE工具分析，生成读写属性的代码，主要用在图形界面的可视化设计中。 可以利用IDE快速生成getter和setter；使用Introspector.getBeanInfo()可以获取属性列表。`javapackage com.company; import java.beans.*; public class Main { public static void main(String[] args) throws Exception { // 要枚举一个JavaBean的所有属性，可以直接使用Java核心库提供的Introspector BeanInfo info = Introspector.getBeanInfo(Person.class); for (PropertyDescriptor pd : info.getPropertyDescriptors()) { System.out.println(pd.getName()); System.out.println(&quot; &quot; + pd.getReadMethod()); System.out.println(&quot; &quot; + pd.getWriteMethod()); } } } class Person { private String name; private int age; public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } } #### 3. 记录类 从Java 14开始，提供新的record关键字，可以非常方便地定义Data Class： - 使用record定义的是不变类； - 可以编写Compact Constructor对参数进行验证； - 可以定义静态方法。 代码如下： ```java public class Main { public static void main(String[] args) { Point p = new Point(123, 456); System.out.println(p.x()); System.out.println(p.y()); System.out.println(p); } } public record Point(int x, int y) {} 4. BigIntegerBigInteger用于表示任意大小的整数，BigInteger和Integer、Long一样，也是不可变类，并且也继承自Number类。因为Number定义了转换为基本类型的几个方法： 转换为byte：byteValue() 转换为short：shortValue() 转换为int：intValue() 转换为long：longValue() 转换为float：floatValue() 转换为double：doubleValue() 将BigInteger转换成基本类型时可使用longValueExact()等方法保证结果准确。对BigInteger做运算的时候，只能使用实例方法，例如，加法运算： import java.math.BigInteger; public class Main { public static void main(String[] args) { BigInteger i1 = new BigInteger(&quot;1234567890&quot;); BigInteger i2 = new BigInteger(&quot;12345678901234567890&quot;); BigInteger sum = i1.add(i2); // 12345678902469135780 } } 5. BigDecimal和BigInteger类似，BigDecimal可以表示一个任意大小且精度完全准确的浮点数,常用于财务计算。 比较BigDecimal的值是否相等，必须使用compareTo()而不能使用equals()。 import java.math.BigDecimal; public class Main { public static void main(String[] args) { BigDecimal d1 = new BigDecimal(&quot;123.456&quot;); BigDecimal d2 = new BigDecimal(&quot;123.45600&quot;); System.out.println(d1.equals(d2)); // false,因为scale不同 System.out.println(d1.equals(d2.stripTrailingZeros())); // true,因为d2去除尾部0后scale变为2 System.out.println(d1.compareTo(d2)); // 0 } } 6. MathMath类就是用来进行数学计算的，它提供了大量的静态方法来便于我们实现数学计算。 StrictMath保证所有平台计算结果都是完全相同的，而Math会尽量针对平台优化计算速度，所以，绝大多数情况下，使用Math就足够了。 package com.company; public class Main { public static void main(String[] args) { // 求绝对值： Math.abs(-100); // 100 Math.abs(-7.8); // 7.8 //取最大或最小值： Math.max(100, 99); // 100 Math.min(1.2, 2.3); // 1.2 // 计算x的y次方： Math.pow(2, 10); // 2的10次方=1024 // 计算√x（根号x）： Math.sqrt(2); // 1.414... //计算e的x次方： Math.exp(2); // 7.389... // 计算以e为底的对数： Math.log(4); // 1.386... // 计算以10为底的对数： Math.log10(100); // 2 //三角函数： Math.sin(3.14); // 0.00159... Math.cos(3.14); // -0.9999... Math.tan(3.14); // -0.0015... Math.asin(1.0); // 1.57079... Math.acos(1.0); // 0.0 // Math还提供了几个数学常量： double pi = Math.PI; // 3.14159... double e = Math.E; // 2.7182818... Math.sin(Math.PI / 6); // sin(π/6) = 0.5 // 生成一个随机数x，x的范围是0 &lt;= x &lt; 1： // Math.random()实际上内部调用了Random类，所以它也是伪随机数，只是我们无法指定种子 Math.random(); // 0.53907... 每次都不一样 // 如果我们要生成一个区间在[MIN, MAX)的随机数，可以借助Math.random()实现 double x = Math.random(); // x的范围是[0,1) double min = 10; double max = 50; double y = x * (max - min) + min; // y的范围是[10,50) long n = (long) y; // n的范围是[10,50)的整数 System.out.println(y); System.out.println(n); } } 7. Random和SecureRandomRandom用来创建伪随机数。所谓伪随机数，是指只要给定一个初始的种子，产生的随机数序列是完全一样的。要生成一个随机数，可以使用nextInt()、nextLong()、nextFloat()、nextDouble() Random r = new Random(); r.nextInt(); // 2071575453,每次都不一样 r.nextInt(10); // 5,生成一个[0,10)之间的int r.nextLong(); // 8811649292570369305,每次都不一样 r.nextFloat(); // 0.54335...生成一个[0,1)之间的float r.nextDouble(); // 0.3716...生成一个[0,1)之间的double import java.util.Random; public class Main { public static void main(String[] args) { Random r = new Random(12345); for (int i = 0; i &lt; 10; i++) { System.out.println(r.nextInt(100)); } // 51, 80, 41, 28, 55... } } SecureRandom：生成安全的随机数。SecureRandom的安全性是通过操作系统提供的安全的随机种子来生成随机数。这个种子是通过CPU的热噪声、读写磁盘的字节、网络流量等各种随机事件产生的“熵”。在密码学中，安全的随机数非常重要。如果使用不安全的伪随机数，所有加密体系都将被攻破。因此，时刻牢记必须使用SecureRandom来产生安全的随机数。 实际使用的时候，可以优先获取高强度的安全随机数生成器，如果没有提供，再使用普通等级的安全随机数生成器： import java.util.Arrays; import java.security.SecureRandom; import java.security.NoSuchAlgorithmException; public class Main { public static void main(String[] args) { SecureRandom sr = null; try { sr = SecureRandom.getInstanceStrong(); // 获取高强度安全随机数生成器 } catch (NoSuchAlgorithmException e) { sr = new SecureRandom(); // 获取普通的安全随机数生成器 } byte[] buffer = new byte[16]; sr.nextBytes(buffer); // 用安全随机数填充buffer System.out.println(Arrays.toString(buffer)); } }]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java集合框架总结]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2FJava%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[集合总结： 1.Collection接口 ：方法： add(Object obj),addAll(Collection coll),size(),clear(),isEmpty(); remove(Object obj),removeAll(Collection coll),retainAll(Collection coll); equals(Object obj),contains(Object obj),containsAll(Collection coll); hashCode(),iterator(),toArray(); 2.List接口 ： 相当于“动态”数组特点：有序，有下标，元素可以重复； 新增的方法：删除remove(int index) 修改set(int index,Object obj) 获取get(int index)插入add(int index,Object obj) 添加进List集合中的元素（或对象）所在的类一定要重写equals()方法 实现类： ArrayList : 主要实现类，能解决80%的需求；数组结构存储(长度可变)，查询快，增删慢；操作速度快，并发效率高，线程不安全； LinkedList : 链表结构存储(集合中持有多个Node,Node中item存个人数据)，额外提供“列头”和“列尾”统一方法；查询慢，增删快，更适用于频繁的插入、删除操作； Vector : 古老的实现类，数组结构存储(长度可变)，查询快，增删慢，线程安全； 3.Set接口：特点：无序(元素在底层存储的位置是无序的)，无下标，元素可以重复(不能添加相同的元素) Set使用的方法基本上都是Collection接口下定义的。 添加进Set集合中的元素所在的类一定要重写equals() 和 hashCode()。要求重写equals() 和 hashCode()方法保持一致。equals() 方法保证相同对象返回true;HashCode()方法保证相同对象返回相同int,尽可能保证不同对象返回int。 实现类： HashSet : 是主要实现类，存储结构：链表数组；保证重复对象只有一个； LinkedHashSet(是HashSet的子类，当我们遍历集合元素时，是按照添加进去的顺序实现的；频繁的遍历，较少的添加、插入操作 建议选择此) TreeSet（可以按照添加进集合中的元素的指定属性进行排序），要求TreeSet添加进的元素必须是同一个类的！ TreeSet中两种排序方式： 自然排序： ①要求添加进TreeSet中的元素所在的类implements Comparable接口 ②重写compareTo(Object obj)，在此方法内指明按照元素的哪个属性进行排序③向TreeSet中添加元素即可。若不实现此接口，会报运行时异常 定制排序： ①创建一个实现Comparator接口的实现类的对象。在实现类中重写Comparator的compare(Object o1,Object o2)方法 ②在此compare()方法中指明按照元素所在类的哪个属性进行排序③将此实现Comparator接口的实现类的对象作为形参传递给TreeSet的构造器中④向TreeSet中添加元素即可。若不实现此接口，会报运行时异常 4.Map接口 ：存储“键-值”对的数据，无序，无下标，键不可重复，值可以重复，通过键访问值。 key是不可重复的，使用Set存放。value可以重复的，使用Collection来存放的。一个key-value对构成一个entry(Map.Entry)，entry使用Set来存放。 常用方法： 添加、修改 put(Object key,Object value)； 删除remove(Object key)； 获取 get(Object key) size() / keySet() values() entrySet() 主要实现类： HashMap ：是主要的实现类，允许用null值作为key和value；底层存储：数组+链表；操作速度快，线程不安全； LinkedHashMap：是HashMap的子类，可以按照添加进Map的顺序实现遍历 Hashtable : 是一个古老的实现类，线程安全的,不允许用null值作为key或者value； Hashtable的子类：Properties：常用来处理属性文件，key和value都是String类型的。使用方法：setProperty(String key,String value) ; getProperty(String key) TreeMap：实现了SortedMap接口，自动对key排序，key作为对象，必须实现Comparable接口；需要按照key所在类的指定属性进行排序，要求key是同一个类的对象。 Iterator接口：用来遍历集合Collection元素 Collections工具类：操作Collection及Map的工具类，大部分为static的方法。 附：Properties的使用 Properties pros = new Properties(); pros.load(new FileInputStream(new File(&quot;jdbc.properties&quot;))); String user = pros.getProperty(&quot;user&quot;); System.out.println(user); String password = pros.getProperty(&quot;password&quot;); System.out.println(password);]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java异常]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2Fjava%E5%BC%82%E5%B8%B8%2F</url>
    <content type="text"><![CDATA[1.异常体系结构：2.如何处理异常：]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java控制台输出学生的成绩]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E6%A1%88%E4%BE%8B%2Fjava%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E5%AD%A6%E7%94%9F%E7%9A%84%E6%88%90%E7%BB%A9%2F</url>
    <content type="text"><![CDATA[题目：利用条件运算符的嵌套来完成此题：学习成绩&gt;=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示。 思路分析： 利用(a&gt;b)?a:b条件运算符来处理。 代码如下： package mytest; import java.util.Scanner; public class Example { static int grade; public static void main(String[] args) { System.out.print(&quot;请输入成绩：&quot;); Scanner scanner = new Scanner(System.in); int s = scanner.nextInt(); Example example = new Example(); grade = example.compare(s); if (grade == 1){ System.out.println(&quot;成绩为：A&quot;); }else if(grade==2){ System.out.println(&quot;成绩为：B&quot;); }else { System.out.println(&quot;成绩为：C&quot;); } } public int compare(int s){ return s &gt; 90 ? 1 : s&gt;60 ? 2 : 3; } } 执行结果如下图： 下面代码同样可以： package mytest; import javax.swing.*; import java.util.Scanner; public class Example { static int grade; public static void main(String[] args) { // System.out.print(&quot;请输入成绩：&quot;); // Scanner scanner = new Scanner(System.in); // int s = scanner.nextInt(); String str = &quot;&quot;; str = JOptionPane.showInputDialog(&quot;请输入成绩：&quot;); int N; N = 0; try { N = Integer.parseInt(str); } catch (NumberFormatException e) { e.printStackTrace(); } str = (N &gt; 90 ? &quot;A&quot; : (N &gt; 60 ? &quot;B&quot; : &quot;C&quot;)); System.out.println(&quot;成绩为：&quot; + str); } }]]></content>
      <categories>
        <category>java</category>
        <category>java案例</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java案例</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java数组]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2F04_%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[数组数组：一次性定义多个 相同数据类型的变量。 特点:长度固定，内存中必定连续，便于寻址，查询效率高 1).数组的初始化 //静态初始化：在声明并初始化数组与给数组相应的元素赋值操作同时进行。 int[] scores1 = new int[]{72,90,59}; //动态初始化：在声明并初始化数组与给数组相应的元素赋值操作分开进行。 int scores2[] = new int[3]; scores2[0] = 72; scores2[1] = 90; scores2[2] = 59; 注：不管是动态还是静态初始化数组，一定在创建的时候，就指明了数组的长度！ 2).如何引用数组元素：通过数组的下角标的方式。下角标从0开始，到n-1结束。其中n为数组的长度。 3).数组的长度：通过数组的属性length来调用。System.out.println(scores2.length);//3 4).如何遍历数组for(int i = 0;i &lt; scores1.length;i++){ System.out.println(scores1[i]);} 5).关于数组元素的默认初始化值 byte short int long 而言：0 float double 而言：0.0 char而言：空格 boolean而言：false 引用类型变量而言:null 6). Arrays类：Arrays类一般用来操作数组(比如排序和搜索)的各种方法。如果指定数组引用为null，则访问此类中的方法都会抛出空指针异常NullPointerException。比较常见的方法有： sort方法，用来对指定数组中的元素进行排序（元素值从小到大进行排序）; int[] arr = {1,5,9,3,7};Arrays.sort( arr ); toString方法，用来返回指定数组元素内容的字符串形式 int[] arr = {1,5,9,3,7};String str = Arrays.toString(arr); //str的值为[1, 3, 5, 7, 9] binarySearch方法，在指定数组中，查找给定元素值出现的位置。若没有查询到，返回位置为-1。要求该数组必须是个有序的数组。 int[] arr = {1,3,4,5,6};int index = Arrays.binarySearch(arr, 4); //index的值为2int index2= Arrasy.binarySearch(arr, 2); //index2的值为-1]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java字符串String类]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2F05_%E5%AD%97%E7%AC%A6%E4%B8%B2string%E7%B1%BB%E7%9A%84%2F</url>
    <content type="text"><![CDATA[String类：不可变的字符序列常用方法： int length():获取字符串的长度，其实也就是字符个数char charAt(int index):获取指定索引处的字符 int indexOf(String str):获取str在字符串对象中第一次出现的索引String substring(int start,int end):从start开始，到end结束截取字符串boolean equals(Object obj):比较字符串的内容是否相同boolean equalsIgnoreCase(String str):比较字符串的内容是否相同,忽略大小写boolean startsWith(String str):判断字符串对象是否以指定的str开头boolean endsWith(String str):判断字符串对象是否以指定的str结尾char[] toCharArray():把字符串转换为字符数组String toLowerCase():把字符串转换为小写字符串String toUpperCase():把字符串转换为大写字符串String trim():去除字符串两端空格String[] split(String str):按照指定符号分割字符串 public class StringMethodDemo { public static void main(String[] args) { //创建字符串对象 String s = &quot;helloworld&quot;; //int length():获取字符串的长度，其实也就是字符个数 System.out.println(s.length());//结果为：10 //char charAt(int index):获取指定索引处的字符 System.out.println(s.charAt(0));//结果为：h System.out.println(s.charAt(1));//结果为：e //int indexOf(String str):获取str在字符串对象中第一次出现的索引 System.out.println(s.indexOf(&quot;l&quot;));//结果为：2 System.out.println(s.indexOf(&quot;owo&quot;));//结果为：4 System.out.println(s.indexOf(&quot;ak&quot;));//结果为：-1 //String substring(int start):从start开始截取字符串 System.out.println(s.substring(0));//结果为：helloworld System.out.println(s.substring(5));//结果为：world //String substring(int start,int end):从start开始，到end结束截取字符串 System.out.println(s.substring(0, s.length()));//结果为：helloworld System.out.println(s.substring(3,8));//结果为：lowor String s3 = &quot;hello&quot;; String s4 = &quot;hello&quot;; String s5 = &quot;Hello&quot;; //boolean equals(Object obj):比较字符串的内容是否相同 System.out.println(s3.equals(s4));//结果为：true //boolean equalsIgnoreCase(String str):比较字符串的内容是否相同,忽略大小写 System.out.println(s3.equalsIgnoreCase(s5));//结果为：true //创建字符串对象 String s6 = &quot;abcde&quot;; //char[] toCharArray():把字符串转换为字符数组 char[] chs = s6.toCharArray(); for(int x=0; x&lt;chs.length; x++) { System.out.println(chs[x]); } //String[] split(String str):按照指定符号分割字符串 String s4 = &quot;aa,bb,cc&quot;; String[] strArray = s4.split(&quot;,&quot;); for(int x=0; x&lt;strArray.length; x++) { System.out.println(strArray[x]); } } } 从键盘输入一串字符,统计一个字符串大小写字母字符，数字字符出现的次数。(不考虑其他字符) import java.util.Scanner; public class StringMethodDemo { public static void main(String[] args) { Scanner sc = new Scanner(System.in);//键盘录入一个字符串数据 System.out.println(&quot;请输入一个字符串数据：&quot;); String s = sc.nextLine(); //定义三个统计变量，初始化值都是0 int bigCount = 0; int smallCount = 0; int numberCount = 0; //遍历字符串，得到每一个字符 for(int x=0; x&lt;s.length(); x++) { char ch = s.charAt(x); //拿字符进行判断 if(ch&gt;=&#39;A&#39; &amp;&amp; ch&lt;=&#39;Z&#39;) { bigCount++; }else if(ch&gt;=&#39;a&#39; &amp;&amp; ch&lt;=&#39;z&#39;) { smallCount++; }else if(ch&gt;=&#39;0&#39; &amp;&amp; ch&lt;=&#39;9&#39;) { numberCount++; }else { System.out.println(&quot;该字符&quot;+ch+&quot;非法&quot;); } } //输出结果 System.out.println(&quot;您输入的大写字符有：&quot;+bigCount+&quot;个&quot;); System.out.println(&quot;您输入的小写字符有：&quot;+smallCount+&quot;个&quot;); System.out.println(&quot;您输入的数字字符有：&quot;+numberCount+&quot;个&quot;); } } String类与基本数据类型、包装类；与字符数组、字节数组之间的转换 * 1.字符串 与基本数据类型、包装类之间转换 * ①字符串 ---&gt;基本数据类型、包装类:调用相应的包装类的parseXxx(String str); * ①基本数据类型、包装类---&gt;字符串:调用字符串的重载的valueOf()方法 * * 2.字符串与字节数组间的转换 * ①字符串----&gt;字节数组:调用字符串的getBytes() * ②字节数组----&gt;字符串：调用字符串的构造器 * * 3.字符串与字符数组间的转换 * ①字符串----&gt;字符数组：调用字符串的toCharArray(); * ②字符数组----&gt;字符串:调用字符串的构造器 * * 4.String与StringBuffer的转换 * ①String ---&gt;StringBuffer：使用StringBuffer的构造器：new StringBuffer(String str); * ②StringBuffer-----&gt;String:使用StringBuffer的toString()方法 public class Test { public static void main(String[] args) { //将数字型的字符串 转化为数字 String s1 = &quot;123456&quot;; System.out.println(Integer.parseInt(s1)); String s2 = &quot;45.87&quot;; System.out.println(Double.parseDouble(s2)); //将数字转化为字符串 int n1 = 234812; System.out.println(Integer.toString(n1)); double n2 = 23.45; System.out.println(Double.toString(n2)); } } StringBuffer类：可变的字符序列 StringBuilder类：可变的字符序列，jdk5.0新加入的，效率更高，线程不安全。 public class StringMethodDemo { public static void main(String[] args) { //创建一个字符串缓冲区对象。用于存储数据。 StringBuffer sb = new StringBuffer(); sb.append(&quot;haha&quot;); //添加字符串 此时sb=haha sb.insert(2, &quot;it&quot;);//在指定位置插入 此时sb=haitha sb.delete(1, 4);//删除 此时sb=hha sb.replace(1, 4, &quot;cast&quot;);//替换指定范围内的内容 此时sb=hcast String str = sb.toString();// 此时sb=hcast } } 设置字符串的格式： public class StringMethodDemo { public static void main(String[] args) { //格式字符串以百分符号（%）打头，后面跟一个或多个标志。 // 格式字符串“%,d”显示十迚制数，并将每3 位用逗号分隔。 //格式字符串“%n”显示换行符。 int accountBalance = 5005; System.out.format(&quot;Balance: $%,d%n&quot;, accountBalance);//输出：Balance: $5,005 //输出Π的小数点后11位 double pi1 = Math.PI; System.out.format(&quot;%.11f%n&quot;, pi1);//输出：3.14159265359 } } 其它： 奖金定义成长整型： 要精确到小数点后多少位，用 &gt; DecimalFormat df = new DecimalFormat(&quot;#0.0000&quot;); 1. StringJava字符串String是不可变对象；字符串操作不改变原字符串内容，而是返回新字符串；Java使用Unicode编码表示String和char；转换编码就是将String和byte[]转换，需要指定编码；转换为byte[]时，始终优先考虑UTF-8编码。 比较字符串的内容是否相同。必须使用equals()方法而不能用==。要忽略大小写比较，使用equalsIgnoreCase()方法。 public class Main { public static void main(String[] args) { // 定义 String s = &quot;Hello!&quot;; String sa = new String(new char[] {&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39;!&#39;}); // 两个字符串比较，必须总是使用equals()方法。 String s1 = &quot;hello&quot;; String s2 = &quot;HELLO&quot;.toLowerCase(); System.out.println(s1 == s2); System.out.println(s1.equals(s2)); // 是否包含子串: System.out.println(&quot;是否包含子串：&quot; + s1.contains(&quot;ll&quot;)); // true // 搜索子串 System.out.println(s1.indexOf(&#39;l&#39;)); // 2 System.out.println(s1.lastIndexOf(&#39;l&#39;)); // 3 System.out.println(s1.startsWith(&quot;he&quot;)); // true System.out.println(s1.endsWith(&quot;lo&quot;)); // true // 提取子串的例子： System.out.println(&quot;Hello&quot;.substring(2)); // &quot;llo&quot; System.out.println(&quot;Hello&quot;.substring(2, 4)); //&quot;ll&quot; // 去除首尾空白字符 System.out.println(&quot; \tHello\r\n &quot;.trim()); // &quot;Hello&quot; System.out.println(&quot;&quot;.isEmpty()); // 替换子串 String replaceSub = &quot;hello&quot;; String rep = replaceSub.replace(&#39;l&#39;, &#39;w&#39;); // &quot;hewwo&quot;，所有字符&#39;l&#39;被替换为&#39;w&#39; System.out.println(rep); replaceSub.replace(&quot;ll&quot;, &quot;~~&quot;); // &quot;he~~o&quot;，所有子串&quot;ll&quot;被替换为&quot;~~&quot; // 另一种是通过正则表达式替 String s3 = &quot;A,,B;C ,D&quot;; s3.replaceAll(&quot;[\\,\\;\\s]+&quot;, &quot;,&quot;); // &quot;A,B,C,D&quot; // 分割字符串 String s4 = &quot;A,B,C,D&quot;; String[] ss = s4.split(&quot;\\,&quot;); // {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;} System.out.println(ss[1]); // 拼接字符串 String[] arr = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;}; String s5 = String.join(&quot;***&quot;, arr); // &quot;A***B***C&quot; System.out.println(s5); //类型转换 // 把任意基本类型或引用类型转换为字符串 String.valueOf(123); // &quot;123&quot; // 把字符串转换为其他类型，就需要根据情况 int n1 = Integer.parseInt(&quot;123&quot;); // 123 boolean b1 = Boolean.parseBoolean(&quot;true&quot;); // true // String和char[]类型可以互相转换 char[] cs = &quot;Hello&quot;.toCharArray(); // String -&gt; char[] String s6 = new String(cs); // char[] -&gt; String } } 字符串的不同形式表示import java.text.*; import java.util.*; public class Main { public static void main(String[] args) { int n = 123400; // 123400 System.out.println(n); // 以16进制打印n为:1e208 System.out.println(Integer.toHexString(n)); // 以价格的方式打印n为:$123,400.00 System.out.println(NumberFormat.getCurrencyInstance(Locale.US).format(n)); } } 2. StringBuilderStringBuilder是可变对象，用来高效拼接字符串；StringBuilder可以支持链式操作，实现链式操作的关键是返回实例本身；StringBuffer是StringBuilder的线程安全版本，现在很少使用。 public class Main { public static void main(String[] args) { StringBuilder sb = new StringBuilder(1024); for (int i = 0; i &lt; 10; i++) { sb.append(&#39;,&#39;); sb.append(i); } String s = sb.toString(); System.out.println(s); StringBuilder sb1 = new StringBuilder(1024); sb1.append(&quot;Mr &quot;) .append(&quot;Bob&quot;) .append(&quot;!&quot;) .insert(0, &quot;Hello, &quot;); System.out.println(sb1.toString()); } } StringJoiner用指定分隔符拼接字符串数组时，使用StringJoiner或者String.join()更方便；用StringJoiner拼接字符串时，还可以额外附加一个“开头”和“结尾”。 很多时候，我们拼接的字符串像这样： public class Main { public static void main(String[] args) { String[] names = {&quot;Bob&quot;, &quot;Alice&quot;, &quot;Grace&quot;}; StringBuilder sb = new StringBuilder(); sb.append(&quot;Hello &quot;); for (String name : names) { sb.append(name).append(&quot;, &quot;); } // 注意去掉最后的&quot;, &quot;: sb.delete(sb.length() - 2, sb.length()); sb.append(&quot;!&quot;); System.out.println(sb.toString()); } } 类似用分隔符拼接数组的需求很常见，所以Java标准库还提供了一个StringJoiner来干这个事： import java.util.StringJoiner; public class Main { public static void main(String[] args) { String[] names = {&quot;Bob&quot;, &quot;Alice&quot;, &quot;Grace&quot;}; StringJoiner sj = new StringJoiner(&quot;, &quot;, &quot;Hello &quot;, &quot;!&quot;); for (String name : names) { sj.add(name); } System.out.println(sj.toString()); // 不需要指定“开头”和“结尾”的时候，用String.join()更方便： String[] names1 = {&quot;Bob&quot;, &quot;Alice&quot;, &quot;Grace&quot;}; String s = String.join(&quot;, &quot;, names1); } }]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java运算和流程控制]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2F03_%E8%BF%90%E7%AE%97%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%2F</url>
    <content type="text"><![CDATA[public class Main { public static void main(String[] args) { // ++n表示先加1再引用n，n++表示先引用n再加1 int n = 3300; n++; // 3301, 相当于 n = n + 1; n--; // 3300, 相当于 n = n - 1; int y = 100 + (++n); // 不要这么写 System.out.println(y); } } 移位运算：左移实际上就是不断地×2，右移实际上就是不断地÷2。 浮点数运算：浮点数运算和整数运算相比，只能进行加减乘除这些数值计算，不能做位运算和移位运算。 布尔运算：对于布尔类型boolean，永远只有true和false两个值。布尔运算是一种关系运算，包括以下几类：比较运算符：&gt;，&gt;=，&lt;，&lt;=，==，!=；与运算 &amp;&amp;；或运算 ||；非运算 ! 溢出:整数运算在除数为0时会报错，而浮点数运算在除数为0时，不会报错，但会返回几个特殊值：NaN表示Not a Number； Infinity表示无穷大； -Infinity表示负无穷大。 三元运算符：Java还提供一个三元运算符b ? x : y，它根据第一个布尔表达式的结果，分别返回后续两个表达式之一的计算结果。（三元运算b ? x : y后面的类型必须相同，三元运算也是“短路运算”，只计算x或y。） 转义字符：（因为\是转义字符，所以，两个\表示一个\字符），常见的转义字符包括： \” 表示字符” \’ 表示字符’ \ 表示字符\ \n 表示换行符 \r 表示回车符 \t 表示Tab \u#### 表示一个Unicode编码的字符 package com.company; public class Main { public static void main(String[] args) { // 转义字符 String zhuanyi = &quot;ABC\n\u4e2d\u6587&quot;; // 包含6个字符: A, B, C, 换行符, 中, 文 // 字符串拼接 String s1 = &quot;Hello&quot;; String s2 = &quot;world&quot;; String s = s1 + &quot; &quot; + s2 + &quot;!&quot;; System.out.println(s); // 字符串的不可变是指字符串内容不可变。但是引用类型可以变 String s3 = &quot;hello&quot;; String t = s3; s3 = &quot;world&quot;; System.out.println(t); // t是&quot;hello&quot; // 引用类型的变量可以指向一个空值null，它表示不存在，即该变量不指向任何对象 String s4 = null; // s1是null String s5; // 没有赋初值值，s2也是null String s6 = s4; // s3也是null String s7 = &quot;&quot;; // s4指向空字符串，不是null } } Java的格式化功能提供了多种占位符，可以把各种数据类型“格式化”成指定的字符串： %d 格式化输出整数 %x 格式化输出十六进制整数 %f 格式化输出浮点数 %e 格式化输出科学计数法表示的浮点数 %s 格式化字符串 占位符和输入案例： import java.util.Scanner; public class Main { public static void main(String[] args) { // 占位符本身还可以有更详细的格式化参数。下面的例子把一个整数格式化成十六进制，并用0补足8位 int n = 12345000; System.out.printf(&quot;n=%d, hex=%08x&quot;, n, n); // 注意，两个%占位符必须传入两个数 Scanner scanner = new Scanner(System.in); // 创建Scanner对象 System.out.print(&quot;Input your name: &quot;); // 打印提示 String name = scanner.nextLine(); // 读取一行输入并获取字符串 System.out.print(&quot;Input your age: &quot;); // 打印提示 int age = scanner.nextInt(); // 读取一行输入并获取整数 System.out.printf(&quot;Hi, %s, you are %d\n&quot;, name, age); // 格式化输出 } } switch: switch语句可以做多重选择，然后执行匹配的case语句后续代码； switch的计算结果必须是整型、字符串或枚举类型； 注意千万不要漏写break，建议打开fall-through警告； 总是写上default，建议打开missing default警告； 从Java 14开始，switch语句正式升级为表达式，不再需要break，并且允许使用yield返回值。 while: while循环先判断循环条件是否满足，再执行循环语句； while循环可能一次都不执行； 编写循环时要注意循环条件，并避免死循环。 do while: do while循环先执行循环，再判断条件； do while循环会至少执行一次。 for: for循环通过计数器可以实现复杂循环； for each循环可以直接遍历数组的每个元素，但无法获取索引； 最佳实践：计数器变量定义在for循环内部，循环体内部不修改计数器； package com.company; public class Main { public static void main(String[] args) { int[] ns = { 1, 4, 9, 16, 25 }; for (int i=0; i&lt;ns.length; i++) { System.out.println(ns[i]); } // 使用for each遍历 // for each循环的变量n不再是计数器，而是直接对应到数组的每个元素 // for each循环无法指定遍历顺序，也无法获取数组的索引。 for (int n : ns) { System.out.println(n); } } } break和contonie break语句可以跳出当前最近的一层循环，通常配合if，在满足条件时提前结束整个循环； continue语句可以提前结束本次循环，continue语句通常配合if，在满足条件时提前结束本次循环。]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java变量和数据类型]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2F02_%E5%8F%98%E9%87%8F%E5%92%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[类名要求： 类名必须以英文字母开头，后接字母，数字和下划线的组合 习惯以大写字母开头 常量： 定义变量的时候，如果加上final修饰符，这个变量就变成了常量： 常量在定义时进行初始化后就不可再次赋值，再次赋值会导致编译错误。 常量名通常全部大写。 在Java中，数据类型分为两种：基本类型的变量和引用类型的变量（所有class和interface类型，引用类型可以赋值为null，表示空，但基本类型不能赋值为null）。 基本数据类型是CPU可以直接进行运算的类型。Java定义了以下几种基本数据类型： 整数类型：byte(1字节)，short(2字节)，int(4字节)，long(8字节) 浮点数类型：float(4字节)，double(8字节) 字符类型：char(2字节) 布尔类型：boolean(Java语言对布尔类型的存储并没有做规定，因为理论上存储布尔类型只需要1 bit，但是通常JVM内部会把boolean表示为4字节整数。) Java定义的这些基本数据类型有什么区别呢？要了解这些区别，我们就必须简单了解一下计算机内存的基本结构。计算机内存的最小存储单元是字节（byte），一个字节就是一个8位二进制数，即8个bit。它的二进制表示范围从00000000~11111111，换算成十进制是0~255，换算成十六进制是00~ff。内存单元从0开始编号，称为内存地址。每个内存单元可以看作一间房间，内存地址就是门牌号。一个字节是1byte，1024字节是1K，1024K是1M，1024M是1G，1024G是1T。 变量的定义示例代码：package com.company; public class Main { public static void main(String[] args) { // 定义整型 // 特别注意：同一个数的不同进制的表示是完全相同的，例如15=0xf＝0b1111。 int i = 2147483647; int i2 = -2147483648; int i3 = 2_000_000_000; // 加下划线更容易识别 int i4 = 0xff0000; // 十六进制表示的16711680 int i5 = 0b1000000000; // 二进制表示的512 long l = 9000000000000000000L; // long型的结尾需要加L // 定义浮点型 // 浮点数可表示的范围非常大，float类型可最大表示3.4x1038，而double类型可最大表示1.79x10308。 float f1 = 3.14f; // 对于float类型，需要加上f后缀。 float f2 = 3.14e38f; // 科学计数法表示的3.14x10^38 double d = 1.79e308; double d2 = -1.79e308; double d3 = 4.9e-324; // 科学计数法表示的4.9x10^-324 // 定义boolean型 boolean b1 = true; boolean b2 = false; boolean isGreater = 5 &gt; 3; // 计算结果为true int age = 12; boolean isAdult = age &gt;= 18; // 计算结果为false boolean isTeenager = age &gt;6 &amp;&amp; age &lt;18; // true // 字符类型char表示一个字符。Java的char类型除了可表示标准的ASCII外，还可以表示一个Unicode字符 // 注意char类型使用单引号&#39;，且仅有一个字符，要和双引号&quot;的字符串类型区分开 char a = &#39;A&#39;; char zh = &#39;中&#39;; // 常量 final double PI = 3.14; // PI是一个常量 double r = 5.0; double area = PI * r * r; } }]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java基础]]></title>
    <url>%2F2017%2F04%2Fjava%2Fjava%E5%9F%BA%E7%A1%80%2F01_java%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[java介绍Java最早是由SUN公司（已被Oracle收购）的詹姆斯·高斯林（高司令，人称Java之父）在上个世纪90年代初开发的一种编程语言。java的运行机制：Java是将代码编译成一种“字节码”，它类似于抽象的CPU指令，然后，针对不同平台编写虚拟机，不同平台的虚拟机负责加载字节码并执行，这样就实现了“一次编写，到处运行”的效果。 从互联网到企业平台，Java是应用最广泛的编程语言，原因在于： Java是基于JVM虚拟机的跨平台语言，一次编写，到处运行； Java程序易于编写，而且有内置垃圾收集，不必考虑内存管理； Java虚拟机拥有工业级的稳定性和高度优化的性能，且经过了长时期的考验； Java拥有最广泛的开源社区支持，各种高质量组件随时可用。 Java语言常年霸占着三大市场： 互联网和企业应用，这是Java EE的长期优势和市场地位； 大数据平台，主要有Hadoop、Spark、Flink等，他们都是Java或Scala（一种运行于JVM的编程语言）开发的； Android移动平台。 这意味着Java拥有最广泛的就业市场。随着Java的发展，SUN给Java又分出了三个不同版本： Java ME：Micro Edition，一个针对嵌入式设备的“瘦身版”，Java SE的标准库无法在Java ME上使用； Java SE：Standard Edition， 标准版，包含标准的JVM和标准库； Java EE：Enterprise Edition，在Java SE的基础上加上了大量的API和库，以便方便开发Web应用、数据库、消息服务等。我们熟悉的Spring等框架都是Java EE开源生态系统的一部分。 因此我们推荐的Java学习路线图如下： 首先要学习Java SE，掌握Java语言本身、Java核心开发技术以及Java标准库的使用； 如果继续学习Java EE，那么Spring框架、数据库开发、分布式架构就是需要学习的； 如果要学习大数据开发，那么Hadoop、Spark、Flink这些大数据平台就是需要学习的，他们都基于Java或Scala开发； 如果想要学习移动开发，那么就深入Android平台，掌握Android App开发。 无论怎么选择，Java SE的核心技术是基础，这个教程的目的就是让你完全精通Java SE！ java名词解释： JDK：Java Development Kit：JDK除了包含JRE，还提供了编译器、调试器等开发工具。 JRE：Java Runtime Environment：运行Java字节码的虚拟机。（包括JVM + Runtime library） JSR规范：Java Specification Request：为了保证Java语言的规范性，SUN公司搞了一个JSR规范，凡是想给Java平台加一个功能，比如说访问数据库的功能，大家要先创建一个JSR规范，定义好接口，这样，各个数据库厂商都按照规范写出Java驱动程序，开发者就不用担心自己写的数据库代码在MySQL上能跑，却不能跑在PostgreSQL上。 JCP组织：Java Community Process：JSR是一系列的规范，从JVM的内存模型到Web程序接口，全部都标准化了。而负责审核JSR的组织就是JCP。 配置环境变量首先到官网下载jdk：https://www.oracle.com/java/technologies/javase-jdk14-downloads.html，然后安装；安装完JDK后，需要设置一个JAVA_HOME的环境变量，它指向JDK的安装目录。在Windows下，它是安装目录，类似： C:\Program Files\Java\jdk-14 然后，把JAVA_HOME的bin目录附加到系统环境变量PATH上。在Windows下，它长这样： Path=%JAVA_HOME%\bin;&lt;现有的其他路径&gt; 在Mac下，它在~/.bash_profile或~/.zprofile里，它是： export JAVA_HOME=`/usr/libexec/java_home -v 14` export PATH=$JAVA_HOME/bin:$PATH 把JAVA_HOME的bin目录添加到PATH中是为了在任意文件夹下都可以运行java。打开命令提示符窗口，输入命令java -version，可以看到java的版本，则jdk安装正常。细心的童鞋还可以在JAVA_HOME的bin目录下找到很多可执行文件： java：这个可执行程序其实就是JVM，运行Java程序，就是启动JVM，然后让JVM执行指定的编译后的代码； javac：这是Java的编译器，它用于把Java源码文件（以.java后缀结尾）编译为Java字节码文件（以.class后缀结尾）； jar：用于把一组.class文件打包成一个.jar文件，便于发布； javadoc：用于从Java源码中自动提取注释并生成文档； jdb：Java调试器，用于开发阶段的运行调试。 java程序的运行：一个Java源码只能定义一个public类型的class，并且class名称和文件名要完全一致； 使用javac可以将.java源码编译成.class字节码（使用命令：javac Hello.java）； 使用java可以运行一个已编译的Java程序，参数是类名（使用命令：java Hello）。 java编译原理作用是把java程序编写的类和接口编译成字节代码的class文件而java命令程序则是一个解释器，它的作用是把编译后生成的class文件解释成机器能够识别的机器码，并最终由运行环境中的Runtime对代码进行运行，真正实现我们想要机器完成的工作。从截图的帮助文档中我们看到它要执行的是类，是一个和class文件名字完全相同（大小写也要一样）的类 java 命令的作用就是Java虚拟机的作用，虚拟机的功能如下： 通过 ClassLoader 寻找和装载 class 文件 解释字节码成为指令并执行，提供 class 文件的运行环境 进行运行期间垃圾回收 提供与硬件交互的平台 使用IDEIDE是集成开发环境：Integrated Development Environment的缩写。使用IDE的好处在于按，可以把编写代码、组织项目、编译、运行、调试等放到一个环境中运行，能极大地提高开发效率。IDE提升开发效率主要靠以下几点： 编辑器的自动提示，可以大大提高敲代码的速度； 代码修改后可以自动重新编译，并直接运行； 可以方便地进行断点调试。 目前，流行的用于Java开发的IDE有： Eclipse：Eclipse是由IBM开发并捐赠给开源社区的一个IDE，也是目前应用最广泛的IDE。Eclipse的特点是它本身是Java开发的，并且基于插件结构，即使是对Java开发的支持也是通过插件JDT实现的。除了用于Java开发，Eclipse配合插件也可以作为C/C++开发环境、PHP开发环境、Rust开发环境等。 IntelliJ Idea：IntelliJ Idea是由JetBrains公司开发的一个功能强大的IDE，分为免费版和商用付费版。JetBrains公司的IDE平台也是基于IDE平台+语言插件的模式，支持Python开发环境、Ruby开发环境、PHP开发环境等，这些开发环境也分为免费版和付费版。 NetBeans：NetBeans是最早由SUN开发的开源IDE，由于使用人数较少，目前已不再流行。]]></content>
      <categories>
        <category>java</category>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
</search>
